{"version":3,"file":"static/js/518.4ca1ec2c.chunk.js","mappings":"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","sources":["pages/chats/Content.tsx","pages/chats/chatContainer.tsx","genericComponents/advisorChatComponent.tsx","pages/chats/advisors.tsx","genericComponents/communityChatComponent.tsx","pages/chats/community.tsx","pages/chats/newChatComponent.tsx","pages/chats/virtualChatContainer.tsx","pages/chats/chatIcon.tsx","pages/chats/chat.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport DOMPurify from \"dompurify\";\n\ninterface ContentRendererProps {\n  content: string;\n}\n\nconst ContentRenderer: React.FC<ContentRendererProps> = ({ content }) => {\n  const sanitizedContent = DOMPurify.sanitize(content);\n\n  return (\n    <ReactMarkdown\n      components={{\n        a: ({ href, children, ...rest }) => (\n          <a\n            href={href}\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            {...rest}\n          >\n            {children}\n          </a>\n        ),\n      }}\n    >\n      {sanitizedContent}\n    </ReactMarkdown>\n  );\n};\n\nexport default ContentRenderer;\n","/* eslint-disable */\nimport {\n  Avatar,\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  Grid,\n  Slide,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport Images from \"../../assets\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport {\n  blockUserRequest,\n  communicationMessage,\n  fetchAllMessages,\n  seenMessageDetails,\n} from \"../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { addMessage, initMessages } from \"../../store/Slices/messagesSlice\";\nimport {\n  Chat,\n  Event,\n  Message,\n  Participant,\n  Sharedinfo,\n  TriggerObject,\n} from \"../../types/types\";\nimport { updateChat } from \"../../store/Slices/chatsSlice\";\nimport Socket from \"../../assets/socket\";\nimport { normalizeType, setWordCase } from \"../../assets/library\";\nimport { Close } from \"@mui/icons-material\";\nimport ContentRenderer from \"./Content\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport { addBlockedList, removeBlockedList } from \"src/store/Slices/blockedListSlice\";\n\n\nconst Transition1 = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface props {\n  open: boolean;\n  setOpen: Function;\n  id: string;\n  type: \"advisors\" | \"community\";\n}\n\nconst ChatContainer = ({ open, setOpen, id, type }: props) => {\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const blockedList = useAppSelector((state) => state.BlockedList);\n  const list = useRef<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const messages = useAppSelector((state) => state.messages);\n  const [uploadFiles, setUploadFiles] = useState<File[]>([])\n  const [repliedTo, setRepliedTo] = useState(null);\n  const [replyDiv, setReplyDiv] = useState(false)\n  const [replyDivData, setReplyDivData] = useState('')\n  const [blockopen, setBlockOpen] = useState(false);\n  const [action, setAction] = useState(\"\");\n\n  const chat = useAppSelector((state) => {\n    let currentChats = state.chats;\n    return type === \"advisors\"\n      ? currentChats.data.advisors.find((chat) => chat._id === id)\n      : currentChats.data.community.find((chat) => chat._id === id);\n  });\n  const dispatch = useAppDispatch();\n\n  const participantDetails:any = chat?.participants.find(\n    (user) => user._id !== profileInfo?.data?._id\n  );\n\n  const seenMessages = async () => {\n    const response = await seenMessageDetails(id);\n    // console.log(response)\n    if (response.success) {\n      dispatch(updateChat(response.data));\n      if (\n        profileInfo.data &&\n        profileInfo.data._id &&\n        Object.values(profileInfo.data).every(\n          (item) => typeof item !== undefined\n        )\n      ) {\n        let triggerObj: TriggerObject = {\n          action: \"seen\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter(\n            (participant: Participant) =>\n              participant._id !== profileInfo.data?._id\n          ),\n          data: response.data,\n        };\n        Socket.emit(\"trigger\", triggerObj);\n      }\n    }\n  };\n\n  const triggerMessages = (triggerObject: TriggerObject) => {\n    switch (triggerObject.action) {\n      case \"send\":\n        //console.log(\"message send trigger\",triggerObject.data.message)\n        dispatch(addMessage({ ...triggerObject.data.message, type: \"normal\" }));\n        seenMessages();\n        break;\n\n      case \"typing\":\n        //triggerObject.data==\"start\"?dispatch(startTypingMessage({...triggerObject.sender,activity:'typing'})):dispatch(stopTypingMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n\n      case \"seen\":\n        //dispatch(seenMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n    }\n  };\n\n  const fetchMessage = async () => {\n    try {\n      setLoading(true);\n      const response = await fetchAllMessages(id);\n      if (response) {\n        let msgs = response.data.map((msg: Message) => ({\n          ...msg,\n          type: \"normal\",\n        }));\n        msgs.reverse();\n        dispatch(\n          initMessages({\n            requestStatus: \"initiated\",\n            responseStatus: \"recieved\",\n            haveAnIssue: false,\n            issue: \"\",\n            data: msgs,\n          })\n        );\n        if (\n          chat?.unSeenMessages\n            .filter(\n              (msg: any) => msg.message.sender._id !== profileInfo.data?._id\n            )\n            .filter(\n              (recievedMessage: any) =>\n                !recievedMessage.seen.find(\n                  (id: string) => id === profileInfo.data?._id\n                )\n            ).length != 0\n        ) {\n          await seenMessages();\n        }\n      }\n      setLoading(false);\n    } catch (error) { }\n    setLoading(false)\n  };\n\n  const bakeMessages = (messages: Message[], chat: Chat, user: Sharedinfo) => {\n    let unsetParticipants = chat.participants.filter(\n      (chat) => chat._id != user._id\n    );\n    let list: Message[] = [];\n    let seenParticipants: Participant[] = [];\n    let unseenParticipants: Participant[] = [];\n    messages.reverse();\n    messages.forEach((msg) => {\n      if (msg.sender?._id == user._id) {\n        if (unsetParticipants.length != 0) {\n          if (chat.unSeenMessages.length == 0) {\n            if (unsetParticipants.length != 0) {\n              seenParticipants = [...unsetParticipants];\n            }\n          } else {\n            if (\n              !chat.unSeenMessages.find(\n                (unseenMsg) => unseenMsg.message._id == msg._id\n              )\n            ) {\n              seenParticipants = [...unsetParticipants];\n            } else {\n              seenParticipants = unsetParticipants.filter((unsetParticipant) =>\n                chat.unSeenMessages\n                  .find((unseenMsg) => unseenMsg.message._id == msg._id)\n                  ?.seen.find(\n                    (seenParticipant) => seenParticipant == unsetParticipant._id\n                  )\n              );\n            }\n          }\n          if (seenParticipants.length != 0) {\n            let seenMessage = seenParticipants.reduce(\n              (message, seenParticipant) =>\n                message + seenParticipant.firstName + \" , \",\n              \"Seen by \"\n            );\n            list.push({\n              _id: msg._id + \"_seen\",\n              type: \"seen\",\n              content: seenMessage.substring(0, seenMessage.length - 3),\n              chat: chat._id,\n            });\n          }\n          list.push(msg);\n          unsetParticipants = unsetParticipants.filter(\n            (unsetParticipant) =>\n              !seenParticipants.find(\n                (seenParticipant) => seenParticipant._id == unsetParticipant._id\n              )\n          );\n        } else {\n          list.push(msg);\n        }\n      } else {\n        list.push(msg);\n      }\n    });\n    list.reverse();\n    let typingParticipants = chat.participants.filter(\n      (participant) => participant.activity == \"typing\"\n    );\n    //console.log(\"Typing\",typingParticipants)\n    if (typingParticipants.length != 0) {\n      let typingMessage = typingParticipants.reduce(\n        (msg, participant) => participant.firstName + \" , \",\n        \"\"\n      );\n      list.push({\n        _id: chat._id + \"_typing\",\n        type: \"typing\",\n        content:\n          typingMessage.substring(0, typingMessage.length - 3) +\n          (typingParticipants.length == 1 ? \" is typing\" : \" are typing\"),\n        chat: chat._id,\n        sender: {\n          displayPicSrc: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          _id: chat._id + \"_typing\",\n          userType: \"\",\n        },\n      });\n      //console.log(list)\n    }\n    return list;\n    //let bakedParticipants=getParticipantsLastSeenMessage(chat,user,messages);\n    //return bakeMessagesWithSeenInfo(messages,bakedParticipants);\n  };\n\n\n  const eventHandler = async (event: Event) => {\n    let triggerObj: TriggerObject\n    switch (event.name) {\n      case \"send\":\n        const formData = new FormData();\n        if (!event.data.trim() && uploadFiles.length === 0) {\n          // If there's no message content and no valid files, return early.\n          console.error(\"No message content or valid files to upload.\");\n          return;\n        } formData.append(\"content\", event.data);\n        formData.append(\"chatId\", id);\n        let totalSize = 0;\n\n        if (uploadFiles.length > 0) {\n          const allowedFileTypes = [\n            \"image/jpeg\",\n            \"image/jpg\",\n            \"image/png\",\n            \"application/pdf\",\n            \"application/msword\",\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n          ];\n\n          const validFiles = uploadFiles.filter((file) => {\n            const isValidType = allowedFileTypes.includes(file?.type);\n            const isValidSize = file?.size <= 16 * 1024 * 1024;\n\n            if (!isValidType || !isValidSize) {\n              // console.log(`File \"${file?.name}\" is not allowed or exceeds 16MB.`);\n            }\n\n            return isValidType && isValidSize;\n          });\n\n          if (validFiles.length === 0 && !event.data) {\n            // console.error(\"No valid files selected and no message content.\");\n            return;\n          }\n\n          validFiles.forEach((file) => {\n            formData.append(\"uploaded_file\", file);\n            totalSize += file.size;\n          });\n          if (validFiles.length === 0 && !event.data.trim()) {\n            console.error(\"No valid files selected and no message content.\");\n            return;\n          }\n        }\n\n        try {\n          if (event.data.trim() || totalSize > 0) {\n            const response = await communicationMessage(formData);\n            if (response.data.success) {\n              dispatch(updateChat(response.data.data.chat));\n              dispatch(addMessage(response.data.data.message));\n              const triggerObj = {\n                action: \"send\",\n                sender: { ...profileInfo.data, userType: \"student\" },\n                recievers: chat?.participants.filter(\n                  (participant) => participant._id !== profileInfo.data?._id\n                ),\n                data: response.data.data,\n              };\n              Socket.emit(\"trigger\", triggerObj);\n              setUploadFiles([]);\n            } else {\n              console.error(\"Failed to send message or upload files.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error during file upload or message sending:\", error);\n        }\n        break;\n      case \"startTyping\":\n        triggerObj = {\n          action: \"typing\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter((participant) => participant._id != profileInfo.data?._id),\n          data: \"start\"\n        }\n        Socket.emit(\"trigger\", triggerObj);\n        break;\n      case \"stopTyping\":\n        triggerObj = {\n          action: \"typing\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter((participant) => participant._id != profileInfo.data?._id),\n          data: \"stop\"\n        }\n        Socket.emit(\"trigger\", triggerObj);\n        break;\n      case \"block\":\n        try {\n          const response1 = await blockUserRequest(action, event.data.id)\n          if(action === \"block\"){\n            dispatch(addBlockedList(response1.data.data.blocked))\n          }else{\n            dispatch(removeBlockedList(response1.data.data.blocked._id))\n\n          }\n        } catch (err) {\n          console.log(err)\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    // if (id) {\n    Socket.removeListener(\"trigger\", triggerMessages);\n    Socket.on(\"trigger\", triggerMessages);\n    fetchMessage();\n    return () => { Socket.removeListener(\"trigger\", triggerMessages) }\n    // }\n  }, []);\n\n  list.current =\n    chat && profileInfo.data\n      ? bakeMessages([...messages.data], chat, profileInfo.data)\n      : [];\n\n  const Header = (props: any) => {\n    return (\n      <div\n        style={{ background: \"#F8F8FC\", padding: \"0.5rem\", borderRadius: \"0.8rem\", position: \"relative\" }}\n      >\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"space-between\">\n          <Box sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n            <Avatar\n              src={participantDetails?.role === \"Virtual_Assistant\" ? Images.ai : participantDetails?.displayPicSrc}\n              alt=\"profile\"\n              sx={{ width: \"3rem\", height: \"3rem\", borderRadius: \"50%\" }}\n            />\n            <Typography fontWeight=\"500\" sx={{\n              position: \"absolute\", right: \"10px\", top: \"-1rem\", background: \"#fff\", p: 1, borderRadius: \"10px\",\n              color: participantDetails?.role === \"counsellor\" ? \"#3B3F76\" : participantDetails?.role === \"processCoordinator\" ? \"#569228\" : \"#FEB853\", fontSize: \"14px\"\n            }}>\n              {participantDetails?.role ? normalizeType(participantDetails?.role) : participantDetails?.role}\n            </Typography>\n            <Box>\n              {participantDetails?.firstName || participantDetails?.lastName ?\n                <Typography fontWeight=\"500\">\n                  {setWordCase(participantDetails?.firstName)}\n                  &nbsp;{setWordCase(participantDetails?.lastName)}\n                </Typography> : <Typography>User</Typography>\n              }\n\n            </Box>\n          </Box>\n          {participantDetails?.userType !== \"member\" && \n          <Box sx={{ float: \"right\" }}>\n            <Button sx={{ textTransform: \"none\", color: \"#3b3f76\", float: \"right\" }} \n            onClick={() => {\n              const isBlocked = blockedList.data.some(\n                (item: any) => item?._id === participantDetails?._id\n              );\n              setAction(isBlocked ? \"unblock\" : \"block\");\n              props.setBlockOpen(true);\n            }}>\n              {blockedList.data.some(\n                (item: any) =>\n                  item?._id === participantDetails?._id\n              ) ? \"Unblock\" : \"Block\"}\n            </Button>\n          </Box> }\n        </Stack>\n\n      </div>\n    );\n  };\n  const Content = () => {\n    const bottomRef = useRef<HTMLDivElement>(null);\n    const chatContainerRef = useRef<HTMLDivElement>(null);\n    const [isUserAtBottom, setIsUserAtBottom] = useState(true);\n\n    const handleScroll = () => {\n      if (chatContainerRef.current) {\n        const { scrollTop, scrollHeight, clientHeight } = chatContainerRef.current;\n        const isAtBottom = scrollHeight - scrollTop - clientHeight <= 5;\n        setIsUserAtBottom(isAtBottom);\n      }\n    };\n\n    useEffect(() => {\n      if (isUserAtBottom) {\n        bottomRef.current?.scrollIntoView({ behavior: 'auto' });\n      }\n    }, [list.current]);\n\n    useEffect(() => {\n      bottomRef.current?.scrollIntoView({ behavior: 'auto' });\n    }, []);\n\n\n    return (\n      <Box\n        ref={chatContainerRef}\n        onScroll={handleScroll}\n        sx={{\n          overflowY: \"scroll\",\n          mt: 3,\n          height: \"390px\",\n          \"&::-webkit-scrollbar\": {\n            width: \"12px\",\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            backgroundColor: \"transparent\",\n            borderRadius: \"8px\",\n          },\n        }}\n      >\n        {loading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"300px\",\n            }}\n          >\n            <CircularProgress />\n          </Box>\n        ) : (\n          <div className=\"chat-container\" >\n            {list.current.length > 0 ?\n              <>\n                {list.current.map((message: any) => (\n                  <>\n                    {message.type !== \"seen\" && message.type !== \"typing\" ? (\n                      <div\n                        key={message._id}\n                        className={`message ${message?.sender?._id === profileInfo.data?._id\n                          ? \"sent\"\n                          : \"received\"\n                          }`}\n                      >\n                        <ContentRenderer content={message.content} />\n                        {message?.document?.data?.preview_url ?\n                          // auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\n                          <iframe\n                            src={message?.document?.data?.preview_url}\n                            title=\"preview\"\n                            style={{\n                              border: \"none\",\n                              width: \"150px\",\n                              height: \"150px\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n                          : \"\"}\n                        <Avatar\n                          src={message.sender?.displayPicSrc}\n                          alt=\"\"\n                          sx={\n                            message?.sender?._id === profileInfo.data?._id\n                              ? {\n                                width: \"1.5rem\",\n                                height: \"1.5rem\",\n                                borderRadius: \"50%\",\n                                position: \"absolute\",\n                                top: \"-12px\",\n                                right: 0,\n                              }\n                              : {\n                                width: \"1.5rem\",\n                                height: \"1.5rem\",\n                                borderRadius: \"50%\",\n                                position: \"absolute\",\n                                top: \"-12px\",\n                                left: 0,\n                              }\n                          }\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"seenMsg\">{message.content}</div>\n                    )}\n                  </>\n                ))}\n                <div ref={bottomRef}></div>          </> : (\n                participantDetails ?\n                  <Typography textAlign=\"center\">Start chat</Typography> :\n                  <Typography textAlign=\"center\">No chat</Typography>\n\n              )}\n\n          </div>\n        )}  {blockedList.data.some(\n          (item: any) =>\n            item?._id === participantDetails?._id\n        ) \n&&          <Typography textAlign=\"center\" fontSize=\"0.9rem\">You blocked this member.</Typography>\n        }\n      </Box>\n    );\n  };\n  const Footer = (props: any) => {\n    const [content, setContent] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const actionHandler = (action: any) => {\n\n      // console.log('action', action)\n\n      if (action.type == 'reply') {\n        setRepliedTo(action.data.id)\n      }\n      if (action.type == 'copy') {\n        // console.log(messages[action.data.index])\n        // navigator.clipboard.writeText(messages[action.data.index].content);\n      }\n    }\n\n    const showReplyDiv = (messagedata: any) => {\n      setReplyDiv(true)\n      setReplyDivData(messagedata)\n\n    }\n    const handleFileChange = (event: any) => {\n      const selectedFiles = Array.from(event.target.files);\n      setUploadFiles(selectedFiles as File[]);\n      // console.log(selectedFiles)\n    };\n    const removeFile = (index: any) => {\n      const updatedFiles = [...uploadFiles];\n      updatedFiles.splice(index, 1);\n      setUploadFiles(updatedFiles);\n    };\n\n    const handleSend = async () => {\n      try {\n        if (content.trim() !== \"\" || (uploadFiles && uploadFiles.length > 0)) {\n          setLoading(true);\n          setOpen(true)\n\n          await props.eventHandler({ name: \"send\", data: content });\n        } else {\n          console.log(\"No content or files to send.\");\n        }\n      } catch (error) {\n        console.error(\"Error while sending:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === \"Enter\" && !event.shiftKey && content.trim() !== \"\") {\n        event.preventDefault();\n        handleSend();\n      }\n    };\n\n    return (\n      <>\n        {participantDetails &&\n          <div style={{ position: \"relative\" }}>\n            {uploadFiles?.length > 0 && (\n              <div style={{\n                display: 'flex', flexDirection: 'column', alignItems: 'center', position: \"absolute\",\n                top: \"-44px\",\n                right: \"35%\",\n              }}>\n                <div style={{ width: 'fitContent' }}>\n                  <Typography fontSize=\"0.9rem\">Selected files:</Typography>\n                  <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\n                    {uploadFiles.map((file, index) => (\n                      <li style={{ fontSize: '12px', display: 'flex' }} key={index}>\n                        {file.name}\n                        <Close onClick={() => removeFile(index)} sx={{ fontSize: \"1rem\", cursor: \"pointer\" }} />\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )}\n            {\n              replyDiv ? <div className='replyDiv'>\n                <h5>reply to:- {replyDivData}</h5>\n              </div> : ''\n            }\n\n            {blockedList.data.some(\n              (item: any) =>\n                item?._id === participantDetails?._id\n            ) ?\"\":\n              <Grid container sx={{ background: \"#F8F8FC\", padding: \"0.5rem\", borderRadius: \"0.8rem\" }}>\n\n                <Grid\n                  item\n                  xs={1}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <div>\n                    <input\n                      type=\"file\"\n                      multiple\n                      style={{ display: 'none' }}\n                      onChange={handleFileChange}\n                      ref={fileInputRef}\n                    />\n                    <DescriptionIcon sx={{ color: \"\", cursor: \"pointer\" }} onClick={() => fileInputRef?.current?.click()} />\n\n                  </div>\n                </Grid>\n\n                <Grid item xs={9.5}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onFocus={() => props.eventHandler({ name: \"startTyping\" })}\n                    onBlur={() => props.eventHandler({ name: \"stopTyping\" })}\n                    multiline\n                    // maxRows={3}\n                    rows={2}\n                    fullWidth\n                    value={content}\n                    placeholder=\"Type your message...\"\n                    sx={{\n                      \"& .MuiOutlinedInput-notchedOutline\": {\n                        border: 0,\n                        \"&:Focus\": {\n                          border: 0,\n                        },\n                      },\n                      \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                        border: \"none !important\",\n                      },\n                    }}\n                    onChange={(e) => setContent(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={1.5}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    background: \"#fff\", borderRadius: \"6px\"\n                  }}\n                >\n                  {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"loader\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    <img\n                      src={Images.sendIcon}\n                      alt=\"sendIcon\"\n                      style={{ width: \"2rem\", height: \"2rem\" }}\n                      onClick={handleSend}\n                    />\n                  )}\n                </Grid>\n              </Grid>\n            }\n          </div>}\n      </>\n\n    );\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        sx={{\n          right: \"0\",\n          left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n          top: { md: \"10px\", xs: \"0\", lg: \"25px\" },\n        }}\n        PaperProps={{\n          style: {\n            borderRadius: \"1rem\",\n            padding: \"1rem\",\n            width: \"410px\",\n            height: \"582px\",\n            // background: \"#EDF2F6\",\n          },\n        }}\n        TransitionComponent={Transition1}\n        keepMounted\n        onClose={() => setOpen(false)}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <KeyboardArrowDownIcon\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              color: \"#0F0F0F\",\n              fontSize: \"2rem\",\n              cursor: \"pointer\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onClick={() => setOpen(false)}\n          />\n        </Box>\n        <Box sx={{ mt: 3 }}>\n          <Header eventHandler={eventHandler} setBlockOpen={setBlockOpen} />\n          <Content />\n          <Footer eventHandler={eventHandler} />\n        </Box>\n      </Dialog>\n      <ConfirmDialog\n        open={blockopen}\n        handleClose={() => setBlockOpen(false)}\n        additionalData={{\n          onSubmit: () => eventHandler({\n            name: \"block\",\n            data: { id: participantDetails?._id }\n          }),\n          title: `Are you sure you want to ${action} this user?`,\n          content: \"\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","import { Avatar, Box, Card, Grid, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppSelector } from \"../assets/hooks\";\nimport { normalizeType, setWordCase } from \"../assets/library\";\nimport ChatContainer from \"../pages/chats/chatContainer\";\nimport { Chat, Participant, Sharedinfo } from \"../types/types\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport Images from \"src/assets\";\n\ninterface BakedData {\n  dp: string;\n  name: string;\n  lastMessage?: LastMessage;\n  unseenMessages: number;\n  chatType: \"1-1\" | \"group\";\n  activeParticipants: Participant[];\n  role: string;\n}\ninterface LastMessage {\n  sender: \"current\" | \"others\";\n  status: \"seen\" | \"unseen\";\n  message: string;\n}\n\nconst AdvisorChatComponent = (props: { data: Chat }) => {\n  const [open1, setOpen1] = useState(false);\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const profile = profileInfo?.data;\n\n  const bakeLastMessage = (rawdata: Chat, currentUser: Participant) => {\n    let bakedData: LastMessage = {\n      sender:\n        rawdata.lastMessage?.sender === currentUser._id ? \"current\" : \"others\",\n      message: rawdata.lastMessage?.content ? rawdata.lastMessage?.content : \"\",\n      status: \"seen\",\n    };\n    if (bakedData.sender === \"current\") {\n      bakedData.status =\n        rawdata.unSeenMessages.findIndex(\n          (item) => item.message._id === rawdata.lastMessage?._id\n        ) === -1\n          ? \"seen\"\n          : \"unseen\";\n    } else {\n      let index = rawdata.unSeenMessages.findIndex(\n        (item) => item.message._id === rawdata.lastMessage?._id\n      );\n      bakedData.status =\n        index === -1\n          ? \"seen\"\n          : rawdata.unSeenMessages[index].seen.findIndex(\n            (item) => item === currentUser._id\n          ) === -1\n            ? \"unseen\"\n            : \"seen\";\n    }\n    return bakedData;\n  };\n\n  const bakeActivity = (rawdata: Chat, currentUser: Participant) => {\n    let inchat = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"inchat\" && participant._id !== currentUser._id\n    );\n    let online = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"online\" && participant._id !== currentUser._id\n    );\n    let typing = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"typing\" && participant._id !== currentUser._id\n    );\n    return [...typing, ...inchat, ...online];\n  };\n\n  const bakedata = (rawdata: Chat, profile: Sharedinfo): BakedData => {\n    let bakedData: BakedData = {\n      dp: \"\",\n      name: \"\",\n      unseenMessages: 0,\n      activeParticipants: [],\n      chatType: \"1-1\",\n      lastMessage: undefined,\n      role: \"\"\n    };\n\n    let currentUser = rawdata?.participants?.find(\n      (participant) => participant._id === profile._id\n    );\n\n    let otherUsers = rawdata?.participants?.filter(\n      (participant) => (participant._id !== profile._id)\n    );\n    if (rawdata?.participants?.length <= 2) {\n      bakedData.name = otherUsers?.length > 0 \n      ? (otherUsers?.[0]?.firstName \n          ? otherUsers?.[0]?.firstName \n          : \"user\") + \n        (otherUsers?.[0]?.lastName \n          ? \" \" + otherUsers?.[0]?.lastName \n          : \"\")\n      : \"Deleted User\";\n      bakedData.dp = otherUsers?.length > 0 ? otherUsers?.[0]?.displayPicSrc:\"\";\n      bakedData.role = otherUsers?.length > 0 ? otherUsers?.[0]?.role :\"\";\n    } else{\n      bakedData.chatType = \"group\";\n      bakedData.name = \"Group Name\";\n    }\n\n    bakedData.unseenMessages = rawdata.unSeenMessages\n      .filter((msg) => msg.message?.sender?._id !== profile?._id)\n      .filter(\n        (receivedMessage) =>\n          !receivedMessage.seen.some((id) => id === profile._id)\n      ).length;\n\n    if (rawdata.lastMessage && currentUser) {\n      bakedData.lastMessage = bakeLastMessage(rawdata, currentUser);\n      bakedData.activeParticipants = bakeActivity(rawdata, currentUser);\n    }\n\n    return bakedData;\n  };\n  const bakedData = profile ? bakedata(props.data, profile) : null;\n\n\n  const LastMessageContainer = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          // justifyContent: \"space-between\",\n          gap: \"8px\",\n          width: \"100%\",\n        }}\n      >\n        {bakedData?.lastMessage?.sender === \"current\" ? (\n          <>\n            {bakedData?.lastMessage?.status === \"seen\" ? (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"#2196f3\", fontSize: \"1rem\" }} />\n              </Box>\n            ) : (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"gray\", fontSize: \"1rem\" }} />\n              </Box>\n            )}\n          </>\n        ) : null}\n        <Typography\n          sx={{\n            fontSize: \"12px\",\n            width: \"200px\",\n            height: \"2rem\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            fontWeight:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"300\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                  ? \"300\"\n                  : \"600\",\n            color:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"#98999A\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                  ? \"#98999A\"\n                  : \"#000\",\n          }}\n        >\n          {bakedData?.lastMessage?.message}\n          <Typography variant=\"body1\" fontWeight=\"400\" color=\"#000\" fontSize=\"0.8rem\">\n            {bakedData?.lastMessage?.message ? \"\" : \"Tap to chat\"}\n          </Typography>\n        </Typography>\n      </div>\n    );\n  };\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Card\n        sx={{\n          pl: 1, background: \"#F8F8FC\", borderRadius: \"10px\", boxShadow: 0,\n          cursor: \"pointer\"\n        }}\n        onClick={() => setOpen1(true)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={2} sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", position: \"relative\" }}>\n            {/* <Box sx={{position:\"absolute\",top:\"-15px\",display:\"flex\",gap:\"1rem\"}}> */}\n            <Avatar\n              src={bakedData?.role === \"Virtual_Assistant\" ? Images.ai:bakedData?.dp}\n              alt=\"logo\"\n              style={{ width: \"2.5rem\", height: \"2.5rem\", borderRadius: \"50%\", marginLeft: \"0.8rem\" }}\n            />\n\n            {/* </Box> */}\n            {\n              bakedData?.chatType === \"1-1\"\n                ?\n                bakedData?.activeParticipants.length !== 0 && bakedData?.activeParticipants[0].activity !== \"offline\"\n                  ?\n                  <FiberManualRecordIcon sx={{ color: \"green\", fontSize: \"1rem\", position: \"absolute\", bottom: \"10px\", right: \"-7px\" }} />\n                  :\n                  null\n                :\n                null\n            }\n          </Grid>\n          <Grid item xs={8} sx={{ mt: 1 }}>\n            <Typography fontWeight=\"500\" gutterBottom>\n              {setWordCase(bakedData?.name)}\n            </Typography>\n            {bakedData?.name === \"Deleted User\" ? <Box sx={{p:1}}></Box>: \n            <LastMessageContainer /> }\n          </Grid>\n          <Grid item xs={2} sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography sx={{\n              background: \"#3b3f76\",\n              color: \"#fff\",\n              borderRadius: \"50%\",\n              width: \"1rem\",\n              height: \"1rem\",\n              border: \"1px solid #3B3F76\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n\n            }}>{bakedData?.unseenMessages}</Typography>\n          </Grid>\n          <Grid item xs={12} sx={{ position: \"absolute\", right: \"10px\", top: \"-2rem\", }}>\n            <Typography fontWeight=\"500\" sx={{\n              background: \"#fff\", p: 0.5, borderRadius: \"10px\",\n              color: bakedData?.role === \"counsellor\" ? \"#3B3F76\" : bakedData?.role === \"processCoordinator\" ? \"#569228\" : \"#FEB853\", fontSize: \"14px\"\n            }}>\n              {bakedData?.role ? normalizeType(bakedData?.role) : bakedData?.role}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Card>\n      {open1 ? (\n        <ChatContainer\n          open={open1}\n          setOpen={setOpen1}\n          id={props?.data?._id}\n          type=\"advisors\"\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default AdvisorChatComponent;\n","import { Box, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../assets/hooks\";\nimport AdvisorChatComponent from \"../../genericComponents/advisorChatComponent\";\nimport { Chat } from \"../../types/types\";\n\nconst Advisors = () => {\n  const advisorchats = useAppSelector((state) => state.chats);\n\n  const filterOutVirtualAssistant = (advisorArray: Chat[]) => {\n    return advisorArray?.filter((advisor: any) => {\n      return !advisor?.participants?.some((p: any) => p.role === \"Virtual_Assistant\");\n    });\n  };\n  const virtualAssistant=advisorchats?.data?.advisors.find((item)=>item.participants.find((item2)=>item2.role===\"Virtual_Assistant\")) as Chat\n  const filteredAdvisors = [virtualAssistant,...filterOutVirtualAssistant(advisorchats?.data?.advisors)];\n  \n\n  return (\n    <Box sx={{\n      overflowY: \"scroll\",\n      height: \"450px\",\n      \"&::-webkit-scrollbar\": {\n        width: \"12px\",\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n      },\n      \"&::-webkit-scrollbar-track\": {\n        backgroundColor: \"#fff\",\n      },\n      width:\"100%\",\n      mt:1\n    }}>\n      <Grid\n        container\n        spacing={2}\n        sx={{mt:0}}\n      >\n        {filteredAdvisors && advisorchats?.data?.advisors?.length > 0 ? filteredAdvisors?.map((item: Chat, i:any) => (\n          <Grid item xs={12} key={i}>\n            <AdvisorChatComponent data={item} />\n          </Grid>\n        )) : \n        <Box sx={{height:\"5rem\",borderRadius:\"20px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",width:\"100%\"}}>\n        <Typography color=\"#3B3F76\">Start a new chat</Typography>\n        </Box>\n        }\n      </Grid>\n     \n    </Box>\n  );\n};\n\nexport default Advisors;\n","import { Avatar, Box, Card, Grid, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppSelector } from \"../assets/hooks\";\nimport { setWordCase } from \"../assets/library\";\nimport ChatContainer from \"../pages/chats/chatContainer\";\nimport { Chat, Participant, Sharedinfo } from \"../types/types\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\ninterface BakedData {\n  dp: string;\n  name: string;\n  lastMessage?: LastMessage;\n  unseenMessages: number;\n  chatType: \"1-1\" | \"group\";\n  activeParticipants: Participant[];\n}\ninterface LastMessage {\n  sender: \"current\" | \"others\";\n  status: \"seen\" | \"unseen\";\n  message: string;\n}\n\nconst CommunityChatComponent = (props: { data: Chat }) => {\n  const [open1, setOpen1] = useState(false);\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const profile = profileInfo?.data;\n\n  const bakeLastMessage = (rawdata: Chat, currentUser: Participant) => {\n    let bakedData: LastMessage = {\n      sender:\n        rawdata.lastMessage?.sender === currentUser._id ? \"current\" : \"others\",\n      message: rawdata.lastMessage?.content ? rawdata.lastMessage?.content : \"\",\n      status: \"seen\",\n    };\n    if (bakedData.sender === \"current\") {\n      //console.log(\"sender\",rawdata._id,rawdata.unSeenMessages.findIndex((item)=>item._id===rawdata.lastMessage?._id));\n      bakedData.status =\n        rawdata.unSeenMessages.findIndex(\n          (item) => item.message._id === rawdata.lastMessage?._id\n        ) === -1\n          ? \"seen\"\n          : \"unseen\";\n    } else {\n      let index = rawdata.unSeenMessages.findIndex(\n        (item) => item.message._id === rawdata.lastMessage?._id\n      );\n      bakedData.status =\n        index === -1\n          ? \"seen\"\n          : rawdata.unSeenMessages[index].seen.findIndex(\n              (item) => item === currentUser._id\n            ) === -1\n          ? \"unseen\"\n          : \"seen\";\n    }\n    return bakedData;\n  };\n\n  const bakeActivity = (rawdata: Chat, currentUser: Participant) => {\n    let inchat = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"inchat\" && participant._id !== currentUser._id\n    );\n    let online = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"online\" && participant._id !== currentUser._id\n    );\n    let typing = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"typing\" && participant._id !== currentUser._id\n    );\n    //console.log(JSON.stringify(rawdata.participants,null,2))\n    return [...typing, ...inchat, ...online];\n  };\n\n  const bakedata = (rawdata: Chat, profile: Sharedinfo): BakedData => {\n    let bakedData: BakedData = {\n      dp: \"\",\n      name: \"\",\n      unseenMessages: 0,\n      activeParticipants: [],\n      chatType: \"1-1\",\n      lastMessage: undefined,\n    };\n\n    let currentUser = rawdata.participants.find(\n      (participant) => participant._id === profile._id\n    );\n\n    let otherUsers = rawdata.participants.filter(\n      (participant) => participant._id !== profile._id\n    );\n\n    if (rawdata.participants.length <= 2) {\n      bakedData.name = otherUsers?.length > 0 \n      ? (otherUsers?.[0]?.firstName \n          ? otherUsers?.[0]?.firstName \n          : \"user\") + \n        (otherUsers?.[0]?.lastName \n          ? \" \" + otherUsers?.[0]?.lastName \n          : \"\")\n      : \"Deleted User\"\n      bakedData.dp = otherUsers?.length > 0 ? otherUsers?.[0].displayPicSrc:\"\";\n    } else{\n      bakedData.chatType = \"group\";\n      bakedData.name = \"Group Name\";\n    }\n\n    bakedData.unseenMessages = rawdata.unSeenMessages\n      .filter((msg) => msg?.message?.sender?._id !== profile?._id)\n      .filter(\n        (receivedMessage) =>\n          !receivedMessage.seen.some((id) => id === profile._id)\n      ).length;\n\n    if (rawdata.lastMessage && currentUser) {\n      bakedData.lastMessage = bakeLastMessage(rawdata, currentUser);\n      bakedData.activeParticipants = bakeActivity(rawdata, currentUser);\n    }\n\n    return bakedData;\n  };\n  const bakedData = profile ? bakedata(props.data, profile) : null;\n\n  const LastMessageContainer = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          // justifyContent: \"space-between\",\n          gap:\"8px\",\n          width: \"100%\",\n        }}\n      >\n        {bakedData?.lastMessage?.sender === \"current\" ? (\n          <>\n            {bakedData?.lastMessage?.status === \"seen\" ? (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"#2196f3\", fontSize: \"1rem\" }} />\n              </Box>\n            ) : (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"gray\", fontSize: \"1rem\" }} />\n              </Box>\n            )}\n          </>\n        ) : null}\n        <Typography\n          sx={{\n            fontSize: \"12px\",\n            width:\"200px\",\n            height: \"2rem\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            fontWeight:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"300\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                ? \"300\"\n                : \"400\",\n            color:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"#98999A\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                ? \"#98999A\"\n                : \"#000\",\n          }}\n        >\n          {bakedData?.lastMessage?.message}\n          <Typography variant=\"body1\" fontWeight=\"400\" color=\"#000\" fontSize=\"0.8rem\">\n            {bakedData?.lastMessage?.message ? \"\" : \"Tap to chat\"}\n          </Typography>\n        </Typography>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card\n        sx={{ p: 0.5,background:\"#F8F8FC\",borderRadius:\"10px\",boxShadow:0 ,\n        cursor:\"pointer\"\n      }}\n        onClick={() => setOpen1(true)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={2} sx={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",position:\"relative\"}}>\n            <Avatar\n              src={bakedData?.dp}\n              alt=\"logo\"\n              style={{ width: \"2.5rem\", height: \"2.5rem\", borderRadius: \"50%\",marginLeft:\"0.8rem\"}}\n            />\n             {\n                    bakedData?.chatType===\"1-1\"\n                    ?\n                        bakedData?.activeParticipants.length!==0 && bakedData?.activeParticipants[0].activity!==\"offline\"\n                        ?\n                        <FiberManualRecordIcon sx={{color:\"green\",fontSize:\"1rem\",position:\"absolute\",bottom:\"10px\",right:\"-7px\"}}/>\n                        :\n                        null\n                    :\n                    null\n                }\n          </Grid>\n          <Grid item xs={8}>\n            <Typography fontWeight=\"500\" gutterBottom>\n              {setWordCase(bakedData?.name)}\n            </Typography>\n            {bakedData?.name === \"Deleted User\" ? <Box sx={{p:1}}></Box>: \n            <LastMessageContainer /> }\n          </Grid>\n          <Grid item xs={2} sx={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\n            <Typography\n              sx={{\n                background: \"#3B3F76\",\n                color:\"#fff\",\n                borderRadius: \"50%\",\n                width: \"1rem\",\n                height: \"1rem\",\n                border:\"1px solid #3B3F76\",\n                fontSize: \"11px\",\n                textAlign: \"center\",\n              }}\n            >\n              {bakedData?.unseenMessages}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Card>\n      {open1 ? (\n        <ChatContainer\n          open={open1}\n          setOpen={setOpen1}\n          id={props?.data?._id}\n          type=\"community\"\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default CommunityChatComponent;\n","import { Box, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../assets/hooks\";\nimport CommunityChatComponent from \"../../genericComponents/communityChatComponent\";\nimport { Chat} from \"../../types/types\";\n\nconst CommunityChat = () => {\n  const advisorchats = useAppSelector((state) => state.chats);\n  return (\n    <Box sx={{\n      overflowY: \"scroll\",\n      height: \"450px\",\n      \"&::-webkit-scrollbar\": {\n        width: \"12px\",\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n      },\n      \"&::-webkit-scrollbar-track\": {\n        backgroundColor: \"#fff\",\n      },\n      width:\"100%\",\n      mt:2\n    }}>\n      <Grid container spacing={2} \n        sx={{mt:0}}\n        >\n      {advisorchats?.data?.community?.length > 0 ?advisorchats?.data?.community?.map((item: Chat,i) => (\n        <Grid item xs={12} key={i}>\n        <CommunityChatComponent data={item} />\n        </Grid>\n      )) : \n      <Box sx={{height:\"5rem\",borderRadius:\"20px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",width:\"100%\"}}>\n      <Typography color=\"#3B3F76\">Start a new chat</Typography>\n      </Box>\n      }\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CommunityChat;\n","import React, { useRef, useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Slide from \"@mui/material/Slide\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { Avatar, Grid, Typography} from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport {\n  Box,\n  InputAdornment,\n  Stack,\n  TextField,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { getNewChatsUsingSearch, postingNewChatOrRetrivingOldChat } from \"../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { getFriends, setWordCase } from \"../../assets/library\";\nimport { Event, Participant, User } from \"../../types/types\";\nimport { addChats } from \"../../store/Slices/chatsSlice\";\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: any,\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst NewChatContainer: React.FC<Props> = ({ open, setOpen}) => {\n  const [searchTerm, setSearchTerm] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [options,setOptions] = useState<User[]>([])\n  const profile = useAppSelector(state =>state.sharedInfo);\n  const chats = useAppSelector(state =>state.chats);\n  const allChats = [...chats.data.advisors,...chats.data.community]\n  const friends = useRef(profile.data?._id ? getFriends(allChats,profile.data?._id) : []);\n  const dispatch = useAppDispatch();\n\n  const fetchNewChats = async (searchTerm:string) => {\n    const response = await getNewChatsUsingSearch(searchTerm);\n    if (response && response.data !== undefined) {\n      setOptions(\n        response?.data?.filter((item:any) => {\n          return item._id !== profile.data?._id;\n        })\n      );\n    } else {\n      \n    }\n  };\n  const getChatId = async (id:string) => {\n    try{\n      const response = await postingNewChatOrRetrivingOldChat(id);\n      if (response && response.data !== undefined) {\n      } else {\n      }\n      return response.data;\n    }catch(error){\n\n    }\n  \n};\nconst eventHandler = async (event:Event)=>{\n  switch(event.name){\n    case \"handleChange\":\n      if (event.data.target.value !== \"\") {\n        setSearchTerm(event.data.target.value);\n        fetchNewChats(event.data.target.value.trim())\n      }\n    break;\n    case \"select\":\n      setLoading(true);\n      setLoading(false);\n      setOpen(false)\n     const response1 = await getChatId(event.data._id)\n      dispatch(addChats(response1))\n  }\n} \n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        sx={{\n            right: \"0\",\n            left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n            top: { md: \"10px\", xs: \"0\", lg: \"25px\" },\n          }}\n          PaperProps={{\n            style: {\n              borderRadius: \"1rem\",\n              padding: \"1rem\",\n              width: \"410px\",\n              height: \"550px\",\n            },\n          }}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setOpen(false)}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        {loading ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"300px\",\n            }}\n          >\n            <CircularProgress />\n          </div>\n        ) : (\n          <>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <KeyboardArrowDownIcon\n                onClick={() => setOpen(false)}\n                sx={{ width: \"2rem\", height: \"2rem\" }}\n              />\n            </Box>\n            <ChatsListContainer\n              searchTerm={searchTerm}\n              // handleSelect={handleSelect}\n              eventHandler = {eventHandler}\n              options={options}\n              // handleChange={handleChange}\n              friends={friends}\n            />\n          </>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\ninterface ChatsListContainerProps {\n  // handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  // handleSelect: (data: User) => void;\n  eventHandler:any,\n  options: User[];\n  searchTerm: string | null;\n  friends:any\n}\n\nconst ChatsListContainer: React.FC<ChatsListContainerProps> = ({\n  eventHandler,\n  options,\n  friends\n}) => {\n  return (\n    <Stack spacing={1} className=\"chat-container-messenger1\" sx={{ mt: 2, height: \"480px\" }}>\n        <Typography textAlign=\"center\" fontWeight=\"600\">New Chat</Typography>\n      <TextField\n        size=\"small\"\n        fullWidth\n        onChange={(e)=>eventHandler({name:\"handleChange\",data:e})}\n        id=\"outlined-basic\"\n        placeholder=\"Search\"\n        variant=\"outlined\"\n        autoComplete=\"false\"\n        sx={{\n          \"& .MuiOutlinedInput-root\": {\n            borderRadius: \"10px\",\n          },\n        }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Box sx={{height:\"420px\",overflowY:\"scroll\",p:1}}>\n        {options.map((item, index) => (\n              <Grid container spacing={3} onClick={() =>eventHandler({name:\"select\",data:item})} sx={{p:0}} key={index}>\n                <Grid\n                  item\n                  xs={2}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Avatar\n                    src={item.displayPicSrc}\n                    alt=\"profile\"\n                    style={{ width: \"2rem\", height: \"2rem\", borderRadius: \"50%\" }}\n                  />\n                </Grid>\n                <Grid item xs={8} >\n                  <h5>{setWordCase(item.firstName) + \" \" + setWordCase(item?.lastName)}</h5>\n                </Grid>\n                <Grid item xs={2}   sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}>\n                  {friends.current?.find((friend: Participant) => friend._id === item._id) ? (\n                    <span style={{color:\"rgb(255, 117, 26)\"}}>Friend</span>\n                  ) : (\n                    <PersonAddIcon sx={{ fontSize: \"1.2rem\", color: \"teal\" }} />\n\n                  )}\n                </Grid>\n              </Grid>\n        ))}\n      </Box>\n    </Stack>\n  );\n};\n\nexport default NewChatContainer;\n","/* eslint-disable */\nimport {\n  Avatar,\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  Grid,\n  Link,\n  Slide,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport Images from \"../../assets\";\nimport {\n  AVAcommunicationMessage,\n  communicationMessage,\n  fetchAllMessages,\n  seenMessageDetails,\n} from \"../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { addMessage, initMessages } from \"../../store/Slices/messagesSlice\";\nimport {\n  Chat,\n  Event,\n  Message,\n  Participant,\n  Sharedinfo,\n  TriggerObject,\n} from \"../../types/types\";\nimport { updateChat } from \"../../store/Slices/chatsSlice\";\nimport Socket from \"../../assets/socket\";\nimport { normalizeType, setWordCase } from \"../../assets/library\";\nimport { Close } from \"@mui/icons-material\";\nimport ContentRenderer from \"./Content\";\n\nconst Transition1 = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface props {\n  open: boolean;\n  setOpen: Function;\n  id: any;\n  type: \"advisors\" | \"community\";\n}\n\nconst VirtualChatContainer = ({ open, setOpen, id, type }: props) => {\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const list = useRef<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const messages = useAppSelector((state) => state.messages);\n  const [uploadFiles, setUploadFiles] = useState<File[]>([]);\n  const [repliedTo, setRepliedTo] = useState(null);\n  const [replyDiv, setReplyDiv] = useState(false);\n  const [replyDivData, setReplyDivData] = useState(\"\");\n  const [typing, setTyping] = useState(\"\");\n  const chat = useAppSelector((state) => {\n    let currentChats = state.chats;\n    return type === \"advisors\"\n      ? currentChats.data.advisors.find((chat) => chat._id === id)\n      : currentChats.data.community.find((chat) => chat._id === id);\n  });\n  const dispatch = useAppDispatch();\n\n  const participantDetails = chat?.participants.find(\n    (user) => user._id !== profileInfo?.data?._id\n  );\n  const seenMessages = async () => {\n    const response = await seenMessageDetails(id);\n    // console.log(response)\n    if (response.success) {\n      dispatch(updateChat(response.data));\n      if (\n        profileInfo.data &&\n        profileInfo.data._id &&\n        Object.values(profileInfo.data).every(\n          (item) => typeof item !== undefined\n        )\n      ) {\n        let triggerObj: TriggerObject = {\n          action: \"seen\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter(\n            (participant: Participant) =>\n              participant._id !== profileInfo.data?._id\n          ),\n          data: response.data,\n        };\n        Socket.emit(\"trigger\", triggerObj);\n      }\n    }\n  };\n\n  const triggerMessages = (triggerObject: TriggerObject) => {\n    switch (triggerObject.action) {\n      case \"send\":\n        dispatch(addMessage({ ...triggerObject.data.message, type: \"normal\" }));\n        seenMessages();\n        // console.log(\"message send trigger\", triggerObject.data.message);\n\n        break;\n\n      case \"typing\":\n        //triggerObject.data==\"start\"?dispatch(startTypingMessage({...triggerObject.sender,activity:'typing'})):dispatch(stopTypingMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n\n      case \"seen\":\n        //dispatch(seenMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n    }\n  };\n\n  const fetchMessage = async () => {\n    try {\n      setLoading(true);\n      const response = await fetchAllMessages(id);\n      if (response) {\n        let msgs = response.data.map((msg: Message) => ({\n          ...msg,\n          type: \"normal\",\n        }));\n        msgs.reverse();\n        dispatch(\n          initMessages({\n            requestStatus: \"initiated\",\n            responseStatus: \"recieved\",\n            haveAnIssue: false,\n            issue: \"\",\n            data: msgs,\n          })\n        );\n        if (\n          chat?.unSeenMessages\n            .filter(\n              (msg: any) => msg.message.sender._id !== profileInfo.data?._id\n            )\n            .filter(\n              (recievedMessage: any) =>\n                !recievedMessage.seen.find(\n                  (id: string) => id === profileInfo.data?._id\n                )\n            ).length != 0\n        ) {\n          await seenMessages();\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const bakeMessages = (messages: Message[], chat: Chat, user: Sharedinfo) => {\n    let unsetParticipants = chat.participants.filter(\n      (chat) => chat._id != user._id\n    );\n    let list: Message[] = [];\n    let seenParticipants: Participant[] = [];\n    let unseenParticipants: Participant[] = [];\n    messages.reverse();\n    messages.forEach((msg) => {\n      if (msg.sender?._id == user._id) {\n        if (unsetParticipants.length != 0) {\n          if (chat.unSeenMessages.length == 0) {\n            if (unsetParticipants.length != 0) {\n              seenParticipants = [...unsetParticipants];\n            }\n          } else {\n            if (\n              !chat.unSeenMessages.find(\n                (unseenMsg) => unseenMsg.message._id == msg._id\n              )\n            ) {\n              seenParticipants = [...unsetParticipants];\n            } else {\n              seenParticipants = unsetParticipants.filter((unsetParticipant) =>\n                chat.unSeenMessages\n                  .find((unseenMsg) => unseenMsg.message._id == msg._id)\n                  ?.seen.find(\n                    (seenParticipant) => seenParticipant == unsetParticipant._id\n                  )\n              );\n            }\n          }\n          if (seenParticipants.length != 0) {\n            let seenMessage = seenParticipants.reduce(\n              (message, seenParticipant) =>\n                message + seenParticipant.firstName + \" , \",\n              \"Seen by \"\n            );\n            list.push({\n              _id: msg._id + \"_seen\",\n              type: \"seen\",\n              content: seenMessage.substring(0, seenMessage.length - 3),\n              chat: chat._id,\n            });\n          }\n          list.push(msg);\n          unsetParticipants = unsetParticipants.filter(\n            (unsetParticipant) =>\n              !seenParticipants.find(\n                (seenParticipant) => seenParticipant._id == unsetParticipant._id\n              )\n          );\n        } else {\n          list.push(msg);\n        }\n      } else {\n        list.push(msg);\n      }\n    });\n    list.reverse();\n    let typingParticipants = chat.participants.filter(\n      (participant) => participant.activity == \"typing\"\n    );\n    //console.log(\"Typing\",typingParticipants)\n    if (typingParticipants.length != 0) {\n      let typingMessage = typingParticipants.reduce(\n        (msg, participant) => participant.firstName + \" , \",\n        \"\"\n      );\n      list.push({\n        _id: chat._id + \"_typing\",\n        type: \"typing\",\n        content:\n          typingMessage.substring(0, typingMessage.length - 3) +\n          (typingParticipants.length == 1 ? \" is typing\" : \" are typing\"),\n        chat: chat._id,\n        sender: {\n          displayPicSrc: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          _id: chat._id + \"_typing\",\n          userType: \"\",\n        },\n      });\n      //console.log(list)\n    }\n    return list;\n    //let bakedParticipants=getParticipantsLastSeenMessage(chat,user,messages);\n    //return bakeMessagesWithSeenInfo(messages,bakedParticipants);\n  };\n\n  const eventHandler = async (event: Event) => {\n    let triggerObj: TriggerObject;\n    switch (event.name) {\n      case \"send\":\n        const formData = new FormData();\n        formData.append(\"content\", event.data);\n        formData.append(\"chatId\", id);\n\n        try {\n          if (event.data.trim()) {\n            const response = await communicationMessage(formData);\n            setTyping(\"Ava is typing\");\n\n            if (response.data.success) {\n              dispatch(updateChat(response.data.data.chat));\n              dispatch(addMessage(response.data.data.message));\n              setUploadFiles([]);\n            } else {\n              console.error(\"Failed to send message or upload files.\");\n            }\n            const response1 = await AVAcommunicationMessage({\n              content: event.data,\n              chatId: id,\n            });\n            setTyping(\"\");\n\n            if (response1.data.success) {\n              dispatch(updateChat(response1.data.data.chat));\n              dispatch(addMessage(response1.data.data.message));\n            } else {\n              console.error(\"Failed to send message or upload files.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error during file upload or message sending:\", error);\n        }\n\n        break;\n      case \"startTyping\":\n        triggerObj = {\n          action: \"typing\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter(\n            (participant) => participant._id != profileInfo.data?._id\n          ),\n          data: \"start\",\n        };\n        //   Socket.emit(\"trigger\", triggerObj);\n        break;\n      case \"stopTyping\":\n        //   triggerObj = {\n        //     action: \"typing\",\n        //     sender: { ...profileInfo.data, userType: \"student\" },\n        //     recievers: chat?.participants.filter((participant) => participant._id != profileInfo.data?._id),\n        //     data: \"stop\"\n        //   }\n        // setTyping(\"\")\n\n        //   Socket.emit(\"trigger\", triggerObj);\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    //   // if (id) {\n    //   Socket.removeListener(\"trigger\", triggerMessages);\n    //   Socket.on(\"trigger\", triggerMessages);\n    fetchMessage();\n    //   return () => { Socket.removeListener(\"trigger\", triggerMessages) }\n    // }\n  }, []);\n\n  list.current =\n    chat && profileInfo.data\n      ? bakeMessages([...messages.data], chat, profileInfo.data)\n      : [];\n\n  const Header = (props: any) => {\n    return (\n      <div\n        style={{\n          background: \"#F8F8FC\",\n          padding: \"0.5rem\",\n          borderRadius: \"0.8rem\",\n          position: \"relative\",\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n            <Avatar\n              src={\n                participantDetails?.role === \"Virtual_Assistant\"\n                  ? Images.ai\n                  : participantDetails?.displayPicSrc\n              }\n              alt=\"profile\"\n              sx={{ width: \"3rem\", height: \"3rem\", borderRadius: \"50%\" }}\n            />\n            <Typography\n              fontWeight=\"500\"\n              sx={{\n                position: \"absolute\",\n                right: \"10px\",\n                top: \"-1rem\",\n                background: \"#fff\",\n                p: 1,\n                borderRadius: \"10px\",\n                color:\n                  participantDetails?.role === \"counsellor\"\n                    ? \"#3B3F76\"\n                    : participantDetails?.role === \"processCoordinator\"\n                    ? \"#569228\"\n                    : \"#FEB853\",\n                fontSize: \"14px\",\n              }}\n            >\n              {participantDetails?.role\n                ? normalizeType(participantDetails?.role)\n                : participantDetails?.role}\n            </Typography>\n            <Box>\n              {participantDetails?.firstName || participantDetails?.lastName ? (\n                <Typography fontWeight=\"500\">\n                  {setWordCase(participantDetails?.firstName)}\n                  &nbsp;{setWordCase(participantDetails?.lastName)}\n                </Typography>\n              ) : (\n                <Typography>User</Typography>\n              )}\n            </Box>\n          </Box>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              sx={{ textTransform: \"none\", color: \"#3b3f76\", float: \"right\" }}\n              onClick={() =>\n                props.eventHandler({\n                  name: \"block\",\n                  data: {\n                    action: \"block\",\n                    id: participantDetails?._id,\n                  },\n                })\n              }\n            >\n              {participantDetails &&\n                participantDetails?.role !== \"Virtual_Assistant\" &&\n                \"Block\"}\n            </Button>\n          </Box>\n        </Stack>\n      </div>\n    );\n  };\n  const Content = (props: any) => {\n    const bottomRef = useRef<HTMLDivElement>(null);\n    const chatContainerRef = useRef<HTMLDivElement>(null);\n    const [isUserAtBottom, setIsUserAtBottom] = useState(true);\n\n    const handleScroll = () => {\n      if (chatContainerRef.current) {\n        const { scrollTop, scrollHeight, clientHeight } =\n          chatContainerRef.current;\n        const isAtBottom = scrollHeight - scrollTop - clientHeight <= 5;\n        setIsUserAtBottom(isAtBottom);\n      }\n    };\n    const predefinedMessages = [\n      \"Top courses in USA?\",\n      \"Best universities in Computer Science ?\",\n    ];\n\n    useEffect(() => {\n      if (isUserAtBottom) {\n        bottomRef.current?.scrollIntoView({ behavior: \"auto\" });\n      }\n    }, [list.current]);\n\n    useEffect(() => {\n      bottomRef.current?.scrollIntoView({ behavior: \"auto\" });\n    }, []);\n\n    return (\n      <Box\n        ref={chatContainerRef}\n        onScroll={handleScroll}\n        sx={{\n          overflowY: \"scroll\",\n          mt: 3,\n          height: \"390px\",\n          \"&::-webkit-scrollbar\": {\n            width: \"12px\",\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            backgroundColor: \"transparent\",\n            borderRadius: \"8px\",\n          },\n        }}\n      >\n        {loading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"300px\",\n            }}\n          >\n            <CircularProgress />\n          </Box>\n        ) : (\n          <div className=\"chat-container\">\n            {list.current.length > 0 ? (\n              <>\n                {list.current.map((message: any) => (\n                  <>\n                    {message.type !== \"seen\" && message.type !== \"typing\" ? (\n                      <div\n                        key={message._id}\n                        className={`message ${\n                          message?.sender?._id === profileInfo.data?._id\n                            ? \"sent\"\n                            : \"received\"\n                        }`}\n                      >\n                        <ContentRenderer content={message.content} />\n                        {message?.document?.data?.preview_url ? (\n                          <iframe\n                            src={message?.document?.data?.preview_url}\n                            title=\"preview\"\n                            style={{\n                              border: \"none\",\n                              width: \"150px\",\n                              height: \"150px\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n                        ) : (\n                          \"\"\n                        )}\n                        <Avatar\n                          src={message.sender?.displayPicSrc}\n                          alt=\"\"\n                          sx={\n                            message?.sender?._id === profileInfo.data?._id\n                              ? {\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  borderRadius: \"50%\",\n                                  position: \"absolute\",\n                                  top: \"-12px\",\n                                  right: 0,\n                                }\n                              : {\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  borderRadius: \"50%\",\n                                  position: \"absolute\",\n                                  top: \"-12px\",\n                                  left: 0,\n                                }\n                          }\n                        />\n                      </div>\n                    ) : (\n                      <>\n                        <div className=\"seenMsg\" key={message._id}>\n                          {message.content}\n                        </div>\n                      </>\n                    )}\n                  </>\n                ))}\n                {typing && (\n                  <Typography\n                    sx={{\n                      textAlign: \"right\",\n                      fontSize: \"13px\",\n                      color: \"#3b3f76\",\n                      marginTop: \"8px\",\n                    }}\n                  >\n                    {typing}\n                  </Typography>\n                )}\n                <div ref={bottomRef}></div>\n              </>\n            ) : (\n              <Box\n                sx={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}\n              >\n                <Typography sx={{ fontSize: \"14px\" }}>\n                  Hi, How can I help you ? Here are few questions{\" \"}\n                </Typography>\n                {predefinedMessages.map((msg, index) => (\n                  <Link\n                    key={index}\n                    sx={{\n                      fontSize: \"14px\",\n                      textDecoration: \"none\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() =>\n                      props.eventHandler({ name: \"send\", data: msg })\n                    }\n                  >\n                    {msg}\n                  </Link>\n                ))}\n              </Box>\n            )}\n          </div>\n        )}\n      </Box>\n    );\n  };\n\n  const Footer = (props: any) => {\n    const [content, setContent] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const actionHandler = (action: any) => {\n      // console.log('action', action)\n\n      if (action.type == \"reply\") {\n        setRepliedTo(action.data.id);\n      }\n      if (action.type == \"copy\") {\n        // console.log(messages[action.data.index])\n        // navigator.clipboard.writeText(messages[action.data.index].content);\n      }\n    };\n\n    const showReplyDiv = (messagedata: any) => {\n      setReplyDiv(true);\n      setReplyDivData(messagedata);\n    };\n    const handleFileChange = (event: any) => {\n      const selectedFiles = Array.from(event.target.files);\n      setUploadFiles(selectedFiles as File[]);\n      // console.log(selectedFiles)\n    };\n    const removeFile = (index: any) => {\n      const updatedFiles = [...uploadFiles];\n      updatedFiles.splice(index, 1);\n      setUploadFiles(updatedFiles);\n    };\n\n    const handleSend = async () => {\n      try {\n        if (content.trim() !== \"\" || (uploadFiles && uploadFiles.length > 0)) {\n          setLoading(true);\n          await props.eventHandler({ name: \"send\", data: content });\n        } else {\n          console.log(\"No content or files to send.\");\n        }\n      } catch (error) {\n        console.error(\"Error while sending:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === \"Enter\" && !event.shiftKey && content.trim() !== \"\") {\n        event.preventDefault();\n        handleSend();\n      }\n    };\n\n    return (\n      <>\n        {participantDetails && (\n          <div style={{ position: \"relative\" }}>\n            {uploadFiles?.length > 0 && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  position: \"absolute\",\n                  top: \"-44px\",\n                  right: \"35%\",\n                }}\n              >\n                <div style={{ width: \"fitContent\" }}>\n                  <Typography fontSize=\"0.9rem\">Selected files:</Typography>\n                  <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n                    {uploadFiles.map((file, index) => (\n                      <li\n                        style={{ fontSize: \"12px\", display: \"flex\" }}\n                        key={index}\n                      >\n                        {file.name}\n                        <Close\n                          onClick={() => removeFile(index)}\n                          sx={{ fontSize: \"1rem\", cursor: \"pointer\" }}\n                        />\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )}\n            {replyDiv ? (\n              <div className=\"replyDiv\">\n                <h5>reply to:- {replyDivData}</h5>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <Grid\n              container\n              sx={{\n                background: \"#F8F8FC\",\n                padding: \"0.5rem\",\n                borderRadius: \"0.8rem\",\n              }}\n            >\n              <Grid item xs={9.5}>\n                <TextField\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onFocus={() => props.eventHandler({ name: \"startTyping\" })}\n                  onBlur={() => props.eventHandler({ name: \"stopTyping\" })}\n                  multiline\n                  // maxRows={3}\n                  rows={2}\n                  fullWidth\n                  placeholder=\"Type your message...\"\n                  value={content}\n                  sx={{\n                    \"& .MuiOutlinedInput-notchedOutline\": {\n                      border: 0,\n                      \"&:Focus\": {\n                        border: 0,\n                      },\n                    },\n                    \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                      border: \"none !important\",\n                    },\n                  }}\n                  onChange={(e) => setContent(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                />\n              </Grid>\n              <Grid\n                item\n                xs={1.5}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  background: \"#fff\",\n                  borderRadius: \"6px\",\n                }}\n              >\n                {loading ? (\n                  <img\n                    src={Images.standardLoader}\n                    alt=\"loader\"\n                    style={{ width: \"1rem\" }}\n                  />\n                ) : (\n                  <img\n                    src={Images.sendIcon}\n                    alt=\"sendIcon\"\n                    style={{ width: \"2rem\", height: \"2rem\" }}\n                    onClick={handleSend}\n                  />\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        sx={{\n          right: \"0\",\n          left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n          top: { md: \"10px\", xs: \"0\", lg: \"25px\" },\n        }}\n        PaperProps={{\n          style: {\n            borderRadius: \"1rem\",\n            padding: \"1rem\",\n            width: \"410px\",\n            height: \"582px\",\n            // background: \"#EDF2F6\",\n          },\n        }}\n        TransitionComponent={Transition1}\n        keepMounted\n        onClose={() => setOpen(false)}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <KeyboardArrowDownIcon\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              color: \"#0F0F0F\",\n              fontSize: \"2rem\",\n              cursor: \"pointer\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onClick={() => setOpen(false)}\n          />\n        </Box>\n        <Box sx={{ mt: 3 }}>\n          <Header eventHandler={eventHandler} />\n          <Content eventHandler={eventHandler} />\n          <Footer eventHandler={eventHandler} />\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default VirtualChatContainer;\n","import React, { useState } from 'react';\nimport { SpeedDial, SpeedDialAction } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport Images from 'src/assets';\nimport VirtualChatContainer from './virtualChatContainer';\nimport { useAppDispatch, useAppSelector } from 'src/assets/hooks';\nimport { Chat } from 'src/types/types';\nimport { setPopup } from 'src/store/Slices/popupSlice';\n\nconst CustomSpeedDial = (props: any) => {\n    const [isSpeedDialOpen, setIsSpeedDialOpen] = useState(false);\n    const [open1, setOpen1] = useState(false);\n    const dispatch = useAppDispatch();\n    const [tooltipVisible, setTooltipVisible] = useState<string | null>(null);\n    const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n    const handleSpeedDialToggle = () => {\n        setIsSpeedDialOpen((prev) => !prev);\n    };\n\n    const handleMouseEnter = (action: string) => {\n        setTooltipVisible(action);\n    };\n\n    const handleMouseLeave = () => {\n        setTooltipVisible(null);\n    };\n\n    const advisorchats = useAppSelector((state) => state.chats);\n\n    const findVirtualAssistant = (advisorArray: Chat[]) => {\n        for (const advisor of advisorArray) {\n            const participant = advisor?.participants?.find(\n                (p: any) => p.role === 'Virtual_Assistant'\n            );\n            if (participant) {\n                return advisor;\n            }\n        }\n        return null;\n    };\n\n    const virtualAdvisor = findVirtualAssistant(advisorchats?.data?.advisors);\n\n    return (\n        <div\n            style={{\n                position: 'fixed',\n                bottom: 16,\n                right: 16,\n                zIndex:1\n            }}\n        >\n            <SpeedDial\n                ariaLabel=\"Custom SpeedDial\"\n                icon={\n                    isSpeedDialOpen ? (\n                        <CloseIcon style={{ color: 'white', fontSize: '28px' }} />\n                    ) : (\n                        <ChatIcon style={{ color: 'white', fontSize: '28px' }} />\n                    )\n                }\n                onClick={()=> props.setOpen(true)}\n                open={isSpeedDialOpen}\n                direction=\"up\"\n                FabProps={{\n                    style: {\n                        backgroundColor: '#3b3f76',\n                        color: 'white',\n                    },\n                }}\n            >\n                <SpeedDialAction\n                    icon={\n                        <img\n                            style={{\n                                width: '3rem',\n                                height: '3rem',\n                                cursor: 'pointer',\n                            }}\n                            src={Images.chaticon}\n                            alt=\"chat icon\"\n                        />\n                    }\n                    tooltipOpen={tooltipVisible === 'chat'}\n                    tooltipTitle={\n                        <div style={{ width: '120px', textAlign: 'center' }}>\n                            Chat with us\n                        </div>\n                    }\n                    onClick={() => props.setOpen(true)}\n                    onMouseEnter={() => handleMouseEnter('chat')}\n                    onMouseLeave={handleMouseLeave}\n                />\n                <SpeedDialAction\n                    icon={\n                        <img\n                            style={{\n                                width: '1.7rem',\n                                height: '1.7rem',\n                                cursor: 'pointer',\n                                filter: 'invert(1)',\n                            }}\n                            src={Images.ai}\n                            alt=\"AI chat icon\"\n                        />\n                    }\n                    FabProps={{\n                        style: {\n                            backgroundColor: '#3b3f76',\n                            color: 'white',\n                            width: \"45px\",\n                            height: \"45px\",\n                        },\n                    }}\n                    tooltipOpen={tooltipVisible === 'ai'}\n                    tooltipTitle={\n                        <div style={{ width: '120px', textAlign: 'center' }}>\n                            Chat with AI\n                        </div>\n                    }\n                    onClick={() =>{\n                        if(userAuthStatus.data?.isAuthorized){\n                            setOpen1(true)\n                        }else{\n                            dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"login\",\n                                      dimensions: {\n                                        width: \"800px\",\n                                        height: \"70%\",\n                                        show: \"none\"\n                  \n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                        }\n                    } }\n                    onMouseEnter={() => handleMouseEnter('ai')}\n                    onMouseLeave={handleMouseLeave}\n                />\n            </SpeedDial>\n            {userAuthStatus.data?.isAuthorized && open1 ? (\n                <VirtualChatContainer\n                    open={open1}\n                    setOpen={setOpen1}\n                    id={virtualAdvisor?._id}\n                    type=\"advisors\" \n                />\n            ) : null}\n        </div>\n    );\n};\n\nexport default CustomSpeedDial;\n","import {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Dialog,\n  Slide,\n  Stack,\n  Typography,\n  Button\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport Advisors from \"./advisors\";\nimport Community from \"./community\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { CustomButton } from \"../../genericComponents/customButton\";\nimport { setPopup } from \"../../store/Slices/popupSlice\";\nimport NewChatContainer from \"./newChatComponent\";\nimport CustomSpeedDial from \"./chatIcon\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nexport const GuestUser = () => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <div\n      style={{\n        background: \"#EDF2F6\",\n        padding: \"1.5rem\",\n        borderRadius: \"10px\",\n        position: \"relative\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"start\",\n          justifyContent: \"start\",\n          mb: 2,\n        }}\n      >\n        <AvatarGroup max={4}>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n          <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\n          <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\n          <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\n          <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\n        </AvatarGroup>\n        <Typography color=\"#3B3F76\" fontWeight=\"600\" gutterBottom>\n          Say goodbye to all your doubts !\n        </Typography>\n        <Typography color=\"rgba(48, 51, 99, 0.5)\" gutterBottom>\n          As you say hello to our profound advisors !{\" \"}\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          background: \"#fff\",\n          p: 2,\n          borderRadius: \"10px\",\n          position: \"absolute\",\n          left: \"20px\",\n          right: \"20px\",\n          boxShadow: \"2\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n\n        }}\n      >\n        <Typography gutterBottom>\n          Login to start chat with{\" \"}\n          <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>Students </span>\n          and <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>Advisors</span>.\n        </Typography>\n        <CustomButton\n          width=\"100px\"\n          handleSubmit={() => {\n            // setOpen(false);\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                      height: \"70%\",\n                      show: \"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }}\n        >\n          Login\n        </CustomButton>\n      </Box>\n    </div>\n  );\n};\nconst Chat = () => {\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const [open, setOpen] = useState(false);\n  const [newChatOpen, setNewOpen] = useState(false);\n\n\n  const ChatsListContainer = () => {\n    const [activeTab, setActiveTab] = useState<\"advisors\" | \"community\" | \"assistant\">(\"advisors\");\n    return (\n      <Stack spacing={1} sx={{ height: \"480px\", p: 2, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Box\n          sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"80%\",gap:\"1rem\" }}\n        >\n          <Button\n            onClick={() => setActiveTab(\"advisors\")}\n            sx={{\n              borderBottom: activeTab === \"advisors\" ? \"2px solid #3B3F76\" : 0,\n              color: activeTab === \"advisors\" ? \"#3B3F76\" : \"#3b3f7699\",\n              borderRadius: 0,\n              textTransform: \"none\",\n              fontSize: \"0.9rem\",\n            }}\n          >\n            Advisors\n          </Button>\n          <Button\n            onClick={() => setActiveTab(\"community\")}\n            sx={{\n              borderBottom: activeTab === \"community\" ? \"2px solid #3B3F76\" : 0,\n              color: activeTab === \"community\" ? \"#3B3F76\" : \"#3b3f7699\",\n              textTransform: \"none\",\n              borderRadius: 0,\n              fontSize: \"0.9rem\",\n            }}\n          >\n            Community\n          </Button>\n        </Box>\n        {activeTab === \"advisors\" ?\n          <Advisors /> : activeTab === \"community\" ?\n            <Community /> : \"\"\n        }\n        <div style={{ position: \"absolute\", bottom: \"12px\", right: \"12px\" }}>\n          <div\n            onClick={() => setNewOpen(true)}\n            style={{\n              background: \"#3B3F76\",\n              color: \"#fff\",\n              height: \"1rem\",\n              width: \"1rem\",\n              borderRadius: \"50%\", padding: \"0.2rem\",\n              cursor: \"pointer\"\n\n            }}\n          >\n            <AddIcon sx={{ fontSize: \"1rem\" }} />\n          </div>\n        </div>\n\n      </Stack>\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <CustomSpeedDial setOpen={setOpen}/>\n        <Dialog\n          open={open}\n          sx={{\n            right: \"0\",\n            left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n            top: { md: \"1%\", xs: \"0\", lg: \"5%\" },\n          }}\n          PaperProps={{\n            style: {\n              borderRadius: \"1rem\",\n              padding: \"1rem\",\n              width: \"410px\",\n              height: \"550px\",\n            },\n          }}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setOpen(false)}\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <KeyboardArrowDownIcon\n                onClick={() => setOpen(false)}\n                sx={{\n                  position: \"absolute\",\n                  top: 0,\n                  color: \"#0F0F0F\",\n                  fontSize: \"2rem\",\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              />\n            </Box>\n            {userAuthStatus.data?.isAuthorized ? (\n              <ChatsListContainer />\n            ) : (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  height: \"50vh\",\n                }}\n              >\n                <GuestUser />\n              </div>\n            )}\n          </Box>\n        </Dialog>\n        {newChatOpen ? (\n          <NewChatContainer\n            open={newChatOpen}\n            setOpen={setNewOpen}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"names":["_ref","content","sanitizedContent","DOMPurify","sanitize","_jsx","ReactMarkdown","components","a","_ref2","href","children","rest","target","rel","Transition1","React","props","ref","Slide","direction","open","setOpen","id","type","profileInfo","useAppSelector","state","sharedInfo","blockedList","BlockedList","list","useRef","loading","setLoading","useState","messages","uploadFiles","setUploadFiles","repliedTo","setRepliedTo","replyDiv","setReplyDiv","replyDivData","setReplyDivData","blockopen","setBlockOpen","action","setAction","chat","currentChats","chats","data","advisors","find","_id","community","dispatch","useAppDispatch","participantDetails","participants","user","_profileInfo$data","seenMessages","async","response","seenMessageDetails","success","updateChat","Object","values","every","item","undefined","triggerObj","sender","userType","recievers","filter","participant","_profileInfo$data2","Socket","emit","triggerMessages","triggerObject","addMessage","message","eventHandler","event","name","formData","FormData","trim","length","console","error","append","totalSize","allowedFileTypes","validFiles","file","isValidType","includes","isValidSize","size","forEach","communicationMessage","_profileInfo$data5","_profileInfo$data6","_profileInfo$data7","response1","blockUserRequest","addBlockedList","blocked","removeBlockedList","err","log","useEffect","removeListener","on","fetchAllMessages","msgs","map","msg","reverse","initMessages","requestStatus","responseStatus","haveAnIssue","issue","unSeenMessages","_profileInfo$data3","recievedMessage","seen","_profileInfo$data4","fetchMessage","current","bakeMessages","unsetParticipants","seenParticipants","_msg$sender","unseenMsg","unsetParticipant","_chat$unSeenMessages$","seenParticipant","seenMessage","reduce","firstName","push","substring","typingParticipants","activity","typingMessage","displayPicSrc","lastName","email","Header","style","background","padding","borderRadius","position","_jsxs","Stack","spacing","alignItems","justifyContent","Box","sx","display","gap","Avatar","src","role","Images","ai","alt","width","height","Typography","fontWeight","right","top","p","color","fontSize","normalizeType","setWordCase","float","Button","textTransform","onClick","isBlocked","some","Content","bottomRef","chatContainerRef","isUserAtBottom","setIsUserAtBottom","_bottomRef$current","scrollIntoView","behavior","_bottomRef$current2","onScroll","handleScroll","scrollTop","scrollHeight","clientHeight","overflowY","mt","backgroundColor","CircularProgress","className","_Fragment","_message$sender","_profileInfo$data8","_message$document","_message$document$dat","_message$document2","_message$document2$da","_message$sender2","_message$sender3","_profileInfo$data9","concat","ContentRenderer","document","preview_url","title","border","objectFit","left","textAlign","Footer","setContent","fileInputRef","handleSend","flexDirection","listStyle","margin","index","Close","updatedFiles","splice","removeFile","cursor","Grid","container","xs","multiple","onChange","selectedFiles","Array","from","files","DescriptionIcon","_fileInputRef$current","click","TextField","variant","onFocus","onBlur","multiline","rows","fullWidth","value","placeholder","e","onKeyDown","key","shiftKey","preventDefault","standardLoader","sendIcon","Dialog","md","lg","PaperProps","TransitionComponent","keepMounted","onClose","KeyboardArrowDownIcon","ConfirmDialog","handleClose","additionalData","onSubmit","_props$data","open1","setOpen1","profile","bakedData","bakedata","rawdata","_rawdata$participants","_rawdata$participants2","_rawdata$participants3","dp","unseenMessages","activeParticipants","chatType","lastMessage","currentUser","otherUsers","_otherUsers$","_otherUsers$2","_otherUsers$3","_otherUsers$4","_otherUsers$5","_otherUsers$6","_msg$message","_msg$message$sender","receivedMessage","bakeLastMessage","_rawdata$lastMessage","_rawdata$lastMessage2","_rawdata$lastMessage3","status","findIndex","_rawdata$lastMessage4","_rawdata$lastMessage5","bakeActivity","inchat","online","LastMessageContainer","_bakedData$lastMessag","_bakedData$lastMessag2","_bakedData$lastMessag3","_bakedData$lastMessag4","_bakedData$lastMessag5","_bakedData$lastMessag6","_bakedData$lastMessag7","_bakedData$lastMessag8","DoneAllIcon","textOverflow","whiteSpace","overflow","Card","pl","boxShadow","marginLeft","FiberManualRecordIcon","bottom","gutterBottom","ChatContainer","Advisors","_advisorchats$data","_advisorchats$data2","_advisorchats$data3","_advisorchats$data3$a","advisorchats","filteredAdvisors","item2","advisorArray","advisor","_advisor$participants","i","AdvisorChatComponent","CommunityChat","_advisorchats$data$co","_advisorchats$data2$c","CommunityChatComponent","Transition","ChatsListContainer","options","friends","autoComplete","InputProps","startAdornment","InputAdornment","SearchIcon","_friends$current","friend","PersonAddIcon","_profile$data","_profile$data2","searchTerm","setSearchTerm","setOptions","allChats","getFriends","getNewChatsUsingSearch","_response$data","_profile$data3","fetchNewChats","postingNewChatOrRetrivingOldChat","getChatId","addChats","typing","setTyping","AVAcommunicationMessage","chatId","marginTop","Link","textDecoration","_userAuthStatus$data2","isSpeedDialOpen","setIsSpeedDialOpen","tooltipVisible","setTooltipVisible","userAuthStatus","handleMouseEnter","handleMouseLeave","virtualAdvisor","findVirtualAssistant","zIndex","SpeedDial","ariaLabel","icon","CloseIcon","ChatIcon","FabProps","SpeedDialAction","chaticon","tooltipOpen","tooltipTitle","onMouseEnter","onMouseLeave","_userAuthStatus$data","isAuthorized","setPopup","show","dimensions","VirtualChatContainer","GuestUser","mb","AvatarGroup","max","CustomButton","handleSubmit","Chat","newChatOpen","setNewOpen","activeTab","setActiveTab","borderBottom","Community","AddIcon","CustomSpeedDial","NewChatContainer"],"sourceRoot":""}