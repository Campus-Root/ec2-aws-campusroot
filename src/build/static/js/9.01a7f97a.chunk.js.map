{"version":3,"file":"static/js/9.01a7f97a.chunk.js","mappings":"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","sources":["genericComponents/modalPopup/AcademicScore.tsx"],"sourcesContent":["import { Box, Button, Typography, TextField, MenuItem, InputAdornment, IconButton, Popover } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { testReadyStyles } from \"src/components/styles/customStyles\";\nimport Images from \"src/assets\";\n\nconst AcademicScore = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Get data passed via navigation state\n  const { selectedStatus, title: pageTitle } = location.state || {};\n\n  // Debugging: Check if the title is being received correctly\n  console.log(\"Received Title:\", pageTitle);\n\n  // Set the title dynamically based on what was received\n  const [title, setTitle] = useState(pageTitle || \"Enter your academic details\");\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n\n\n  useEffect(() => {\n    if (pageTitle) {\n      setTitle(pageTitle);\n    }\n  }, [pageTitle]); // Update title when pageTitle changes\n\n  const [formData, setFormData] = useState({\n    institution: \"\",\n    academicLevel: \"\",\n    gradeSystem: \"\",\n    score: \"\",\n    backlogs: \"\",\n    maxScore: null as number | null \n  });\n\n  const [errors, setErrors] = useState({\n    institution: \"\",\n    academicLevel: \"\",\n    gradeSystem: \"\",\n    score: \"\",\n    backlogs: \"\"\n  });\n  \n\n\n  const localStorageHandler=(academicLevel:string )=>{\n    console.log(\"Selected Level\",academicLevel);\n\n    if (formData.gradeSystem === \"cgpa1\") formData.maxScore = 10;\n  if (formData.gradeSystem === \"cgpa2\") formData.maxScore = 7;\n  if (formData.gradeSystem === \"cgpa3\") formData.maxScore = 5;\n  if (formData.gradeSystem === \"gpa\") formData.maxScore = 4;\n\n    if(academicLevel===\"masters\")\n  {\n    setPostgraduation({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score});\n  }\n  if(academicLevel===\"grade 12\")\n  {\n    setIntermediate({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score});\n  }\n  if(academicLevel===\"bachelors\")\n  {\n    setUndergraduation({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score, maxScore: formData.gradeSystem === \"cgpa1\" ? 10 : formData.gradeSystem === \"cgpa2\" ? 7 : formData.gradeSystem==='cgpa3'? 5:formData.gradeSystem==='gpa'?4:undefined});\n  }\n  if(academicLevel===\"others\")\n  {\n    setOthers({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score});\n  }\n  }\n\n  const setPostgraduation=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string})=>{\n    console.log(\"Masters Data\",collectedData);\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{}\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ postGraduation:{institution:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem\n      }}}));\t\n    }\n  }\n\n  const setUndergraduation=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string,  maxScore?: number;})=>{\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{};\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ underGraduation:{institution:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem,...(collectedData.maxScore && { maxScore: collectedData.maxScore }), \n      }}}));\t\n    }\n  }\n  const setIntermediate=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string})=>{\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{};\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ plus2:{institution:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem\n      }}}));\t\n    }\n  }\n  const setOthers=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string})=>{\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{};\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ plus2:{institution:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem\n      }}}));\t\n    }\n  }\n  \n\n \n  \n  // Handle input changes\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n      ...(name === \"gradeSystem\"\n        ? {\n            maxScore: value === \"cgpa1\" ? 10 : value === \"cgpa2\" ? 7 : value==='cgpa3'?5:value==='gpa'?4:null // Set maxScore based on gradeSystem\n          }\n        : {})\n    }));\n\n    // Validate fields dynamically\n    validateField(name, value);\n  };\n\n\n\n  // Validation logic\n  const validateField = (name: string, value: string) => {\n    let error = \"\";\n\n    switch (name) {\n      case \"institution\":\n        error = value.trim() === \"\" ? \"Institution name is required\" : \"\";\n        break;\n      case \"academicLevel\":\n        error = value === \"\" ? \"Please select an academic level\" : \"\";\n        break;\n      case \"gradeSystem\":\n        error = value === \"\" ? \"Please select a grade system\" : \"\";\n        break;\n      case \"score\":\n        if (!formData.gradeSystem) {\n          error = \"Select a grade system first\";\n        } else if (formData.gradeSystem === \"percentage\") {\n          // Allow numbers with up to 2 decimal places, between 0-100\n          const percentageRegex = /^(100(\\.00?)?|([0-9]?[0-9])(\\.\\d{1,2})?)$/;\n          if (!percentageRegex.test(value)) {\n            error = \"Enter a valid percentage (0-100) with up to 2 decimals\";\n          }\n        }\n        else if(formData.gradeSystem === \"cgpa1\"){\n          const cgpa1Regex = /^10(\\.00?)?$|^([0-9](\\.\\d{1,2})?)$/;\n          if (!cgpa1Regex.test(value)) {\n            error = \"Enter a valid CGPA (0-10) with up to 2 decimals\";\n          }\n        }\n          else if (formData.gradeSystem === \"cgpa2\") {\n            // Validation for CGPA out of 7 (0-7, up to 2 decimals)\n            const cgpa2Regex = /^7(\\.00?)?$|^([0-6](\\.\\d{1,2})?)$/;\n            if (!cgpa2Regex.test(value)) {\n              error = \"Enter a valid CGPA (0-7) with up to 2 decimals\";\n            }\n        }else if (formData.gradeSystem === \"cgpa3\") {\n          // Validation for CGPA out of 7 (0-7, up to 2 decimals)\n          const cgpa3Regex = /^7(\\.00?)?$|^([0-5](\\.\\d{1,2})?)$/;\n          if (!cgpa3Regex.test(value)) {\n            error = \"Enter a valid CGPA (0-7) with up to 2 decimals\";\n          }\n      }\n          else if (formData.gradeSystem === \"gpa\") {\n      // Validation for CGPA out of 7 (0-7, up to 2 decimals)\n       const gpa = /^7(\\.00?)?$|^([0-4](\\.\\d{1,2})?)$/;\n      if (!gpa.test(value)) {\n        error = \"Enter a valid GPA (0-4) with up to 2 decimals\";\n       }\n  }\n  else if (formData.gradeSystem === \"grade\") {\n    // Validation for letter grades (A-Z, a-z)\n    const gradeRegex = /^[A-Za-z]$/;\n    if (!gradeRegex.test(value)) {\n      error = \"Enter a valid grade (A-Z)\";\n    }\n  }\n        \n        else if (value === \"\" || parseFloat(value) <= 0) {\n          error = \"Enter a valid score\";\n        }\n        break;\n      case \"backlogs\":\n        error = value !== \"\" && parseInt(value) < 0 ? \"Backlogs cannot be negative\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    setErrors((prevErrors) => ({ ...prevErrors, [name]: error }));\n  };\n\n  // Check if all fields are valid before enabling Save button\n  const isFormValid = Object.values(errors).every((err) => err === \"\") &&\n                      Object.values(formData).every((val) => val !== \"\");\n\n  \n\n  const handleSave = () => {\n    navigate(\"/testcondition1\");\n    localStorageHandler(formData.academicLevel)\n  };\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"info-popover\" : undefined;\n\n  return (\n    <Box\n      sx={{\n        ...testReadyStyles.container1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        textAlign: \"center\",\n      }}\n    >\n      <Typography variant=\"h4\" fontWeight=\"bold\" sx={{ mb: 3, fontSize: { xs: \"1.5rem\", lg: \"2rem\" } }}>\n        {title.includes(\"final score\") ? (\n        <>\n          What is your <span style={{ color: \"#F87171\" }}>final score</span> status?\n        </>\n      ) : (\n        <>\n          Enter your <span style={{ color: \"#F87171\" }}>current academic</span> details\n        </>\n      )}\n      </Typography>\n\n      {/* Input Fields */}\n      <Box sx={{ width: { xs: \"90%\", sm: \"400px\" }, display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n        <TextField\n          fullWidth\n          name=\"institution\"\n          label=\"Enter your school, college, or university name\"\n          variant=\"outlined\"\n          value={formData.institution}\n          onChange={handleChange}\n          error={!!errors.institution}\n          helperText={errors.institution}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #D1D3F9\" },\n            },\n          }}\n        />\n\n        <TextField\n          fullWidth\n          select\n          name=\"academicLevel\"\n          label=\"Select academic\"\n          variant=\"outlined\"\n          value={formData.academicLevel}\n          onChange={handleChange}\n          error={!!errors.academicLevel}\n          helperText={errors.academicLevel}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #FAEAD0\" },\n            },\n          }}\n        >\n          <MenuItem value=\"masters\">Masters</MenuItem>\n          <MenuItem value=\"bachelors\">Bachelors</MenuItem>\n          <MenuItem value=\"diploma\">Diploma</MenuItem>\n          <MenuItem value=\"grade 12\">Grade 12</MenuItem>\n          <MenuItem value=\"others\">Others</MenuItem>\n        </TextField>\n\n        <TextField\n          fullWidth\n          select\n          name=\"gradeSystem\"\n          label=\"Grade system\"\n          variant=\"outlined\"\n          value={formData.gradeSystem}\n          onChange={handleChange}\n          error={!!errors.gradeSystem}\n          helperText={errors.gradeSystem}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #D1D3F9\" },\n            },\n          }}\n        >\n          <MenuItem value=\"percentage\">Percentage out of 100</MenuItem>\n          <MenuItem value=\"cgpa1\">CGPA out of 10</MenuItem>\n          <MenuItem value=\"cgpa2\">CGPA out of 7</MenuItem>\n          <MenuItem value=\"cgpa3\">CGPA out of 5</MenuItem>\n          <MenuItem value=\"gpa\">GPA out of 4</MenuItem>\n          <MenuItem value=\"grade\">Grade</MenuItem>\n        </TextField>\n\n        <TextField\n          fullWidth\n          name=\"score\"\n          label=\"Enter Score\"\n          variant=\"outlined\"\n          value={formData.score}\n          onChange={handleChange}\n          error={!!errors.score}\n          helperText={errors.score}\n          type={formData.gradeSystem === \"grade\" ? \"text\" : \"number\"} // Change input type dynamically\n             inputProps={{\n                        ...(formData.gradeSystem === \"grade\"\n                    ? { maxLength: 1, pattern: \"[A-Za-z]\" } // Allow only one letter for grades\n                    : { step: \"0.01\" }) // Allow decimal numbers for other systems\n                       }}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #75ECE5\" },\n            },\n          }}\n        />\n\n<Popover\n\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <Box sx={{ p: 2, maxWidth: 300 }}>\n          <Typography variant=\"body1\" fontWeight=\"bold\">\n          What are Backlogs?\n          </Typography>\n          <Typography variant=\"body2\" sx={{ mt: 1 }}>\n          A backlog refers to a subject that was not cleared in the first attempt and needs to be reattempted.\n          </Typography>\n        </Box>\n      </Popover>\n\n\n        <TextField\n          fullWidth\n          name=\"backlogs\"\n          label=\"Enter backlogs\"\n          variant=\"outlined\"\n          value={formData.backlogs}\n          onChange={handleChange}\n          error={!!errors.backlogs}\n          helperText={errors.backlogs}\n          type=\"number\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={handleClick}>\n                  <img  src={Images.info} alt=\"Click Me\" width={26} height={28} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #FFA89C\" },\n            },\n          }}\n        />\n      </Box>\n\n      {/* Navigation Buttons */}\n      <Box sx={{mt: 16,\n         display: \"flex\",\n         justifyContent: \"center\", // Centers horizontally\n         alignItems: \"center\", // Centers vertically\n         height: \"10vh\", // Reduced from 100vh to 90vh to move up\n         width: \"100%\", }}>\n        <Button variant=\"text\" sx={{ color: \"#888\" }} onClick={() => navigate(-1)}>\n          ← Back\n        </Button>\n        <Button variant=\"contained\" sx={{ px: 4, py: 1.5, borderRadius: \"20px\" }} onClick={handleSave} disabled={!isFormValid}>\n          Save\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AcademicScore;\n"],"names":["AcademicScore","navigate","useNavigate","location","useLocation","selectedStatus","title","pageTitle","state","console","log","setTitle","useState","anchorEl","setAnchorEl","useEffect","formData","setFormData","institution","academicLevel","gradeSystem","score","backlogs","maxScore","errors","setErrors","setPostgraduation","collectedData","currentValue","localStorage","getItem","currentValueObj","JSON","parse","setItem","stringify","education","postGraduation","totalScore","gradingSystem","setUndergraduation","underGraduation","setIntermediate","plus2","setOthers","handleChange","e","name","value","target","prevData","validateField","error","trim","test","parseFloat","parseInt","prevErrors","isFormValid","Object","values","every","err","val","open","Boolean","id","undefined","_jsxs","Box","sx","testReadyStyles","container1","display","flexDirection","justifyContent","alignItems","height","textAlign","children","_jsx","Typography","variant","fontWeight","mb","fontSize","xs","lg","includes","_Fragment","style","color","width","sm","gap","TextField","fullWidth","label","onChange","helperText","borderRadius","borderLeft","select","MenuItem","type","inputProps","maxLength","pattern","step","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","p","maxWidth","mt","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","event","currentTarget","src","Images","info","alt","Button","px","py","handleSave","disabled"],"sourceRoot":""}