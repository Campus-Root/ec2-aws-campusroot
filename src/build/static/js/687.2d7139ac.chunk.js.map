{"version":3,"file":"static/js/687.2d7139ac.chunk.js","mappings":"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","sources":["components/layouts/explorePop.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Dialog, Grid, Box, Typography, Button, List, ListItemButton, ListItemText, Collapse, Skeleton } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { AllDestinationTypeEnum } from \"src/assets/enums\";\nimport { globalButton, testReadyStyles } from \"../styles/customStyles\";\nimport Images from \"src/assets\";\nimport { disciplineList } from \"src/assets/menu\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppSelector } from \"src/assets/hooks\";\nimport { getAlllistings } from \"src/services\";\nimport { getExploreUrl } from \"src/assets/library\";\n\nfunction ExplorePop(props: any) {\n  const [activeTab, setActiveTab] = useState<\"Universities\" | \"Programs\">(\"Programs\");\n  const [activeCountry, setActiveCountry] = useState<string>(\"United States of America\");\n\n  const Courses = ({ setopen, setmenu, activeCountry }: any) => {\n    const navigate = useNavigate();\n    return (\n      <>\n        <Box sx={{ position: 'relative' }}>\n          <Box sx={{ position: 'relative', pt: 1 }}>\n            <Box sx={{\n              padding: '1rem', boxShadow: \"0px 0px 4px 0px #00000040\", borderRadius: \"25px\"\n            }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <div>\n                    <Typography color=\"#00000080\" fontWeight=\"500\" fontSize=\"1.2rem\" sx={{ pl: 2 }}>\n                      TOP DISCIPLINES\n                    </Typography>\n                  </div>\n                  <List sx={{ width: '100%', maxWidth: 360, height: \"200px\", overflowY: \"scroll\", scrollbarWidth: \"none\", \"& .MuiTypography-root\": { fontSize: \"14px\" } }} component=\"nav\">\n                    {(disciplineList || []).map((discipline: any) => (\n                      <ListItemButton \n                        key={discipline.name} \n                        onClick={() => {\n                          if (setopen) setopen(false);\n                          if (setmenu) setmenu(null);\n                          navigate(getExploreUrl(\"filterData\", [{ type: \"subDiscipline\", data: [{ name: discipline.name, value: discipline.name }] }]));\n                        }} \n                        sx={{ py: 0, pr: -4, display: 'flex', justifyContent: 'space-between' }}\n                      >\n                        <ListItemText primary={discipline.name} />\n                        <img src={Images.arrow} alt=\"arrow\" style={{ width: \"20px\" }} />\n                      </ListItemButton>\n                    ))}\n                  </List>\n                </Grid>\n              </Grid>\n            </Box>\n            <Box sx={{ textAlign: \"center\", mt: 2 }}>\n              <Button\n                sx={[globalButton, {\n                  width: \"80px\", fontSize: \"14px\"\n                }]}\n                onClick={() => {\n                  if (setopen) setopen(false);\n                  if (setmenu) setmenu(null);\n                  navigate(getExploreUrl(\"filterData\", [{ type: \"country\", data: [{ name: activeCountry, value: activeCountry }] }]));\n                }}\n              >\n                View all\n              </Button>\n            </Box>\n          </Box>\n        </Box>\n      </>\n    )\n  }\n\n  const Universities = ({ setopen, setmenu, activeCountry }: any) => {\n    const navigate = useNavigate();\n    const preference = useAppSelector((state) => state.preferences);\n    const currency = localStorage.getItem(\"currency\");\n    const [loading, setLoading] = useState(true);\n    const [universityData, setuniversityData] = useState([]);\n\n    const universities = async (activeTab: string) => {\n      setLoading(true);\n      const response = await getAlllistings(\"universities\", {\n        page: 1,\n        currency: preference.data?.currency\n          ? preference.data.currency\n          : currency\n            ? currency\n            : \"INR\",\n        filterData: [{ type: \"country\", data: [activeTab] }],\n      });\n      if (response) {\n        setuniversityData(response.data.list);\n      }\n      setLoading(false);\n    };\n\n    useEffect(() => {\n      universities(activeCountry);\n      // eslint-disable-next-line\n    }, [activeCountry]);\n\n    return (\n      <div style={{}}>\n        <Box sx={{ position: 'relative', padding: { xl: \"1rem 7rem 0 7rem\", xs: \"1rem\" } }}>\n          <Box sx={{\n            padding: '1rem', boxShadow: \"0px 0px 4px 0px #00000040\", borderRadius: \"25px\"\n          }}>\n            <Grid container spacing={1} >\n              <Grid item xs={12}>\n                <div>\n                  <Typography color=\"#00000080\" fontWeight=\"500\" fontSize=\"1.2rem\" sx={{ pl: 2 }}>\n                    TOP UNIVERSITIES\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container spacing={1}>\n                  {loading ? (\n                    <Grid item xs={12} md={6}>\n                      {[...Array(6)].map((_, i) => (\n                        <Skeleton key={i} height={30} sx={{ mb: 1, bgcolor: '#f5f2f2' }} />\n                      ))}\n                    </Grid>\n                  ) :\n                  (\n                    (universityData || []).slice(0, 9).map((item: any, i) => (\n                      <Grid item xs={12} md={6} sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                        <Typography\n                          color=\"#000\"\n                          key={i}\n                          sx={{\n                            display: \"flex\", gap: \"0.5rem\", alignItems: \"center\", padding: \"4px 0\", fontSize: \"14px\", width: \"260px\"\n                          }}\n                        >\n                          <img src={item?.logoSrc} alt=\"\" style={{ width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\" }} />\n                          {item?.name}\n                        </Typography>\n                        <Box component=\"img\" src={Images.arrow} alt=\"arrow\" onClick={() => {\n                          if (setopen) setopen(false);\n                          if (setmenu) setmenu(null);\n                          navigate(`/singleuniversity/${item?._id}`);\n                        }} sx={{ width: { md: \"22px\", xs: \"20px\" }, height: { md: \"22px\", xs: \"20px\" }, marginRight: \"10px\", cursor: \"pointer\" }} />\n                      </Grid>\n                    ))\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Box>\n          <Box sx={{ textAlign: \"center\", mt: 2 }}>\n            <Button\n              sx={[globalButton, {\n                width: { md: \"100px\", xs: \"80px\" },\n              }]}\n              onClick={() => {\n                if (setopen) setopen(false);\n                if (setmenu) setmenu(null);\n                const subDisUrl = `activeTab=${JSON.stringify(\n                  \"universities\"\n                )}&FilterData=${JSON.stringify([\n                  {\n                    type: \"country\",\n                    data: [{ name: activeCountry, value: activeCountry }],\n                  },\n                ])}&page=${JSON.stringify(1)}&search=${JSON.stringify(\"\")}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              View all\n            </Button>\n          </Box>\n          <Box component=\"img\" src={Images.flight} alt=\"flight\" sx={{ width: \"50px\", position: \"absolute\", top: 50, right: 5, display: { xs: \"none\", md: \"block\" } }} />\n        </Box>\n      </div>\n    );\n  };\n\n  const tabs = [\n    {\n      label: \"Courses\",\n      Component: <Courses setopen={props.setExploreOpen} setmenu={props.setOpen} activeCountry={activeCountry} />,\n      link: `/explore?activeTab=${JSON.stringify(\"courses\")}&FilterData=${JSON.stringify([])}&page=${JSON.stringify(1)}&search=${JSON.stringify(\"\")}`,\n    },\n    {\n      label: \"Universities\",\n      Component: <Universities setopen={props.setExploreOpen} setmenu={props.setOpen} activeCountry={activeCountry} />,\n      link: `/explore?activeTab=${JSON.stringify(\"universities\")}&FilterData=${JSON.stringify([])}&page=${JSON.stringify(1)}&search=${JSON.stringify(\"\")}`,\n    },\n  ];\n\n  return (\n    <div >\n      <Dialog open={props.exploreopen} fullWidth maxWidth=\"xs\" PaperProps={{\n        sx: {\n          padding: \"16px\",\n          borderRadius: \"20px\",\n          margin: \"16px\",\n          maxHeight: 'unset',\n          overflowY: 'unset',\n          \"& .MuiModal-root\":{\n            zIndex:0\n          }\n        }\n      }}>\n        <div style={{ position: \"relative\" }}>\n        <Box sx={{ position: 'absolute', top: -5, right: 0, zIndex: 2 }}>\n            <CloseIcon sx={{ color: \"#3b3f76\", cursor: \"pointer\" }} onClick={() => {\n              if (props.setExploreOpen) props.setExploreOpen(false);\n              if (props.setOpen) props.setOpen(null);\n            }} />\n          </Box>\n          <Grid container spacing={2} sx={{ marginTop: \"-8px\" }}>\n            <Grid\n              item\n              xs={12}\n              sx={{ display: \"flex\", gap: \"1rem\", px: 3 }}\n            >\n              {tabs.map((item: any) => (\n                <Button\n                  onClick={() => {\n                    setActiveCountry(\"United States of America\")\n                    setActiveTab(item.label)\n                  }\n                  }\n                  sx={[testReadyStyles.activeButton, {\n                    background: item.label === activeTab ? \" #3b3f76\" : \"#3b3f7677\",\n                    color: \"#fff\",\n                    borderRadius: \"10px\",\n                    \"&:hover\": {\n                      background: \"#3b3f76\"\n                    }\n                  }]}\n                >\n                  {item.label}\n                </Button>\n              ))}\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sx={{}}\n            >\n              {tabs.find((item) => item.label === activeTab)?.Component}\n\n              <Box\n                display=\"flex\"\n                flexWrap=\"nowrap\"\n                sx={{\n                  gap: \"1rem\",\n                  mt: 2,\n                  overflowX: \"scroll\",\n                  scrollbarWidth: \"none\"\n                }}\n              >\n                {Object.entries(AllDestinationTypeEnum).map(([title, value]) => (\n                  <Button\n                    key={value}\n                    onClick={() => setActiveCountry(value)}\n                    sx={[testReadyStyles.exporeButton, {\n                      border: value !== activeCountry ? \"1px solid #3b3f76\" : \"2px solid var(--3-primary-teal, #75ECE5)\",\n                      color: value === activeCountry ? \"#000\" : \"#3b3f76\",\n                      background: value === activeCountry ? \"#9CFFF980\" : \"#fff\",\n                    }]}\n                  >\n                    {title}\n                  </Button>\n                ))}\n              </Box>\n            </Grid>\n          </Grid>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\nconst styles = {\n  header: {\n    fontWeight: 500,\n    fontSize: \"18px\",\n    color: \"#3b3f76\",\n  },\n  buttonsContainer: {\n    display: \"flex\",\n    gap: \"10px\",\n    flexWrap: \"wrap\",\n  },\n  buttonText: {\n    background: \"#3b3f76\",\n    color: \"white\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    fontWeight: 500,\n    fontSize: \"14px\",\n    textAlign: \"center\",\n  },\n  gridContainer: {\n    display: \"flex\",\n    flexWrap: \"nowrap\",\n    border: \"1px solid grey\",\n    borderRadius: \"10px\",\n    margin: \"20px\",\n    textAlign: \"left\",\n    padding: \"10px\",\n    boxShadow: \"none\",\n    width: \"auto\"\n  },\n  gridItem: {\n    padding: \"10px\",\n  },\n  sectionHeader: {\n    fontWeight: 600,\n    fontSize: \"12px\",\n    lineHeight: \"15px\",\n    color: \"rgba(106, 106, 106, 1)\",\n  },\n  itemText: {\n    fontWeight: 600,\n    fontSize: \"12px\",\n    lineHeight: \"15px\",\n  },\n};\n\nexport default ExplorePop;"],"names":["props","_tabs$find","activeTab","setActiveTab","useState","activeCountry","setActiveCountry","Courses","_ref","setopen","setmenu","navigate","useNavigate","_jsx","_Fragment","children","Box","sx","position","_jsxs","pt","padding","boxShadow","borderRadius","Grid","container","spacing","item","xs","Typography","color","fontWeight","fontSize","pl","List","width","maxWidth","height","overflowY","scrollbarWidth","component","disciplineList","map","discipline","ListItemButton","onClick","getExploreUrl","type","data","name","value","py","pr","display","justifyContent","ListItemText","primary","src","Images","arrow","alt","style","textAlign","mt","Button","globalButton","Universities","_ref2","preference","useAppSelector","state","preferences","currency","localStorage","getItem","loading","setLoading","universityData","setuniversityData","useEffect","async","_preference$data","response","getAlllistings","page","filterData","list","universities","xl","md","Array","_","i","Skeleton","mb","bgcolor","slice","alignItems","gap","logoSrc","concat","_id","marginRight","cursor","subDisUrl","JSON","stringify","subDisciUrl","window","btoa","flight","top","right","tabs","label","Component","setExploreOpen","setOpen","link","Dialog","open","exploreopen","fullWidth","PaperProps","margin","maxHeight","zIndex","CloseIcon","marginTop","px","testReadyStyles","activeButton","background","find","flexWrap","overflowX","Object","entries","AllDestinationTypeEnum","_ref3","title","exporeButton","border"],"sourceRoot":""}