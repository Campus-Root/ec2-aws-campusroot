{"version":3,"file":"static/js/9.01cf8e34.chunk.js","mappings":"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","sources":["genericComponents/modalPopup/AcademicScore.tsx","../node_modules/@mui/icons-material/AssignmentLate.js"],"sourcesContent":["import { Box, Button, Typography, TextField, MenuItem, InputAdornment, IconButton, Popover, CircularProgress } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { testReadyStyles } from \"src/components/styles/customStyles\";\nimport Images from \"src/assets\";\nimport { Close } from \"@mui/icons-material\";\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\nimport { gradeScaleOptions } from \"src/assets/constants/misc\";\n\nconst AcademicScore = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Get data passed via navigation state\n  const { title: pageTitle } = location.state || {};\n\n  // Debugging: Check if the title is being received correctly\n  //console.log(\"Received Title:\", pageTitle);\n\n  // Set the title dynamically based on what was received\n  const [title, setTitle] = useState(pageTitle || \"Enter your academic details\");\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [institutions, setInstitutions] = useState<{ InstitutionName: string }[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [showDropdown,setShowDropdown]=useState(false);\n\n  useEffect(() => {\n    if (pageTitle) {\n      setTitle(pageTitle);\n    }\n  }, [pageTitle]); \n\n  const [formData, setFormData] = useState({\n    institution: \"\",\n    academicLevel: \"\",\n    gradeSystem: \"\",\n    score: \"\",\n    backlogs: \"\",\n    maxScore: null as number | null \n  });\n\n  const [errors, setErrors] = useState({\n    institution: \"\",\n    academicLevel: \"\",\n    gradeSystem: \"\",\n    score: \"\",\n    backlogs: \"\"\n  });\n\n\n  useEffect(() => {\n    if (formData.institution.length < 2) {\n      setInstitutions([]);\n      setShowDropdown(false);\n      return;\n    }\n  }, [formData.institution]);\n  \n\n\n  const localStorageHandler=(academicLevel:string )=>{\n    console.log(\"Selected Level\",academicLevel);\n  if (formData.gradeSystem === \"percentage\") formData.maxScore = 100;\n    if (formData.gradeSystem === \"cgpa1\") formData.maxScore = 10;\n  if (formData.gradeSystem === \"cgpa2\") formData.maxScore = 7;\n  if (formData.gradeSystem === \"cgpa3\") formData.maxScore = 5;\n  if (formData.gradeSystem === \"gpa\") formData.maxScore = 4;\n\n    if(academicLevel===\"masters\")\n  {\n    setPostgraduation({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score});\n  }\n  if(academicLevel===\"grade 12\")\n  {\n    setIntermediate({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score});\n  }\n  if(academicLevel===\"bachelors\")\n  {\n    setUndergraduation({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score, maxScore: formData.gradeSystem === \"cgpa1\" ? 10 : formData.gradeSystem === \"cgpa2\" ? 7 : formData.gradeSystem==='cgpa3'? 5:formData.gradeSystem==='gpa'?4:formData.gradeSystem==='percentage'?100:undefined});\n  }\n  if(academicLevel===\"others\")\n  {\n    setOthers({institution:formData.institution,backlogs:formData.backlogs,gradingSystem:formData.gradeSystem,totalScore:formData.score});\n  }\n  }\n\n  const setPostgraduation=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string})=>{\n    console.log(\"Masters Data\",collectedData);\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{}\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ postGraduation:{instituteName:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem\n      }}}));\t\n    }\n  }\n\n  const setUndergraduation=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string,  maxScore?: number;})=>{\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{};\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ underGraduation:{instituteName:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem,...(collectedData.maxScore && { maxScore: collectedData.maxScore }), \n      }}}));\t\n    }\n  }\n  const setIntermediate=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string})=>{\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{};\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ plus2:{instituteName:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem\n      }}}));\t\n    }\n  }\n  const setOthers=(collectedData:{institution: string,backlogs:string,gradingSystem:string,totalScore:number|string})=>{\n    let currentValue=localStorage.getItem(\"user-profile\");\n    let currentValueObj=currentValue?JSON.parse(currentValue):{};\n    if(currentValueObj)\n    {\n      localStorage.setItem(\"user-profile\",JSON.stringify({...currentValueObj,education:{ plus2:{instituteName:collectedData.institution,\n        backlogs:collectedData.backlogs,totalScore:collectedData.totalScore,gradingSystem:collectedData.gradingSystem\n      }}}));\t\n    }\n  }\n  \n \n  \n  // Handle input changes\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n      ...(name === \"gradeSystem\"\n        ? {\n            maxScore: value === \"cgpa1\" ? 10 : value === \"cgpa2\" ? 7 : value==='cgpa3'?5:value==='gpa'?4:value===\"percentage\"?100:null, // Set maxScore based on gradeSystem\n            score: \"\",\n            backlogs: \"\"\n          }\n        : {})\n    }));\n\n    // Validate fields dynamically\n    validateField(name, value);\n  };\n\n\n\n  // Validation logic\n  const validateField = (name: string, value: string) => {\n    let error = \"\";\n\n    switch (name) {\n      case \"institution\":\n        error = value.trim() === \"\" ? \"Institution name is required\" : \"\";\n        break;\n      case \"academicLevel\":\n        error = value === \"\" ? \"Please select an academic level\" : \"\";\n        break;\n      case \"gradeSystem\":\n        error = value === \"\" ? \"Please select a grade system\" : \"\";\n        break;\n      case \"score\":\n        if (!formData.gradeSystem) {\n          error = \"Select a grade system first\";\n        } else if (formData.gradeSystem === \"percentage\") {\n          // Allow numbers with up to 2 decimal places, between 0-100\n          const percentageRegex = /^(100(\\.00?)?|([0-9]?[0-9])(\\.\\d{1,2})?)$/;\n          if (!percentageRegex.test(value)) {\n            error = \"Enter a valid percentage (0-100) with up to 2 decimals\";\n          }\n        }\n        else if(formData.gradeSystem === \"cgpa1\"){\n          const cgpa1Regex = /^10(\\.00?)?$|^([0-9](\\.\\d{1,2})?)$/;\n          if (!cgpa1Regex.test(value)) {\n            error = \"Enter a valid CGPA (0-10) with up to 2 decimals\";\n          }\n        }\n          else if (formData.gradeSystem === \"cgpa2\") {\n            // Validation for CGPA out of 7 (0-7, up to 2 decimals)\n            const cgpa2Regex = /^7(\\.00?)?$|^([0-6](\\.\\d{1,2})?)$/;\n            if (!cgpa2Regex.test(value)) {\n              error = \"Enter a valid CGPA (0-7) with up to 2 decimals\";\n            }\n        }else if (formData.gradeSystem === \"cgpa3\") {\n          // Validation for CGPA out of 7 (0-7, up to 2 decimals)\n          const cgpa3Regex = /^7(\\.00?)?$|^([0-5](\\.\\d{1,2})?)$/;\n          if (!cgpa3Regex.test(value)) {\n            error = \"Enter a valid CGPA (0-7) with up to 2 decimals\";\n          }\n      }\n          else if (formData.gradeSystem === \"gpa\") {\n      // Validation for CGPA out of 7 (0-7, up to 2 decimals)\n       const gpa = /^7(\\.00?)?$|^([0-4](\\.\\d{1,2})?)$/;\n      if (!gpa.test(value)) {\n        error = \"Enter a valid GPA (0-4) with up to 2 decimals\";\n       }\n  }\n  else if (formData.gradeSystem === \"grade\") {\n    // Validation for letter grades (A-Z, a-z)\n    const gradeRegex = /^[A-Za-z]$/;\n    if (!gradeRegex.test(value)) {\n      error = \"Enter a valid grade (A-Z)\";\n    }\n  }\n        \n        else if (value === \"\" || parseFloat(value) <= 0) {\n          error = \"Enter a valid score\";\n        }\n        break;\n      case \"backlogs\":\n        error = value !== \"\" && parseInt(value) < 0 ? \"Backlogs cannot be negative\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    setErrors((prevErrors) => ({ ...prevErrors, [name]: error }));\n  };\n\n  // Check if all fields are valid before enabling Save button\n  const isFormValid = Object.values(errors).every((err) => err === \"\") &&\n                      Object.values(formData).every((val) => val !== \"\");\n\n  \n\n  const handleSave = () => {\n    localStorage.setItem(\"formData\", JSON.stringify(formData));\n    navigate(\"/testcondition1\");\n    localStorageHandler(formData.academicLevel)\n  };\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    const savedData = localStorage.getItem(\"formData\");\n    if (savedData) {\n      setFormData(JSON.parse(savedData)); // Set the state with the saved data\n    }\n  }, []); \n\n  const handleOptionClick = (option: { InstitutionName: string }) => {\n    setFormData((prev) => ({ ...prev, institution: option.InstitutionName }));\n    setInstitutions([]); // Hide suggestions after selection\n    setShowDropdown(false)\n  };\n\n  const handleInstitueSearch=(e: React.ChangeEvent<HTMLInputElement>)=>{\n    console.log(\"Change\")\n    const fetchData = async (search:string) => {\n      setLoading(true);\n      try {\n        const response = await fetch(\n          `https://campusroot.com/api/v1/public/university/?search=${search}&institutions=1&universities=0&disciplines=0&subDisciplines=0&location=0&perPage=100&page=1&custom=true`\n        );\n        const data = await response.json();\n        setInstitutions(data?.data?.institutions\n          || []);\n        setShowDropdown(true);\n      } catch (error) {\n        console.error(\"Error fetching institutions:\", error);\n      }\n      setLoading(false);\n    };\n    fetchData(e.target.value);\n    handleChange(e)\n  }\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"info-popover\" : undefined;\n\n  console.log(\"Data\",showDropdown);\n\n  return (\n    <Box\n      sx={{\n        ...testReadyStyles.container1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        textAlign: \"center\",\n      }}\n    >\n      <Typography variant=\"h4\" fontWeight=\"bold\" sx={{ mb: 3, fontSize: { xs: \"1.5rem\", lg: \"2rem\", },color:\"#495052\" }}>\n        {title.includes(\"final score\") ? (\n        <>\n          What is your <span style={{ color: \"#F48438\"}}>final score</span> status?\n        </>\n      ) : (\n        <>\n          Enter your <span style={{ color: \"#F48438\" }}>current academic</span> details\n        </>\n      )}\n      </Typography>\n\n      {/* Input Fields */}\n      <Box sx={{ width: { xs: \"90%\", sm: \"400px\" }, display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n        <div style={{position:\"relative\"}}>\n          <TextField\n          fullWidth\n          name=\"institution\"\n          label=\"Enter your school, college, or university name\"\n          variant=\"outlined\"\n          value={formData.institution}\n          onChange={handleInstitueSearch}\n          error={!!errors.institution}\n          helperText={errors.institution}\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <>\n                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                {formData.institution && (\n                  <Close\n                    sx={{ cursor: \"pointer\" }}\n                    onClick={() => setFormData((prev) => ({ ...prev, institution: \"\" }))}\n                  />\n                )}\n              </>\n            ),\n          }}\n          sx={{\n            position:\"relative\",\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #FF9784\" },\n            },\n          }}\n        />\n        {showDropdown && (\n          <Box\n            sx={{\n              position: \"absolute\",\n              top:'100%',\n              zIndex: 100,\n              backgroundColor: \"#fff\",\n              boxShadow: 1,\n              maxHeight: \"200px\",\n              overflowY: \"auto\",\n              width: \"100%\",\n            }}\n          >\n            {institutions.map((option, index) => (\n              <MenuItem  key={index}\n              onClick={() => handleOptionClick(option)}>\n                {option?.InstitutionName\n                }\n              </MenuItem>\n            \n              \n            ))}\n          </Box>\n        )}\n        </div>\n        <TextField\n          fullWidth\n          select\n          name=\"academicLevel\"\n          label={title.includes(\"final score\")?\"Select your last academic\":'select your current academic'}\n          variant=\"outlined\"\n          value={formData.academicLevel}\n          onChange={handleChange}\n          error={!!errors.academicLevel}\n          helperText={errors.academicLevel}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #AAAEFE\" },\n            },\n          }}\n        >\n          <MenuItem value=\"masters\" sx={{ justifyContent: 'flex-start', textAlign: 'left' }}>Masters</MenuItem>\n          <MenuItem value=\"bachelors\" sx={{ justifyContent: 'flex-start', textAlign: 'left' }}>Bachelors</MenuItem>\n          <MenuItem value=\"diploma\" sx={{ justifyContent: 'flex-start', textAlign: 'left' }}>Diploma</MenuItem>\n          <MenuItem value=\"grade 12\" sx={{ justifyContent: 'flex-start', textAlign: 'left' }}>Grade 12</MenuItem>\n          <MenuItem value=\"others\" sx={{ justifyContent: 'flex-start', textAlign: 'left' }}>Others</MenuItem>\n        </TextField>\n\n        <TextField\n          fullWidth\n          select\n          name=\"gradeSystem\"\n          label=\"Grade system\"\n          variant=\"outlined\"\n          value={formData.gradeSystem}\n          onChange={handleChange}\n          error={!!errors.gradeSystem}\n          helperText={errors.gradeSystem}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #70A6B2\" },\n            },\n          }}\n        >\n          {\n            gradeScaleOptions.map((item) =>\n              <MenuItem value={item.value} sx={{ justifyContent: 'flex-start', textAlign: 'left' }}>{item.label}</MenuItem>\n            )\n          }\n        </TextField>\n\n        <TextField\n          fullWidth\n          name=\"score\"\n          label=\"Enter Score\"\n          variant=\"outlined\"\n          value={formData.score}\n          onChange={handleChange}\n          error={!!errors.score}\n          helperText={errors.score}\n          type={formData.gradeSystem === \"grade\" ? \"text\" : \"number\"} // Change input type dynamically\n             inputProps={{\n                        ...(formData.gradeSystem === \"grade\"\n                    ? { maxLength: 1, pattern: \"[A-Za-z]\" } // Allow only one letter for grades\n                    : { step: \"0.01\" }) // Allow decimal numbers for other systems\n                       }}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #AAAEFE\" },\n            },\n          }}\n        />\n\n<Popover\n  id={id}\n  open={open}\n  anchorEl={anchorEl}\n  onClose={handleClose}\n  anchorOrigin={{\n    vertical: \"bottom\",\n    horizontal: \"center\",\n  }}\n  transformOrigin={{\n    vertical: \"top\",\n    horizontal: \"center\",\n  }}\n  PaperProps={{\n    sx: {\n      p: 2.5,\n      px: 3,\n      maxWidth: 280,\n      borderRadius: \"16px\",\n      background: \"#fff\",\n      boxShadow: \"0 8px 24px rgba(0, 0, 0, 0.1)\",\n      border: \"1px solid #FF9784\",\n      fontFamily: \"'Inter', 'Poppins', sans-serif\",\n    },\n  }}\n>\n  <Box sx={{ display: \"flex\", alignItems: \"flex-start\", gap: 1.5 }}>\n  <Box\n  sx={{\n    width: 28,\n    height: 28,\n    backgroundColor: \"#4F46E5\",\n    borderRadius: \"50%\",\n    color: \"#fff\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    mt: \"2px\",\n  }}\n>\n<AssignmentLateIcon fontSize=\"small\" />\n</Box>\n\n    <Box>\n      <Typography\n        variant=\"subtitle2\"\n        sx={{\n          fontWeight: 600,\n          fontSize: \"0.95rem\",\n          color: \"#111827\",\n          mb: 0.5,\n        }}\n      >\n        Backlogs?\n      </Typography>\n      <Typography\n        variant=\"body2\"\n        sx={{\n          color: \"#4B5563\",\n          fontSize: \"0.85rem\",\n          lineHeight: 1.5,\n        }}\n      >\n        Subjects not cleared on the first attempt.\n      </Typography>\n    </Box>\n  </Box>\n</Popover>\n\n\n\n\n\n\n        <TextField\n          fullWidth\n          name=\"backlogs\"\n          label=\"Enter backlogs\"\n          variant=\"outlined\"\n          value={formData.backlogs}\n          onChange={handleChange}\n          error={!!errors.backlogs}\n          helperText={errors.backlogs}\n          type=\"number\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton onClick={handleClick}>\n                  <img  src={Images.info} alt=\"Click Me\" width={26} height={28} />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              borderRadius: \"12px\",\n              \"& fieldset\": { borderLeft: \"10px solid #FFA89C\" },\n            },\n          }}\n        />\n      </Box>\n\n      {/* Navigation Buttons */}\n      <Box sx={{mt: 16,\n         display: \"flex\",\n         justifyContent: \"center\", // Centers horizontally\n         alignItems: \"center\", // Centers vertically\n         height: \"10vh\", // Reduced from 100vh to 90vh to move up\n         width: \"100%\", }}>\n        <Button variant=\"text\" sx={{ color: \"#888\" }} onClick={() => navigate(-1)}>\n          ← Back\n        </Button>\n        <Button variant=\"contained\" sx={{ px: 4, py: 1.5, borderRadius: \"20px\",background:\"#F48438\", \"&:hover\": {\n      backgroundColor: \"#d96f2e\", // slightly darker shade for hover\n    }, }} onClick={handleSave} disabled={!isFormValid}>\n          Save\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default AcademicScore;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m-6 15h-2v-2h2zm0-4h-2V8h2zm-1-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1\"\n}), 'AssignmentLate');"],"names":["AcademicScore","navigate","useNavigate","location","useLocation","title","pageTitle","state","setTitle","useState","anchorEl","setAnchorEl","institutions","setInstitutions","loading","setLoading","showDropdown","setShowDropdown","useEffect","formData","setFormData","institution","academicLevel","gradeSystem","score","backlogs","maxScore","errors","setErrors","length","setPostgraduation","collectedData","console","log","currentValue","localStorage","getItem","currentValueObj","JSON","parse","setItem","stringify","education","postGraduation","instituteName","totalScore","gradingSystem","setUndergraduation","underGraduation","setIntermediate","plus2","setOthers","handleChange","e","name","value","target","prevData","validateField","error","trim","test","parseFloat","parseInt","prevErrors","isFormValid","Object","values","every","err","val","savedData","open","Boolean","id","undefined","_jsxs","Box","sx","testReadyStyles","container1","display","flexDirection","justifyContent","alignItems","height","textAlign","children","_jsx","Typography","variant","fontWeight","mb","fontSize","xs","lg","color","includes","_Fragment","style","width","sm","gap","position","TextField","fullWidth","label","onChange","async","_data$data","response","fetch","concat","search","data","json","fetchData","helperText","autoComplete","InputProps","endAdornment","CircularProgress","size","Close","cursor","onClick","prev","borderRadius","borderLeft","top","zIndex","backgroundColor","boxShadow","maxHeight","overflowY","map","option","index","MenuItem","InstitutionName","handleOptionClick","select","gradeScaleOptions","item","type","inputProps","maxLength","pattern","step","Popover","onClose","handleClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","px","maxWidth","background","border","fontFamily","mt","AssignmentLateIcon","lineHeight","InputAdornment","IconButton","event","currentTarget","src","Images","info","alt","Button","py","handleSave","disabled","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}