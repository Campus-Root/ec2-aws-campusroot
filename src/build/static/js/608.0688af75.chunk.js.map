{"version":3,"file":"static/js/608.0688af75.chunk.js","mappings":"0NAMA,MA6FA,EA7FoBA,IAAkH,IAAjH,KAAEC,EAAI,SAAEC,EAAQ,eAAEC,GAAyFH,EAC9H,MAAMI,GAA8BC,EAAAA,EAAAA,MAE9BC,EAAcA,CAACC,EAAYC,KAAqB,IAADC,GAEvB,OAALF,QAAK,IAALA,GAAa,QAARE,EAALF,EAAOG,cAAM,IAAAD,OAAR,EAALA,EAAeE,QAAQ,sBAMhB,UAAZ,OAAdR,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,OAClBC,QAAQC,IAAI,IAEZV,IACF,EAOIW,GAAsB,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,QAAS,CAAEC,GAAI,OAAQC,GAAI,QAASC,GAAI,SAChEC,GAAuB,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgBgB,SAAU,CAAEH,GAAI,OAAQC,GAAI,QAASC,GAAI,SAExE,OACEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAnB,UACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CACLtB,KAAMA,EACNuB,QAASlB,EACTmB,OAAO,QACPC,mBAAmB,EACnBC,qBAAqB,EACrBC,kBAAkB,EAClBC,aAAa,EACbC,UAAWA,IAAMC,SAASC,KAC1B,kBAAgB,qBAChB,mBAAiB,2BACjBC,WAAY,CACVC,GAAI,CACFC,SAAUlC,EAAO,QAAU,MAC3BmC,UAAWnC,EAAO,QAAU,MAC5BkB,OAAQlB,EAAOkB,EAAS,MACxBJ,MAAOd,EAAOc,EAAQ,MACtBsB,QAASpC,EAAO,IAAM,MACtBqC,SAAUrC,EAAO,SAAW,MAC5BsC,UAAWtC,EAAO,OAAS,MAC3BuC,SAAS,WACTC,OAAO,KACPC,UAAW,OACXC,aAAc,CAAE3B,GAAI,OAAQC,GAAI,UAElCf,SAAA,CAEwB,UAAX,OAAdC,QAAc,IAAdA,OAAc,EAAdA,EAAgByC,MAAkB,IACjCxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,CACRC,QAtCoBvC,IAC5BD,EAAYC,EAAM,EAsCV2B,GAAI,CACFM,SAAU,WACVO,MAAO,GACPC,IAAK,EACLP,OAAQ,EACRQ,MAAO,OACPC,OAAQ,UACRC,gBAAiB,UACjBR,aAAc,MACdN,QAAS,MACTtB,MAAO,OACPI,OAAQ,OACRiC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,WAAY,uBACZC,OAAQ,oBACRC,aAAc,MACd,UAAW,CACTN,gBAAiB,UACjBF,MAAO,OACPS,UAAW,aACXC,YAAa,UACbC,UAAW,wCAKnBxC,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAAC3B,GAAI,CAAEG,QAAS,GAAInC,SAC/BA,QAGJ,C","sources":["genericComponents/modalPopup/customModal.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Dialog, DialogContent } from \"@mui/material\";\nimport { ModalDialogprops } from \"../../types/types\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { usePopupClose } from \"../../assets/hooks\";\n\nconst CustomModal = ({ open, children, additionalData }: ModalDialogprops<{ width: any, height?: any, show?: any, close?: any }>) => {\n  const closePopupWithScrollRestore = usePopupClose();\n\n  const handleClose = (event: any, reason?: string) => {\n    // Don't close if clicking on elements with data-no-close attribute\n    const noCloseElement = event?.target?.closest('[data-no-close]');\n    \n    if (noCloseElement) {\n      return;\n    }\n    \n    if (additionalData?.close === \"none\") {\n      console.log(\"\");\n    } else {\n      closePopupWithScrollRestore();\n    }\n  };\n\n  const handleCloseIconClick = (event: React.MouseEvent) => {\n    handleClose(event);\n  };\n\n  const width = additionalData?.width || { xs: \"92vw\", md: \"760px\", lg: \"840px\" } as any;\n  const height = additionalData?.height || { xs: \"auto\", md: \"540px\", lg: \"560px\" } as any;\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        scroll=\"paper\"\n        disableScrollLock={true}\n        disableEnforceFocus={true}\n        disableAutoFocus={true}\n        keepMounted={false}\n        container={() => document.body}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        PaperProps={{\n          sx: {\n            minWidth: open ? \"200px\" : \"0px\", \n            minHeight: open ? \"100px\" : \"0px\",\n            height: open ? height : \"0px\",\n            width: open ? width : \"0px\",\n            padding: open ? \"0\" : \"0px\",\n            maxWidth: open ? \"1300px\" : \"0px\",\n            maxHeight: open ? \"88vh\" : \"0px\",\n            position:\"relative\",\n            zIndex:1300,\n            overflowY: \"auto\",\n            borderRadius: { xs: \"12px\", md: \"12px\" },\n          },\n        }}\n      >\n        {additionalData?.show === \"none\" ? \"\" :\n          <CloseIcon\n            onClick={handleCloseIconClick}\n            sx={{\n              position: \"absolute\",\n              right: 14,\n              top: 6,\n              zIndex: 1,\n              color: \"grey\",\n              cursor: \"pointer\",\n              backgroundColor: \"#f5f5f5\",\n              borderRadius: \"50%\",\n              padding: \"6px\",\n              width: \"14px\",\n              height: \"14px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              transition: \"all 0.2s ease-in-out\",\n              border: \"1px solid #e0e0e0\",\n              marginBottom: \"8px\",\n              \"&:hover\": {\n                backgroundColor: \"#F48438\",\n                color: \"#fff\",\n                transform: \"scale(1.1)\",\n                borderColor: \"#F48438\",\n                boxShadow: \"0 2px 8px rgba(255, 68, 68, 0.3)\"\n              }\n            }}\n          />}\n        \n        <DialogContent sx={{ padding: 0 }}>\n          {children}\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n\nexport default CustomModal;\n"],"names":["_ref","open","children","additionalData","closePopupWithScrollRestore","usePopupClose","handleClose","event","reason","_event$target","target","closest","close","console","log","width","xs","md","lg","height","_jsx","_Fragment","_jsxs","Dialog","onClose","scroll","disableScrollLock","disableEnforceFocus","disableAutoFocus","keepMounted","container","document","body","PaperProps","sx","minWidth","minHeight","padding","maxWidth","maxHeight","position","zIndex","overflowY","borderRadius","show","CloseIcon","onClick","right","top","color","cursor","backgroundColor","display","alignItems","justifyContent","transition","border","marginBottom","transform","borderColor","boxShadow","DialogContent"],"sourceRoot":""}