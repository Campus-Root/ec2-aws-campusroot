{"version":3,"file":"static/js/324.b2527856.chunk.js","mappings":"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","sources":["pages/university/overview.tsx","pages/university/universityCourses.tsx","pages/university/overviewDetailedPage.tsx","pages/university/universityDetails.tsx","pages/university/index.tsx"],"sourcesContent":["/* eslint-disable */\nimport { Grid, List, ListItem, Rating, Stack } from \"@mui/material\";\nimport Images from \"../../assets\";\nimport React, { useState } from 'react';\nimport { Box, Typography } from '@mui/material';\nimport StarOutlineIcon from \"@mui/icons-material/StarOutline\";\nimport { UserReview } from \"../../types/types\";\nimport { useAppSelector } from \"../../assets/hooks\";\n\nconst About = ({ data }: any) => {\n  return (\n    <div style={{ marginBottom: \"2rem\" }}>\n      <Typography\n        fontWeight=\"700\"\n        fontSize=\"20px\"\n        className=\"underlined\"\n        gutterBottom\n        width=\"60px\"\n      >\n        About\n      </Typography>\n      <Typography fontSize=\"15px\" sx={{ mt: 2 }}>\n        {data}\n      </Typography>\n    </div>\n  );\n};\nconst OverviewDetails = ({ singleUniversityData }: any) => {\n  return (\n    <div style={{ marginBottom: \"1rem\" }}>\n      <Typography\n        fontWeight=\"700\"\n        fontSize=\"20px\"\n        className=\"underlined\"\n        gutterBottom\n        width=\"80px\"\n      >\n        Overview\n      </Typography>\n      <Grid container spacing={3} sx={{ marginTop: \"-12px\", mb: 2, boxShadow: \"2\", width: \"90%\", m: 4, borderRadius: \"10px\", p: 2 }}>\n        {singleUniversityData?.cost?.[0] ? (\n          <Grid item xs={12} sm={5} sx={{ pt: \"10px !important\" }}>\n            <Box\n              sx={{\n                border: \"1px solid #BBBCBD\",\n                borderRadius: \"8px\",\n                padding: \"6px\",\n              }}\n            >\n              <Stack direction=\"row\" spacing={3}>\n                <img src={Images.HomeRent} alt=\"capital\" style={{ width: \"50px\", height: \"50px\" }} />\n                <Box>\n                  <Typography\n                    sx={{\n                      fontFamily: \"Inter\",\n                      fontWeight: \"bold\",\n                      fontSize: \"16px\",\n                    }}\n                  >\n                    Living cost\n                  </Typography>\n                  <div\n                    className=\"card\"\n                    style={{\n                      fontSize: \"14px\",\n                      fontWeight: \"500\",\n                      margin: 0,\n                      marginTop: \"5px\",\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography\n                      sx={{\n                        fontSize: \"14px\",\n                        margin: \"2px 2px 0 0\",\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        \"&:hover .cancel-icon\": {\n                          display: \"block !important\",\n                        },\n                      }}\n                    >\n                      {singleUniversityData?.cost?.[0] ? singleUniversityData.currency.symbol : \"\"}\n                      <span\n                        className=\"cancel-icon\"\n                        style={{\n                          display: \"none\",\n                          color: \"#000\",\n                          fontSize: \"12px\",\n                          position: \"absolute\",\n                          border: \"1px solid #7d7d7d\",\n                          width: \"100px\",\n                          zIndex: 1,\n                          background: \"#fff\",\n                          textAlign: \"center\",\n                        }}\n                      >\n                        Currency: {singleUniversityData.currency.code}\n                      </span>\n                    </Typography>\n                    &nbsp;{\" \"}\n                    {singleUniversityData?.cost?.[0]?.lowerLimit.toLocaleString(\"en-US\")} -{\" \"}\n                    {singleUniversityData?.cost?.[0]?.upperLimit.toLocaleString(\"en-US\")}\n                    <span style={{ fontSize: \"12px\" }}>&nbsp;/month</span>\n                  </div>\n\n                </Box>\n              </Stack>\n            </Box>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n\n        <Grid item xs={12} sm={10} sx={{ py: \"10px !important\" }}>\n          <Box\n            sx={{\n              border: \"1px solid #BBBCBD\",\n              borderRadius: \"8px\",\n              display: \"flex\",\n            }}\n          >\n            <img\n              src={Images.Climate}\n              alt=\"capital\"\n              style={{ padding: \"10px\" }}\n            />\n            <Box sx={{ my: 1 }}>\n              <Typography\n                sx={{\n                  fontWeight: \"bold\",\n                  fontSize: \"18px\",\n                }}\n              >\n                Climate\n              </Typography>\n              <Typography style={{ fontSize: \"15px\", fontWeight: \"500\" }}>\n                Summer :{\" \"}\n                {singleUniversityData?.average_temperatures?.summer?.min} to{\" \"}\n                {singleUniversityData?.average_temperatures?.summer?.max} c |\n                Winter :{\" \"}\n                {singleUniversityData?.average_temperatures?.winter?.min} to{\" \"}\n                {singleUniversityData?.average_temperatures?.winter?.max} c |\n                Spring :{\" \"}\n                {singleUniversityData?.average_temperatures?.spring?.min} to{\" \"}\n                {singleUniversityData?.average_temperatures?.spring?.max} c |\n                Autumn :{\" \"}\n                {singleUniversityData?.average_temperatures?.autumn?.min} to{\" \"}\n                {singleUniversityData?.average_temperatures?.autumn?.max} c{\" \"}\n              </Typography>\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\n\n\nconst RatingComp = ({ value }: any) => {\n  return (\n    <div style={{ display: \"flex\", marginLeft: \"13px\", alignItems: \"center\" }}>\n      <Rating\n        name=\"read-only\"\n        value={value}\n        precision={0.5}\n        readOnly\n        emptyIcon={<StarOutlineIcon sx={{ color: \"gray\" }} />}\n      />\n    </div>\n  );\n};\n\ninterface ReviewDataProps {\n  image: string[];\n  testimonial: string[];\n  name: string[];\n  rating: string[];\n}\n\nconst ReviewData: React.FC<ReviewDataProps> = ({\n  image,\n  testimonial,\n  name,\n  rating,\n}) => {\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n\n  // const handleImageClick = (index: number) => {\n  //   setSelectedImageIndex(index === selectedImageIndex ? -1 : index);\n  // };\n\n  return (\n    <Box>\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ overflowX: 'auto', scrollbarWidth: 'none', msOverflowStyle: 'none' }}\n      >\n      </Stack>\n      {selectedImageIndex !== -1 && (\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            mt: 4,\n          }}\n        >\n          <p>{name[selectedImageIndex]}</p>\n\n          <Typography align=\"center\" color=\"textPrimary\" gutterBottom >\n            {testimonial[selectedImageIndex]}\n          </Typography>\n          <Typography align=\"right\" color=\"textPrimary\" fontWeight=\"500\">\n            {rating[selectedImageIndex]}\n          </Typography>\n          <RatingComp value={rating[selectedImageIndex]} />\n        </Box>\n      )}\n    </Box>\n  );\n};\ninterface ReviewsProps {\n  data: UserReview[]; // Assuming UserReview is imported correctly\n}\n\nconst Reviews: React.FC<ReviewsProps> = ({ data }) => {\n  const reviews = useAppSelector(state => state.reviews)\n  // Initialize selected image index state\n  const [selectedImageIndex, setSelectedImageIndex] = useState<number | null>(null);\n\n  // Map the UserReview data to the structure expected by the ReviewData component\n  const testimonials = reviews.data?.map((review) => ({\n    image: [review.user.displayPicSrc],\n    testimonial: [review.comment],\n    name: [`${review.user.firstName} ${review.user.lastName}`],\n    rating: [review.rating.toString()],\n  }));\n\n  // Function to handle image click\n  const handleImageClick = (index: number) => {\n    setSelectedImageIndex(selectedImageIndex === index ? null : index);\n  };\n\n  return (\n    <Box>\n      <Typography\n        fontWeight=\"700\"\n        fontSize=\"20px\"\n        className=\"underlined\"\n        gutterBottom\n        width=\"60px\"\n      >\n        Reviews\n      </Typography>\n      {/* Render all images */}\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ overflowX: 'auto', scrollbarWidth: 'none', msOverflowStyle: 'none' }}\n      >\n        {testimonials.map((testimonial, index) => (\n          <Stack\n            key={index}\n            direction=\"column\"\n            spacing={2}\n            alignItems=\"center\"\n            onClick={() => handleImageClick(index)}\n            sx={{ cursor: 'pointer' }}\n          >\n            <img\n              src={testimonial.image[0]}\n              alt={`Testimonial ${index + 1}`}\n              style={{\n                width: selectedImageIndex === index ? '80px' : '50px',\n                height: 'auto',\n                borderRadius: '50%',\n              }}\n            />\n          </Stack>\n        ))}\n      </Stack>\n      {/* Render selected testimonial */}\n      {selectedImageIndex !== null && (\n        <ReviewData {...testimonials[selectedImageIndex]} />\n      )}\n    </Box>\n  );\n};\n\nconst Contact = ({ singleUniversityData }: any) => {\n  return (\n    <div>\n      <Grid\n        container\n        spacing={3}\n        sx={{\n          marginTop: \"-12px\",\n          my: 3,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        {singleUniversityData?.contact?.snapchat ? (\n          <Grid item xs={1}>\n            <a href={singleUniversityData?.contact?.snapchat} target=\"_blank\">\n              <img src={Images.Snapchat} alt=\"website\" />\n            </a>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {singleUniversityData?.contact?.twitter ? (\n          <Grid item xs={1}>\n            <a href={singleUniversityData?.contact?.twitter} target=\"_blank\">\n              <img src={Images.Twitter} alt=\"website\" />\n            </a>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {singleUniversityData?.contact?.youtube ? (\n          <Grid item xs={1}>\n            <a href={singleUniversityData?.contact?.youtube} target=\"_blank\">\n              <img src={Images.Youtube} alt=\"website\" />\n            </a>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {singleUniversityData?.contact?.officialWebsite ? (\n          <Grid item xs={1}>\n            <a\n              href={singleUniversityData?.contact?.officialWebsite}\n              target=\"_blank\"\n            >\n              <img src={Images.Websitelink} alt=\"website\" />\n            </a>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {singleUniversityData?.contact?.facebook ? (\n          <Grid item xs={1}>\n            <a href={singleUniversityData?.contact?.facebook} target=\"_blank\">\n              <img src={Images.Facebooklink} alt=\"website\" />\n            </a>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n        {singleUniversityData?.contact?.instagram ? (\n          <Grid item xs={1}>\n            <a href={singleUniversityData?.contact?.instagram} target=\"_blank\">\n              <img src={Images.Instalink} alt=\"website\" />\n            </a>\n          </Grid>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n    </div>\n  );\n};\n\n\nconst FAQs = () => {\n  const faqs = [\n    {\n      title: \"How much does it cost to study in US?\",\n    },\n    {\n      title: \"Which are the best courses to study in US?\",\n    },\n    {\n      title: \"Is it possible to study in US without IELTS?\",\n    },\n    {\n      title: \"What exams are required to study in US?\",\n    },\n  ];\n  const answers = [\n    {\n      title: \"How much does it cost to study in US?\",\n      description:\n        \"The fees for courses vary across different universities in the US. The average cost of UG courses in US range from £9,000- 30,000 (INR 9,00,000- 30,00,000). The fees for PG courses is around £15,000-35,000 INR 15,00,000 -35,00,000). MBA courses in US cost around £12,000- 80,000 (INR 12,00,000- 80,00,000)\",\n    },\n    {\n      title: \"Which are the best courses to study in US?\",\n      description:\n        \"Yes, it is possible for you to study in US without IELTS! The alternatives to IELTS might include online interviews held by the university or a major in English, and high school certification. These might not be applicable for all universities but certain universities do offer this provision. Some of the universities that provide this route include the University of East Anglia, University of Bristol, London Southbank University, Brunel University among others.\",\n    },\n    {\n      title: \"Is it possible to study in US without IELTS?\",\n      description:\n        \"Yes, it is possible for you to study in US without IELTS! The alternatives to IELTS might include online interviews held by the university or a major in English, and high school certification. These might not be applicable for all universities but certain universities do offer this provision. Some of the universities that provide this route include the University of East Anglia, University of Bristol, London Southbank University, Brunel University among others.\",\n    },\n    {\n      title: \"What exams are required to study in US?\",\n      description:\n        \"Qualifying entrance level exams are necessary when it comes to fulfilling your dream of studying abroad. For those who are willing to study in the USA, it will be mandatory for you to qualify for IELTS, TOEFL along with subject/ program related exams like SAT/ACT or GMAT/GRE.\",\n    },\n  ];\n\n  return (\n    <div>\n      <div style={{ paddingBottom: \"28px\" }}>\n        <Typography\n          fontWeight=\"700\"\n          fontSize=\"20px\"\n          className=\"underlined\"\n          gutterBottom\n          width=\"50px\"\n        >\n          FAQs\n        </Typography>\n        <List sx={{ listStyleType: \"none\" }}>\n          {faqs.map((item, i) => (\n            <ListItem\n              key={i}\n              sx={{ padding: \"3px 0\", display: \"flex\", color: \"#2B91A7\" }}\n            >\n              <Typography sx={{ marginRight: \"8px\" }}>{i + 1}.</Typography>\n              <Typography>{item.title}</Typography>\n            </ListItem>\n          ))}\n        </List>\n        <List sx={{ listStyleType: \"none\" }}>\n          {answers.map((item, i) => (\n            <ListItem\n              key={i}\n              sx={{\n                padding: \"3px 0\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"start\",\n              }}\n            >\n              <Typography sx={{ marginRight: \"8px\", fontWeight: \"bold\" }}>\n                {item.title}.\n              </Typography>\n              <Typography sx={{ fontSize: \"14px\" }}>\n                {item.description}\n              </Typography>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </div>\n  );\n};\n\nconst Overview: React.FC<{ singleUniversityData: any }> = ({ singleUniversityData }) => {\n\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        boxShadow: 1,\n        height: \"72vh\",\n        overflowY: \"scroll\",\n        p: 2,\n      }}\n    >\n      <About data={singleUniversityData?.about} />\n      <OverviewDetails singleUniversityData={singleUniversityData} />\n      <Reviews data={singleUniversityData?.userReviews} />\n      <FAQs />\n      <Contact singleUniversityData={singleUniversityData} />\n    </Box>\n  );\n};\n\nexport default Overview;\n","/* eslint-disable */\nimport { Box, Divider, Grid, Stack, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../assets\";\nimport { expandCardStyles } from \"../../components/styles/customStyles\";\nimport { CustomButton } from \"../../genericComponents/customButton\";\nimport CustomCard from \"../../genericComponents/customCard\";\nimport { Event, ShortlistedCourse, UniversityListObj } from \"../../types/types\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { addToShortList, deleteShortList } from \"../../services\";\nimport { addShortlisted, removeShortlisted, setShortlisted } from \"../../store/Slices/shortlistedCoursesSlice\";\nimport { setPopup } from \"../../store/Slices/popupSlice\";\n\nconst UniversityCourses: React.FC<{\n  singleUniversityData: UniversityListObj;\n}> = ({ singleUniversityData }) => {\n  const dispatch = useAppDispatch();\n  const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const [loadingMap, setLoadingMap] = useState<{ [key: string]: boolean }>({});\n\n  const handleShortlist = async (item: ShortlistedCourse) => {\n    if (\n      userAuthStatus?.data?.isAuthorized &&\n      userAuthStatus?.data?.isAuthorized\n    ) {\n      setLoadingMap((prevLoadingMap) => ({\n        ...prevLoadingMap,\n        [item._id]: true,\n      }));\n      const values = {\n        action: \"push\",\n        courseId: item?._id,\n      };\n      const response = await addToShortList(values);\n      if (response.data.success) {\n        dispatch(setShortlisted(response.data.data))\n       \n        setLoadingMap((prevLoadingMap) => ({\n          ...prevLoadingMap,\n          [item._id]: false,\n        }));\n      } else {\n        setLoadingMap((prevLoadingMap) => ({\n          ...prevLoadingMap,\n          [item._id]: false,\n        }));\n      }\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"login\",\n              dimensions: {\n                width: \"800px\",\n                  height:\"70%\",\n                  show:\"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  };\n\n  const eventHandler = async (event:Event) =>{\n    switch (event.name) {\n      case \"applynow\":\n        if (\n          userAuthStatus?.data?.isAuthorized &&\n          userAuthStatus?.data?.isAuthorized\n        ) {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"applynow\",\n                  data:event.data,\n                  dimensions: {\n                    width: \"350px\",\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        } else {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"login\",\n                  dimensions: {\n                    width: \"800px\",\n                  height:\"70%\",\n                  show:\"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        break;\n        case \"delete\":\n        try {\n          setLoadingMap((prevLoadingMap) => ({\n            ...prevLoadingMap,\n            [event.data._id]: true,\n          }));\n          const values = {\n            action: \"pull\",\n            courseId: event.data?._id,\n          };\n         \n          const response = await addToShortList(values);\n          if (response.data.success) {\n            setLoadingMap((prevLoadingMap) => ({\n              ...prevLoadingMap,\n              [event.data._id]: false,\n            }));\n            dispatch(setShortlisted(response.data.data))\n            \n          }\n        } catch (error) {\n          setLoadingMap((prevLoadingMap) => ({\n            ...prevLoadingMap,\n            [event.data._id]: false,\n          }));\n          console.error(\"An error occurred while unshortlisting:\", error);\n        }\n        break;\n      default:\n        break;\n\n  }\n}\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        boxShadow: 1,\n        height: \"72vh\",\n        overflowY: \"scroll\",\n        p: 2,\n      }}\n    >\n      <Grid container spacing={2}>\n        {/* {singleUniversityData.courses?.map((item: any, i: number) => (\n          <Grid item xs={12} sm={6} md={4}>\n            <CustomCard>\n              <Box>\n                <Typography\n                  fontWeight=\"600\"\n                  sx={{\n                    height: \"2.55rem\",\n                    fontSize: { xs: \"13px\", lg: \"15px\" },\n                    fontWeight: 600,\n                    textOverflow: \"ellipsis \",\n                    lineClamp: 2,\n                    textTransform: \"none\",\n                    overflow: \"hidden\",\n                    display: \"-webkit-box\",\n                    WebkitLineClamp: \"2\",\n                    WebkitBoxOrient: \"vertical\",\n                  }}\n                >\n                  {item.name}\n                </Typography>\n                <Stack sx={{ mt: 1, mb: 2 }} spacing={1}>\n                  <Typography\n                    fontSize=\"0.9rem\"\n                    color=\"#5AC1BE\"\n                    fontWeight=\"500\"\n                  >\n                    {item.subDiscipline}\n                  </Typography>\n                  <Stack direction=\"row\" sx={{ flexWrap: \"wrap\" }}>\n                    <Typography fontSize=\"0.8rem\" color=\"#1F8659\">\n                      {\" \"}\n                      {item.studyLevel} |\n                    </Typography>\n                    <Typography fontSize=\"0.8rem\" color=\"#1F8659\">\n                      {item.duration?.duration ? item.duration?.duration + \" months |\" : \"\"}{\" \"}\n                    </Typography>\n                    <Typography\n                      fontSize=\"0.8rem\"\n                      color=\"#1F8659\"\n                      sx={{ display: \"flex\" }}\n                    >\n                       <Typography\n                                    sx={{\n                                      fontSize: \"11px\",\n                                      margin: \"2px 2px 0 0\",\n                                      position: \"relative\",\n                                      \"&:hover .cancel-icon\": {\n                                        display: \"block !important\",\n                                      },\n                                    }}\n                                  >\n                                    {\" \"}\n                                    {item.tuitionFee?.tuitionFee\n                                      ? item.currency.symbol\n                                      : \"\"}\n                                    <span\n                                      className=\"cancel-icon\"\n                                      style={{\n                                        display: \"none\",\n                                        color: \"#000\",\n                                        position: \"absolute\",\n                                        border:\"1px solid #7d7d7d\",\n                                        width:\"100px\",zIndex:1,\n                                        background:\"#fff\",textAlign:\"center\"\n                                      }}\n                                    >\n                                      Currency :{item.currency.code}\n                                    </span>\n                                  </Typography>\n                      {item.tuitionFee?.tuitionFee\n                        ? (\n                            Math.round(item.tuitionFee.tuitionFee * 100) / 100\n                          ).toLocaleString(\"en-US\")\n                        : \"\"}\n                      <span\n                        style={{\n                          fontSize: \"11px\",\n                          marginLeft: \"3px\",\n                          marginTop: \"2px\",\n                        }}\n                      >\n                        {\" \"}\n                        {item.tuitionFee?.tuitionFee\n                          ? \"/\" + item.tuitionFee?.tuitionFeeType\n                          : \"\"}{\" \"}\n                      </span>\n                    </Typography>\n                  </Stack>\n                </Stack>\n                <Divider sx={{ mb: 2, borderWidth: \"1px\" }} />\n                <Box>\n                  <Typography\n                    sx={{\n                      height: \"3.95rem\",\n                      fontSize: { xs: \"12px\", lg: \"13px\" },\n                      textOverflow: \"ellipsis \",\n                      lineClamp: 3,\n                      textTransform: \"none\",\n                      overflow: \"hidden\",\n                      display: \"-webkit-box\",\n                      WebkitLineClamp: \"3\",\n                      WebkitBoxOrient: \"vertical\",\n                      mb: 1,\n                    }}\n                  >\n                    {item.about}\n                  </Typography>\n                </Box>\n                <Grid\n                  container\n                  direction=\"row\"\n                  spacing={4}\n                  sx={{ justifyContent: \"space-between\" }}\n                >\n                  <Grid item xs={9}>\n                    <CustomButton\n                      handleSubmit={() => eventHandler({name:\"applynow\",data:item})}\n                      width=\"220px\"\n                      // handleSubmit={undefined}\n                    >\n                      Apply now\n                    </CustomButton>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Box sx={expandCardStyles.iconStyle}>\n                      {loadingMap[item._id] ?  (\n                        <Box\n                          component=\"img\"\n                          src={Images.standardLoader}\n                          alt=\"standardLoader\"\n                          sx={{ width: \"1rem\", height: \"1rem\" }}\n                        />\n                      ) : (\n                        <>\n                          {shortlisted.data.some(\n                            (course: any) => course.course._id === item._id\n                          ) ? (\n                            <BookmarkIcon sx={{ color: \"#FF751A\" }} \n                            onClick={() =>\n                              eventHandler({\n                                name: \"delete\",\n                                data: item,\n                              })\n                            }/>\n                          ) : (\n                            <BookmarkBorderIcon\n                              sx={{ color: \"#FF751A\" }}\n                              onClick={() => handleShortlist(item)}\n                            />\n                          )}\n                        </>\n                      )}\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Box>\n            </CustomCard>\n          </Grid>\n        ))} */}\n      </Grid>\n      \n    </Box>\n  );\n};\n\nexport default UniversityCourses;\n","import React from \"react\";\nimport CustomTabs from \"../../genericComponents/tabs\";\nimport { UniversityListObj } from \"../../types/types\";\nimport Overview from \"./overview\";\nimport UniversityCourses from \"./universityCourses\";\n\nconst OverviewDetailedPage : React.FC<{ singleUniversityData: UniversityListObj }> = ({ singleUniversityData })  => {\n\n  const tabs = [\n    {\n      label: \"Overview \",\n      Component: <div>\n        <Overview singleUniversityData={singleUniversityData}/>\n      </div>,\n    },\n    {\n      label: \"Courses\",\n      Component: <div>\n        <UniversityCourses singleUniversityData={singleUniversityData}/>\n      </div>,\n    },\n  ];\n  return (\n    <div>\n        <CustomTabs tabs={tabs} />\n\n    </div>\n  );\n};\n\nexport default OverviewDetailedPage;\n","import { Box, Button, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { setPopup } from \"../../store/Slices/popupSlice\";\nimport { UniversityListObj } from \"../../types/types\";\n\nconst UniversityDetails: React.FC<{\n  singleUniversityData: UniversityListObj;\n}> = ({ singleUniversityData }) => {\n  const dispatch = useAppDispatch();\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n\n  const reviews = () => {\n    if (\n      userAuthStatus?.data?.isAuthorized &&\n      userAuthStatus?.data?.isAuthorized\n    ) {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"review\",\n              dimensions: {\n                width: \"400px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"login\",\n              dimensions: {\n                width: \"800px\",\n                  height:\"70%\",\n                  show:\"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  };\n  return (\n    <div>\n      <Box\n        sx={{\n          background: \"#fff\",\n          borderRadius: \"10px\",\n          boxShadow: 1,\n          p: 3,\n          m: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          mt: 10,\n        }}\n      >\n        <img\n          src={singleUniversityData?.logoSrc}\n          alt=\"logo\"\n          style={{ borderRadius: \"10px\" }}\n        />\n        <Typography sx={{ fontSize: \"20px\", fontWeight: 600, mt: 1 }}>\n          {singleUniversityData?.name}{\" \"}\n        </Typography>\n        <Typography color=\"#848586\" fontSize=\"14px\">\n          {singleUniversityData?.location?.city} |{\" \"}\n          {singleUniversityData?.location?.state} |{\" \"}\n          {singleUniversityData?.location?.country}\n        </Typography>\n        {/* <Button\n          sx={{ color: \"#fff\", background: \"#FEB853\", textTransform: \"none\",my:2 }}\n        >\n          Join community\n        </Button> */}\n        <Button\n          sx={{\n            color: \"#000\",\n            border: \"1px solid #14C6A4\",\n            textTransform: \"none\",\n            my: 3,\n          }}\n          onClick={reviews}\n        >\n          Write a review\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default UniversityDetails;\n","import { Grid, Typography } from \"@mui/material\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getSingleUniversity } from \"../../services\";\nimport OverviewDetailedPage from \"./overviewDetailedPage\";\nimport UniversityDetails from \"./universityDetails\";\nimport { UniversityListObj } from \"../../types/types\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { initReviews } from \"../../store/Slices/reviewSlice\";\n\nconst University: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useAppDispatch();\n  const universityId = id;\n  const preferences = useAppSelector(state =>state.preferences)\n\n  const isRequested = useRef(false);\n  const [singleUniversityData, setSingleUniversityData] =\n    useState<UniversityListObj | null>(null);\n  const currency = localStorage.getItem(\"currency\");\n  const fetchSingleUniversity = async () => {\n    try {\n      const response = await getSingleUniversity(\n        universityId,\n        preferences?.data?.currency || currency || \"INR\"\n      );\n      setSingleUniversityData(response.data.data);\n      dispatch(\n        initReviews({\n          requestStatus: \"initiated\",\n          responseStatus: \"recieved\",\n          haveAnIssue: false,\n          issue: \"\",\n          data: response.data.data.userReviews,\n        })\n      );\n    } catch (error) {\n      console.error(\"Error fetching single university:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (!isRequested.current) {\n      fetchSingleUniversity();\n      isRequested.current = true;\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  if (!singleUniversityData) {\n    return (\n      <Typography variant=\"body1\" align=\"center\">\n        Loading...\n      </Typography>\n    );\n  }\n\n  return (\n    <div>\n      <Grid container sx={{ p: 2, background: \"#F3F8FC\" }}>\n        <Grid item xs={12} md={3.5}>\n          <UniversityDetails singleUniversityData={singleUniversityData} />\n        </Grid>\n        <Grid item xs={12} md={8.5}>\n          <OverviewDetailedPage singleUniversityData={singleUniversityData} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default University;\n"],"names":["About","_ref","data","_jsxs","style","marginBottom","children","_jsx","Typography","fontWeight","fontSize","className","gutterBottom","width","sx","mt","OverviewDetails","_ref2","_singleUniversityData","_singleUniversityData2","_singleUniversityData3","_singleUniversityData4","_singleUniversityData5","_singleUniversityData6","_singleUniversityData7","_singleUniversityData8","_singleUniversityData9","_singleUniversityData10","_singleUniversityData11","_singleUniversityData12","_singleUniversityData13","_singleUniversityData14","_singleUniversityData15","_singleUniversityData16","_singleUniversityData17","_singleUniversityData18","_singleUniversityData19","_singleUniversityData20","_singleUniversityData21","_singleUniversityData22","singleUniversityData","Grid","container","spacing","marginTop","mb","boxShadow","m","borderRadius","p","cost","item","xs","sm","pt","Box","border","padding","Stack","direction","src","Images","HomeRent","alt","height","fontFamily","margin","display","position","cursor","currency","symbol","color","zIndex","background","textAlign","code","lowerLimit","toLocaleString","upperLimit","py","Climate","my","average_temperatures","summer","min","max","winter","spring","autumn","RatingComp","_ref3","value","marginLeft","alignItems","Rating","name","precision","readOnly","emptyIcon","StarOutlineIcon","ReviewData","_ref4","image","testimonial","rating","selectedImageIndex","setSelectedImageIndex","useState","justifyContent","overflowX","scrollbarWidth","msOverflowStyle","flexDirection","align","Reviews","_ref5","_reviews$data","reviews","useAppSelector","state","testimonials","map","review","user","displayPicSrc","comment","concat","firstName","lastName","toString","index","onClick","handleImageClick","Contact","_ref6","_singleUniversityData23","_singleUniversityData24","_singleUniversityData25","_singleUniversityData26","_singleUniversityData27","_singleUniversityData28","_singleUniversityData29","_singleUniversityData30","_singleUniversityData31","_singleUniversityData32","_singleUniversityData33","_singleUniversityData34","contact","snapchat","href","target","Snapchat","twitter","Twitter","youtube","Youtube","officialWebsite","Websitelink","facebook","Facebooklink","instagram","Instalink","FAQs","paddingBottom","List","listStyleType","title","i","ListItem","marginRight","description","_ref7","overflowY","about","userReviews","useAppDispatch","shortlistedcourses","userAuthStatus","loadingMap","setLoadingMap","tabs","label","Component","Overview","UniversityCourses","CustomTabs","dispatch","logoSrc","location","city","country","Button","textTransform","_userAuthStatus$data","_userAuthStatus$data2","isAuthorized","setPopup","show","dimensions","type","University","id","useParams","universityId","preferences","isRequested","useRef","setSingleUniversityData","localStorage","getItem","useEffect","current","async","_preferences$data","response","getSingleUniversity","initReviews","requestStatus","responseStatus","haveAnIssue","issue","error","console","fetchSingleUniversity","md","UniversityDetails","OverviewDetailedPage","variant"],"sourceRoot":""}