{"version":3,"file":"static/js/821.136847f7.chunk.js","mappings":"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","sources":["pages/blogs/Blog.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; \nimport { Box, Button, Container, Grid, Typography } from \"@mui/material\";\n\nconst AllBlogs = () => {\n  const [blogs, setBlogs] = useState<any>([]);\n  const scrollRef = useRef<any>(null);\n  const navigate = useNavigate(); // Hook to programmatically navigate\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await axios.post(\n          \"https://campusroot.com/api/v1/public/listings/blogs\"\n        );\n        setBlogs(response.data.data.list);\n      } catch (error) {\n        console.error(\"Error fetching blogs:\", error);\n        alert(\"Failed to fetch blogs. Please try again later.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n\n  const scrollLeft = () => {\n    scrollRef.current.scrollBy({ left: -200, behavior: \"smooth\" });\n  };\n\n  const scrollRight = () => {\n    scrollRef.current.scrollBy({ left: 200, behavior: \"smooth\" });\n  };\n\n  const handleBlogClick = (blogId:string) => {\n    // Navigate to the blog details page\n    navigate(`/blog/${blogId}`);\n  };\n\n  return (\n    <>\n      <div className=\"gradient\" style={{ marginTop: \"5.5rem\" }}>\n        <center>\n          <h1>Welcome to our Blog</h1>\n          <p>Explore insights, tips, and stories about studying abroad.</p>\n        </center>\n        <Container>\n          {blogs?.length >= 4 ? (\n            <Grid container spacing={2}>\n              {[\n                { index: 0, height: \"620px\", lg: 4 },\n                { index: 1, height: \"305px\", lg: 4, double: true },\n                { index: 3, height: \"620px\", lg: 4 },\n              ].map((config, colIndex) => (\n                <Grid item lg={config.lg} key={colIndex}>\n                  {config.double ? (\n                    <>\n                      {blogs\n                        .slice(config.index, config.index + 2)\n                        .map((blog:any, i:number) => (\n                          <img\n                            key={i}\n                            src={blog?.coverImageSrc}\n                            alt={`Cover of blog titled ${blog?.title}`}\n                            style={{\n                              width: \"100%\",\n                              height: config.height,\n                              borderRadius: \"8px\",\n                              objectFit: \"fill\",\n                              marginBottom: i === 0 ? \"10px\" : \"0\",\n                            }}\n                            onClick={() => handleBlogClick(blog?._id)} // Add onClick handler\n                          />\n                        ))}\n                    </>\n                  ) : (\n                    <img\n                      key={config.index}\n                      src={blogs[config.index]?.coverImageSrc}\n                      alt={`Cover of blog titled ${blogs[config.index]?.title}`}\n                      style={{\n                        width: \"100%\",\n                        height: config.height,\n                        borderRadius: \"8px\",\n                        marginBottom: colIndex === 2 ? \"3vh\" : \"0\",\n                      }}\n                      onClick={() => handleBlogClick(blogs[config.index]?._id)} // Add onClick handler\n                    />\n                  )}\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <p>Loading blogs...</p>\n          )}\n        </Container>\n      </div>\n\n      <Container>\n        {/* Most viewed blogs section */}\n        <div className=\"headings\">\n          <h4>\n            Most viewed <span>Blogs</span>\n          </h4>\n        </div>\n        <Box sx={{ position: \"relative\", display: \"flex\", alignItems: \"center\" }}>\n      {/* Left Arrow */}\n      <Button\n        onClick={scrollLeft}\n        sx={{\n          position: \"absolute\",\n          left: \"-10px\",\n          zIndex: 10,\n          background: \"none\",\n          border: \"none\",\n          fontSize: \"24px\",\n          cursor: \"pointer\",\n          color: \"#333\",\n        }}\n      >\n        &#8592;\n      </Button>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          gap: 2,\n          overflowX: \"auto\",\n          flexWrap: \"nowrap\",\n          scrollBehavior: \"smooth\",\n          \"&::-webkit-scrollbar\": {\n            display: \"none\", // Hide scrollbar for Webkit browsers\n          },\n          msOverflowStyle: \"none\", // IE and Edge\n          scrollbarWidth: \"none\", // Firefox\n        }}\n        ref={scrollRef}\n      >\n        {blogs.slice(5, 8).map((blog:any) => (\n          <Box\n            key={blog._id}\n            onClick={() => handleBlogClick(blog._id)}\n            className=\"moving-section\"\n            sx={{\n              cursor: \"pointer\",\n              display: \"flex\",\n              // flexDirection: \"column\",\n              width: \"600px\", \n              alignItems: \"center\",\n            }}\n          >\n            <img\n              src={blog.coverImageSrc}\n              alt={`Cover of blog titled ${blog.title}`}\n              style={{\n                height: \"100px\",\n                width: \"100px\",\n                borderRadius: \"8px\",\n                objectFit: \"cover\",\n              }}\n            />\n            <Box>\n            <Typography\n              variant=\"body2\"\n              sx={{\n                fontWeight: 500,\n                fontSize: \"12px\",\n                mt: 1,\n                textAlign: \"center\",\n              }}\n            >\n              {blog.title}\n            </Typography>\n            <Typography\n              variant=\"caption\"\n              sx={{\n                fontSize: \"10px\",\n                fontWeight: \"400\",\n                textAlign: \"center\",\n                color: \"gray\",\n              }}\n            >\n              {blog.summary?.slice(0, 70)}...\n            </Typography>\n            </Box>\n          </Box>\n        ))}\n      </Box>\n\n      {/* Right Arrow */}\n      <Button\n        onClick={scrollRight}\n        sx={{\n          position: \"absolute\",\n          right: \"-10px\",\n          zIndex: 10,\n          background: \"none\",\n          border: \"none\",\n          fontSize: \"24px\",\n          cursor: \"pointer\",\n          color: \"#333\",\n        }}\n      >\n        &#8594;\n      </Button>\n    </Box>\n\n        {/* What new today section */}\n        <div>\n          <div className=\"headings\">\n            <h4>\n              What new <span>today</span>\n            </h4>\n          </div>\n          <Grid container spacing={2}>\n            {[\n              { index: 0, count: 1, height: \"600px\", lg: 4 },\n              { index: 1, count: 3, lg: 4, triple: true },\n              { index: 4, count: 1, height: \"600px\", lg: 4 },\n            ].map((config, colIndex) => (\n              <Grid item lg={config.lg} key={colIndex}>\n                {config.triple ? (\n                  blogs\n                    .slice(config.index, config.index + config.count)\n                    .map((blog:any, _id:number) => (\n                      <div\n                        className=\"moving-section-2\"\n                        key={_id}\n                        onClick={() => handleBlogClick(blog?._id)} // Add onClick handler\n                        style={{ cursor: \"pointer\", marginBottom: \"20px\" }}\n                      >\n                        <img\n                          src={blog?.coverImageSrc}\n                          alt={`Cover of blog titled ${blog?.title}`}\n                          style={{\n                            height: \"100px\",\n                            width: \"100px\",\n                            borderRadius: \"8px\",\n                          }}\n                        />\n                        <p\n                          style={{\n                            fontSize: \"12px\",\n                            fontWeight: \"500\",\n                            lineHeight: \"15px\",\n                            marginLeft: \"10px\",\n                          }}\n                        >\n                          {blog?.title} <br />\n                          <br />\n                          <span\n                            style={{\n                              fontSize: \"10px\",\n                              fontWeight: \"400\",\n                              lineHeight: \"12px\",\n                            }}\n                          >\n                            {blog?.summary?.slice(0, 300)}...\n                          </span>\n                        </p>\n                      </div>\n                    ))\n                ) : (\n                  <img\n                    key={config.index}\n                    src={blogs[config?.index]?.coverImageSrc}\n                    alt={`Cover of blog titled ${blogs[config?.index]?.title}`}\n                    style={{\n                      width: \"100%\",\n                      height: config.height,\n                      borderRadius: \"8px\",\n                      marginBottom: colIndex === 2 ? \"3vh\" : \"0\",\n                    }}\n                    onClick={() => handleBlogClick(blogs[config.index]?._id)} // Add onClick handler\n                  />\n                )}\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n\n        {/* All Blogs Section */}\n        <div>\n          <div className=\"headings\">\n            <h4>\n              All <span>Blogs</span>\n            </h4>\n          </div>\n          <Grid container spacing={2}>\n            {blogs?.slice(13).map((blog:any, index:number) => (\n              <Grid item\n                lg={6}\n                md={6}\n                sm={12}\n                key={index}\n                style={{\n                  marginBottom: \"20px\",\n                }}\n              >\n                <div\n                  style={{\n                    // width: \"100%\",\n                    padding: \"20px\",\n                    borderRadius: \"8px\",\n                    boxShadow: \"0 4px 6px rgba(0, 0, 0, 0.1)\",\n                    backgroundColor:\n                      index % 2 === 0\n                        ? \"rgba(240, 240, 255, 1)\"\n                        : \"rgba(255, 247, 233, 1)\",\n                    cursor: \"pointer\", // Add the cursor style here\n                  }}\n                  onClick={() => handleBlogClick(blog._id)} // Add onClick handler\n                >\n                  <h4\n                    style={{\n                      fontWeight: 600,\n                      fontSize: \"32px\",\n                      lineHeight: \"42px\",\n                    }}\n                  >\n                    {blog?.title}\n                  </h4>\n                  <p\n                    style={{\n                      fontWeight: 400,\n                      fontSize: \"16px\",\n                      lineHeight: \"25px\",\n                    }}\n                  >\n                    {blog?.summary?.slice(0, 120)}...\n                  </p>\n                  <h6\n                    style={{\n                      background: \"rgba(48, 51, 99, 1)\",\n                      width: \"fit-content\",\n                      color: \"white\",\n                      borderRadius: \"10px\",\n                      padding: \"5px\",\n                      margin: \"20px\",\n                    }}\n                  >\n                    View details\n                  </h6>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default AllBlogs;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["AllBlogs","blogs","setBlogs","useState","scrollRef","useRef","navigate","useNavigate","useEffect","async","response","axios","post","data","list","error","console","alert","fetchBlogs","handleBlogClick","blogId","concat","_jsxs","_Fragment","children","className","style","marginTop","_jsx","Container","length","Grid","container","spacing","index","height","lg","double","map","config","colIndex","_blogs$config$index","_blogs$config$index2","item","slice","blog","i","src","coverImageSrc","alt","title","width","borderRadius","objectFit","marginBottom","onClick","_id","_blogs$config$index3","Box","sx","position","display","alignItems","Button","scrollLeft","current","scrollBy","left","behavior","zIndex","background","border","fontSize","cursor","color","gap","overflowX","flexWrap","scrollBehavior","msOverflowStyle","scrollbarWidth","ref","_blog$summary","Typography","variant","fontWeight","mt","textAlign","summary","scrollRight","right","count","triple","_blogs$config$index4","_blogs$config$index5","_blog$summary2","lineHeight","marginLeft","_blogs$config$index6","_blog$summary3","md","sm","padding","boxShadow","backgroundColor","margin","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","React","component","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled"],"sourceRoot":""}