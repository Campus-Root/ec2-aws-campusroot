{"version":3,"file":"static/js/361.f7c831d5.chunk.js","mappings":"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","sources":["pages/profile/uploadImage.tsx","pages/profile/profileSidebar.tsx","genericComponents/expandCard.tsx","pages/profile/section/documents/aptitude.tsx","pages/profile/section/documents/englishTest.tsx","pages/profile/section/documents/workExperienceDocs.tsx","pages/profile/section/documents/otherDocs.tsx","genericComponents/accordian.tsx","pages/profile/section/documents/academicDocs.tsx","pages/profile/section/documents/documentPreview.tsx","pages/profile/section/documents/personalDocs.tsx","pages/profile/section/documents/personal.tsx","pages/profile/section/documents.tsx","pages/profile/section/universities/shortlisted.tsx","pages/profile/section/universities/universities.tsx","pages/profile/section/dashboard/upcomingSessions.tsx","pages/profile/section/dashboard/bookedSlots.tsx","pages/profile/section/dashboard/cardPage.tsx","pages/profile/section/dashboard/events.tsx","pages/profile/section/dashboard.tsx","genericComponents/reusableSelect.tsx","pages/profile/section/education/bachelors.tsx","pages/profile/section/education/diploma.tsx","pages/profile/section/education/grade10.tsx","pages/profile/section/education/postGrad.tsx","pages/profile/section/education/index.tsx","pages/profile/section/testScores/academic.tsx","pages/profile/section/testScores/englishTestscores.tsx","pages/profile/section/testScores/testScores.tsx","pages/profile/section/profileSection/preferences.tsx","pages/profile/section/profileSection/extraCurricular.tsx","pages/profile/section/profileSection/family.tsx","pages/profile/section/profileSection/personalDetails.tsx","pages/profile/section/profileSection/workExperience.tsx","pages/profile/section/profileSection/index.tsx","pages/profile/section/universities/appliedUniversities.tsx","pages/profile/section/recommend.tsx","pages/profile/section/advisors.tsx","pages/profile/section/cart.tsx","pages/profile/section/orders.tsx","pages/profile/Profile.tsx"],"sourcesContent":["import axios from \"axios\";\nimport React, { useRef } from \"react\";\nimport CameraAltOutlinedIcon from '@mui/icons-material/CameraAltOutlined';\nimport { editProfile } from \"../../services\";\nimport { setSharedInfo } from \"../../store/Slices/sharedInfoSlice\";\nimport { store } from \"../../store/store\";\nimport { useAppDispatch } from \"../../assets/hooks\";\n\ninterface UploadImageProps {\n  accept: string;\n  setLoading: (loading: boolean) => void;\n}\n\nconst UploadImage: React.FC<UploadImageProps> = ({  accept, setLoading }) => {\n  const prset_key = \"bsjf7zim\";\n  const cloudName = \"dffdp7skh\";\n  const inputFile = useRef<HTMLInputElement>(null);\n  const dispatch = useAppDispatch();\n  const imageClick = () => {\n    if (inputFile.current) {\n      inputFile.current.click();\n    }\n  };\n\n  const submit = async (image: string) => {\n    if (image) {\n      const payload = {\n        displayPicSrc: image,\n      };\n      setLoading(true)\n      const response = await editProfile(payload);\n      if (response) {\n        const sharedInfoData = store.getState().sharedInfo.data;\n        dispatch(\n          setSharedInfo({\n            ...sharedInfoData,\n            displayPicSrc: response.data?.data?.displayPicSrc,\n          })\n        );\n        setLoading(false)\n        \n      } else {\n        setLoading(false)\n\n      }\n    }\n  };\n\n  const handleFile = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLoading(true);\n    const file = event.target.files?.[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"upload_preset\", prset_key);\n      axios\n        .post(\n          `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`,\n          formData\n        )\n        .then((res) => {\n          const imageUrl = res.data.secure_url;\n        //   onUpload(imageUrl);\n          submit(imageUrl)\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.error(err);\n          setLoading(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"flex\">\n      <input\n        style={{ display: \"none\" }}\n        type=\"file\"\n        className=\"\"\n        name=\"image\"\n        onChange={handleFile}\n        ref={inputFile}\n        accept={accept}\n      />\n      <h1 onClick={imageClick} className=\"text-center\">\n        {accept === \".pdf\" ? \"Change Image\" : <CameraAltOutlinedIcon sx={{ color: \"#bdd9e6\" }} />}\n      </h1>\n    </div>\n  );\n};\n\nexport default UploadImage;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport {\n  Avatar,\n  IconButton,\n  ListItemIcon,\n  Tooltip,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Images from \"../../assets\";\nimport UploadImage from \"./uploadImage\";\nimport { useAppSelector } from \"../../assets/hooks\";\n\nconst profileList = [\n  { path: \"/profile/dashboard\", name: \"Dashboard\", icon: <img src={Images.dashboard} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/personal\", name: \"Profile\", icon: <img src={Images.personal} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/documents\", name: \"Documents\", icon: <img src={Images.documents} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/applications\", name: \"My Products\", icon: <img src={Images.products} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/recommendedCourses/Safe\", name: \"Recommendation\", icon: <img src={Images.recommendations} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/shortlisted\", name: \"Favourites\", icon: <img src={Images.wishlist} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/advisors\", name: \"Advisors\", icon: <img src={Images.experts} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/orders\", name: \"My Orders\", icon: <img src={Images.orders} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/cart\", name: \"Cart\", icon: <img src={Images.cart} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n];\n\nconst ProfileSidebar = () => {\n  const location = useLocation();\n  const [hovered, setHovered] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const profile = useAppSelector((state) => state.sharedInfo);\n  const isRecommendedCoursesActive = location.pathname.startsWith('/profile/recommendedCourses');\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        mr: { xs: 0, lg: 2 },\n        my: 3,\n        width: { xs: \"100%\", md: \"180px\", lg: \"220px\" },\n        height: { xs: \"100%\" },\n        justifyContent: \"center\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          marginTop: \"20px\",\n          width: { xs: \"100%\", md: \"auto\" },\n        }}\n      >\n        <List\n          sx={{\n            pb: 2,\n            maxWidth: \"200px\",\n            width: \"100%\",\n            background: \"#fff\",\n            boxShadow: \"4px 4px 50px rgb(14 4 4 / 8%)\",\n            borderRadius: \"30px\",\n            height: { xs: \"550px\", md: \"600px\" },\n            \"& .MuiListItem-root\": {\n              p: 0.5,\n            },\n          }}\n        >\n          <Box sx={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", mb: 2 }}>\n            <div\n              style={{\n                position: \"relative\",\n                display: \"inline-block\",\n                marginBottom: \"15px\",\n                marginTop: \"1rem\",\n              }}\n              onMouseEnter={() => setHovered(true)}\n              onMouseLeave={() => setHovered(false)}\n            >\n              {loading ? (\n                <img\n                  src={Images.standardLoader}\n                  alt=\"loader\"\n                  style={{ width: \"1rem\" }}\n                />\n              ) : (\n                <Avatar\n                  src={profile.data?.displayPicSrc}\n                  alt=\"profile\"\n                  sx={{\n                    width: { xs: \"2rem\", md: \"2.5rem\" },\n                    height: { xs: \"2rem\", md: \"2.5rem\" },\n                    borderRadius: \"50%\",\n                  }}\n                />\n              )}\n\n              {hovered && (\n                <IconButton\n                  aria-label=\"edit\"\n                  style={{\n                    position: \"absolute\",\n                    top: \"45%\",\n                    left: \"50%\",\n                    transform: \"translate(-50%, -50%)\",\n                    backgroundColor: \"rgba(0, 0, 0, 0)\",\n                  }}\n                >\n                  <UploadImage\n                    setLoading={setLoading}\n                    accept=\".jpg, .jpeg, .png\"\n                  />\n                </IconButton>\n              )}\n            </div>\n            <Typography\n              color=\"#3B3F76\"\n              fontWeight=\"500\"\n              sx={{ display: { xs: \"none\", md: \"block\" } }}\n            >\n              {profile?.data?.firstName}\n            </Typography>\n          </Box>\n          {profileList.map((item: any) => (\n            <ListItem\n              key={item.name}\n              component={Link}\n              to={item.path}\n              sx={{\n                textDecoration: \"none\",\n                color: \"#000\",\n                borderRadius: \"20px\",\n              }}\n            >\n              <ListItemButton\n                selected={location.pathname === item.path}\n                sx={{\n                  padding: \"4px\",\n                  color: \"#3b3f76\",\n                  background: \"transparent!important\",\n                  alignItems: \"center\",\n                }}\n              >\n                {isMobile ? (\n                  <Tooltip title={item.name} placement=\"right\">\n                    <ListItemIcon\n                      sx={{\n                        color:\n                          (location.pathname === item.path && !isRecommendedCoursesActive) || (item.name === \"Recommendation\" && (isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses')))\n                            ? \"#3b3f76\"\n                            : \"#3b3f7691\",\n                        minWidth: \"40px\",\n                        pl: 1,\n                      }}\n                    >\n                      {item.icon}\n                    </ListItemIcon>\n                  </Tooltip>\n                ) : (\n                  <ListItemIcon\n                    sx={{\n                      color:\n                        (location.pathname === item.path)\n                          ? \"#3b3f76\"\n                          : \"#3b3f7691\",\n                      minWidth: \"40px\",\n                      pl: 1,\n                    }}\n                  >\n                    {item.icon}\n                  </ListItemIcon>\n                )}\n\n                {!isMobile ? (\n                  <ListItemText\n                    primary={item.name}\n                    sx={{\n                      \"& .MuiTypography-root\": {\n                        fontWeight: (location.pathname === item.path && !isRecommendedCoursesActive) || (item.name === \"Recommendation\" && (isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses')))\n                          ? 600 : 400,\n                        fontSize: { xs: \"13px\", md: \"15px\" }\n                      },\n                      borderBottom: (location.pathname === item.path && !isRecommendedCoursesActive) || (item.name === \"Recommendation\" && (isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses')))\n                        ? \"2px solid #3b3f76\" : 0,\n                      paddingBottom: (location.pathname === item.path && !isRecommendedCoursesActive) || (item.name === \"Recommendation\" && (isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses')))\n                        ? \"8px\" : 0,\n                      marginRight: (location.pathname === item.path && !isRecommendedCoursesActive) || (item.name === \"Recommendation\" && (isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses')))\n                        ? \"8px\" : 0,\n                    }}\n                  />\n                ) : null}\n              </ListItemButton>\n            </ListItem>\n          ))}\n        </List>\n\n\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfileSidebar;\n","import { useState } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Collapse,\n  Box,\n  ListItemIcon,\n  IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { expandCardStyles } from \"../components/styles/customStyles\";\n\ninterface expandCardProps {\n  title: string;\n  children: React.ReactNode;\n  imageUrl: string;\n}\n\nexport default function ExpandCard({\n  title,\n  children,\n  imageUrl,\n}: expandCardProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Card\n        sx={[\n          expandCardStyles.cardCollapse,\n          {\n            boxShadow: open ? \"4px 4px 50px rgb(14 4 4 / 8%)\" : 0,\n          },\n        ]}\n      >\n        <CardHeader\n          onClick={() => setOpen(!open)}\n          sx={{\n            ...expandCardStyles.cardTitle,\n            color: \"#000\",\n          }}\n          title={title}\n          avatar={\n            <Box\n              sx={{\n                ...expandCardStyles.cardImg,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  color: \"#3b3f76\",\n                  fontWeight: 500,\n                }}\n              >\n                {imageUrl}\n              </ListItemIcon>\n            </Box>\n          }\n          action={\n            <IconButton\n              onClick={() => setOpen(!open)}\n              sx={{\n                transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                transition: \"transform 0.3s\",\n              }}\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          }\n        />\n        <div>\n          <Collapse\n            in={open}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={expandCardStyles.cardContent}\n          >\n            <CardContent sx={{padding:0.5}}>\n              <Container sx={{padding:0}}>{children}</Container>\n            </CardContent>\n          </Collapse>\n        </div>\n      </Card>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport Images from \"../../../../assets\";\n// import { Link } from \"react-router-dom\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nconst Aptitude = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const testscores = useAppSelector((state) => state.testscores);\n  const findTestScoresByName = (name: string) => {\n    return testscores.data.find((item) => item.name === name);\n  };\n  const testScoresGRE = findTestScoresByName(\"Graduate Record Examination\");\n  const testScoresGMAT = findTestScoresByName(\"Graduate Management Admission Test\");\n  const testScoresACT = findTestScoresByName(\"American College Testing\");\n  const testScoresSAT = findTestScoresByName(\"Scholastic Assessment Test\");\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">GRE</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresGRE?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresGRE.docId?.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresGRE.docId?.contentType}&id=${testScoresGRE.docId?._id}`}\n                  target=\"_blank\"\n                  // onClick={() => {\n                  //   localStorage.setItem(\"docId\", testScoresGRE.docId._id);\n                  // }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                  <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresGRE.docId?.data?.preview_url} title=\"gre\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresGRE.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      {/* Passport ADD */}\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">GMAT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresGMAT?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresGMAT.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >            \n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresGMAT.docId?.contentType}&id=${testScoresGMAT.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresGMAT.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresGMAT.docId?.data?.preview_url} title=\"gmat\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresGMAT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">SAT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresSAT?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresSAT.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresSAT.docId?.contentType}&id=${testScoresSAT.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresSAT.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\"  }}\n                 >\n                  <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresSAT.docId?.data?.preview_url} title=\"sat\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresSAT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">ACT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresACT?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresACT.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresACT.docId?.contentType}&id=${testScoresACT.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresACT.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\"  }}\n                 >\n                   <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresACT.docId?.data?.preview_url} title=\"act\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresACT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Aptitude;\n","import React from \"react\";\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport Images from \"../../../../assets\";\n// import { Link } from \"react-router-dom\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\n\nconst EnglishTest = ({data}:any) => {\n  const testscores = useAppSelector((state) => state.testscores);\nconst dispatch = useAppDispatch();\n  const findTestScoresByName = (name: string) => {\n    return testscores.data.find((item) => item.name === name);\n  };\n\n  const testScoresTOEFL = findTestScoresByName(\"Test of English as a Foreign Language\");\n  const testScoresIELTS = findTestScoresByName(\"International English Language Testing System\");\n  const testScoresDET = findTestScoresByName(\"Duolingo English Test\");\n  const testScoresPTE = findTestScoresByName(\"Pearson Test of English\");\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">TOEFL</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n        {testScoresTOEFL?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresTOEFL.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresTOEFL.docId?.contentType}&id=${testScoresTOEFL.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresTOEFL.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                  >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresTOEFL.docId?.data?.preview_url} title=\"toefl\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresTOEFL.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">IELTS</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresIELTS?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresIELTS.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresIELTS.docId?.contentType}&id=${testScoresIELTS.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresIELTS.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                  <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresIELTS.docId?.data?.preview_url} title=\"ielts\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresIELTS.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">DET</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresDET?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresDET.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresDET.docId?.contentType}&id=${testScoresDET.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresDET.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                  >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresDET.docId?.data?.preview_url} title=\"det\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresDET.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">PTE</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresPTE?.docId && (\n           <>\n           <Typography>\n             <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n             {testScoresPTE.docId.data?.FileName}\n           </Typography>\n           <Stack\n           direction=\"row\"\n           spacing={2}\n           sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n         >\n               {/* <Link\n                 to={`/pdfPreview?type=${testScoresPTE.docId?.contentType}&id=${testScoresPTE.docId?._id}`}\n                 target=\"_blank\"\n                 onClick={() => {\n                   localStorage.setItem(\"docId\", testScoresPTE.docId._id);\n                 }}\n                 style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                 >\n                   <VisibilityOutlinedIcon/>\n               </Link> */}\n                    {/* <iframe src={testScoresPTE.docId?.data?.preview_url} title=\"pte\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresPTE.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n         </Stack>\n         </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default EnglishTest;\n","import { Grid, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Document } from \"../../../../types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { useAppDispatch } from \"src/assets/hooks\";\nimport { setPopup } from \"src/store/Slices/popupSlice\";\n\n\nconst WorkExperienceDocs = ({data}:any) => {\nconst dispatch=useAppDispatch();\n\n  const DocumentItem = ({ doc, handleDelete }:any) => {\n\n  \n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">{doc?.data?.originalname}</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n                <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:doc?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n        </Grid>\n      </Grid>\n    );\n  };\n  return (\n    <div>\n      { data?.length > 0 ? data?.map((doc:Document) => (\n          <DocumentItem\n          key={doc._id}\n          doc={doc}\n        />\n        )) : <Typography>No data available</Typography>}\n      \n    </div>\n  );\n};\n\nexport default WorkExperienceDocs;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport Aptitude from \"./aptitude\";\nimport EnglishTest from \"./englishTest\";\nimport WorkExperienceDocs from \"./workExperienceDocs\";\n\nconst OtherDocs = () => {\n  const documents = useAppSelector(state=>state.documents)\n\n  const profile = [\n    {\n      title: \"Aptitude Test Marksheet\",\n      image: <div>\n      <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#E07C7C\"}}>\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          1\n        </Typography>\n    </Typography> \n    </div>,\n      component: <Aptitude data={documents?.data?.test?.general}/>,\n    },\n    {\n      title: \"English Proficiency Test Scores report\",\n      image: <div>\n      <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#9CFFF9\"}}>\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          2\n        </Typography>\n    </Typography> \n    </div>,\n      component: <EnglishTest data={documents?.data?.test?.languageProf}/>,\n    },\n    {\n      title: \"Work Experience\",\n      image: <div>\n      <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#FFD8D3\"}}>\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          3\n        </Typography>\n    </Typography> \n    </div>,\n      component: <WorkExperienceDocs data={documents?.data?.workExperiences}/>,\n    },\n  ];\n  return (\n    <Box>\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.title} imageUrl={item.image}>\n          {item.component}\n        </ExpandCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default OtherDocs;\n","import { useState } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Collapse,\n  IconButton,\n} from \"@mui/material\";\nimport { expandCardStyles } from \"../components/styles/customStyles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\n\ninterface expandCardProps {\n  title: string;\n  children: React.ReactNode;\n}\nexport default function Accordion({ title, children }: expandCardProps) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Card sx={[expandCardStyles.cardCollapse, { boxShadow: 0, p: 0 }]}>\n        <CardHeader\n          onClick={() => setOpen(!open)}\n          sx={{\n            ...expandCardStyles.cardTitle,\n            \"&.MuiCardHeader-root\": {\n              padding: \"8px !important\",\n            },\n            color: \"#000\",\n            \".MuiTypography-root\": {\n              fontSize: \"1rem\",\n              fontWeight: 500,\n            },\n            background:\"#F7FAFD\", // Change text color when opened\n          }}\n          title={title}\n          action={\n            <IconButton\n              onClick={() => setOpen(!open)}\n              aria-label=\"expand\"\n              size=\"small\"\n              sx={{marginRight:\"20px\"}}\n            >\n              {open ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n            </IconButton>\n          }\n        ></CardHeader>\n        <div>\n          <Collapse\n            in={open}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={{\"& .MuiCardContent-root\":{\n              paddingTop:\"16px !important\",\n              p:0\n            }}}\n          >\n            <CardContent sx={{ boxShadow: 3 }}>\n              {children}\n            </CardContent>\n          </Collapse>\n        </div>\n      </Card>\n    </>\n  );\n}\n","import React, { useRef, useState} from \"react\";\nimport {\n  Button,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { deleteUploadProfile, uploadProfile } from \"../../../../services\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\n// import { Link } from \"react-router-dom\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { allowedFileTypes } from \"../../../../assets/menu\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\n\nconst AcademicDocs = ({ data }: any) => {\n  const inputFileRefs = {\n    secondarySchool: useRef<HTMLInputElement>(null),\n    plus2: useRef<HTMLInputElement>(null),\n    degree: useRef<HTMLInputElement>(null),\n  };\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [identifier, setIdentifier] = useState<any | null>(null);\n  \n  const [loadingState, setLoadingState] = useState<{ [key: string]: boolean }>({});\n  const handleDeleteOpen = (name: any, item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n    setIdentifier(name);\n  };\n\n  const dispatch = useAppDispatch();\n\n  const handleFileSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier: string\n  ) => {\n    setLoadingState((prevState) => ({ ...prevState, [fieldIdentifier]: true }));\n    await handleSubmit(event, fieldPath, fieldIdentifier);\n    setLoadingState((prevState) => ({ ...prevState, [fieldIdentifier]: false }));\n  };\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier:string\n\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    if (file && allowedFileTypes.includes(file.type)) {\n      try {\n        if (fieldPath && file !== null && file !== undefined) {\n          const formData = new FormData();\n          formData.append(\"uploaded_file\", file);\n          formData.append(\"fieldPath\", fieldPath);\n        formData.append(\"fileIdentifier\", fieldIdentifier);\n\n          const response = await uploadProfile(formData);\n          if (response) {\n            dispatch(setDocuments(response.data.data.docs));\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: \"Document added successfully\",\n                    dimensions: {\n                      width: \"30%\",\n                      height:\"40%\",\n                      show:\"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } else {\n        }\n      } catch (err) {}\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"error\",\n              data: \"Only jpeg , png , pdf files are accepted\",\n              dimensions: {\n                width: \"250px\",\n                show:\"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  };\n\n  const handleDelete = async (fieldPath: string, deleteId: string) => {\n    const response = await deleteUploadProfile({\n      fieldPath: fieldPath,\n      documentId: deleteId,\n    });\n    if (response) {\n      dispatch(setDocuments(response.data.data));\n    } else {\n    }\n  };\n\n  const documents = [\n    { key: \"transcripts\", label: \"Transcripts\" },\n    { key: \"bonafide\", label: \"Bonafide\" },\n    { key: \"CMM\", label: \"CMM\" },\n    { key: \"PCM\", label: \"PCM\" },\n    { key: \"OD\", label: \"OD\" },\n  ];\n  const secondarydocuments = [\n    { key: \"secondarySchool\", label: \"School\" },\n    { key: \"plus2\", label: \"Grade 12\" },\n    { key: \"degree\", label: \"Degree\" },\n  ];\n  const Bachelors = () => {\n    const dispatch = useAppDispatch();\n  \n    const bachelorsFileRefs = {\n      transcripts: useRef<HTMLInputElement>(null),\n      bonafide: useRef<HTMLInputElement>(null),\n      CMM: useRef<HTMLInputElement>(null),\n      PCM: useRef<HTMLInputElement>(null),\n      OD: useRef<HTMLInputElement>(null),\n    };\n  \n    const [loadingState, setLoadingState] = useState<{ [key: string]: boolean }>({});\n  \n    const [open, setOpen] = useState<boolean>(false);\n    const [deleteItem, setDeleteItem] = useState<any | null>(null);\n    const [identifier, setIdentifier] = useState<any | null>(null);\n  \n    const handleDeleteOpen = (name: any, item: any) => {\n      setOpen(true);\n      setDeleteItem(item);\n      setIdentifier(name);\n    };\n  \n    const handleFileSubmit = async (\n      event: React.ChangeEvent<HTMLInputElement>,\n      fieldPath: string,\n      fieldIdentifier: string\n    ) => {\n      setLoadingState((prevState) => ({ ...prevState, [fieldIdentifier]: true }));\n      await handleSubmit(event, fieldPath, fieldIdentifier);\n      setLoadingState((prevState) => ({ ...prevState, [fieldIdentifier]: false }));\n    };\n  \n    const DocumentItem = ({ doc, data, handleSubmit, handleDelete, inputFileRefs }: any) => {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            borderRadius: \"8px\",\n            padding: \"10px\",\n            background: \"#F7FAFD\",\n            mb: 2,\n          }}\n        >\n          <Grid item xs={4}>\n            <Typography fontWeight=\"500\">{doc.label}</Typography>\n          </Grid>\n          <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n            {data && data[doc.key] ? (\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n              >\n                <Typography>{data[doc.key]?.data?.FileName}</Typography>\n                <VisibilityOutlinedIcon\n                  sx={{ fontSize: \"large\" }}\n                  onClick={() => {\n                    dispatch(\n                      setPopup({\n                        show: true,\n                        data: {\n                          container: {\n                            name: \"fileViewer\",\n                            data: data[doc.key]?.data?.preview_url,\n                            dimensions: { width: \"500px\" },\n                          },\n                          type: \"custom\",\n                        },\n                      })\n                    );\n                  }}\n                />\n                <DeleteOutlineOutlinedIcon\n                  sx={{ fontSize: \"large\" }}\n                  onClick={() =>\n                    handleDeleteOpen(`academic.bachelors.${doc.key}`, data[doc.key]._id)\n                  }\n                />\n              </Stack>\n            ) : (\n              <>\n                <input\n                  style={{ display: \"none\" }}\n                  type=\"file\"\n                  onChange={(event) => handleFileSubmit(event, `academic.bachelors.${doc.key}`, doc.key)}\n                  ref={inputFileRefs[doc.key as keyof typeof inputFileRefs]}\n                  accept=\".pdf,.png,.jpeg\"\n                />\n                {loadingState[doc.key] ? (\n                   <img\n                   src={Images.standardLoader}\n                   alt=\"load\"\n                   style={{ width: \"20px\", height: \"20px\",marginRight:\"10px\"}}\n                 />\n                ) : (\n                  <Button\n                    sx={{\n                      color: \"#000\",\n                      textTransform: \"none\",\n                      p: 0,\n                      fontSize: \"0.7rem\",\n                    }}\n                    onClick={() =>\n                      inputFileRefs[doc.key as keyof typeof inputFileRefs].current?.click()\n                    }\n                  >\n                    <FileUploadOutlinedIcon />\n                  </Button>\n                )}\n              </>\n            )}\n          </Grid>\n\n        </Grid>\n      );\n    };\n  \n    return (\n      <>\n      <Accordion title=\"Bachelors\">\n        <>\n          {documents.map((doc) => (\n            <DocumentItem\n              key={doc.key}\n              doc={doc}\n              data={data.bachelors}\n              handleSubmit={handleSubmit}\n              handleDelete={handleDelete}\n              inputFileRefs={bachelorsFileRefs}\n            />\n          ))}\n        </>\n      </Accordion>\n                <ConfirmDialog\n                open={open}\n                handleClose={() => setOpen(false)}\n                additionalData={{\n                  onSubmit: () => handleDelete(identifier, deleteItem),\n                  title: \"Are you sure you want to delete?\",\n                  content: \"\",\n                }}\n              />\n              </>\n    );\n  };\n  \n  const Masters = () => {\n    const dispatch = useAppDispatch();\n  \n    const mastersFileRefs = {\n      transcripts: useRef<HTMLInputElement>(null),\n      bonafide: useRef<HTMLInputElement>(null),\n      CMM: useRef<HTMLInputElement>(null),\n      PCM: useRef<HTMLInputElement>(null),\n      OD: useRef<HTMLInputElement>(null),\n    };\n  \n    const [loadingState, setLoadingState] = useState<{ [key: string]: boolean }>({});\n  \n    const [open, setOpen] = useState<boolean>(false);\n    const [deleteItem, setDeleteItem] = useState<any | null>(null);\n    const [identifier, setIdentifier] = useState<any | null>(null);\n  \n    const handleDeleteOpen = (name: any, item: any) => {\n      setOpen(true);\n      setDeleteItem(item);\n      setIdentifier(name);\n    };\n  \n    const handleFileSubmit = async (\n      event: React.ChangeEvent<HTMLInputElement>,\n      fieldPath: string,\n      fieldIdentifier: string\n    ) => {\n      setLoadingState((prevState) => ({ ...prevState, [fieldIdentifier]: true }));\n      await handleSubmit(event, fieldPath, fieldIdentifier);\n      setLoadingState((prevState) => ({ ...prevState, [fieldIdentifier]: false }));\n    };\n  \n    const DocumentItem = ({ doc, data, handleSubmit, handleDelete, inputFileRefs }: any) => {\n      return (\n        <Grid\n          container\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            borderRadius: \"8px\",\n            padding: \"10px\",\n            background: \"#F7FAFD\",\n            mb: 2,\n          }}\n        >\n          <Grid item xs={4}>\n            <Typography fontWeight=\"500\">{doc.label}</Typography>\n          </Grid>\n          <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n            {data && data[doc.key] ? (\n              <Stack\n                direction=\"row\"\n                spacing={2}\n                sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n              >\n                <Typography>{data[doc.key]?.data?.FileName}</Typography>\n                <VisibilityOutlinedIcon\n                  sx={{ fontSize: \"large\" }}\n                  onClick={() => {\n                    dispatch(\n                      setPopup({\n                        show: true,\n                        data: {\n                          container: {\n                            name: \"fileViewer\",\n                            data: data[doc.key]?.data?.preview_url,\n                            dimensions: { width: \"500px\" },\n                          },\n                          type: \"custom\",\n                        },\n                      })\n                    );\n                  }}\n                />\n                <DeleteOutlineOutlinedIcon\n                  sx={{ fontSize: \"large\" }}\n                  onClick={() =>\n                    handleDeleteOpen(`academic.masters.${doc.key}`, data[doc.key]._id)\n                  }\n                />\n              </Stack>\n            ) : (\n              <>\n                <input\n                  style={{ display: \"none\" }}\n                  type=\"file\"\n                  onChange={(event) => handleFileSubmit(event, `academic.masters.${doc.key}`, doc.key)}\n                  ref={inputFileRefs[doc.key as keyof typeof inputFileRefs]}\n                  accept=\".pdf,.png,.jpeg\"\n                />\n                {loadingState[doc.key] ? (\n                   <img\n                   src={Images.standardLoader}\n                   alt=\"load\"\n                   style={{ width: \"20px\", height: \"20px\",marginRight:\"10px\"}}\n                 />\n                ) : (\n                  <Button\n                    sx={{\n                      color: \"#000\",\n                      textTransform: \"none\",\n                      p: 0,\n                      fontSize: \"0.7rem\",\n                    }}\n                    onClick={() =>\n                      inputFileRefs[doc.key as keyof typeof inputFileRefs].current?.click()\n                    }\n                  >\n                    <FileUploadOutlinedIcon />\n                  </Button>\n                )}\n              </>\n            )}\n          </Grid>\n\n        </Grid>\n      );\n    };\n  \n    return (\n      <>\n      <Accordion title=\"Masters\">\n        <>\n          {documents.map((doc) => (\n            <DocumentItem\n              key={doc.key}\n              doc={doc}\n              data={data.masters}\n              handleSubmit={handleSubmit}\n              handleDelete={handleDelete}\n              inputFileRefs={mastersFileRefs}\n            />\n          ))}\n        </>\n      </Accordion>\n                <ConfirmDialog\n                open={open}\n                handleClose={() => setOpen(false)}\n                additionalData={{\n                  onSubmit: () => handleDelete(identifier, deleteItem),\n                  title: \"Are you sure you want to delete?\",\n                  content: \"\",\n                }}\n              />\n              </>\n    );\n  };\n\n  const Document = ({ doc, data, inputFileRef, handleSubmit, handleDelete }:any) => {\n\n  \n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">{doc.label}</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {data && data[doc.key] ? (\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n            >\n              <Typography>{data[doc.key].data?.FileName}</Typography>\n\n                                        <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:data[doc.key]?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n                  <DeleteOutlineOutlinedIcon sx={{fontSize:\"large\"}} onClick={() => handleDeleteOpen(`academic.${doc.key}`, data[doc.key]._id)}/>\n            \n            </Stack>\n          ) : (\n            <>\n              <input\n                style={{ display: \"none\" }}\n                type=\"file\"\n                onChange={(event) => handleFileSubmit(event, `academic.${doc.key}`,doc.key)}\n                ref={inputFileRef}\n                accept=\".jpeg,.png,.pdf\"\n              />\n              {loadingState[doc.key]  ? (\n              <img\n              src={Images.standardLoader}\n              alt=\"load\"\n              style={{ width: \"20px\", height: \"20px\",marginRight:\"10px\"}}\n            />\n            ) : (\n              <Button\n                sx={{\n                  color: \"#000\",\n                  textTransform: \"none\",\n                  p: 0,\n                  fontSize: \"0.7rem\",\n                }}\n                onClick={() => inputFileRef.current?.click()}\n              >\n                <FileUploadOutlinedIcon />\n              </Button>\n            )}\n            </>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n  return (\n    <div>\n      <Typography textAlign=\"right\">\n        <b>Note:</b> Only jpeg , png , pdf files are accepted\n      </Typography>\n      <Masters />\n      <Bachelors />\n      <>\n        {secondarydocuments.map((doc) => (\n           <Document\n           key={doc.key}\n           doc={doc}\n           data={data}\n           inputFileRef={inputFileRefs[doc.key as keyof typeof inputFileRefs]}\n           handleSubmit={handleSubmit}\n           handleDelete={handleDelete}\n         />\n        ))}\n      </>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => handleDelete(identifier, deleteItem),\n          title: \"Are you sure you want to delete?\",\n          content: \"\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default AcademicDocs;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nimport { useAppDispatch } from \"src/assets/hooks\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\n\nconst Document = ({ doc, data, inputFileRef, handleSubmit, handleDelete }: any) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [identifier, setIdentifier] = useState<any | null>(null);\n  \n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleDeleteOpen = (name: any, item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n    setIdentifier(name);\n  };\n\n  const dispatch = useAppDispatch();\n\n  const handleFileSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier: string\n  ) => {\n    setLoading(true); \n    await handleSubmit(event, fieldPath, fieldIdentifier);\n    setLoading(false); \n  };\n\n  return (\n    <Grid\n      container\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        borderRadius: \"8px\",\n        padding: \"10px\",\n        background: \"#F7FAFD\",\n        mb: 2,\n      }}\n    >\n      <Grid item xs={4}>\n        <Typography fontWeight=\"500\">{doc.label}</Typography>\n      </Grid>\n      <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n        {data && data[doc.key] ? (\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n            <Typography>{data[doc.key]?.data?.FileName}</Typography>\n            <VisibilityOutlinedIcon\n              sx={{ fontSize: \"large\" }}\n              onClick={() => {\n                dispatch(\n                  setPopup({\n                    show: true,\n                    data: {\n                      container: {\n                        name: \"fileViewer\",\n                        data: data[doc.key]?.data?.preview_url,\n                        dimensions: {\n                          width: \"500px\",\n                        },\n                      },\n                      type: \"custom\",\n                    }\n                  })\n                );\n              }}\n            />\n            <DeleteOutlineOutlinedIcon\n              sx={{ fontSize: \"large\" }}\n              onClick={() => handleDeleteOpen(`personal.${doc.key}`, data[doc.key]._id)}\n            />\n          </Stack>\n        ) : (\n          <>\n            <input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              onChange={(event) => handleFileSubmit(event, `personal.${doc.key}`, doc.label)}\n              ref={inputFileRef}\n              accept=\".jpeg,.png,.pdf\"\n            />\n            {loading ? (\n              <img\n              src={Images.standardLoader}\n              alt=\"load\"\n              style={{ width: \"20px\", height: \"20px\",marginRight:\"10px\"}}\n            />\n            ) : (\n              <Button\n                sx={{\n                  color: \"#000\",\n                  textTransform: \"none\",\n                  p: 0,\n                  fontSize: \"0.7rem\",\n                }}\n                onClick={() => inputFileRef.current?.click()}\n              >\n                <FileUploadOutlinedIcon />\n              </Button>\n            )}\n          </>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => handleDelete(identifier, deleteItem),\n          title: \"Are you sure you want to delete?\",\n          content: \"\",\n        }}\n      />\n    </Grid>\n  );\n};\n\nexport default Document;\n","import React, { useRef } from \"react\";\nimport {\n  Typography,\n} from \"@mui/material\";\nimport { deleteUploadProfile, uploadProfile } from \"../../../../services\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { allowedFileTypes } from \"../../../../assets/menu\";\nimport Document from \"./documentPreview\";\n\nconst PersonalDocs = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const inputFileRefs = {\n    resume: useRef<HTMLInputElement>(null),\n    passportBD: useRef<HTMLInputElement>(null),\n    passportADD: useRef<HTMLInputElement>(null),\n  };\n  const secondarydocuments = [\n    { key: \"resume\", label: \"Resume\" },\n    { key: \"passportBD\", label: \"Passport Photo Page\" },\n    { key: \"passportADD\", label: \"Passport Address Page\" },\n  ];\n\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier:string\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    if (file && allowedFileTypes.includes(file.type)) {\n      try {\n        const formData = new FormData();\n        formData.append(\"uploaded_file\", file);\n        formData.append(\"fieldPath\", fieldPath);\n        formData.append(\"fileIdentifier\", fieldIdentifier);\n        const response = await uploadProfile(formData);\n        if (response) {\n          dispatch(setDocuments(response.data.data.docs));\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Document added successfully\",\n                  dimensions: {\n                    width: \"30%\",\n                    height:\"40%\",\n                    show:\"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n      } catch (err) {\n        console.error(\"Upload failed\", err);\n      }\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"error\",\n              data: \"Only jpeg, png, pdf files are accepted\",\n              dimensions: {\n                width: \"250px\",\n                show:\"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  };\n\n  const handleDelete = async (fieldPath: string, deleteId: string) => {\n    try {\n      const response = await deleteUploadProfile({ fieldPath, documentId: deleteId });\n      if (response) {\n        dispatch(setDocuments(response.data.data));\n      }\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n    }\n  };\n\n  return (\n    <div>\n      <Typography textAlign=\"right\">\n        <b>Note:</b> Only jpeg, png, pdf files are accepted\n      </Typography>\n      {secondarydocuments.map((doc) => (\n        <Document\n          key={doc.key}\n          doc={doc}\n          data={data}\n          inputFileRef={inputFileRefs[doc.key as keyof typeof inputFileRefs]}\n          handleSubmit={handleSubmit}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PersonalDocs;\n","import { Box, Typography } from \"@mui/material\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport AcademicDocs from \"./academicDocs\";\nimport PersonalDocs from \"./personalDocs\";\n\nconst TranscriptDocs = () => {\n  const documents = useAppSelector(state=>state.documents)\n  const profile = [\n    {\n      title: \"Personal Documents\",\n      image:  <div>\n      <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#E07C7C\"}}>\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          1\n        </Typography>\n    </Typography> \n    </div>,\n      component: <PersonalDocs data={documents?.data?.personal}/>\n    },\n    {\n      title: \"Academic Documents\",\n      image:  <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#9CFFF9\"}}>\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          2\n        </Typography>\n    </Typography> ,\n      component:<AcademicDocs data={documents?.data?.academic}/> \n    }\n    \n  ];\n  return (\n    <Box\n     \n    >\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.title} imageUrl={item.image} key={item}>\n          {item.component}\n        </ExpandCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default TranscriptDocs;\n","import { Box } from '@mui/material'\nimport React from 'react'\nimport CustomTabs from '../../../genericComponents/tabs'\nimport OtherDocs from './documents/otherDocs'\nimport TranscriptDocs from './documents/personal'\n\nconst Documents = () => {\n  const tabs = [\n    {\n      label: \"Transcript Documents \",\n      Component: (\n        <div>\n          <TranscriptDocs/>\n        </div>\n      ),\n    },\n    {\n      label: \"Other Documents\",\n      Component: (\n        <div>\n          <OtherDocs/>\n        </div>\n      ),\n    },\n  \n  ];\n  return (\n    <Box sx={{\n    }}>\n      <CustomTabs tabs={tabs}/>\n    </Box>\n  )\n}\n\nexport default Documents","import { Box, Grid,Tooltip, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport CustomCard from \"../../../../genericComponents/customCard\";\nimport ConfirmDialog from \"../../../../genericComponents/modalPopup/confirmDialog\";\nimport { addToShortList} from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport {  setShortlisted } from \"../../../../store/Slices/shortlistedCoursesSlice\";\nimport {  Event, ShortlistedCourse } from \"../../../../types/types\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { monthNames } from \"../../../../assets/menu\";\n\nconst Shortlisted = () => {\n  const shortlistedCourses = useAppSelector(\n    (state) => state.shortlistedcourses\n  );\n  const [open, setOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const dispatch = useAppDispatch();\n  // const navigate = useNavigate();\n  const handleDeleteOpen = (id: string) => {\n    setOpen(true);\n    setDeleteId(id);\n  };\n  const handleDelete = async () => {\n    const values = {\n      action: \"pull\",\n      courseId: deleteId,\n    };\n   \n    const response = await addToShortList(values);\n    if (response.data.success) {\n      dispatch(setShortlisted(response.data.data))\n     \n    }\n      setOpen(false);\n    \n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        try {\n          if (\n            userAuthStatus?.data?.isAuthorized &&\n            userAuthStatus?.data?.isRegistered\n          ) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"applynow\",\n                    data:event.data,\n                    dimensions: {\n                      width: \"450px\",\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                  height:\"70%\",\n                  show:\"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) {}\n        break;\n    }\n  };\n  // const courseMonths = shortlistedCourses?.data?.startDate\n  // ? monthNames[shortlistedCourses?.data?.startDate?.[0]?.courseStartingMonth]\n  // : \"No course starting month\";\n\n  // const shortlistedCoursesData = shortlistedCourses.data?.map((item) => ({\n  //   name: item.course.name,\n  //   value: item.course._id\n  // }));\n  return (\n    <div>\n      <Grid\n        container\n        spacing={3}\n        sx={{\n          // maxHeight: \"81vh\",\n          overflowY: \"scroll\",\n          \n        }}\n      >\n        {shortlistedCourses.data && shortlistedCourses?.data?.length > 0 ? (\n          <>\n            {shortlistedCourses.data?.map(\n              (item: ShortlistedCourse, i: number) => (\n                <Grid item xs={12} sm={6} lg={4} sx={{paddingLeft:{xs:0,md:\"1rem\"}}}>\n                  <CustomCard title={item?.university?.location?.country} i={i}>\n                    <Box\n                      onClick={() => {\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"mainPopup\",\n                                data: item,\n                                dimensions: {\n                                  width: \"80%\",\n                                  // height:\"80%\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        );\n                      }}\n                    >\n                      <Box sx={{ display: \"flex\", gap: \"10px\",}}>\n                        <img\n                          src={item.university.logoSrc}\n                          alt=\"logo\"\n                          style={{\n                            width: \"1.5rem\",\n                            height: \"1.5rem\",\n                            // marginRight: \"5px\",\n                            borderRadius: \"10px\",\n                          }}\n                        />\n                        \n                        <div style={{ flex: 1 }}>\n                        <Typography\n                              fontSize=\"0.9rem\"\n                              sx={{\n                                fontSize: { xs: \"13px\", lg: \"14px\" },\n                                fontWeight: 500,\n                                textOverflow: \"ellipsis \",\n                                lineClamp: 1,\n                                height: \"1.5rem\",\n                                textTransform: \"capitalize\",\n                                overflow: \"hidden\",\n                                display: \"-webkit-box\",\n                                WebkitLineClamp: \"1\",\n                                WebkitBoxOrient: \"vertical\",\n                                mb:1\n                              }}\n                            >\n                              {item?.university?.name}\n                            </Typography>\n                          <Tooltip\n                            slotProps={{\n                              tooltip: {\n                                sx: {\n                                  color: \"#fff\",\n                                  backgroundColor: \"#3B3F76\",\n                                  boxShadow: 1,\n                                  \"&.MuiTooltip-tooltip\": {\n                                    marginTop: \"-5px !important\",\n                                  },\n                                },\n                              },\n                            }}\n                            title={item.name}\n                            placement=\"bottom\"\n                          >\n                            <Typography\n                              fontSize=\"0.9rem\"\n                              sx={{\n                                fontSize: { xs: \"13px\", lg: \"14px\" },\n                                fontWeight: 500,\n                                textOverflow: \"ellipsis \",\n                                lineClamp: 1,\n                                height: \"1.5rem\",\n                                textTransform: \"capitalize\",\n                                overflow: \"hidden\",\n                                display: \"-webkit-box\",\n                                WebkitLineClamp: \"1\",\n                                WebkitBoxOrient: \"vertical\",\n                              }}\n                            >\n                              {item.name}\n                            </Typography>\n                          </Tooltip>\n                          \n                          \n                          <Typography\n                            component=\"span\"\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"nowrap\",\n                              mt: 1,\n                            }} // Prevent line wrapping\n                          >\n                            <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                            &nbsp; Start date :\n                            {item?.startDate\n                              ?.map(\n                                (item: any, index: number) =>\n                                  monthNames[item?.courseStartingMonth]\n                              )\n                              .join(\", \")}\n                            {/* {item?.intake ? date(new Date(item?.courseMonths)) : null} */}\n                          </Typography>\n                        </div>\n                      </Box>\n                    </Box>\n                    <Grid container spacing={2} >\n                      <Grid\n                        item\n                        xs={10.5}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"end\",\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <Box\n                          sx={{border:\"1px solid #1C1F40\",borderRadius:\"50%\",width:\"2rem\",height:\"2rem\",display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",}}\n                          onClick={() =>\n                            eventHandler({ name: \"cart\", data: item })\n                          }\n                        >\n                         <ShoppingCartOutlinedIcon sx={{fontSize:\"1.25rem\",color:\"#1C1F40\"}} />\n                        </Box>\n                      </Grid>\n                      <Grid item xs={1.5}>\n                        <Box\n                          component=\"img\"\n                          src={Images.deleteIcon}\n                          alt=\"icon\"\n                          sx={{width:\"2rem\",height:\"2rem\"}}\n                          onClick={() => handleDeleteOpen(item._id)}\n                        />\n                      </Grid>\n                    </Grid>\n                    {/* <p style={{\n        position: 'absolute',\n        left: '10px',\n        bottom: '10%', background: \"#B7B7E7\", width: \"1.1rem\", height: \"1.1rem\", margin: 0, borderBottomLeftRadius: \"20px\", transform: \"rotate(45deg\"\n      }}></p> */}\n                  </CustomCard>\n                </Grid>\n              )\n            )}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"200px\",\n              flexDirection: \"column\",\n            }}\n          >\n            <img\n              src={Images.noData}\n              alt=\"noData\"\n              style={{ width: \"70px\", height: \"70px\" }}\n            />\n            <Typography>No wishlisted courses</Typography>\n          </Grid>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: handleDelete, // Pass the function directly without curly braces\n          title: \"Are you sure you want to delete this from your shortlist?\",\n          content:\n            \"You’re just a few steps away from applying to universities.\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Shortlisted;\n","import { Box} from \"@mui/material\";\nimport React from \"react\";\n// import CustomTabs from \"../../../../genericComponents/tabs\";\nimport Shortlisted from \"./shortlisted\";\n\nconst Universities = () => {\n  // const tabs = [\n  //   {\n  //     label: \"Shortlisted programs\",\n  //     Component: (\n  //       <div>\n  //         <Shortlisted />\n  //       </div>\n  //     ),\n  //   },\n  //   {\n  //     label: \"Recommended programs\",\n  //     Component: (\n  //       <div>\n  //         <Typography>Recommendations</Typography>\n  //         {/* <AppliedUniversities /> */}\n  //       </div>\n  //     ),\n  //   },\n  // ];\n  return (\n    <Box\n      sx={{\n        // background: \"#fff\",\n        // borderRadius: \"10px\",\n        p: 2,\n      }}\n    >\n      {/* <CustomTabs tabs={tabs} /> */}\n      <Shortlisted />\n    </Box>\n  );\n};\n\nexport default Universities;\n","import { Avatar, Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { getAdvisorTitle,setWordCase } from \"../../../../assets/library\";\nimport { modifyBooking } from \"../../../../services\";\nimport { updatemeetings } from \"../../../../store/Slices/meetings\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nconst UpcomingSessions = () => {\n  const meetings = useAppSelector((state) => state.meetings);\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [deleteItem,setDeleteItem] = useState();\n\n  const joinNowClick = (link: string) => {\n    window.open(link, \"_blank\");\n  };\n\n  const cancelCall = async (id: string) => {\n    try {\n      const response = await modifyBooking({\n        meetingId: deleteItem,\n        option: \"cancelEvent\",\n      });\n      if (response) {\n        dispatch(updatemeetings(response.data));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: response.data.message,\n                dimensions: {\n                  width: \"30%\",\n                height:\"40%\",\n                  show:\"none\"\n    \n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n      console.error(\"Error cancelling the event:\", error);\n    }\n    setOpen(false)\n  };\n\n  const handleDeleteOpen = (item:any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const filteredEvents = meetings.data?.filter((event) => {\n    const startTime = new Date(event?.data?.start.dateTime);\n    const currentTime = new Date();\n    return event.status === \"upcoming\" && startTime > currentTime;\n  });\n\n  const rescheduledEvents = meetings.data?.filter((event) => {\n    const startTime = new Date(event?.data?.start.dateTime);\n    const currentTime = new Date();\n    return event.status === \"rescheduled\" && startTime > currentTime;\n  });\n\n  const hasEvents = filteredEvents?.length > 0 || rescheduledEvents?.length > 0;\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        sx={{\n          // height: \"40vh\",\n          mt: 1,\n          p: 1,\n          overflowY: \"scroll\",\n        }}\n      >\n        {hasEvents ? (\n          <>\n            {filteredEvents?.map((data, i) => {\n              const startTime = new Date(data?.data?.start.dateTime);\n              const endTime = new Date(data?.data?.end.dateTime);\n              const currentTime = new Date();\n              const isEventInProgress =\n                currentTime >= startTime && currentTime <= endTime;\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  key={i}\n                  sx={{\n                    display: \"flex\",\n                    position: \"relative\",\n                    background: \"#F8F8FC\",\n                    my: 1,\n                    borderRadius: \"10px\",\n                    height:\"100px\"\n                  }}\n                >\n                  <Grid container spacing={2}>\n                    <Grid\n                      item\n                      xs={4}\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Box\n                        sx={{\n                          position: \"absolute\",\n                          top: \"-15px\",\n                          display: \"flex\",\n                          gap: \"1rem\",\n                          left:0\n                        }}\n                      >\n                        <Avatar\n                          src={data?.member.displayPicSrc}\n                          alt=\"logo\"\n                          style={{\n                            width: \"2rem\",\n                            height: \"2rem\",\n                            borderRadius: \"50%\",\n                            marginLeft: \"0.8rem\",\n                          }}\n                        />\n                        <Typography\n                          fontWeight=\"500\"\n                          sx={{\n                            background: \"#fff\",\n                            p: 1,\n                            borderRadius: \"10px\",\n                            fontSize: \"14px\",\n                            color: \"#3B3F76\",\n                          }}\n                        >\n                          {data?.member?.role\n                            ? getAdvisorTitle(data?.member?.role)\n                            : getAdvisorTitle(data?.member?.role)}\n                        </Typography>\n                      </Box>\n                      <Typography sx={{mt:-2}}>{setWordCase(data?.member.firstName)}</Typography>\n                    </Grid>\n                    <Grid item xs={8} sx={{ mt: 1, position: \"relative\" }}>\n                      <Button\n                        onClick={() => joinNowClick(data?.data.hangoutLink)}\n                        disabled={!isEventInProgress}\n                        sx={{\n                          border: \"1px solid #027A48\",\n                          textTransform: \"none\",\n                          color: \"#000\",\n                          fontSize: \"11px\",\n                          p: 0,\n                          position: \"absolute\",\n                          top: \"0\",\n                          right: \"10px\",\n                        }}\n                      >\n                        Join now\n                      </Button>\n                      {/* <Typography sx={{ mt: 0.5 }}>\n                        {data?.data?.description ? data?.data?.description : \"N/A\"}\n                      </Typography> */}\n                      <Box sx={{display:\"flex\",mt:2}}>\n                      <Typography\n                        // color=\"#C3C3C5\"\n                        fontSize=\"14px\"\n                        gutterBottom\n                        sx={{ mb: 1 }}\n                      >\n                        {new Date(data?.data?.start.dateTime).toLocaleString(\"en-GB\", {\n                          month: \"long\",\n                          year: \"numeric\",\n                          day: \"numeric\",\n                          hour: \"numeric\",\n                          minute: \"numeric\",\n                          hour12: true,\n                        })}\n                      </Typography>\n                      <Tooltip\n                slotProps={{\n                  tooltip: {\n                    sx: {\n                      color: \"#514E6A\",\n                      backgroundColor: \"#ffff\",\n                      boxShadow: 2,\n                      cursor: \"pointer\",\n                    },\n                  },\n                }}\n                title={data?.data?.description ? data?.data?.description : \"N/A\"}\n                placement=\"top-start\"\n              >\n                <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\",fontSize:\"1rem\",float:\"right\" }} />\n              </Tooltip>\n              </Box>\n                      <Typography\n                        fontWeight=\"500\"\n                        sx={{\n                          background: \"#fff\",\n                          p: 0.5,\n                          borderRadius: \"10px\",\n                          fontSize: \"14px\",\n                          color: \"#3B3F76\",\n                          width: \"fit-content\",\n                          position: \"absolute\",\n                          bottom: \"-15px\",\n                          right: \"10px\",\n                        }}\n                      >\n                        <span\n                          onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"reschedule\",\n                                    data: data,\n                                    dimensions: {\n                                      width: \"800px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          Reschedule\n                        </span>{\" \"}\n                        /\n                        <span\n                          // onClick={() => cancelCall(data?._id)}\n                          onClick={() => handleDeleteOpen(data?._id)}\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          Cancel\n                        </span>\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            })}\n            \n\n            {rescheduledEvents?.map((data, i) => {\n              const startTime = new Date(data?.data?.start.dateTime);\n              const endTime = new Date(data?.data?.end.dateTime);\n              const currentTime = new Date();\n              const isEventInProgress =\n                currentTime >= startTime && currentTime <= endTime;\n              return (\n                <Grid\n                item\n                xs={12}\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  position: \"relative\",\n                  background: \"#F8F8FC\",\n                  my: 1,\n                  borderRadius: \"10px\",\n                  height:\"100px\"\n                }}\n              >\n                <Grid container spacing={2}>\n                  <Grid\n                    item\n                    xs={4}\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        position: \"absolute\",\n                        top: \"-15px\",\n                        display: \"flex\",\n                        gap: \"1rem\",\n                        left:0\n                      }}\n                    >\n                      <Avatar\n                        src={data?.member.displayPicSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"2rem\",\n                          height: \"2rem\",\n                          borderRadius: \"50%\",\n                          marginLeft: \"0.8rem\",\n                        }}\n                      />\n                      <Typography\n                        fontWeight=\"500\"\n                        sx={{\n                          background: \"#fff\",\n                          p: 1,\n                          borderRadius: \"10px\",\n                          fontSize: \"14px\",\n                          color: \"#3B3F76\",\n                        }}\n                      >\n                        {data?.member?.role\n                          ? getAdvisorTitle(data?.member?.role)\n                          : getAdvisorTitle(data?.member?.role)}\n                      </Typography>\n                    </Box>\n                    <Typography sx={{mt:-2}}>{setWordCase(data?.member.firstName)}</Typography>\n                  </Grid>\n                  <Grid item xs={8} sx={{ mt: 1, position: \"relative\" }}>\n                    <Button\n                      onClick={() => joinNowClick(data?.data.hangoutLink)}\n                      disabled={!isEventInProgress}\n                      sx={{\n                        border: \"1px solid #027A48\",\n                        textTransform: \"none\",\n                        color: \"#000\",\n                        fontSize: \"11px\",\n                        p: 0,\n                        position: \"absolute\",\n                        top: \"0\",\n                        right: \"10px\",\n                      }}\n                    >\n                      Join now\n                    </Button>\n                    {/* <Typography sx={{ mt: 0.5 }}>\n                      {data?.data?.description ? data?.data?.description : \"N/A\"}\n                    </Typography> */}\n                    <Box sx={{display:\"flex\",mt:2}}>\n                    <Typography\n                      // color=\"#C3C3C5\"\n                      fontSize=\"14px\"\n                      gutterBottom\n                      sx={{ mb: 1 }}\n                    >\n                      {new Date(data?.data?.start.dateTime).toLocaleString(\"en-GB\", {\n                        month: \"long\",\n                        year: \"numeric\",\n                        day: \"numeric\",\n                        hour: \"numeric\",\n                        minute: \"numeric\",\n                        hour12: true,\n                      })}\n                    </Typography>\n                    <Tooltip\n              slotProps={{\n                tooltip: {\n                  sx: {\n                    color: \"#514E6A\",\n                    backgroundColor: \"#ffff\",\n                    boxShadow: 2,\n                    cursor: \"pointer\",\n                  },\n                },\n              }}\n              title={data?.data?.description ? data?.data?.description : \"N/A\"}\n              placement=\"top-start\"\n            >\n              <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\",fontSize:\"1rem\",float:\"right\" }} />\n            </Tooltip>\n            </Box>\n                    <Typography\n                      fontWeight=\"500\"\n                      sx={{\n                        background: \"#fff\",\n                        p: 0.5,\n                        borderRadius: \"10px\",\n                        fontSize: \"14px\",\n                        color: \"#3B3F76\",\n                        width: \"fit-content\",\n                        position: \"absolute\",\n                        bottom: \"-15px\",\n                        right: \"10px\",\n                      }}\n                    >\n                      <span\n                        onClick={() =>\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"reschedule\",\n                                  data: data,\n                                  dimensions: {\n                                    width: \"800px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        Reschedule\n                      </span>{\" \"}\n                      /\n                      <span\n                        // onClick={() => cancelCall(data?._id)}\n                        onClick={() => handleDeleteOpen(data?._id)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        Cancel\n                      </span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              );\n            })}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Typography color=\"#3B3F76\" fontSize=\"1.2rem\" fontWeight=\"500\">\n              No <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>upcoming</span> meetings\n            </Typography>\n            <img\n              src={Images.noMeetings}\n              alt=\"noData\"\n              style={{ width: \"250px\", marginTop: \"1rem\" }}\n            />\n          </Grid>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit:cancelCall, \n          title: \"Are you sure you want to cancel this meeting?\",\n          content:\"\"\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UpcomingSessions;\n","import { Box, Typography } from '@mui/material';\nimport UpcomingSessions from './upcomingSessions';\n\nconst BookedSlots = () => {\n \n  return (\n    <Box sx={{\n      // background: \"#F8F8FC\",\n      borderRadius: \"10px\",\n      // boxShadow: 1,\n      overflowY:\"scroll\",\n      padding:\"0 1rem\",\n    }}>\n      <div>\n            <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#FFD8D3\"}}>\n            <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n                Meetings\n              </Typography>\n          </Typography> \n          </div>\n          <UpcomingSessions/>\n    </Box>\n  )\n}\n\nexport default BookedSlots","import { Box, Button, Grid, Stack, Tooltip, Typography } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport Images from \"../../../../assets\";\n// import CircularWithValueLabel from \"./circularprogress\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { uploadApplicationDocs } from \"../../../../services\";\nimport { updateApplication } from \"../../../../store/Slices/applicationsSlice\";\nimport { setWordCase } from \"../../../../assets/library\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { commonStackStyles, commonTypographyStyles } from \"../../../../components/styles/customStyles\";\n// import EastIcon from \"@mui/icons-material/East\";\nimport { Recommendation } from \"src/types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\n\nconst CardPage = () => {\n  const navigate = useNavigate();\n  const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n  const applied = useAppSelector((state) => state.applications);\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const ambitious = recommendations?.data && recommendations?.data?.data?.filter(\n    (item: Recommendation) => item?.possibilityOfAdmit === \"Ambitious\"\n  );\n  const safe: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Safe\"\n  );\n  const moderate: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Moderate\");\n\n  const sections = [\n    {\n      title: \"Activity\",\n      items: [\n        {\n          count: `${shortlisted.data?.length}`,\n          background: \"#FFF7E9\",\n          link: \"/profile/shortlisted\",\n          label: \"Wishlisted Courses\", icon: <img src={Images.courseicon} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${applied.data?.length}`,\n          background: \"#FFA89C4D\",\n          link: \"/profile/applications\",\n          label: \"Applied Universities\", icon: <img src={Images.courseicon} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n      ],\n    },\n    {\n      title: \"Recommendation\",\n      items: [\n        {\n          count: `${safe?.length}`,\n          link: `/profile/recommendedCourses/Safe`,\n          background: \"#FFA89C4D\",\n\n          label: \"Safe\", icon: <img src={Images.safe} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${moderate?.length}`,\n          link: `/profile/recommendedCourses/Moderate`,\n          background: \"#C9F9F6\",\n\n          label: \"Moderate\", icon: <img src={Images.moderate} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${ambitious?.length}`,\n          link: `/profile/recommendedCourses/Ambitious`,\n          background: \"#F4F4FF\",\n\n          label: \"Ambitious\", icon: <ErrorIcon sx={{ fontSize: \"1.1rem\" }} />\n        },\n      ],\n    },\n  ];\n  return (\n    <div>\n      <Box sx={{ borderRadius: \"10px\", pl: 2, height: { xs: \"100%\", } }}>\n        <React.Fragment >\n          <div>\n            <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#FFF7E9\" }}>\n              <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n                Activity\n              </Typography>\n            </Typography>\n          </div>\n          <Grid container spacing={2} sx={{ mt: -1.5 }}>\n            <Grid item xs={12} sx={{ borderRadius: \"10px\", p: 2 }}>\n              <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n                {sections?.[0].items.map((item, idx) => (\n                  <Stack key={idx} sx={[commonStackStyles, {\n                    // border: \"1px solid #E07C7C\",\n                    background: `${item.background}`,\n                    p: 2, cursor: \"pointer\"\n                  }]} onClick={() => navigate(item.link)}>\n                    <Typography variant=\"h6\" sx={commonTypographyStyles}>\n                      {(item.count)}\n                    </Typography>\n                    <Typography variant=\"subtitle2\" fontWeight=\"500\" sx={commonTypographyStyles}>\n                      {typeof item.icon === \"string\" ? (\n                        <>\n                          {item.icon}\n                        </>\n                      ) : (\n                        item.icon\n                      )}\n                      {item.label}\n                    </Typography>\n                  </Stack>\n                ))}\n              </Box>\n\n            </Grid>\n          </Grid>\n        </React.Fragment>\n        <React.Fragment >\n          <div>\n            <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#9CFFF9\" }}>\n              <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\", mb: 1 }} fontWeight=\"500\" fontSize=\"1.1rem\">\n                Recommendations\n              </Typography>\n            </Typography>\n          </div>\n          {recommendations.data && recommendations.data?.data?.length > 0 ?\n            <>\n              <Grid container spacing={2} sx={{ mt: -1.5 }}>\n                <Grid item xs={12} sx={{ borderRadius: \"10px\", p: 2 }}>\n                  <Box sx={{ display: \"flex\", gap: \"1rem\" }}>\n                    <Grid container spacing={2}>\n                      {sections?.[1].items.map((item, idx) => (\n                        <Grid item xs={6} md={6} lg={4}>\n                          <Box key={idx} sx={[{ background: `${item.background}`, p: 2, borderRadius: \"10px\", cursor: \"pointer\" }]} onClick={() => navigate(item.link)}>\n                            <Typography variant=\"h6\" sx={commonTypographyStyles}>\n                              {(item.count)}\n                            </Typography>\n                            <Typography variant=\"subtitle2\" sx={[commonTypographyStyles,]}>\n                              {typeof item.icon === \"string\" ? (\n                                <>\n                                  {item.icon}\n                                </>\n                              ) : (\n                                item.icon\n                              )}\n                              {item.label}\n                            </Typography>\n                          </Box>\n                        </Grid>\n                      ))}\n                    </Grid>\n                  </Box>\n\n                </Grid>\n              </Grid>\n            </> :\n            <Grid container spacing={2} sx={{ background: \"#F8F8FC\", borderRadius: \"10px\", mt: 1 }}>\n              <Grid item xs={9}>\n                <Typography color=\"#3B3F76\" >Oh <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>nooo!</span></Typography>\n                <Typography sx={{ mt: 1 }}>Recommendations not generated yet!</Typography>\n                <Button sx={{ display: \"flex\", mt: 1, gap: \"1rem\", alignItems: \"center\", cursor: \"pointer\", color: \"#3B3F76\", fontWeight: \"500\", textTransform: \"none\" }} onClick={() => navigate(\"/profile/recommendedCourses/generate\")}>Go to Recommendations Page </Button>\n              </Grid>\n              <Grid item xs={3}>\n                <img src={Images.noRecommend} alt=\"\" style={{ width: \"100px\", height: \"100px\" }} />\n              </Grid>\n            </Grid>\n          }\n        </React.Fragment>\n\n      </Box>\n    </div>\n  );\n};\n\nconst Checklist = () => {\n  const [loading, setLoading] = useState(false);\n  const inputFile = useRef<HTMLInputElement>(null);\n  const dispatch = useAppDispatch();\n  const applications = useAppSelector((state) => state.applications);\n\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    item: any,\n    docItem: any\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    try {\n      if (file !== null && file !== undefined) {\n        const formData = new FormData();\n        formData.append(\"uploaded_file\", file || null);\n        formData.append(\"applicationId\", item._id);\n        formData.append(\"checklistItemId\", docItem._id);\n        // setLoading(true)\n        const response = await uploadApplicationDocs(formData);\n        if (response) {\n          dispatch(setDocuments(response.data.data.docs));\n          dispatch(\n            updateApplication(response.data.data)\n          );\n          setLoading(false);\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (err) {\n      setLoading(false);\n    }\n  };\n\n  const imageClick = () => {\n    inputFile?.current?.click();\n  };\n  const filteredApplications = applications?.data?.filter((item) => {\n    return item?.docChecklist?.some((docItem) => !docItem?.isChecked);\n  })\n    .map((item) => ({\n      ...item,\n      docChecklist: item?.docChecklist?.filter((docItem) => !docItem?.isChecked),\n    }));\n\n  return (\n    <Box\n      sx={{\n        // boxShadow: 1,\n      }}\n    >\n      <div>\n        <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#FFD8D3\" }}>\n          <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n            Checklist\n          </Typography>\n        </Typography>\n      </div>\n      <Box\n        sx={{\n          height: \"200px\",\n          background: \"#F8F8FC\",\n          overflowY: \"scroll\",\n          borderRadius: \"10px\",\n          mt: 1\n        }}\n\n      >\n        {filteredApplications?.length > 0 ? (\n          filteredApplications?.map((item) => {\n            return item?.docChecklist?.map((docItem) => (\n              <>\n                <Grid\n                  container\n                  sx={{\n                    px: 2,\n                    py: 1,\n                    borderRadius: \"10px\",\n                    cursor: \"pointer\",\n                    margin: \"10px\",\n                    width: \"auto\",\n                    background: \"transparent\",\n                    borderBottom: \"3px solid #fff\"\n                  }}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    onClick={() =>\n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"applicationPopup\",\n                              data: item._id,\n                              dimensions: {\n                                width: \"800px\",\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      )\n                    }\n                  >\n                    <Typography\n                      fontSize=\"14px\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        src={item?.course?.university?.logoSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"2rem\",\n                          height: \"2rem\",\n                          marginRight: \"10px\",\n                          borderRadius: \"50%\",\n                        }}\n                      />\n                      {item?.course?.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography fontWeight=\"500\" fontSize=\"14px\">\n                      {setWordCase(docItem.name)}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={6}\n                    sx={{\n                      display: \"flex\",\n                      height: \"20px\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    {docItem?.doc ? (\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        {/* <Link\n                          to={`/pdfPreview?type=${docItem?.doc?.contentType}&id=${docItem?.doc?._id}`}\n                          // to=\"/pdfPreview\"\n                          target=\"_blank\"\n                          // onClick={() => {\n                          //   localStorage.setItem(\n                          //     \"docId\",\n                          //     docItem?.doc?._id\n                          //   );\n                          // }}\n                          style={{ textDecoration: \"none\" }}\n                        > */}\n                        <VisibilityOutlinedIcon\n                          sx={{ fontSize: \"large\" }}\n                          onClick={() => {\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"fileViewer\",\n                                    data: docItem?.doc?.data?.preview_url,\n                                    dimensions: {\n                                      width: \"500px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                }\n                              })\n                            );\n                          }}\n                        />\n                        <h4\n                          style={{\n                            color: \"#000\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            fontSize: \"12px\",\n                            // width: \"120px\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                            fontWeight:400,marginLeft:\"5px\"\n                          }}\n                        >\n                          {docItem?.doc?.data?.FileName}\n                        </h4>\n                        {/* </Link> */}\n                      </Box>\n                    ) : (\n                      <>\n                        <input\n                          style={{ display: \"none\" }}\n                          type=\"file\"\n                          className=\"\"\n                          name=\"image\"\n                          onChange={(event) =>\n                            handleSubmit(event, item, docItem)\n                          }\n                          ref={inputFile}\n                          accept=\".pdf\"\n                        />\n                        <Button\n                          sx={{\n                            color: \"#000\",\n                            textTransform: \"none\",\n                            p: 0.25,\n                            fontSize: \"0.7rem\",\n                            ml: 1,\n                          }}\n                          onClick={imageClick}\n                        >\n                          {loading ? (\n                            <Box\n                              component=\"img\"\n                              src={Images.standardLoader}\n                              alt=\"standardLoader\"\n                              sx={{ width: \"1rem\", height: \"1rem\" }}\n                            />\n                          ) : (\n                            <FileUploadOutlinedIcon />\n                          )}\n                        </Button>\n                      </>\n                    )}\n                    <Typography\n                      sx={{\n                        fontSize: \"11px\",\n                        margin: \"2px 2px 0 0\",\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        \"&:hover .cancel-icon\": {\n                          display: \"block !important\",\n                        },\n                      }}\n                    >\n                      <InfoOutlinedIcon\n                        sx={{ color: \"#FF751A\", fontSize: \"1rem\" }}\n                      />\n                      {docItem?.desc && (\n                        <span\n                          className=\"cancel-icon\"\n                          style={{\n                            display: \"none\",\n                            color: \"#000\",\n                            position: \"absolute\",\n                            // border: \"1px solid #7d7d7d\",\n                            padding: \"2px\",\n                            maxWidth: \"200px\",\n                            zIndex: 1,\n                            // background: \"#fff\",\n                            textAlign: \"center\",\n                            right: 0,\n                            border: \"1px solid #000\",\n                            borderRadius: \"5px\"\n                          }}\n                        >\n                          {docItem.desc}\n                        </span>\n                      )}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </>\n            ));\n          })\n        ) : (\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"80%\",\n            }}\n          >\n            <img src={Images.noData} alt=\"nodata\" />\n            <Typography sx={{ display: \"flex\" }}>\n              There is no checklist\n              <Tooltip\n                slotProps={{\n                  tooltip: {\n                    sx: {\n                      color: \"#514E6A\",\n                      backgroundColor: \"#ffff\",\n                      boxShadow: 2,\n                      cursor: \"pointer\",\n                    },\n                  },\n                }}\n                title=\"A checklist is a list of items or tasks added by the Student Advisor which need’s \nto be completed or verified. It serves as a tool for ensuring that all necessary \nsteps or items are addressed in a particular process or activity. Checklists \nare commonly used in various contexts, such as in planning, organizing, quality \nassurance, and everyday tasks, to help individuals or teams stay organized \nand ensure that nothing is overlooked.\"\n                placement=\"top-start\"\n              >\n                <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\" }} />\n              </Tooltip>\n            </Typography>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport { CardPage, Checklist };\n","import { Avatar, Box, Grid, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { getAdvisorTitle, normalizeType } from \"../../../../assets/library\";\nimport {\n  commonStackStyles,\n  commonTypographyStyles,\n} from \"../../../../components/styles/customStyles\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { User } from \"../../../../types/types\";\n\nconst Events = () => {\n  const advisor = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n  interface Advisor {\n    _id: string;\n    info: User;\n    assignedCountries: string[],\n  }\n  const bgColors = [\"#FFA89C4D\", \"#FFF7E9\", \"#F4F4FF\", \"#C9F9F6\"];\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"10px\",\n        overflow: \"hidden\"\n      }}\n    >\n      <div>\n        <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#D1D3F9\" }}>\n          <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n            Advisors\n          </Typography>\n        </Typography>\n      </div>\n      <Box sx={{\n        mt: 2, overflowX: \"auto\", scrollbarWidth:\"none\"\n      }}>\n        {advisor?.data?.length > 0 ? (\n          <Grid container spacing={2} sx={{ flexWrap: \"nowrap\" }}>\n            {advisor?.data?.map((advisor: Advisor, idx: number) => (\n              <Grid\n                item\n                xs={6}\n                sm={4}\n                sx={{ minWidth: \"150px\", borderRadius: \"10px\", p: 2 }}\n                key={idx}\n              >\n                <Stack\n                  spacing={1}\n                  sx={[\n                    commonStackStyles,\n                    {\n                      position: \"relative\",\n                      cursor: \"pointer\",\n                      background: bgColors[idx % bgColors.length],\n                      marginTop: \"1.5rem\",\n                      height: \"100px\",\n                      // width:\"150px\",\n                      justifyContent: \"center\"\n                    },\n                  ]}\n                  alignItems=\"center\"\n                  onClick={() =>\n                    dispatch(\n                      setPopup({\n                        show: true,\n                        data: {\n                          container: {\n                            name: \"advisor\",\n                            data: advisor,\n                            dimensions: {\n                              width: \"900px\",\n                              height: \"85%\"\n\n                            },\n                          },\n                          type: \"custom\",\n                        },\n                      })\n                    )\n                  }\n                >\n                  <Avatar\n                    src={advisor?.info?.displayPicSrc}\n                    alt=\"pic\"\n                    sx={{\n                      width: \"2.5rem\",\n                      height: \"2.5rem\",\n                      borderRadius: \"50%\",\n                      position: \"absolute\",\n                      top: \"-10%\",\n                    }}\n                  />\n                  <Typography\n                    color=\"#3B3F76\"\n                    fontSize=\"14px\"\n                    sx={[commonTypographyStyles, { mt: 1, pb: 0 }]}\n                  >\n                    {getAdvisorTitle(advisor?.info?.role)}\n                  </Typography>\n                  <Typography sx={commonTypographyStyles}>\n                    {normalizeType(advisor?.info?.firstName)}\n                    {/* {normalizeType(advisor?.info?.lastName)} */}\n                  </Typography>\n                </Stack>\n              </Grid>\n            ))}\n          </Grid>\n        ) : (\n          <Box sx={{ height: \"5rem\", background: \"#F8F8FC\", borderRadius: \"20px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography color=\"#3B3F76\">Advisors not assigned</Typography>\n          </Box>\n        )}\n      </Box>\n\n      {/* <div>\n            <Typography sx={{position:\"relative\",width:\"1.5rem\",height:\"1.5rem\",borderRadius:\"50%\",background:\"#9CFFF9\"}}>\n            <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n                Events\n              </Typography>\n          </Typography> \n          </div>\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <img src={Images.noData} alt=\"nodata\" />\n        <Typography>No events</Typography>\n      </Box> */}\n    </Box>\n  );\n};\n\nexport default Events;\n","import { Box, Grid } from \"@mui/material\";\nimport React from \"react\";\nimport BookedSlots from \"./dashboard/bookedSlots\";\nimport { CardPage, Checklist } from \"./dashboard/cardPage\";\nimport Events from \"./dashboard/events\";\n\nconst Dashboard = () => {\n  return (\n    <Box sx={{\n      height: \"auto !important\",\n      overflow:\"hidden !important\",\n    }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6} >\n          <CardPage />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={6}\n          \n        >\n          <Checklist />\n        </Grid>\n        <Grid item xs={12} md={6} >\n          <BookedSlots />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={6}\n        >\n          <Events />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useMemo } from \"react\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  InputAdornment,\n  ListSubheader,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ReusableDropdownProps {\n  label: string;\n  name: string;\n  options: string[];\n  value: any;\n  onChange: any;\n  placeholder?: string;\n  searchEnabled?: boolean;  // Toggle to enable or disable the search box\n}\n\nconst ReusableDropdown: React.FC<ReusableDropdownProps> = ({\n  label,\n  name,\n  options,\n  value,\n  onChange,\n  placeholder = `Select `,\n  searchEnabled = true,\n}) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n// console.log(value)\n  const filteredOptions = useMemo(\n    () =>\n      options.filter((option) =>\n        option.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [options, searchQuery]\n  );\n\n  return (\n    <FormControl fullWidth>\n      <Select\n        labelId={`${name}-label`}\n        size=\"small\"\n        id={name}\n        name={name}\n        displayEmpty\n        onClose={()=>setSearchQuery(\"\")}\n        value={value}\n        onChange={onChange}\n        fullWidth\n        IconComponent={ExpandMoreIcon}\n        renderValue={(selected) => {\n          if (!selected) {\n            return (\n              <Typography sx={{ color: \"#757575\", fontSize: \"14px\" }}>\n                {placeholder}\n              </Typography>\n            );\n          }\n          return selected;\n        }}\n        MenuProps={{\n          PaperProps: {\n            sx: {\n              maxHeight: 300,\n              maxWidth: 300,\n              \"&.MuiPaper-root\": {\n                boxShadow: 3,\n                borderRadius: \"15px !important\",\n              },\n            },\n          },\n          autoFocus: false,\n        }}\n        sx={{\n        }}\n      >\n        {searchEnabled && (\n          <ListSubheader>\n            <TextField\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n        <MenuItem\n          disabled\n          value=\"\"\n          sx={{\n            \"& .MuiTypography-root\": {\n              fontSize: \"14px !important\",\n            },\n          }}\n        >\n          {placeholder} \n        </MenuItem>\n        {filteredOptions.length > 0 ? (\n          filteredOptions.map((name, i) => (\n            <MenuItem\n              key={i}\n              value={name}\n              sx={{\n                \"& .MuiTypography-root\": {\n                  fontSize: \"14px !important\",\n                },\n                \"& .MuiSvgIcon-root \": {\n                  fontSize: \"1rem\",\n                },\n                whiteSpace: \"normal\",\n              }}\n            >\n              {name}\n            </MenuItem>\n          ))\n        ) : (\n          <MenuItem disabled>No options available</MenuItem>\n        )}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default ReusableDropdown;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { bachelorCourses } from \"../../../../assets/menu\";\nimport { editProfile, getSearchUniversityDetails } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setUnderGraduation } from \"../../../../store/Slices/educationHistorySlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { Close, Star } from \"@mui/icons-material\";\nimport * as Yup from \"yup\";\n// import { fetchAllMsgsEndPoint } from \"src/services/endpoints\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Images from \"src/assets\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst Bachelors = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [Isbacklog, setIsbacklog] = useState();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [institutions, setInstitutions] = useState([])\n  const [institutionName, setInstitutionName] = useState<string>(data?.instituteName || \"\");\n  const [universities, setUniversities] = useState<string[]>(data?.affiliatedUniversity ? [data.affiliatedUniversity] : []);\n  const [affiliatedUniversity, setAffiliatedUniversity] = useState<string>(data?.affiliatedUniversity || \"\");\n  const [programMajor, setProgramMAjor] = useState<string>(data?.programMajor || \"\");\n  const [degreeName, setDegreeName] = useState<string>(data?.degreeProgram ? data?.degreeProgram : \"\");\n\n  const [ieh, setIeh] = useState<boolean>(false);\n  const [institutionId, setInstitutionId] = useState<string>(\"\");\n  const [gradingSystem, setGradingSystem] = useState(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  const profile = useAppSelector((store) => store.profile);\n  const [iehStatus, setIEHStatus] = useState<any>(profile?.data?.IEH);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n    setTotalScore('');\n  };\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  // console.log(\"city\",selectedCity)\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  const profileSchema = Yup.object().shape({\n    underGraduation: Yup.object().shape({\n      // degreeProgram: Yup.string().required(\"Degree Program is required\"),\n      // programMajor: Yup.string().required(\"Specialization is required\"),\n      // instituteName: Yup.string().required(\"Institution Name is required\"),\n      // affiliatedUniversity: Yup.string().required(\"Affiliated University is required\"),\n      // gradingSystem: Yup.string().required(\"Grading System is required\"),\n      // totalScore: Yup.mixed() \n      //   .required('Score is required')\n      //   .test('valid-score', 'Invalid score', function (value) {\n      //     const { gradingSystem } = this.parent;\n      //     if (gradingSystem === 'percentage') {\n      //       return typeof value === 'number' && value >= 1 && value <= 100;\n      //     }\n      //     if (gradingSystem === 'GPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 10;\n      //     }\n      //     if (gradingSystem === 'CGPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 6;\n      //     }\n\n      //     if (gradingSystem === 'grade') {\n      //       return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n      //     }\n\n      //     return true; \n      //   })\n      // ,\n      // startDate: Yup.date().required(\"Start Date is required\"),\n      // endDate: Yup.date()\n      //   .when(\"isCompleted\", {\n      //     is: true,\n      //     then: schema => schema.required(\"End Date is required\"),\n      //   })\n      //   .nullable(),\n      // backlogs: Yup.number()\n      //   .when(\"backlogs\", {\n      //     is: (value: string) => value === \"yes\",\n      //     then: schema => schema.required(\"Number of Backlogs is required\").min(1),\n      //   })\n      //   .nullable(),\n      // country: Yup.string().required(\"Country is required\"),\n      // state: Yup.string().required(\"State/Province is required\"),\n      // city: Yup.string().required(\"City/Town is required\"),\n    }),\n  });\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    setInstitutionName(value);\n  };\n\n  // Handle institution selection\n\n  useEffect(() => {\n    if (searchTerm.length > 3) {\n      setLoading(true);\n      setHasSearched(true); // Mark as searched when making an API call\n      getSearchUniversityDetails(searchTerm, 1, 10, 1, 0, 0, 0, 0)\n        .then((response) => {\n          setInstitutions(response.data?.institutions || []);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching institutions:\", error);\n          setLoading(false);\n        });\n    } else {\n      setInstitutions([]);\n      setHasSearched(false); // Reset search state if searchTerm is not long enough\n    }\n  }, [searchTerm]);\n\n  const [customField, setCustomField] = useState<boolean>(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n  const initialValues = {\n    underGraduation: {\n      instituteName: institutionName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      programMajor: programMajor, // enum  eee,ese,ece\n      degreeProgram: degreeName, // enum btech,bedu,bsc....\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      affiliatedUniversity: affiliatedUniversity,\n      totalScore: totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const [specializations, setSpecializations] = useState<any>([]);\n\n  const handleDegreeChange = (event: React.ChangeEvent<{ value: unknown }>, setFieldValue: Function) => {\n    const selectedDegree = event.target.value as string;\n    // setFieldValue('underGraduation.degreeProgram', selectedDegree);\n    const degreeCourses = bachelorCourses[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[selectedDegree] || [];\n    setSpecializations(selectedSpecializations);\n    setFieldValue('underGraduation.programMajor', '');\n  };\n\n  useEffect(() => {\n    const degreeCourses = bachelorCourses[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[data?.degreeProgram] || [];\n    setSpecializations(selectedSpecializations);\n  }, [data?.degreeProgram])\n\n  // const [showCustomInput, setShowCustomInput] = useState(false);\n  // const [showUniversity, setShowUniversity] = useState(false);\n  // const [showSpecialization, setShowSpecialization] = useState(false);\n  // const [showDegree, setShowDegree] = useState(false);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n  const handleOptionClick = (option: any) => {\n    if (option === \"Other\") {\n      // setShowCustomInput(true);\n      setInstitutionName(\"\");\n      setIeh(false);\n      setSearchTerm(\"\");\n      setCustomField(true)\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"customfield\",\n              data: {\n                name: \"underGraduation.institutionName\",\n                fieldName: institutionName,\n                setFieldName: setInstitutionName,\n                placeholder: \"Enter your institution name\"\n              },\n              dimensions: {\n                width: \"450px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      )\n    } else {\n      setInstitutionName(option?.InstitutionName);\n      setUniversities(option?.university || []);\n      setIeh(option?.IEH?.exists)\n      setInstitutionId(option?._id)\n      setAffiliatedUniversity(\"\");\n      setSearchTerm(\"\");\n    }\n  };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n\n  const submitHandler = async (values: any) => {\n    try {\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setUnderGraduation(response.data.data.education.underGraduation));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"UnderGraduate Details are Added Succesfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoader(false)\n\n    } catch (error) {\n      setLoader(false)\n\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={profileSchema}\n        enableReinitialize\n        onSubmit={(values: any) => submitHandler(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => {\n          // console.log(errors)\n          return (\n            <Form style={{}}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Degree Name\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"underGraduation.degreeProgram\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={degreeName}\n                    onChange={(e: any) => {\n                      handleDegreeChange(e, setFieldValue);\n                      setDegreeName(e.target.value);\n                    }}\n                    fullWidth\n                    sx={{\n                      \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"red !important\", // Custom error border color\n                      },\n                    }}\n                    MenuProps={MenuProps}\n                    // error={errors.underGraduation.programMajor}\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {Object.keys(bachelorCourses[0]).map((degree) => (\n                      <MenuItem key={degree} value={degree} sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                        \"& .MuiSvgIcon-root \": {\n                          fontSize: \"1rem\",\n                        },\n                        whiteSpace: \"normal\",\n                      }}>\n                        {degree}\n                      </MenuItem>\n                    ))}\n                    {!Object.keys(bachelorCourses[0]).includes(degreeName) && degreeName !== \"\" && (\n                      <MenuItem key={degreeName} value={degreeName}>\n                        {degreeName}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        // setShowDegree(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"underGraduation.degreeProgram\",\n                                  fieldName: degreeName,\n                                  setFieldName: setDegreeName,\n                                  placeholder: \"Enter your degree name\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }}\n                    >\n                      Can't find your degree\n                    </MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Specialization\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"underGraduation.programMajor\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={programMajor}\n                    onChange={(e) => setProgramMAjor(e.target.value)}\n                    fullWidth\n                    sx={{\n                      \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"red !important\", // Custom error border color\n                      },\n                    }}\n                    MenuProps={MenuProps}\n                    // error={errors.underGraduation.programMajor}\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {specializations?.map((name: string) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n                    {!specializations.includes(programMajor) && programMajor !== \"\" && (\n                      <MenuItem key={programMajor} value={programMajor}>\n                        {programMajor}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"underGraduation.programMajor\",\n                                  fieldName: programMajor,\n                                  setFieldName: setProgramMAjor,\n                                  placeholder: \"Enter your specialization\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }}\n                    >\n                      Can't find your specialization\n                    </MenuItem>\n                  </Select>\n                  <ErrorMessage\n                    name=\"underGraduation.programMajor\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"instituteName\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                    Name of Institution\n                  </InputLabel>\n                  <Box sx={{ width: \"100%\", position: \"relative\" }}>\n\n                    <TextField\n                      value={institutionName}\n                      onChange={handleInputChange}\n                      placeholder=\"Search for an institution\"\n                      variant=\"outlined\"\n                      name=\"underGraduation.instituteName\"\n                      size=\"small\"\n                      autoComplete=\"off\"\n                      fullWidth\n                      InputProps={{\n                        endAdornment: (\n                          <>\n                            {loading && <CircularProgress color=\"inherit\" size={20} />}\n                            {institutionName && (\n                              <Close\n                                sx={{ cursor: \"pointer\" }}\n                                onClick={() => {\n                                  setInstitutionName(\"\");\n                                  setInstitutions([]);\n                                  setSearchTerm(\"\");\n                                  // setShowCustomInput(false);\n                                  setHasSearched(false);\n                                }}\n                              />\n                            )}\n                          </>\n                        ),\n                      }}\n                    />\n                    {loading || institutions.length > 0 || (hasSearched && institutions.length === 0) ? (\n                      <Box\n                        sx={{\n                          position: \"absolute\",\n                          zIndex: 1,\n                          backgroundColor: \"#fff\",\n                          boxShadow: 1,\n                          maxHeight: \"200px\",\n                          overflowY: \"auto\",\n                          width: \"100%\",\n                        }}\n                      >\n                        {institutions.map((option: any, index) => (\n                          <MenuItem\n                            key={index}\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                            }}\n                            onClick={() => handleOptionClick(option)}\n                          >\n                            {option?.InstitutionName}\n                            {option?.IEH?.exists && <Star sx={{ fontSize: \"1.1rem\", color: \"orange\" }} />}\n                            {option?.District && `, ${option?.District}`}\n                          </MenuItem>\n                        ))}\n                        {!loading && hasSearched && (\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              // alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5  !important\"\n\n                              // justifyContent: \"center\",\n                            }}\n                            onClick={() => handleOptionClick(\"Other\")}\n\n                          >\n                            Can't find institution\n                          </MenuItem>\n                        )}\n                      </Box>\n                    ) : null}\n                  </Box>\n\n                  <ErrorMessage\n                    name=\"underGraduation.instituteName\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"affiliatedUniversity\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                    Affiliated University\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"affiliatedUniversity\"\n                    name=\"underGraduation.affiliatedUniversity\"\n                    displayEmpty\n                    value={affiliatedUniversity}\n                    onChange={(e) => setAffiliatedUniversity(e.target.value)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem disabled value=\"\">\n                      Select University\n                    </MenuItem>\n                    {universities.map((name: string) => (\n                      <MenuItem key={name} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                    {!universities.includes(affiliatedUniversity) && programMajor !== \"\" && (\n                      <MenuItem key={affiliatedUniversity} value={affiliatedUniversity}>\n                        {affiliatedUniversity}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"underGraduation.affiliatedUniversity\",\n                                  fieldName: affiliatedUniversity,\n                                  setFieldName: setAffiliatedUniversity,\n                                  placeholder: \"Enter your university\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n\n                      }}\n                    >\n                      Can't find university\n                    </MenuItem>\n                  </Select>\n                  <ErrorMessage\n                    name=\"underGraduation.affiliatedUniversity\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                {ieh ?\n                  <Grid item xs={12} sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n                    <Typography>This college is a member of <b style={{ color: \"#3b3f76\" }}>IEH</b> . You need to verify to get benefits.</Typography>\n                    {iehStatus?.verificationStatus === \"Verification Request Initiated\" ? \"\" :\n                      <Button sx={globalButton} onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"ieh\",\n                                data: {\n                                  id: institutionId,\n                                  setIEHStatus: setIEHStatus\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }>Verify</Button>}\n                  </Grid>\n                  : \"\"}\n\n                {iehStatus?.verificationStatus === \"Verification Request Initiated\" ?\n                  <Grid item xs={12}>\n                    <Typography>Your IEH verification request is initiated</Typography>\n                  </Grid> : \"\"}\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Grading System\n                  </InputLabel>\n\n                  <Select\n                    id=\"grading-system\"\n                    size=\"small\"\n                    name=\"gradingSystem\"\n                    displayEmpty\n                    defaultValue=\"\"\n\n                    value={gradingSystem}\n                    onChange={(e: any) => handleGradingSystemChange(e)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                    <MenuItem value=\"percentage\">Percentage</MenuItem>\n                    <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                    <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                    <MenuItem value=\"grade\">Grade</MenuItem>\n                  </Select>\n                  <ErrorMessage\n                    name=\"underGraduation.gradingSystem\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Score{\" \"}\n                  </InputLabel>\n                  {gradingSystem === \"grade\" ?\n                    <Select\n                      size=\"small\"\n                      id=\"totalScore\"\n                      name=\"underGraduation.totalScore\"\n                      displayEmpty\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem disabled value=\"\">\n                        Select Grade\n                      </MenuItem>\n                      {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                        <MenuItem key={name} value={name}>\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    :\n                    <TextField\n                      // type=\"number\"\n                      name=\"underGraduation.totalScore\"\n                      size=\"small\"\n                      fullWidth\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      placeholder={\n                        gradingSystem === \"percentage\"\n                          ? \"Enter percentage\"\n                          : gradingSystem === \"grade\"\n                            ? \"Enter grade\"\n                            : \"Enter score\"\n                      }\n                      inputProps={{\n                        step: \"0.1\",\n\n                        min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                        max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                        list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                        onInput: (e) => {\n                          const target = e.target as HTMLInputElement;\n                          const value = parseFloat(target.value);\n                          if (gradingSystem !== \"Grade\") {\n                            const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                            const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                            if (value < (min || 0) || value > (max || Infinity)) {\n                              target.value = value.toString().slice(0, -1); // Remove the last character\n                            }\n                          }\n                        },\n                      }}\n                    />}\n\n                  <ErrorMessage\n                    name=\"underGraduation.totalScore\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                    Education status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"education-status\"\n                      name=\"underGraduation.isCompleted\"\n                      value={values.underGraduation.isCompleted}\n                      onChange={(event) => {\n                        handleChange({\n                          target: {\n                            name: \"underGraduation.isCompleted\",\n                            value: event.target.value === \"true\",\n                          },\n                        });\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"true\"\n                        control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                        label=\"Completed\"\n                      />\n                      <FormControlLabel\n                        value=\"false\"\n                        control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                        label=\"Pursuing\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values?.underGraduation?.startDate}\n                    onChange={(date) => handleChange({ target: { name: `underGraduation.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                  <ErrorMessage\n                    name=\"underGraduation.startDate\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {values.underGraduation.isCompleted  && (\n                    <>\n                      <InputLabel sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        End Date\n                      </InputLabel>\n                      \n                      <DatePickerComponent\n                        selectedDate={values?.underGraduation?.endDate}\n                        onChange={(date) =>\n                          handleChange({\n                            target: {\n                              name: `underGraduation.endDate`,\n                              value: date?.toISOString().slice(0, 10),\n                            },\n                          })\n                        }\n                        minDate={\n                          values.underGraduation.startDate\n                            ? new Date(\n                              new Date(values.underGraduation.startDate).setFullYear(\n                                new Date(values.underGraduation.startDate).getFullYear() + 1\n                              )\n                            )\n                            : undefined\n                        }\n                        maxDate={\n                          values.underGraduation.startDate\n                            ? (() => {\n                                const fourYearsFromStartDate = new Date(\n                                  new Date(values.underGraduation.startDate).setFullYear(\n                                    new Date(values.underGraduation.startDate).getFullYear() + 4\n                                  )\n                                );\n                                return fourYearsFromStartDate > new Date() ? new Date() : fourYearsFromStartDate;\n                              })()\n                            : new Date()\n                        }\n                        placeholderText=\"End Date\"\n                      />\n\n                      <ErrorMessage name=\"underGraduation.endDate\" component=\"div\" className=\"error\" />\n                    </>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", display: \"flex\", alignItems: \"center\" }}>\n                    Backlogs\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      // name=\"underGraduation.backlogs\"\n                      value={Isbacklog}\n                      onChange={(e: any) => setIsbacklog(e.target.value)}\n                    >\n                      <FormControlLabel\n                        value=\"yes\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value=\"no\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {Isbacklog === \"yes\" || values?.underGraduation?.backlogs ?\n                    <>\n                      <InputLabel id=\"\" sx={{ color: \"#000\" }}>\n                        Number of Backlogs\n                      </InputLabel>\n                      <CustomField\n                        id=\"name\"\n                        type=\"number\"\n                        placeholder=\"Number of backlogs\"\n                        name=\"underGraduation.backlogs\"\n                        value={values.underGraduation.backlogs}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </>\n                    : null}\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"underGraduation.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"Country\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"underGraduation.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"State\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"underGraduation.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          autoComplete=\"off\"\n                          // autoFocus=\"true\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        {!selectedState ? \"Please select state\" :\n                          \"Select city\"}\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        selectedState && <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined &&\n                        selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        // value=\"\"\n                        onClick={() => {\n                          // setSelectedCity(\"\")\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"underGraduation.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: cityHandle,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                                // eventHandler:cityHandle\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n\n\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                >\n                  <CustomButton\n                    handleSubmit={() => submitHandler}\n                    width=\"100px\"\n                  >\n                    {loader ? (\n                      <img\n                        src={Images.standardLoader}\n                        alt=\"load\"\n                        style={{ width: \"1rem\", height: \"1rem\" }}\n                      />\n                    ) : (\n                      \"Save\"\n                    )}\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Bachelors;\n","import {\n  // Box,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { editProfile } from \"../../../../services\";\nimport { setPlus2 } from \"../../../../store/Slices/educationHistorySlice\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { boards, languages } from \"../../../../assets/menu\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from 'yup';\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst Plus2 = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [Isbacklog, setIsbacklog] = useState()\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const [gradingSystem, setGradingSystem] = useState(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  const [stream, setStream] = useState<string>(data?.stream || \"\");\n  const [customField, setCustomField] = useState<boolean>(false);\n  // const [showStream, setShowStream] = useState<boolean>(false);\n  const [board, setBoard] = useState<string>(data?.board || \"\");\n  // const [showBoard, setShowBoard] = useState<boolean>(false);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n    setTotalScore('');\n  };\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n\n  const initialValues = {\n    plus2: {\n      instituteName: data?.instituteName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      languageOfInstruction: data?.languageOfInstruction,\n      gradingSystem: data?.gradingSystem, // enum % grade gpa cgpa\n      board: board,\n      stream: stream,\n      totalScore: data?.totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n  const submit = async (values: any) => {\n    try {\n      const response = await editProfile(values);\n      // console.log(values)\n      if (response) {\n        dispatch(setPlus2(response.data.data.education.plus2));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Diploma details added successfully \",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) { }\n  };\n  // eslint-disable-next-line\n  const validationSchema = Yup.object().shape({\n    plus2: Yup.object().shape({\n      instituteName: Yup.string().required(\"Institution name is required\"),\n      // city: Yup.string().required(\"City is required\"),\n      state: Yup.string().required(\"State is required\"),\n      country: Yup.string().required(\"Country is required\"),\n      // languageOfInstruction: Yup.string().required(\n      //   \"Language of instruction is required\"\n      // ),\n      gradingSystem: Yup.string().required(\"Grading system is required\"),\n      totalScore: Yup.mixed()\n        .required('Score is required')\n        .test('valid-score', 'Invalid score', function (value) {\n          const { gradingSystem } = this.parent;\n          if (gradingSystem === 'percentage') {\n            return typeof value === 'number' && value >= 1 && value <= 100;\n          }\n          if (gradingSystem === 'GPA') {\n            return typeof value === 'number' && value >= 1 && value <= 10;\n          }\n          if (gradingSystem === 'CGPA') {\n            return typeof value === 'number' && value >= 1 && value <= 6;\n          }\n\n          if (gradingSystem === 'grade') {\n            return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n          }\n\n          return true;\n        })\n      ,\n      startDate: Yup.date().required(\"Start date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable(),\n      // backlogs: Yup.number()\n      //   .when(\"isCompleted\", {\n      //     is: \"false\",\n      //     then: Yup.number().notRequired(),\n      //     otherwise: Yup.number().required(\"Backlog count is required\"),\n      //   })\n      //   .nullable(),\n    }),\n  });\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        // validationSchema={validationSchema}\n        enableReinitialize={true}\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, resetForm }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Specialization/Subjects\n                  </InputLabel>\n                  <TextField\n                    value={stream}\n                    onChange={(e) => setStream(e.target.value)}\n                    placeholder=\"Enter your stream name\"\n                    variant=\"outlined\"\n                    name=\"plus2.stream\"\n                    size=\"small\"\n                    autoComplete=\"off\"\n                    fullWidth\n                  // sx={{ mt: 2 }}\n                  />\n\n                  <ErrorMessage\n                    name=\"plus2.stream\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                    Education status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      name=\"plus2.isCompleted\"\n                      value={values.plus2.isCompleted}\n                      onChange={(event) => {\n                        handleChange({\n                          target: {\n                            name: \"plus2.isCompleted\",\n                            value: event.target.value === \"true\",\n                          },\n                        });\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"true\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Completed\"\n                      />\n                      <FormControlLabel\n                        value=\"false\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Pursuing\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Name of Institution{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name of Institution\"\n                    name=\"plus2.instituteName\"\n                    value={values.plus2.instituteName}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                  <ErrorMessage\n                    name=\"plus2.instituteName\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", display: \"flex\", alignItems: \"center\" }}>\n                    Board\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"A board in education is a governing body that manages an educational system or part of it\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"plus2.board\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={board}\n                    onChange={(e) => setBoard(e.target.value)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {boards.map(\n                      (name: any) => (\n                        <MenuItem\n                          key={name}\n                          value={name}\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}\n                        >\n                          {name}\n                        </MenuItem>\n                      )\n                    )}\n                    {!boards.includes(board) && board !== \"\" && (\n                      <MenuItem key={board} value={board}>\n                        {board}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        // setShowBoard(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"plus2.board\",\n                                  fieldName: board,\n                                  setFieldName: setBoard,\n                                  placeholder: \"Enter your board\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }}\n                    >\n                      Can't find your board\n                    </MenuItem>\n                  </Select>\n\n                  <ErrorMessage\n                    name=\"plus2.board\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Grading System\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"plus2.gradingSystem\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={gradingSystem}\n                    onChange={(e: any) => handleGradingSystemChange(e)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                    <MenuItem value=\"percentage\">Percentage</MenuItem>\n                    <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                    <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                    <MenuItem value=\"grade\">Grade</MenuItem>\n                  </Select>\n                  <ErrorMessage\n                    name=\"plus2.gradingSystem\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Score{\" \"}\n                  </InputLabel>\n                  {gradingSystem === \"grade\" ?\n                    <Select\n                      size=\"small\"\n                      id=\"totalScore\"\n                      name=\"plus2.totalScore\"\n                      displayEmpty\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem disabled value=\"\">\n                        Select Grade\n                      </MenuItem>\n                      {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                        <MenuItem key={name} value={name}>\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    :\n                    <TextField\n                      // type=\"number\"\n                      name=\"plus2.totalScore\"\n                      size=\"small\"\n                      fullWidth\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      placeholder={\n                        gradingSystem === \"percentage\"\n                          ? \"Enter percentage\"\n                          : gradingSystem === \"grade\"\n                            ? \"Enter grade\"\n                            : \"Enter score\"\n                      }\n                      inputProps={{\n                        step: \"0.1\",\n\n                        min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                        max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                        list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                        onInput: (e) => {\n                          const target = e.target as HTMLInputElement;\n                          const value = parseFloat(target.value);\n                          if (gradingSystem !== \"Grade\") {\n                            const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                            const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                            if (value < (min || 0) || value > (max || Infinity)) {\n                              target.value = value.toString().slice(0, -1); // Remove the last character\n                            }\n                          }\n                        },\n                      }}\n                    />}\n\n                  <ErrorMessage\n                    name=\"plus2.totalScore\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values?.plus2?.startDate}\n                    onChange={(date) => handleChange({ target: { name: `plus2.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                  <ErrorMessage\n                    name=\"plus2.startDate\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {values.plus2.isCompleted && (\n                    <>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        End Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.plus2?.endDate}\n                        onChange={(date) =>\n                          handleChange({\n                            target: {\n                              name: `plus2.endDate`,\n                              value: date?.toISOString().slice(0, 10),\n                            },\n                          })\n                        }\n                        minDate={\n                          values.plus2.startDate\n                            ? new Date(\n                              new Date(values.plus2.startDate).setFullYear(\n                                new Date(values.plus2.startDate).getFullYear() + 1\n                              )\n                            )\n                            : undefined\n                        }\n                        maxDate={\n                          values.plus2.startDate\n                            ? (() => {\n                              const fourYearsFromStartDate = new Date(\n                                new Date(values.plus2.startDate).setFullYear(\n                                  new Date(values.plus2.startDate).getFullYear() + 2\n                                )\n                              );\n                              return fourYearsFromStartDate > new Date() ? new Date() : fourYearsFromStartDate;\n                            })()\n                            : new Date()\n                        }\n                        placeholderText=\"End Date\"\n                      />\n                    </>\n                  )}\n                  <ErrorMessage\n                    name=\"plus2.endDate\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Language of instruction\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Language of Instruction\"\n                    name=\"plus2.languageOfInstruction\"\n                    options={languages}\n                    value={values.plus2.languageOfInstruction}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}  // Enables the search box\n                  />\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", display: \"flex\", alignItems: \"center\" }}>\n                    Backlogs\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      // name=\"plus2.backlogs\"\n                      value={Isbacklog}\n                      onChange={(e: any) => setIsbacklog(e.target.value)}\n                    >\n                      <FormControlLabel\n                        value=\"yes\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value=\"no\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                {Isbacklog === \"yes\" || values?.plus2?.backlogs ? <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\" }}>\n                    Number of Backlogs\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"number\"\n                    placeholder=\"Number of backlogs\"\n                    name=\"plus2.backlogs\"\n                    value={values.plus2.backlogs}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </Grid> : null}\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"plus2.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"Country\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"plus2.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"State\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"plus2.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          autoComplete=\"off\"\n                          // autoFocus=\"true\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        {!selectedState ? \"Please select state\" :\n                          \"Select city\"}\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        selectedState && <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined &&\n                        selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        // value=\"\"\n                        onClick={() => {\n                          // setSelectedCity(\"\")\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"plus2.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: cityHandle,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                                // eventHandler:cityHandle\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                >\n                  <CustomButton\n                    handleSubmit={() => submit}\n                    width=\"100px\"\n                  >\n                    Save\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Plus2;\n","import {\n  // Box,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n} from \"@mui/material\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { editProfile } from \"../../../../services\";\nimport { setSchool } from \"../../../../store/Slices/educationHistorySlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\n// import { grading } from \"../../../../assets/menu\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { boards, languages } from \"src/assets/menu\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\n// import { Close } from \"@mui/icons-material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\n\nconst School = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const [gradingSystem, setGradingSystem] = useState(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  const [customField, setCustomField] = useState<boolean>(false);\n  const [board, setBoard] = useState<string>(data?.board || \"\");\n  // const [showBoard, setShowBoard] = useState<boolean>(false);\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n    setTotalScore('');\n  };\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n  const initialValues = {\n    school: {\n      instituteName: data?.instituteName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      languageOfInstruction: data?.languageOfInstruction,\n      gradingSystem: data?.gradingSystem, // enum % grade gpa cgpa\n      board: board,\n      totalScore: data?.totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      isCompleted: data?.isCompleted,\n      custom: customField\n\n    },\n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n\n  const submit = async (values: any) => {\n    try {\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setSchool(response.data.data.education.school))\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Grade 10 details added successfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n\n    }\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        // validationSchema={profileSchema}\n        enableReinitialize\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, resetForm }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Name of Institution{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name of Institution\"\n                    name=\"school.instituteName\"\n                    value={values.school.instituteName}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                    Education status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      name=\"school.isCompleted\"\n                      value={values.school.isCompleted}\n                      onChange={handleChange}\n                    >\n                      <FormControlLabel\n                        value=\"yes\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Completed\"\n                      />\n                      <FormControlLabel\n                        value=\"no\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Pursuing\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", display: \"flex\", alignItems: \"center\" }}>\n                    Board\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"A board in education is a governing body that manages an educational system or part of it\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"school.board\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={board}\n                    onChange={(e)=>setBoard(e.target.value)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {boards.map(\n                      (name: any) => (\n                        <MenuItem\n                          key={name}\n                          value={name}\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}\n                        >\n                          {name}\n                        </MenuItem>\n                      )\n                    )}\n                     {!boards.includes(board) && board !== \"\" && (\n        <MenuItem key={board} value={board}>\n          {board}\n        </MenuItem>\n      )}\n        <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color:\"#1cbeb5  !important\"\n                        }}\n                        onClick={() => {\n                          setCustomField(true)\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name:\"school.board\",\n                                    fieldName:board,\n                                    setFieldName:setBoard,\n                                    placeholder:\"Enter your board\"\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }}\n                      >\n                        Can't find your board\n                      </MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Grading System\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"school.gradingSystem\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={gradingSystem}\n                    onChange={(e: any) => handleGradingSystemChange(e)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                    <MenuItem value=\"percentage\">Percentage</MenuItem>\n                    <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                    <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                    <MenuItem value=\"grade\">Grade</MenuItem>\n                  </Select>\n                  {/* <ErrorMessage\n                      name=\"school.gradingSystem\"\n                      component=\"div\"\n                      className=\"error\"\n                    /> */}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Score{\" \"}\n                  </InputLabel>\n                  {gradingSystem === \"grade\" ?\n                    <Select\n                      size=\"small\"\n                      id=\"totalScore\"\n                      name=\"school.totalScore\"\n                      displayEmpty\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem disabled value=\"\">\n                        Select Grade\n                      </MenuItem>\n                      {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                        <MenuItem key={name} value={name}>\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    :\n                    <TextField\n                      // type=\"number\"\n                      name=\"school.totalScore\"\n                      size=\"small\"\n                      fullWidth\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      placeholder={\n                        gradingSystem === \"percentage\"\n                          ? \"Enter percentage\"\n                          : gradingSystem === \"grade\"\n                            ? \"Enter grade\"\n                            : \"Enter score\"\n                      }\n                      inputProps={{\n                        step: \"0.1\",\n\n                        min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                        max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                        list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                        onInput: (e) => {\n                          const target = e.target as HTMLInputElement;\n                          const value = parseFloat(target.value);\n                          if (gradingSystem !== \"Grade\") {\n                            const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                            const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                            if (value < (min || 0) || value > (max || Infinity)) {\n                              target.value = value.toString().slice(0, -1); // Remove the last character\n                            }\n                          }\n                        },\n                      }}\n                    />}\n\n                  {/* <ErrorMessage\n                    name=\"school.totalScore\"\n                    component=\"div\"\n                    className=\"error\"\n                  /> */}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Language of instruction\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Language of Instruction\"\n                    name=\"school.languageOfInstruction\"\n                    options={languages}\n                    value={values.school.languageOfInstruction}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}  // Enables the search box\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values?.school?.startDate}\n                    onChange={(date) => handleChange({ target: { name: `school.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {values.school.isCompleted === \"yes\" && (\n                    <>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        End Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.school?.endDate}\n                        onChange={(date) =>\n                          handleChange({\n                            target: {\n                              name: `school.endDate`,\n                              value: date?.toISOString().slice(0, 10),\n                            },\n                          })\n                        }\n                        minDate={\n                          values.school.startDate\n                            ? new Date(\n                              new Date(values.school.startDate).setFullYear(\n                                new Date(values.school.startDate).getFullYear() + 1\n                              )\n                            )\n                            : undefined\n                        }\n                        maxDate={\n                          values.school.startDate\n                            ? (() => {\n                                const fourYearsFromStartDate = new Date(\n                                  new Date(values.school.startDate).setFullYear(\n                                    new Date(values.school.startDate).getFullYear() + 2\n                                  )\n                                );\n                                return fourYearsFromStartDate > new Date() ? new Date() : fourYearsFromStartDate;\n                              })()\n                            : new Date()\n                        }\n                        placeholderText=\"End Date\"\n                      />\n                    </>\n                  )}\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"school.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"Country\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"school.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"State\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"school.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          autoComplete=\"off\"\n                          // autoFocus=\"true\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        {!selectedState ? \"Please select state\" :\n                          \"Select city\"}\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        selectedState && <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined &&\n                        selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        // value=\"\"\n                        onClick={() => {\n                          // setSelectedCity(\"\")\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"school.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: cityHandle,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                                // eventHandler:cityHandle\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                >\n                  <CustomButton\n                    handleSubmit={() => submit}\n                    width=\"100px\"\n                  >\n                    Save\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default School;\n","import {\n  Box,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n  Button,\n  ListSubheader,\n  InputAdornment\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { pgCourseList } from \"../../../../assets/menu\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPostGraduation } from \"../../../../store/Slices/educationHistorySlice\";\nimport { editProfile, getSearchUniversityDetails } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from \"yup\";\nimport { Close, Star } from \"@mui/icons-material\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport Images from \"src/assets\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst PostGrad = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [Isbacklog, setIsbacklog] = useState();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [institutions, setInstitutions] = useState([])\n  const [institutionName, setInstitutionName] = useState<string>(data?.instituteName || \"\");\n  const [universities, setUniversities] = useState<string[]>(data?.affiliatedUniversity ? [data.affiliatedUniversity] : []);\n  const [affiliatedUniversity, setAffiliatedUniversity] = useState<string>(data?.affiliatedUniversity || \"\");\n  const [programMajor, setProgramMAjor] = useState<string>(data?.specialization || \"\");\n  const [degreeName, setDegreeName] = useState<string>(data?.degreeProgram ? data?.degreeProgram : \"\");\n\n  const [ieh, setIeh] = useState<boolean>(false);\n  const [institutionId, setInstitutionId] = useState<string>(\"\");\n  const [gradingSystem, setGradingSystem] = useState(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  const profile = useAppSelector((store) => store.profile);\n  const [iehStatus, setIEHStatus] = useState<any>(profile?.data?.IEH);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n    setTotalScore('');\n  };\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city\n  );\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  const profileSchema = Yup.object().shape({\n    postGraduation: Yup.object().shape({\n      // degreeProgram: Yup.string().required(\"Degree Program is required\"),\n      // programMajor: Yup.string().required(\"Specialization is required\"),\n      // instituteName: Yup.string().required(\"Institution Name is required\"),\n      // affiliatedUniversity: Yup.string().required(\"Affiliated University is required\"),\n      // gradingSystem: Yup.string().required(\"Grading System is required\"),\n      // totalScore: Yup.mixed() \n      //   .required('Score is required')\n      //   .test('valid-score', 'Invalid score', function (value) {\n      //     const { gradingSystem } = this.parent;\n      //     if (gradingSystem === 'percentage') {\n      //       return typeof value === 'number' && value >= 1 && value <= 100;\n      //     }\n      //     if (gradingSystem === 'GPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 10;\n      //     }\n      //     if (gradingSystem === 'CGPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 6;\n      //     }\n\n      //     if (gradingSystem === 'grade') {\n      //       return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n      //     }\n\n      //     return true; \n      //   })\n      // ,\n      // startDate: Yup.date().required(\"Start Date is required\"),\n      // endDate: Yup.date()\n      //   .when(\"isCompleted\", {\n      //     is: true,\n      //     then: schema => schema.required(\"End Date is required\"),\n      //   })\n      //   .nullable(),\n      // backlogs: Yup.number()\n      //   .when(\"backlogs\", {\n      //     is: (value: string) => value === \"yes\",\n      //     then: schema => schema.required(\"Number of Backlogs is required\").min(1),\n      //   })\n      //   .nullable(),\n      // country: Yup.string().required(\"Country is required\"),\n      // state: Yup.string().required(\"State/Province is required\"),\n      // city: Yup.string().required(\"City/Town is required\"),\n    }),\n  });\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    setInstitutionName(value);\n  };\n\n  // Handle institution selection\n\n  useEffect(() => {\n    if (searchTerm.length > 3) {\n      setLoading(true);\n      setHasSearched(true); // Mark as searched when making an API call\n      getSearchUniversityDetails(searchTerm,1,10, 1, 0, 0, 0,0)\n        .then((response:any) => {\n          setInstitutions(response.data?.institutions || []);\n          setLoading(false);\n        })\n        .catch((error:any) => {\n          console.error(\"Error fetching institutions:\", error);\n          setLoading(false);\n        });\n    } else {\n      setInstitutions([]);\n      setHasSearched(false); // Reset search state if searchTerm is not long enough\n    }\n  }, [searchTerm]);\n\n  const [customField, setCustomField] = useState<boolean>(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n  const initialValues = {\n    postGraduation: {\n      instituteName: institutionName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      specialization: programMajor, // enum  eee,ese,ece\n      degreeProgram: degreeName, // enum btech,bedu,bsc....\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      affiliatedUniversity: affiliatedUniversity,\n      totalScore: totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const [specializations, setSpecializations] = useState<any>([]);\n\n  const handleDegreeChange = (event: React.ChangeEvent<{ value: unknown }>, setFieldValue: Function) => {\n    const selectedDegree = event.target.value as string;\n    // setFieldValue('postGraduation.degreeProgram', selectedDegree);\n    const degreeCourses = pgCourseList[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[selectedDegree] || [];\n    setSpecializations(selectedSpecializations);\n    setFieldValue('postGraduation.programMajor', '');\n  };\n\n  useEffect(() => {\n    const degreeCourses = pgCourseList[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[data?.degreeProgram] || [];\n    setSpecializations(selectedSpecializations);\n  }, [data?.degreeProgram])\n\n  const handleOptionClick = (option: any) => {\n    if (option === \"Other\") {\n      // setShowCustomInput(true);\n      setInstitutionName(\"\");\n      setIeh(false);\n      setSearchTerm(\"\");\n      setCustomField(true)\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"customfield\",\n              data: {\n                name: \"postGraduation.institutionName\",\n                fieldName: institutionName,\n                setFieldName: setInstitutionName,\n                placeholder: \"Enter your institution name\"\n              },\n              dimensions: {\n                width: \"450px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      )\n    } else {\n      setInstitutionName(option?.InstitutionName);\n      setUniversities(option?.university || []);\n      setIeh(option?.IEH?.exists)\n      setInstitutionId(option?._id)\n      setAffiliatedUniversity(\"\");\n      setSearchTerm(\"\");\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n\n  const submitHandler = async (values: any) => {\n    try {\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setPostGraduation(response.data.data.education.postGraduation));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Post graduate Details are added succesfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoader(false)\n\n    } catch (error) {\n      setLoader(false)\n\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={profileSchema}\n        enableReinitialize\n        onSubmit={(values: any) => submitHandler(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => {\n          // console.log(errors)\n          return (\n            <Form style={{}}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Degree Name\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"postGraduation.degreeProgram\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={degreeName}\n                    onChange={(e: any) => {\n                      handleDegreeChange(e, setFieldValue);\n                      setDegreeName(e.target.value);\n                    }}\n                    fullWidth\n                    sx={{\n                      \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"red !important\", // Custom error border color\n                      },\n                    }}\n                    MenuProps={MenuProps}\n                    // error={errors.postGraduation.programMajor}\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {Object.keys(pgCourseList[0]).map((degree) => (\n                      <MenuItem key={degree} value={degree} sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                        \"& .MuiSvgIcon-root \": {\n                          fontSize: \"1rem\",\n                        },\n                        whiteSpace: \"normal\",\n                      }}>\n                        {degree}\n                      </MenuItem>\n                    ))}\n                    {!Object.keys(pgCourseList[0]).includes(degreeName) && degreeName !== \"\" && (\n                      <MenuItem key={degreeName} value={degreeName}>\n                        {degreeName}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        // setShowDegree(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"postGraduation.degreeProgram\",\n                                  fieldName: degreeName,\n                                  setFieldName: setDegreeName,\n                                  placeholder: \"Enter your degree name\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }}\n                    >\n                      Can't find your degree\n                    </MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Specialization\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"postGraduation.specialization\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={programMajor}\n                    onChange={(e) => setProgramMAjor(e.target.value)}\n                    fullWidth\n                    sx={{\n                      \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                        borderColor: \"red !important\", // Custom error border color\n                      },\n                    }}\n                    MenuProps={MenuProps}\n                    // error={errors.postGraduation.programMajor}\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {specializations?.map((name: string) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n                    {!specializations.includes(programMajor) && programMajor !== \"\" && (\n                      <MenuItem key={programMajor} value={programMajor}>\n                        {programMajor}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"postGraduation.specialization\",\n                                  fieldName: programMajor,\n                                  setFieldName: setProgramMAjor,\n                                  placeholder: \"Enter your specialization\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }}\n                    >\n                      Can't find your specialization\n                    </MenuItem>\n                  </Select>\n                  <ErrorMessage\n                    name=\"postGraduation.specialization\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"instituteName\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                    Name of Institution\n                  </InputLabel>\n                  <Box sx={{ width: \"100%\", position: \"relative\" }}>\n                    <TextField\n                      value={institutionName}\n                      onChange={handleInputChange}\n                      placeholder=\"Search for an institution\"\n                      variant=\"outlined\"\n                      name=\"postGraduation.instituteName\"\n                      size=\"small\"\n                      autoComplete=\"off\"\n                      fullWidth\n                      InputProps={{\n                        endAdornment: (\n                          <>\n                            {loading && <CircularProgress color=\"inherit\" size={20} />}\n                            {institutionName && (\n                              <Close\n                                sx={{ cursor: \"pointer\" }}\n                                onClick={() => {\n                                  setInstitutionName(\"\");\n                                  setInstitutions([]);\n                                  setSearchTerm(\"\");\n                                  // setShowCustomInput(false);\n                                  setHasSearched(false);\n                                }}\n                              />\n                            )}\n                          </>\n                        ),\n                      }}\n                    />\n\n                    {loading || institutions.length > 0 || (hasSearched && institutions.length === 0) ? (\n                      <Box\n                        sx={{\n                          position: \"absolute\",\n                          zIndex: 1,\n                          backgroundColor: \"#fff\",\n                          boxShadow: 1,\n                          maxHeight: \"200px\",\n                          overflowY: \"auto\",\n                          width: \"100%\",\n                        }}\n                      >\n                        {institutions.map((option: any, index) => (\n                          <MenuItem\n                            key={index}\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                            }}\n                            onClick={() => handleOptionClick(option)}\n                          >\n                            {option?.InstitutionName}\n                            {option?.IEH?.exists && <Star sx={{ fontSize: \"1.1rem\", color: \"orange\" }} />}\n                            {option?.District && `, ${option?.District}`}\n                          </MenuItem>\n                        ))}\n                        {!loading && hasSearched && (\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              // alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5  !important\"\n\n                              // justifyContent: \"center\",\n                            }}\n                            onClick={() => handleOptionClick(\"Other\")}\n\n                          >\n                            Can't find institution\n                          </MenuItem>\n                        )}\n                      </Box>\n                    ) : null}\n                  </Box>\n\n                  <ErrorMessage\n                    name=\"postGraduation.instituteName\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"affiliatedUniversity\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                    Affiliated University\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"affiliatedUniversity\"\n                    name=\"postGraduation.affiliatedUniversity\"\n                    displayEmpty\n                    value={affiliatedUniversity}\n                    onChange={(e) => setAffiliatedUniversity(e.target.value)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem disabled value=\"\">\n                      Select University\n                    </MenuItem>\n                    {universities.map((name: string) => (\n                      <MenuItem key={name} value={name}>\n                        {name}\n                      </MenuItem>\n                    ))}\n                    {!universities.includes(affiliatedUniversity) && programMajor !== \"\" && (\n                      <MenuItem key={affiliatedUniversity} value={affiliatedUniversity}>\n                        {affiliatedUniversity}\n                      </MenuItem>\n                    )}\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\"\n\n                      }}\n                      onClick={() => {\n                        setCustomField(true)\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: \"postGraduation.affiliatedUniversity\",\n                                  fieldName: affiliatedUniversity,\n                                  setFieldName: setAffiliatedUniversity,\n                                  placeholder: \"Enter your university\"\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }}\n                    >\n                      Can't find university\n                    </MenuItem>\n                  </Select>\n\n                  <ErrorMessage\n                    name=\"postGraduation.affiliatedUniversity\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                {ieh ?\n                  <Grid item xs={12} sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n                    <Typography>This college is a member of <b style={{ color: \"#3b3f76\" }}>IEH</b> . You need to verify to get benefits.</Typography>\n                    {iehStatus?.verificationStatus === \"Verification Request Initiated\" ? \"\" :\n                      <Button sx={globalButton} onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"ieh\",\n                                data: {\n                                  id: institutionId,\n                                  setIEHStatus: setIEHStatus\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }>Verify</Button>}\n                  </Grid>\n                  : \"\"}\n\n                {iehStatus?.verificationStatus === \"Verification Request Initiated\" ?\n                  <Grid item xs={12}>\n                    <Typography>Your IEH verification request is initiated</Typography>\n                  </Grid> : \"\"}\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Grading System\n                  </InputLabel>\n\n                  <Select\n                    id=\"grading-system\"\n                    size=\"small\"\n                    name=\"gradingSystem\"\n                    displayEmpty\n                    defaultValue=\"\"\n\n                    value={gradingSystem}\n                    onChange={(e: any) => handleGradingSystemChange(e)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                    <MenuItem value=\"percentage\">Percentage</MenuItem>\n                    <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                    <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                    <MenuItem value=\"grade\">Grade</MenuItem>\n                  </Select>\n                  <ErrorMessage\n                    name=\"postGraduation.gradingSystem\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Score{\" \"}\n                  </InputLabel>\n                  {gradingSystem === \"grade\" ?\n                    <Select\n                      size=\"small\"\n                      id=\"totalScore\"\n                      name=\"postGraduation.totalScore\"\n                      displayEmpty\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem disabled value=\"\">\n                        Select Grade\n                      </MenuItem>\n                      {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                        <MenuItem key={name} value={name}>\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    :\n                    <TextField\n                      // type=\"number\"\n                      name=\"postGraduation.totalScore\"\n                      size=\"small\"\n                      fullWidth\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      placeholder={\n                        gradingSystem === \"percentage\"\n                          ? \"Enter percentage\"\n                          : gradingSystem === \"grade\"\n                            ? \"Enter grade\"\n                            : \"Enter score\"\n                      }\n                      inputProps={{\n                        step: \"0.1\",\n\n                        min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                        max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                        list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                        onInput: (e) => {\n                          const target = e.target as HTMLInputElement;\n                          const value = parseFloat(target.value);\n                          if (gradingSystem !== \"Grade\") {\n                            const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                            const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                            if (value < (min || 0) || value > (max || Infinity)) {\n                              target.value = value.toString().slice(0, -1); // Remove the last character\n                            }\n                          }\n                        },\n                      }}\n                    />}\n\n                  <ErrorMessage\n                    name=\"postGraduation.totalScore\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                    Education status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"education-status\"\n                      name=\"postGraduation.isCompleted\"\n                      value={values.postGraduation.isCompleted}\n                      onChange={(event) => {\n                        handleChange({\n                          target: {\n                            name: \"postGraduation.isCompleted\",\n                            value: event.target.value === \"true\",\n                          },\n                        });\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"true\"\n                        control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                        label=\"Completed\"\n                      />\n                      <FormControlLabel\n                        value=\"false\"\n                        control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                        label=\"Pursuing\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values?.postGraduation?.startDate}\n                    onChange={(date) => handleChange({ target: { name: `postGraduation.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                  <ErrorMessage\n                    name=\"postGraduation.startDate\"\n                    component=\"div\"\n                    className=\"error\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {values.postGraduation.isCompleted  && (\n                    <>\n                      <InputLabel sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        End Date\n                      </InputLabel>\n                        <DatePickerComponent\n                        selectedDate={values?.postGraduation?.endDate}\n                        onChange={(date) =>\n                          handleChange({\n                            target: {\n                              name: `postGraduation.endDate`,\n                              value: date?.toISOString().slice(0, 10),\n                            },\n                          })\n                        }\n                        minDate={\n                          values.postGraduation.startDate\n                            ? new Date(\n                              new Date(values.postGraduation.startDate).setFullYear(\n                                new Date(values.postGraduation.startDate).getFullYear() + 1\n                              )\n                            )\n                            : undefined\n                        }\n                        maxDate={\n                          values.postGraduation.startDate\n                            ? (() => {\n                                const fourYearsFromStartDate = new Date(\n                                  new Date(values.postGraduation.startDate).setFullYear(\n                                    new Date(values.postGraduation.startDate).getFullYear() + 3\n                                  )\n                                );\n                                return fourYearsFromStartDate > new Date() ? new Date() : fourYearsFromStartDate;\n                              })()\n                            : new Date()\n                        }\n                        placeholderText=\"End Date\"\n                      />\n                      <ErrorMessage name=\"postGraduation.endDate\" component=\"div\" className=\"error\" />\n                    </>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\", display: \"flex\", alignItems: \"center\" }}>\n                    Backlogs\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      // name=\"postGraduation.backlogs\"\n                      value={Isbacklog}\n                      onChange={(e: any) => setIsbacklog(e.target.value)}\n                    >\n                      <FormControlLabel\n                        value=\"yes\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value=\"no\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {Isbacklog === \"yes\" || values.postGraduation.backlogs ?\n                    <>\n                      <InputLabel id=\"\" sx={{ color: \"#000\" }}>\n                        Number of Backlogs\n                      </InputLabel>\n                      <CustomField\n                        id=\"name\"\n                        type=\"number\"\n                        placeholder=\"Number of backlogs\"\n                        name=\"postGraduation.backlogs\"\n                        value={values.postGraduation.backlogs}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </>\n                    : null}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"postGraduation.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"Country\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"postGraduation.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"State\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"postGraduation.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          autoComplete=\"off\"\n                          // autoFocus=\"true\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        {!selectedState ? \"Please select state\" :\n                          \"Select city\"}\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        selectedState && <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined &&\n                        selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        onClick={() => {\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"postGraduation.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: setSelectedCity,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                >\n                  <CustomButton\n                    handleSubmit={() => submitHandler}\n                    width=\"100px\"\n                  >\n                    {loader ? (\n                      <img\n                        src={Images.standardLoader}\n                        alt=\"load\"\n                        style={{ width: \"1rem\", height: \"1rem\" }}\n                      />\n                    ) : (\n                      \"Save\"\n                    )}\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\n\nexport default PostGrad;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport Bachelors from \"./bachelors\";\nimport Diploma from \"./diploma\";\nimport School from \"./grade10\";\nimport PostGrad from \"./postGrad\";\n\nconst Education = () => {\n  const education = useAppSelector((state) => state.educationhistory);\n\n  const profile = [\n    {\n      title: \"Masters\",\n      component: <PostGrad data={education.data.postGraduation}/>,\n    },\n    {\n      title: \"Under Graduation\",\n      component: <Bachelors data={education.data.underGraduation}/>,\n    },\n    {\n      title: \"Diploma / Grade 12 \",\n      component: <Diploma data={education.data.plus2}/>,\n    },\n    {\n      title: \"Grade 10\",\n      component: <School data={education.data.school}/>,\n    },\n  ];\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        height:\"80vh\",overflowY:\"scroll\",px:3\n      }}\n    >\n      <Typography fontSize=\"1rem\" gutterBottom color=\"#3b3f76\" sx={{m:1,fontWeight:\"500\"}}>Enter your current and last education details\n      </Typography>\n      {profile?.map((item: any) => (\n        <Accordion title={item.title} >\n          {item.component}\n        </Accordion>\n      ))}\n    </Box>\n  );\n};\n\nexport default Education;\n","import {\n  Box,\n  Button,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\n// eslint-disable-next-line\nimport React, { useRef, useState } from \"react\";\nimport { AcademicTestNamesEnum } from \"../../../../assets/enums\";\nimport { editProfile, uploadProfile } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { settestScores } from \"../../../../store/Slices/testScoresSlice\";\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Test } from \"../../../../types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\nimport { setDocuments } from \"src/store/Slices/documentsSlice\";\n\nconst AcademicTestForm = () => {\n  const dispatch = useAppDispatch();\n  const testscoresData = useAppSelector((state) => state.testscores);\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [loadingMap, setLoadingMap] = useState<{ [key: string]: boolean }>(\n    {}\n  );\n  const inputRefs = useRef<{ [key: string]: React.RefObject<HTMLInputElement> }>({});\n  const handleDeleteOpen = (item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const academicTestNames = Object.values(AcademicTestNamesEnum);\n\n  const filteredTests = testscoresData.data?.filter((test) =>\n    academicTestNames.includes(test.name)\n  );\n  const handleTestsDelete = async (item: any) => {\n    const updated = testscoresData?.data?.filter(\n      (value: any) => value?._id !== item._id\n    );\n    const response = await editProfile({ tests: updated });\n    if (response) {\n      dispatch(settestScores(response.data.data.tests));\n    } else {\n    }\n    setOpen(false)\n  };\n  const documentUpload = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    item: any\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    if (!file) return;\n    setLoadingMap((prevLoadingMap) => ({\n      ...prevLoadingMap,\n      [item]: true,\n    }));\n\n    try {\n      const formData = new FormData();\n      formData.append(\"uploaded_file\", file);\n      formData.append(\"fieldPath\", fieldPath);\n\n      const response = await uploadProfile(formData);\n\n      if (response) {\n        dispatch(setDocuments(response.data.data.docs));\n\n        const lastDoc = response.data.data.docs.test.general.at(-1);\n        const updatedData: Test = {\n          ...item,\n          docId: lastDoc._id,\n        };\n\n        const updatedTestscoresData = testscoresData.data.map((test) =>\n          test._id === updatedData._id ? updatedData : test\n        );\n\n        const response1 = await editProfile({ tests: updatedTestscoresData });\n        if (response1) {\n          dispatch(settestScores(response1.data.data.tests));\n        }\n      }\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setLoadingMap((prevLoadingMap) => ({\n        ...prevLoadingMap,\n        [item]: false,\n      }));\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2} sx={{mb:2}}>\n        {filteredTests?.map((item: Test, i: number) => {\n            if (!inputRefs.current[item._id]) {\n              inputRefs.current[item._id] = React.createRef<HTMLInputElement>();\n            }\n            return (\n          <Grid item xs={12} sm={6} lg={4} key={i}>\n            <Box sx={{ boxShadow: \"0px 0px 8px 0px #0000001A\", p: 2, mt: 2, borderRadius: \"15px\" }}>\n              <Stack direction=\"row\" justifyContent=\"space-between\">\n                 <Typography sx={{ position: \"relative\", width: \"1rem\", height: \"1rem\", borderRadius: \"50%\", background: \"#72D4D1\" }}>\n                 <Typography fontWeight=\"500\" sx={{ position: \"absolute\", top: \"-4px\", left: \"8px\", width: \"200px\" }}>{Object.keys(AcademicTestNamesEnum).find(\n                  (key) => AcademicTestNamesEnum[key as keyof typeof AcademicTestNamesEnum] === item.name\n                )}</Typography>\n            </Typography>\n                <Box sx={{ display: \"flex\", gap: \"0.5rem\" }}>\n                  {item?.docId ?\n                   <Stack\n                   direction=\"row\"\n                   spacing={2}\n                   sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n                 >\n                   <Typography>{item?.docId?.data?.FileName}</Typography>\n                   <VisibilityOutlinedIcon\n                     sx={{ fontSize: \"large\",cursor:\"pointer\" }}\n                     onClick={() => {\n                       dispatch(\n                         setPopup({\n                           show: true,\n                           data: {\n                             container: {\n                               name: \"fileViewer\",\n                               data: item?.docId?.data?.preview_url,\n                               dimensions: { width: \"500px\" },\n                             },\n                             type: \"custom\",\n                           },\n                         })\n                       );\n                     }}\n                   />\n                 </Stack>\n                    :\n                    <>\n                    <input\n                      style={{ display: \"none\" }}\n                      type=\"file\"\n                      className=\"\"\n                      name=\"docId\"\n                      onChange={(event) => documentUpload(event, \"test.general\",item._id)}\n                      ref={inputRefs.current[item._id]}\n                      accept=\".pdf,.jpeg,.png\"\n                    />\n                   <Button\n                      sx={{\n                        color: \"#000\",\n                        textTransform: \"none\",\n                        border: \"1px solid #000\",\n                        borderRadius: \"15px\",\n                        fontSize: \"0.7rem\",\n                        p: 0,\n                        mr: 3,\n                      }}\n                      onClick={() =>\n                        inputRefs.current[item._id]?.current?.click()\n                      }\n                    >\n                      {loadingMap[item._id] ? (\n                        <Box\n                          component=\"img\"\n                          src={Images.standardLoader}\n                          alt=\"standardLoader\"\n                          sx={{ width: \"1rem\", height: \"1rem\" }}\n                        />\n                      ) : (\n                        \"Upload\"\n                      )}\n                    </Button>\n                  </>\n\n                    }\n                </Box>\n              </Stack>\n              <Grid container spacing={1}>\n                {item?.scores?.map((score, j) => (\n                  <Grid item xs={12} key={j} sx={{ textAlign: \"center\" }}>\n                    <Grid container>\n                      <Grid item xs={8}>\n                        <Typography\n                          sx={{\n                            fontSize: { xs: \"13px\", sm: \"16px\" },\n                            textAlign: \"start\",\n                            color: \"#00000080\"\n                          }}\n                        >\n                          {score?.description}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Typography fontWeight=\"500\">{score?.count} </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n                <Grid item xs={12}>\n                  <Grid container>\n                    <Grid item xs={9}>\n                      <Typography\n                        sx={{\n                          fontSize: { xs: \"13px\", sm: \"16px\" },\n                          textAlign: \"start\",\n                          color: \"#00000080\"\n                        }}\n                      >\n                        Took test on\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={3}>\n                      <Typography fontWeight=\"500\">\n                        {item?.testDate ? \n                        new Date(item?.testDate).toLocaleString(\n                          \"en-GB\",\n                          {\n                            month: \"short\",\n                            year: \"numeric\",\n                          }\n                        )\n                         : \"N/A\"}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                  <Grid container>\n                    <Grid item xs={9}>\n                    </Grid>\n                    <Grid item xs={3} sx={{ display: \"flex\", gap: \"0.5rem\" }}>\n                      <EditOutlinedIcon sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                        onClick={() =>\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"edittest\",\n                                  data: { data: item, name: \"test.general\" },\n                                  dimensions: {\n                                    width: \"800px\",\n                                    height:\"50%\"\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }\n                      />\n                      <img src={Images.delete} alt=\"del\" style={{ width: \"20px\", cursor: \"pointer\" }} onClick={() => handleDeleteOpen(item)} />\n\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n             \n            </Box>\n          </Grid>\n          )})}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => handleTestsDelete(deleteItem),\n          title: \"Are you sure you want to delete ?\",\n          content:\n            \"\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default AcademicTestForm;\n","import {\n  Box,\n  Button,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport { ENglishTestNamesEnum } from \"../../../../assets/enums\";\nimport { editProfile, uploadProfile } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { settestScores } from \"../../../../store/Slices/testScoresSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Test } from \"../../../../types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport Images from \"src/assets\";\nimport { setDocuments } from \"src/store/Slices/documentsSlice\";\n\nconst EnglishTestForm = () => {\n  const dispatch = useAppDispatch();\n  const testscoresData = useAppSelector((state) => state.testscores);\n\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  // const [loading, setLoading] = useState<Record<string, boolean>>({});\n  const [loadingMap, setLoadingMap] = useState<{ [key: string]: boolean }>(\n    {}\n  );\n  const inputRefs = useRef<{ [key: string]: React.RefObject<HTMLInputElement> }>({});\n  const handleDeleteOpen = (item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const academicTestNames = Object.values(ENglishTestNamesEnum);\n\n  const filteredTests = testscoresData.data?.filter((test) =>\n    academicTestNames.includes(test.name)\n  );\n  const handleTestsDelete = async (item: any) => {\n    const updated = testscoresData?.data?.filter(\n      (value: any) => value?._id !== item._id\n    );\n    const response = await editProfile({ tests: updated });\n    if (response) {\n      dispatch(settestScores(response.data.data.tests));\n    } else {\n    }\n    setOpen(false)\n  };\n  const documentUpload = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    item: any\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    if (!file) return;\n    setLoadingMap((prevLoadingMap) => ({\n      ...prevLoadingMap,\n      [item]: true,\n    }));\n\n    try {\n      const formData = new FormData();\n      formData.append(\"uploaded_file\", file);\n      formData.append(\"fieldPath\", fieldPath);\n\n      const response = await uploadProfile(formData);\n\n      if (response) {\n        dispatch(setDocuments(response.data.data.docs));\n\n        const lastDoc = response.data.data.docs.test.general.at(-1);\n        const updatedData: Test = {\n          ...item,\n          docId: lastDoc._id,\n        };\n\n        const updatedTestscoresData = testscoresData.data.map((test) =>\n          test._id === updatedData._id ? updatedData : test\n        );\n\n        const response1 = await editProfile({ tests: updatedTestscoresData });\n        if (response1) {\n          dispatch(settestScores(response1.data.data.tests));\n        }\n      }else{\n        setLoadingMap((prevLoadingMap) => ({\n          ...prevLoadingMap,\n          [item]: false,\n        }));\n      }\n    } catch (err) {\n      console.error(err);\n      setLoadingMap((prevLoadingMap) => ({\n        ...prevLoadingMap,\n        [item]: false,\n      }));\n    } finally {\n      setLoadingMap((prevLoadingMap) => ({\n        ...prevLoadingMap,\n        [item]: false,\n      }));\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={2}>\n        {filteredTests?.map((item: Test) => {\n          if (!inputRefs.current[item._id]) {\n            inputRefs.current[item._id] = React.createRef<HTMLInputElement>();\n          }\n          return (\n            <Grid item xs={12} sm={6} lg={4} key={item._id}>\n              <Box\n                sx={{\n                  boxShadow: \"0px 0px 8px 0px #0000001A\",\n                  p: 2,\n                  mt: 2,\n                  borderRadius: \"15px\",\n                }}\n              >\n                <Stack direction=\"row\" justifyContent=\"space-between\">\n                  <Typography\n                    sx={{\n                      position: \"relative\",\n                      width: \"1rem\",\n                      height: \"1rem\",\n                      borderRadius: \"50%\",\n                      background: \"#72D4D1\",\n                    }}\n                  >\n                    <Typography\n                      fontWeight=\"500\"\n                      sx={{\n                        position: \"absolute\",\n                        top: \"-4px\",\n                        left: \"8px\",\n                        width: \"200px\",\n                      }}\n                    >\n                      {Object.keys(ENglishTestNamesEnum).find(\n                        (key) =>\n                          ENglishTestNamesEnum[key as keyof typeof ENglishTestNamesEnum] === item.name\n                      )}\n                    </Typography>\n                  </Typography>\n                  <Box sx={{ display: \"flex\", gap: \"0.5rem\" }}>\n                    {item?.docId ? (\n                      <Stack\n                        direction=\"row\"\n                        spacing={2}\n                        sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n                      >\n                        <Typography>{item?.docId?.data?.FileName}</Typography>\n                        <VisibilityOutlinedIcon\n                          sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                          onClick={() => {\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"fileViewer\",\n                                    data: item?.docId?.data?.preview_url,\n                                    dimensions: { width: \"500px\" },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            );\n                          }}\n                        />\n                      </Stack>\n                    ) : (\n                      <>\n                        <input\n                          style={{ display: \"none\" }}\n                          type=\"file\"\n                          name=\"docId\"\n                          onChange={(event) =>\n                            documentUpload(event, \"test.languageProf\", item._id)\n                          }\n                          ref={inputRefs.current[item._id]}\n                          accept=\".pdf,.jpeg,.png\"\n                        />\n                        <Button\n                          sx={{\n                            color: \"#000\",\n                            textTransform: \"none\",\n                            border: \"1px solid #000\",\n                            borderRadius: \"15px\",\n                            fontSize: \"0.7rem\",\n                            p: 0,\n                            mr: 3,\n                          }}\n                          onClick={() =>\n                            inputRefs.current[item._id]?.current?.click()\n                          }\n                        >\n                          {loadingMap[item._id] ? (\n                            <Box\n                              component=\"img\"\n                              src={Images.standardLoader}\n                              alt=\"standardLoader\"\n                              sx={{ width: \"1rem\", height: \"1rem\" }}\n                            />\n                          ) : (\n                            \"Upload\"\n                          )}\n                        </Button>\n                      </>\n                    )}\n                  </Box>\n                </Stack>\n                <Grid container spacing={1}>\n                  {item?.scores?.map((score, j) => (\n                    <Grid item xs={12} key={j} sx={{ textAlign: \"center\" }}>\n                      <Grid container>\n                        <Grid item xs={8}>\n                          <Typography\n                            sx={{\n                              fontSize: { xs: \"13px\", sm: \"16px\" },\n                              textAlign: \"start\",\n                              color: \"#00000080\"\n                            }}\n                          >\n                            {score?.description}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                          <Typography fontWeight=\"500\">{score?.count} </Typography>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  ))}\n                  <Grid item xs={12}>\n                    <Grid container>\n                      <Grid item xs={9}>\n                        <Typography\n                          sx={{\n                            fontSize: { xs: \"13px\", sm: \"16px\" },\n                            textAlign: \"start\",\n                            color: \"#00000080\"\n                          }}\n                        >\n                          Took test on\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Typography fontWeight=\"500\">\n                          {item?.testDate ?\n                            new Date(item?.testDate).toLocaleString(\n                              \"en-GB\",\n                              {\n                                month: \"short\",\n                                year: \"numeric\",\n                              }\n                            )\n                            : \"N/A\"}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid container>\n                      <Grid item xs={9}>\n\n                      </Grid>\n                      <Grid item xs={3}>\n                        <Box sx={{ display: \"flex\", gap: \"0.5rem\" }}>\n\n                          <EditOutlinedIcon sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                            onClick={() =>\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"edittest\",\n                                      data: { data: item, name: \"test.languageProf\" },\n                                      dimensions: {\n                                        width: \"800px\",\n                                        height: \"50%\"\n\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                            }\n                          />\n                          <img src={Images.delete} alt=\"del\" style={{ width: \"20px\", cursor: \"pointer\" }} onClick={() => handleDeleteOpen(item)} />\n\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Grid>\n          )\n        })}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => handleTestsDelete(deleteItem),\n          title: \"Are you sure you want to delete ?\",\n          content:\n            \"\",\n        }}\n      />\n    </div>\n  );\n};\n\n\n\n\nexport default EnglishTestForm;\n","import {\n  Box,\n  FormControl,\n  FormControlLabel,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { useState } from \"react\";\nimport {\n  AcademicTestNamesEnum,\n  ENglishTestNamesEnum,\n} from \"../../../../assets/enums\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport AcademicTestForm from \"./academic\";\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nimport { Event } from \"src/types/types\";\nimport { editProfile } from \"src/services\";\nimport { setSharedInfo } from \"src/store/Slices/sharedInfoSlice\";\nimport EnglishTestForm from \"./englishTestscores\";\n\nconst TestScores = () => {\n  const tests = useAppSelector((state) => state.testscores);\n  const englishTestNames = Object.values(ENglishTestNamesEnum);\n  const academicTestNames = Object.values(AcademicTestNamesEnum);\n  const [selectedTest, setSelectedTest] = useState<string>(\"\");\n  const [selectedGRETest, setSelectedGRETest] = useState<string>(\"\");\n  const sharedInfo = useAppSelector((state) => state.sharedInfo);\n  const dispatch = useAppDispatch();\n\n  const academicTests = tests.data?.filter((test) =>\n    academicTestNames.includes(test.name)\n  );\n  const englishTests = tests.data?.filter((test) =>\n    englishTestNames.includes(test.name)\n  );\n\n  const [isSelected, setIsSelected] = useState<string>(() => {\n    if (englishTests?.length > 0) {\n      return \"Yes\";\n    }\n    return sharedInfo.data?.isPlanningToTakeLanguageTest ? \"Planning to take\" : \"Not planning to take\";\n  });\n  const [isGRESelected, setIsGRESelected] = useState<string>(() => {\n    if (academicTests?.length > 0) {\n      return \"Yes\";\n    }\n    return sharedInfo.data?.isPlanningToTakeAcademicTest ? \"Planning to take\" : \"Not planning to take\";\n  });\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"englishTest\":\n        setSelectedTest(event.data);\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"testscores\",\n                data: event.data,\n                dimensions: {\n                  width: \"800px\",\n                  height: \"57%\",\n                  // show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setSelectedTest(\"\")\n        break;\n      case \"academicTest\":\n        setSelectedGRETest(event.data)\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"testscores\",\n                data: event.data,\n                dimensions: {\n                  width: \"800px\",\n                  height: \"57%\",\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setSelectedGRETest(\"\")\n        break;\n      case \"englishTestSelection\":\n        setIsSelected(event.data);\n        if (event.data === \"Planning to take\" || event.data === \"Not planning to take\") {\n          try {\n            const response = await editProfile({ isPlanningToTakeLanguageTest: Boolean(event.data === \"Planning to take\" ? \"Yes\" : \"No\") });\n            dispatch(\n              setSharedInfo({\n                ...sharedInfo.data,\n                isPlanningToTakeLanguageTest: response.data.data.isPlanningToTakeLanguageTest,\n              })\n            );\n          } catch (error) {\n            console.error(\"Error in API Call:\", error);\n          }\n        }\n        break;\n        case \"academicTestSelection\":\n        setIsGRESelected(event.data);\n        if (event.data === \"Planning to take\" || event.data === \"Not planning to take\") {\n          console.log(event.data === \"Planning to take\" ? \"Yes\" : \"No\")\n          try {\n            const response = await editProfile({ isPlanningToTakeAcademicTest: Boolean(event.data === \"Planning to take\" ? \"Yes\" : \"No\") });\n            dispatch(\n              setSharedInfo({\n                ...sharedInfo.data,\n                isPlanningToTakeAcademicTest: response.data.data.isPlanningToTakeAcademicTest,\n              })\n            );\n          } catch (error) {\n            console.error(\"Error in API Call:\", error);\n          }\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  const handleChange = () => { };\n\n  return (\n    <Stack spacing={2} sx={{\n      px: 3, \"&. MuiButtonBase-root-MuiRadio-root.Mui-checked\": {\n        color: \"green\"\n      }\n    }}>\n      {isSelected === \"No\" ? (\n        <Box>\n          <InputLabel sx={{ color: \"#000\", fontWeight: 500 }}>\n            English marks in class 12\n          </InputLabel>\n          <TextField\n            type=\"number\"\n            onChange={handleChange}\n            size=\"small\"\n          />\n        </Box>\n      ) : null}\n\n      <Stack direction=\"column\" spacing={2}>\n        <Box sx={{ position: \"relative\", }}>\n          <Box\n            sx={{\n              position: \"absolute\",\n              top: 6,\n              left: 8,\n              right: 0,\n              bottom: 0,\n              zIndex: 0,\n              borderRadius: \"15px\",\n              background: `#D1D3F9`,\n              width: \"100%\",\n              height: \"100%\",\n              transform: \"translate(0px, -2px)\"\n            }}\n          />\n          <Box sx={{ position: \"relative\", background: \"#F4F4FF\", p: 1, borderRadius: \"10px\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n            <Box sx={{ mt: 1 }}>\n              <Typography sx={{ position: \"relative\", width: \"1rem\", height: \"1rem\", borderRadius: \"50%\", background: \"#FEA89B\" }}>\n                <Typography sx={{ position: \"absolute\", top: \"-4px\", left: \"8px\", width: \"500px\", color: \"#000\", fontWeight: 500 }}>\n                  Have you taken any English Proficiency Test?\n                </Typography>\n              </Typography>\n              <FormControl>\n                <RadioGroup\n                  row\n                  name=\"englishTest\"\n                  value={isSelected}\n                  // onChange={handleChange1}\n                  onChange={(e: any) =>\n                    eventHandler({\n                      name: \"englishTestSelection\",\n                      data: e.target.value,\n                    })\n                  }\n                >\n                  {[\"Yes\",  \"Planning to take\", \"Not planning to take\"].map(\n                    (option) => (\n                      <FormControlLabel\n                        key={option}\n                        value={option}\n                        control={<Radio />}\n                        label={option}\n                      />\n                    )\n                  )}\n                </RadioGroup>\n              </FormControl>\n            </Box>\n\n            {isSelected === \"Yes\" && englishTests?.length !== englishTestNames?.length && (\n              <Box sx={{ borderRadius: \"10px\", p: 2, }}>\n                <Select\n                  displayEmpty\n                  value={selectedTest}\n                  size=\"small\"\n                  // onChange={handleTestSelection}\n                  onChange={(e: any) =>\n                    eventHandler({\n                      name: \"englishTest\",\n                      data: e.target.value,\n                    })\n                  }\n                  sx={{ border: \"1px solid #1C1F4066 !important\", borderRadius: \"25px\", width: \"150px\" }}\n                >\n                  <MenuItem value=\"\">Select a test</MenuItem>\n                  {Object.entries(ENglishTestNamesEnum).map(([key, value]) => {\n                    const isDisabled = englishTests?.some((test) => test.name === value);\n                    return (\n                      <MenuItem key={key} value={value} disabled={isDisabled}>\n                        {key}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </Box>\n            )}\n          </Box>\n        </Box>\n        {isSelected === \"Yes\" ? <EnglishTestForm /> : null}\n        <Box>\n\n          <Box sx={{ position: \"relative\", }}>\n            <Box\n              sx={{\n                position: \"absolute\",\n                top: 6,\n                left: 8,\n                right: 0,\n                bottom: 0,\n                zIndex: 0,\n                borderRadius: \"15px\",\n                background: `#D1D3F9`,\n                width: \"100%\",\n                height: \"100%\",\n                transform: \"translate(0px, -2px)\"\n              }}\n            />\n            <Box sx={{ position: \"relative\", background: \"#F4F4FF\", p: 1, borderRadius: \"10px\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n              <Box sx={{ mt: 1 }}>\n                <Typography sx={{ position: \"relative\", width: \"1rem\", height: \"1rem\", borderRadius: \"50%\", background: \"#FEA89B\" }}>\n                  <Typography sx={{ position: \"absolute\", top: \"-4px\", left: \"8px\", width: \"500px\", color: \"#000\", fontWeight: 500 }}>\n                    Have you taken GRE/GMAT Test?\n                  </Typography>\n                </Typography>\n                <FormControl>\n                  <RadioGroup\n                    row\n                    name=\"greTest\"\n                    value={isGRESelected}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"academicTestSelection\",\n                        data: e.target.value,\n                      })\n                    }\n                  >\n                    {[\"Yes\", \"Planning to take\", \"Not planning to take\"].map(\n                      (option) => (\n                        <FormControlLabel\n                          key={option}\n                          value={option}\n                          control={<Radio />}\n                          label={option}\n                        />\n                      )\n                    )}\n                  </RadioGroup>\n                </FormControl>\n              </Box>\n\n              {isGRESelected === \"Yes\" && academicTests?.length !== academicTestNames?.length && (\n                <Box sx={{ p: 2, borderRadius: \"10px\" }}>\n                  <Select\n                    displayEmpty\n                    defaultValue=\"\"\n                    size=\"small\"\n                    value={selectedGRETest}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"academicTest\",\n                        data: e.target.value,\n                      })\n                    }\n                    sx={{ border: \"1px solid #1C1F4066 !important\", borderRadius: \"25px\", width: \"150px\" }}\n                  >\n                    <MenuItem value=\"\">Select a test</MenuItem>\n                    {Object.entries(AcademicTestNamesEnum).map(([key, value]) => {\n                      const isDisabled = academicTests?.some((test) => test.name === value);\n                      return (\n                        <MenuItem key={key} value={value} disabled={isDisabled}>\n                          {key}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </Box>\n              )}\n            </Box>\n          </Box>\n          {isGRESelected === \"Yes\" ? <AcademicTestForm /> : null}\n\n        </Box>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default TestScores;\n","// import { Cancel } from \"@mui/icons-material\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  // Button,\n  FormControl,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport {\n  countryList,\n  currencySymbols,\n  degreeType,\n  monthNames,\n  skillsList,\n  subDisciplines,\n} from \"../../../../assets/menu\";\nimport { editProfile, requestAdvisor } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { setpreferences } from \"../../../../store/Slices/preferencesSlice\";\nimport { setskills } from \"../../../../store/Slices/skillsSlice\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { Advisor, Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from \"yup\";\n// import { useNavigate } from \"react-router-dom\";\nimport { addAdvisorInfo, updateAdvisorInfo } from \"src/store/Slices/advisorsSlice\";\nimport { addChats } from \"src/store/Slices/chatsSlice\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\n// interface CurrencyOption {\n//   label: string;\n//   value: string;\n// }\nconst Preferences = () => {\n  const Preferences = useAppSelector((state) => state.preferences);\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const [intake, setIntake] = useState<any>(Preferences.data?.intake)\n  const date = new Date(intake)\n  // const monthDate = date.getMonth()\n  const [year, setYear] = useState(Preferences.data?.intake ? date.getFullYear() : \"\")\n  const [month, setMonth] = useState<any>(Preferences.data?.intake ? date.getMonth() : \"\")\n  const [courseData, setCourseData] = useState(\n    Preferences?.data?.courses || []\n  );\n  const [countryData, setCountryData] = useState(\n    Preferences?.data?.country || []\n  );\n  const [minBudget, setMinBudget] = useState<number>(\n    Preferences?.data?.budget?.lower || 0\n  );\n  const [maxBudget, setMaxBudget] = useState<number>(\n    Preferences?.data?.budget?.upper || 5000000\n  );\n  const [selectedCurrency, setSelectedCurrency] = useState<any>(\n    Preferences?.data?.currency\n  );\n\n  const advisors = useAppSelector((state) => state.advisor);\n  // const navigate = useNavigate();\n  const assignedCountries =\n    advisors?.data?.flatMap((advisor: Advisor) => advisor.assignedCountries) ||\n    [];\n  const unassignedCountries = Preferences?.data?.country?.filter(\n    (country: string) => !assignedCountries.includes(country)\n  );\n  // eslint-disable-next-line\n  const validationSchema = Yup.object().shape({\n    preference: Yup.object().shape({\n      intake: Yup.string().required(\"Intake is required\"),\n      budget: Yup.object().shape({\n        lower: Yup.number().required(\"Lower budget is required\"),\n        upper: Yup.number()\n          .min(Yup.ref(\"lower\"), \"Upper budget must be greater than lower budget\")\n          .required(\"Upper budget is required\"),\n      }),\n      degree: Yup.string().required(\"Degree is required\"),\n      country: Yup.array()\n        .of(Yup.string())\n        .min(1, \"At least one country is required\"),\n      courses: Yup.array()\n        .of(Yup.string())\n        .min(1, \"At least one course is required\"),\n      currency: Yup.string().required(\"Currency is required\"),\n    }),\n\n  });\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n  const currencies = currencySymbols.map((symbol) => {\n    // eslint-disable-next-line\n    const [label, value] = symbol.split(\"-\");\n    return { label: symbol, value };\n  });\n\n  // const handleOptionChange = (\n  //   event: React.ChangeEvent<{}>,\n  //   newValue: string[]\n  // ) => {\n  //   setSkillsData(newValue);\n  // };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"OptionChange\":\n        setSelectedCurrency(event.data.newValue?.value);\n        break;\n      case \"sliderChange\":\n        if (Array.isArray(event.data.newValue)) {\n          setMinBudget(event.data.newValue[0]);\n          setMaxBudget(event.data.newValue[1]);\n        }\n        break;\n      case \"countryChange\":\n        setCountryData(event.data.newValue);\n        break;\n      case \"courseChange\":\n        setCourseData(event.data.newValue);\n        break;\n    }\n  };\n  useEffect(() => {\n    if (month !== undefined && year !== undefined) {\n      setIntake(monthNames[month] + \"-\" + year);\n    }\n    // eslint-disable-next-line\n  }, [month, year]);\n\n\n  const initialValues = {\n    preference: {\n      intake: intake,\n      budget: {\n        upper: maxBudget,\n        lower: minBudget,\n      },\n      degree: Preferences?.data?.degree,\n      country: countryData,\n      courses: courseData,\n      currency: selectedCurrency,\n    },\n    // skills: skilldata,\n  };\n\n  const submit = async (values: any) => {\n    setLoading(true);\n    try {\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setpreferences(response.data.data.preference));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Preferences updated \",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const addAdvisors = async (item: string) => {\n    try {\n      const response = await requestAdvisor({\n        country: item,\n      });\n\n      const newAdvisor = response.data.data.advisor;\n      const existingAdvisor = advisors?.data?.find((advisor) => advisor._id === newAdvisor._id);\n\n      if (existingAdvisor) {\n        dispatch(updateAdvisorInfo(newAdvisor));\n      } else {\n        dispatch(addAdvisorInfo(newAdvisor));\n      }\n      if (response.data.data.chat !== null) {\n        dispatch(addChats(response.data.data.chat));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return (\n    <Box sx={{ px:{lg: 3} }}>\n      <Formik\n        initialValues={initialValues}\n        enableReinitialize={true}\n        // validationSchema={validationSchema}\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => (\n          <Form className=\"mt-5\">\n            <Grid container spacing={4} sx={{ width:\"100% !important\" }}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Typography fontWeight=\"500\" gutterBottom sx={{}}\n                >\n                  What program would you like to pursue?\n                </Typography>\n                <Autocomplete\n                  multiple\n                  id=\"subdisciplines\"\n                  sx={{\n                    \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n                      padding: \"5px\",\n                    },\n                    width: \"100%\",\n                  }}\n                  limitTags={2}\n                  size=\"small\"\n                  options={subDisciplines}\n                  getOptionLabel={(option) => option}\n                  value={courseData}\n                  filterSelectedOptions\n                  ListboxProps={{\n                    style: { maxHeight: \"180px\", overflowY: \"auto\" },\n                  }}\n                  onChange={(event, newValue) =>\n                    eventHandler({\n                      name: \"courseChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search programs\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        ...params.InputProps,\n                      }}\n                    />\n                  )}\n                />\n                {touched.preference?.courses && errors.preference?.courses ? (\n                  <div className=\"error\">{errors.preference.courses}</div>\n                ) : null}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography fontWeight=\"500\" gutterBottom sx={{}}\n                >\n                  What are your preferred study destinations?\n                </Typography>\n                <Autocomplete\n                  multiple\n                  id=\"autocomplete\"\n                  sx={{\n                    \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n                      padding: \"5px\",\n                    },\n                    width: \"100%\",\n                  }}\n                  limitTags={2}\n                  size=\"small\"\n                  options={countryList}\n                  getOptionLabel={(option) => option}\n                  value={countryData}\n                  filterSelectedOptions\n                  ListboxProps={{\n                    style: { maxHeight: \"180px\", overflowY: \"auto\" },\n                  }}\n                  onChange={(event, newValue) =>\n                    eventHandler({\n                      name: \"countryChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search country\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        ...params.InputProps,\n                      }}\n                    />\n                  )}\n                />\n                {touched.preference?.country && errors.preference?.country ? (\n                  <div className=\"error\">{errors.preference.country}</div>\n                ) : null}\n                {unassignedCountries?.map((item, i) => (\n                  <Grid item xs={12} key={i}>\n                    <Box\n                      sx={{\n                        py: 1,\n                        display: \"flex\",\n                        gap: \"1rem\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Button\n                        onClick={() => addAdvisors(item)}\n                        sx={{\n                          border: \"1px solid #3B3F76CC\",\n                          borderRadius: \"15px\",\n                          p: 0.5,\n                          textTransform: \"none\",\n                          color: \"#3B3F76CC\",\n                        }}\n                      >\n                        Request advisor for {item}\n                      </Button>\n                    </Box>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography fontWeight=\"500\" gutterBottom sx={{}}\n                >\n                  Which degree program do you prefer?\n                </Typography>\n                <FormControl size=\"small\">\n                  <InputLabel id=\"degree\">Select Degree</InputLabel>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={values.preference.degree}\n                    label=\"Select Degree\"\n                    onChange={handleChange}\n                  >\n                    {degreeType.map((item, i) => (\n                      <MenuItem value={item} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {touched.preference?.degree && errors.preference?.degree ? (\n                    <div className=\"error\">{errors.preference.degree}</div>\n                  ) : null}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6} >\n                <Typography fontWeight=\"500\" gutterBottom sx={{}}\n                >\n                  When would you like to begin your studies?\n                </Typography>\n                <div style={{ display: \"flex\", gap: \"1rem\" }}>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    // name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={year}\n                    // label=\"Select Year\"\n                    onChange={(e: any) => setYear(e.target.value)}\n                    defaultValue=\"\"\n                    displayEmpty\n                  >\n                    <MenuItem value=\"\" disabled>Select Year</MenuItem>\n                    {[\"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\"].map((item, i) => (\n                      <MenuItem value={item} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    // name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={month}\n                    // label=\"Select Year\"\n                    onChange={(e: any) => setMonth(e.target.value)}\n                    defaultValue=\"\"\n                    displayEmpty\n                  >\n                    <MenuItem value=\"\" disabled>Select Month</MenuItem>\n                    {monthNames.map((item, i) => (\n                      <MenuItem value={i} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </div>\n\n                {/* {touched.preference?.intake && errors.preference?.intake ? (\n                  <div className=\"error\">{errors.preference.intake}</div>\n                ) : null} */}\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Typography fontWeight=\"500\" gutterBottom sx={{ mb: 0.5 }}>\n                  What is your estimated budget range for your studies?\n                </Typography>\n                <>\n                  <Stack direction=\"row\" spacing={1} sx={{ mt: 1 }}>\n                    <TextField\n                      name=\"minBudget\"\n                      label=\"Min Budget\"\n                      type=\"number\"\n                      size=\"small\"\n                      value={minBudget}\n                      onChange={(e: any) =>\n                        setMinBudget(Number(e.target.value))\n                      }\n                      InputProps={{\n                        sx: {\n                          \"input[type=number]\": {\n                            \"-moz-appearance\": \"textfield\", // Firefox\n                            \"-webkit-appearance\": \"none\", // Chrome, Safari, Edge\n                            margin: 0, // Remove margin in Safari\n                          },\n                          \"input[type=number]::-webkit-outer-spin-button, input[type=number]::-webkit-inner-spin-button\":\n                          {\n                            \"-webkit-appearance\": \"none\",\n                          },\n                        },\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {values.preference.currency}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                    <TextField\n                      name=\"maxBudget\"\n                      label=\"Max Budget\"\n                      type=\"number\"\n                      size=\"small\"\n                      value={maxBudget}\n                      onChange={(e: any) =>\n                        setMaxBudget(Number(e.target.value))\n                      }\n                      InputProps={{\n                        sx: {\n                          \"input[type=number]\": {\n                            \"-moz-appearance\": \"textfield\", // Firefox\n                            \"-webkit-appearance\": \"none\", // Chrome, Safari, Edge\n                            margin: 0,\n                          },\n                          \"input[type=number]::-webkit-outer-spin-button, input[type=number]::-webkit-inner-spin-button\":\n                          {\n                            \"-webkit-appearance\": \"none\",\n                          },\n                        },\n                        startAdornment: (\n                          <InputAdornment position=\"start\">\n                            {values.preference.currency}\n                          </InputAdornment>\n                        ),\n                      }}\n                    />\n                  </Stack>\n                  <Slider\n                    value={[minBudget, maxBudget]}\n                    onChange={(event: any, newValue: number | number[]) =>\n                      eventHandler({\n                        name: \"sliderChange\",\n                        data: { event, newValue },\n                      })\n                    }\n                    min={0}\n                    max={5000000}\n                    step={1}\n                    valueLabelDisplay=\"auto\"\n                    sx={{\n                      mt: 2,\n                      width: { xs: \"100%\", md: \"50%\" },\n                      color: \"#979a9d\",\n                      height: \"2px\",\n                    }}\n                  />\n                  {touched.preference?.budget?.lower &&\n                    errors.preference?.budget?.lower ? (\n                    <div className=\"error\">\n                      {errors.preference.budget.lower}\n                    </div>\n                  ) : null}\n                  {touched.preference?.budget?.upper &&\n                    errors.preference?.budget?.upper ? (\n                    <div className=\"error\">\n                      {errors.preference.budget.upper}\n                    </div>\n                  ) : null}\n                </>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <InputLabel\n                  id=\"degree\"\n                  sx={{ fontWeight: \"500\", color: \"#000\", mb: 0.5 }}\n                >\n                  Preferred currency?\n                </InputLabel>\n                <Autocomplete\n                  sx={{\n                    marginTop: \"9px\",\n                    width: \"100%\",\n                    \"& .MuiInputBase-input\": {\n                      fontSize: \"14px !important\",\n                    },\n                    \"&.MuiAutocomplete-listbox\": {\n                      width: \"400px\",\n                    },\n                    \"&.MuiAutocomplete-listbox .MuiAutocomplete-option \": {\n                      fontSize: \"14px !important\",\n                    },\n                    \"& .MuiOutlinedInput-root\": {\n                      paddingRight: \"0 !important\",\n                    },\n                  }}\n                  options={currencies}\n                  getOptionLabel={(option) => option?.label}\n                  value={\n                    currencies.find(\n                      (option) => option.value === selectedCurrency\n                    ) || null\n                  }\n                  onChange={(\n                    event: any,\n                    newValue: { label: string; value: string } | null\n                  ) =>\n                    eventHandler({\n                      name: \"OptionChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search currency\"\n                      size=\"small\"\n                      InputProps={{\n                        ...params.InputProps,\n                        type: \"search\",\n                        endAdornment: (\n                          <ExpandMoreIcon\n                            sx={{ color: \"gray\", marginRight: \"5px\" }}\n                          />\n                        ),\n                        style: {\n                          fontSize: \"14px !important\",\n                          color: \"#000 !important\",\n                        },\n                      }}\n                    />\n                  )}\n                />\n                {touched.preference?.currency && errors.preference?.currency ? (\n                  <div className=\"error\">\n                    {String(errors.preference.currency)}\n                  </div>\n                ) : null}\n              </Grid>\n\n\n              <Grid\n                item\n                xs={12}\n                sx={{ justifyContent: \"end\", display: \"flex\" }}\n              >\n                <CustomButton\n                  width=\"100px\"\n                  handleSubmit={() => console.log(\"first\")}\n                >\n                  {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Save\"\n                  )}\n                </CustomButton>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n\n    </Box>\n  );\n};\n\nconst Skills: React.FC = () => {\n  const skills = useAppSelector((state) => state.skills);\n  const dispatch = useAppDispatch();\n  const [skilldata, setSkillsData] = useState<string[]>(skills.data);\n  const [loading,setLoading] = useState(false)\n  const handleOptionChange = (\n    event: React.ChangeEvent<{}>,\n    newValue: string[]\n  ) => {\n    setSkillsData(newValue);\n  };\n  // const handleSkillsDelete = async (item: any) => {\n  //   const updated = skilldata.filter((value, i) => value !== item);\n  //   const response = await editProfile({ skills: updated });\n  //   if (response) {\n  //     dispatch(setskills(response.data.data.skills));\n  //     setSkillsData(response.data.data.skills);\n  //     dispatch(\n  //       setPopup({\n  //         show: true,\n  //         data: {\n  //           container: {\n  //             name: \"success\",\n  //             data: \"Deleted successfully\",\n  //             dimensions: {\n  //               width: \"30%\",\n  //               height:\"40%\",\n  //               show:\"none\"\n\n  //             },\n  //           },\n  //           type: \"custom\",\n  //         },\n  //       })\n  //     );\n  //   } else {\n  //   }\n  // };\n\n  const submit = async () => {\n    setLoading(true)\n    const response = await editProfile({ skills: skilldata });\n    if (response) {\n      dispatch(setskills(response.data.data.skills));\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"success\",\n              data: \"Skills added successfully\",\n              dimensions: {\n                width: \"30%\",\n                height: \"40%\",\n                show: \"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n      setLoading(false)\n    }else{\n      setLoading(false)\n    }\n  };\n  return (\n    <div>\n      <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", color: \"rgba(48, 51, 99, 0.5)\" }}>Skills</Typography>\n      <Autocomplete\n        multiple\n        id=\"autocomplete\"\n        sx={{\n          \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n            padding: \"5px\",\n          },\n          width: {lg:\"50%\"},\n          \"& .MuiTextField-root\": {\n            marginTop: \"8px\",\n          },\n          mb:1\n        }}\n        disableClearable\n        size=\"small\"\n        fullWidth\n        options={skillsList}\n        getOptionLabel={(option) => option}\n        value={skilldata}\n        filterSelectedOptions\n        ListboxProps={{\n          style: { maxHeight: \"180px\", overflowY: \"auto\" },\n        }}\n        // renderTags={() => null}\n        onChange={handleOptionChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            placeholder=\"Ex: Problem-Solving\"\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              type: \"search\",\n              endAdornment: null,\n            }}\n          />\n        )}\n      />\n      {/* {skilldata?.length > 0 ? (\n        <Box\n          sx={{\n            background: \"#EDF2F6\",\n            p: 2,\n            width: \"fit-content\",\n            mt: 2,\n            borderRadius: \"10px\",\n            display: \"flex\",\n          }}\n        >\n          {skilldata?.map((item) => (\n            <Typography\n              sx={{\n                p: 1.5,\n                background: \"#fff\",\n                width: \"fit-content\",\n                borderRadius: \"10px\",\n                fontSize: \"13px\",\n                mr: 1,\n                position: \"relative\",\n                \"&:hover .cancel-icon\": {\n                  display: \"block\",\n                },\n              }}\n            >\n              {item}\n              <Cancel\n                className=\"cancel-icon\"\n                sx={{\n                  display: \"none\",\n                  color: \"red\",\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0,\n                  fontSize: \"1rem\",\n                }}\n                onClick={() => handleSkillsDelete(item)}\n              />\n            </Typography>\n          ))}\n        </Box>\n      ) : null} */}\n      <Box sx={{ justifyContent: \"end\", display: \"flex\", mr: {lg:10} }}>\n        <Button type=\"submit\" onClick={submit} sx={[secondaryButton, { width: \"100px\" }]}>\n        {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Save\"\n                  )}        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default Skills;\n\nexport { Preferences, Skills };\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  InputLabel,\n  Stack,\n  MenuItem,\n  Select,\n  FormControlLabel,\n  Radio,\n  // FormControl,\n  RadioGroup,\n  Typography,\n  FormControl,\n} from \"@mui/material\";\nimport Images from \"../../../../assets\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { editProfile } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setExtraCurriculum } from \"../../../../store/Slices/extraCurricular\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Formik, Field, FieldArray, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport Skills from \"./preferences\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ExtraCurricularMember {\n  activity: string;\n  description: string;\n  startDate: any;\n  endDate: any;\n  designation: string;\n  status: string;\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst validationSchema = Yup.object().shape({\n  activity: Yup.string().required(\"Activity is required\"),\n  description: Yup.string().required(\"Description is required\"),\n  startDate: Yup.date().required(\"Start Date is required\"),\n  endDate: Yup.date()\n    .nullable() \n    .when(\"status\", {\n      is: \"completed\", \n      then: (schema) =>\n        schema.required(\"End Date is required\").min(\n          Yup.ref(\"startDate\"),\n          \"End Date cannot be earlier than Start Date\"\n        ),\n      otherwise: (schema) => schema.nullable(), \n    }),\n  status: Yup.string().required(\"Status is required\"),\n});\n\nconst validationSchemaArray = Yup.array().of(validationSchema);\n\nconst ExtraCurricular = () => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const extracurricular = useAppSelector((state) => state.extracurriculum);\n  const initialValues = {\n    extraCurriculumActivities: extracurricular.data?.length\n      ? extracurricular.data\n      : [\n        {\n          activity: \"\",\n          description: \"\",\n          designation: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          status: \"\",\n        },\n      ],\n  };\n\n  const activities = [\n    \"Dance\",\n    \"Online Certification\",\n    \"Paper Publication\",\n    \"Project\",\n    \"Research\",\n    \"Student Government\",\n    \"Academic Teams and Clubs\",\n    \"The Debate Team Students\",\n    \"Internships\",\n  ];\n\n  const submitForm = async (values: any) => {\n    if (!loading) {\n      try {\n        setLoading(true);\n        const response = await editProfile({\n          extraCurriculumActivities: values.extraCurriculumActivities,\n        });\n        if (response) {\n          dispatch(setExtraCurriculum(response.data.extraCurriculumActivities));\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Extra curricular activities added successfully\",\n                  dimensions: {\n                    width: \"40%\",\n                    height: \"40%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <Box sx={{ overflowY: \"scroll\", px: 3 }}>\n      <Box sx={{ px: 2 }}>\n        <Skills />\n      </Box>\n      <Box sx={{}}>\n        <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", mb: 1, color: \"rgba(48, 51, 99, 0.5)\", px: 2 }}>Activities</Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={Yup.object().shape({\n            extraCurriculumActivities: validationSchemaArray,\n          })}\n          onSubmit={(values, { setSubmitting }) => {\n            submitForm(values);\n            setSubmitting(false);\n          }}\n        >\n          {({ values, handleChange, handleBlur, isValid, dirty }) => (\n            <Form >\n              <FieldArray name=\"extraCurriculumActivities\">\n                {({ push, remove }) => (\n                  <>\n                    {values.extraCurriculumActivities.map((activity: ExtraCurricularMember, index) => (\n                      <div className=\"mb-5\" key={index}>\n                        <Grid container spacing={4} sx={{ px: 2 }}>\n                          {/* Activity Field */}\n                          <Grid item xs={12} sm={6}>\n                            <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                              Activity\n                            </InputLabel>\n                            <FormControl fullWidth variant=\"outlined\" size=\"small\" sx={{ mt: 1 }}>\n                              <Field\n                                as={Select}\n                                size=\"small\"\n                                name={`extraCurriculumActivities.${index}.activity`}\n                                value={activity.activity}\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                fullWidth\n                                displayEmpty\n                                IconComponent={ExpandMoreIcon}\n                                MenuProps={MenuProps}\n                              >\n                                <MenuItem disabled value=\"\">\n                                  Select activity\n                                </MenuItem>\n                                {activities.map((value) => (\n                                  <MenuItem key={value} value={value}>\n                                    {value}\n                                  </MenuItem>\n                                ))}\n                              </Field>\n                              <ErrorMessage\n                                name={`extraCurriculumActivities.${index}.activity`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </FormControl>\n                          </Grid>\n\n                          {/* Designation Field */}\n                          <Grid item xs={12} sm={6}>\n                            <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500,mb: 1}}>\n                              Designation\n                            </InputLabel>\n                            <Field\n                              as={TextField}\n                              size=\"small\"\n                              name={`extraCurriculumActivities.${index}.designation`}\n                              placeholder=\"Designation\"\n                              value={activity.designation}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                            />\n                            <ErrorMessage\n                              name={`extraCurriculumActivities.${index}.designation`}\n                              component=\"div\"\n                              className=\"error\"\n                            />\n                          </Grid>\n\n                          {/* Status Field */}\n                          <Grid item xs={12} sm={6}>\n                            <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                              Active status\n                            </InputLabel>\n                            <Field\n                              as={RadioGroup}\n                              row\n                              name={`extraCurriculumActivities.${index}.status`}\n                              value={activity.status}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                            >\n                              <FormControlLabel\n                                value=\"completed\"\n                                control={<Radio size=\"small\" />}\n                                label=\"Completed\"\n                              />\n                              <FormControlLabel\n                                value=\"ongoing\"\n                                control={<Radio size=\"small\" />}\n                                label=\"Ongoing\"\n                              />\n                            </Field>\n                            <ErrorMessage\n                              name={`extraCurriculumActivities.${index}.status`}\n                              component=\"div\"\n                              className=\"error\"\n                            />\n                          </Grid>\n\n                          {/* Description Field */}\n                          <Grid item xs={12} sm={6}>\n                            <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                              Description\n                            </InputLabel>\n                            <Field\n                              as={TextField}\n                              size=\"small\"\n                              name={`extraCurriculumActivities.${index}.description`}\n                              placeholder=\"Description\"\n                              value={activity.description}\n                              onBlur={handleBlur}\n                              onChange={handleChange}\n                              fullWidth\n                            />\n                            <ErrorMessage\n                              name={`extraCurriculumActivities.${index}.description`}\n                              component=\"div\"\n                              className=\"error\"\n                            />\n                          </Grid>\n\n                          {/* Start Date Field */}\n                          <Grid item xs={12} sm={6}>\n                            <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                              Attended from\n                            </InputLabel>\n\n                            <DatePickerComponent\n                              selectedDate={activity?.startDate}\n                              onChange={(date) => handleChange({ target: { name: `extraCurriculumActivities.${index}.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                              maxDate={new Date()}\n                              placeholderText=\"Start Date\"\n                            />\n                            <ErrorMessage\n                              name={`extraCurriculumActivities.${index}.startDate`}\n                              component=\"div\"\n                              className=\"error\"\n                            />\n                          </Grid>\n\n                          {/* End Date Field */}\n                          <Grid item xs={12} sm={6}>\n                            {activity.status === \"completed\" && (\n                              <>\n                                <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                                  Attended to\n                                </InputLabel>\n                                <DatePickerComponent\n                                  selectedDate={activity?.endDate}\n                                  onChange={(date) => handleChange({ target: { name: `extraCurriculumActivities.${index}.endDate`, value: date?.toISOString().slice(0, 10) } })}\n                                  minDate={\n                                    activity.startDate\n                                      ? new Date(\n                                        new Date(activity?.startDate).getTime() + 10 * 24 * 60 * 60 * 1000\n                                      )\n                                      : undefined\n                                  }\n                                  maxDate={new Date()}\n                                  placeholderText=\"End Date\"\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.endDate`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </>\n                            )}\n                          </Grid>\n\n                          {/* Remove Activity Button */}\n                          {values.extraCurriculumActivities.length > 1 && (\n                            <Grid item xs={12}>\n                              <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                                <img\n                                  src={Images.deleteIcon}\n                                  alt=\"delete\"\n                                  style={{ width: \"1.5rem\" }}\n                                  onClick={() => remove(index)}\n                                />\n                              </Box>\n                            </Grid>\n                          )}\n                        </Grid>\n                      </div>\n                    ))}\n\n                    <Stack\n                      direction=\"row\"\n                      sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n                      spacing={2}\n                    >\n                      <Button\n                        onClick={() =>\n                          push({\n                            activity: \"\",\n                            description: \"\",\n                            designation: \"\",\n                            startDate: \"\",\n                            endDate: \"\",\n                            status: \"\",\n                          })\n                        }\n                        sx={secondaryButton}\n                      >\n                        Add new\n                      </Button>\n                      <CustomButton width=\"100px\" handleSubmit={()=>submitForm}>\n                        {loading ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Stack>\n                  </>\n                )}\n              </FieldArray>\n            </Form>\n          )}\n        </Formik>\n\n      </Box>\n    </Box>\n  );\n};\n\nexport default ExtraCurricular;\n","import React, { useState } from \"react\";\nimport { Button, Grid, TextField, Box, InputLabel, Stack, MenuItem, Select, FormControl } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { editProfile } from \"../../../../services\";\nimport { setfamilyInfo } from \"../../../../store/Slices/familyInfoSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport { Formik, Field, FieldArray, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Images from \"src/assets\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\n\nconst validationSchema = Yup.object({\n  familyDetails: Yup.array()\n    .of(\n      Yup.object({\n        GuardianFirstName: Yup.string().required(\"First name is required\"),\n        GuardianLastName: Yup.string().required(\"Last name is required\"),\n        GuardianOccupation: Yup.string().required(\"Occupation is required\"),\n        RelationshipWithStudent: Yup.string().required(\"Relationship is required\"),\n        GuardianContactNumber: Yup.object({\n          number:Yup.string()\n          .required(\"Phone number is required\")\n          .test(\"is-valid-phone\", \"Invalid phone number\", function (value) {\n            const { countryCode } = this.parent;\n            if (!countryCode || !value) return false; // Ensure both countryCode and number are provided\n  \n            try {\n              const phoneNumber = parsePhoneNumberFromString(`${countryCode}${value}`, countryCode);\n              return phoneNumber?.isValid();\n            } catch (error) {\n              return false;\n            }\n          }),\n          countryCode: Yup.string().required(\"Country code is required\"),\n        }).required(\"Phone number is required\"),\n      })\n    )\n    .required(\"Must have family members\")\n    .min(1, \"Minimum of 1 family member is required\"),\n});\n\nconst Family = () => {\n  const familyData = useAppSelector((state) => state.familyInfo);\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n\n  const initialValues = {\n    familyDetails:\n      familyData.data?.length > 0\n        ? familyData.data\n        : [\n          {\n            GuardianFirstName: \"\",\n            GuardianLastName: \"\",\n            GuardianEmail: \"\",\n            GuardianOccupation: \"\",\n            GuardianQualification: \"\",\n            RelationshipWithStudent: \"\",\n            GuardianContactNumber: {\n              number: \"\",\n              countryCode: \"\"\n            },\n          },\n        ],\n  };\n\n  const submitForm = async (values: any) => {\n    let family = {\n      familyDetails: values.familyDetails,\n    };\n    try {\n      setLoading(true)\n      const response = await editProfile(family);\n      if (response) {\n        dispatch(setfamilyInfo(response.data.data.familyDetails));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Family details added successfully\",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoading(false)\n    } catch (error) { \n      setLoading(false)\n    }\n  };\n\n  return (\n    <Box sx={{ overflowY: \"scroll\", px: 3 }}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={submitForm}\n      >\n        {({ values, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\n          <form onSubmit={handleSubmit}>\n            <FieldArray name=\"familyDetails\">\n              {({ push, remove }) => (\n                <div>\n                  {values.familyDetails.map((familyMember, index) => (\n                    <div className=\"mb-5\" key={index}>\n                      <Grid container spacing={4} sx={{ px: 2 }}>\n                        {/* RelationshipWithStudent */}\n                        <Grid item xs={12} sm={6}>\n                          <FormControl fullWidth variant=\"outlined\" size=\"small\" sx={{ mt: 1 }}>\n                            <InputLabel id=\"family\">\n                              Select Relation\n                            </InputLabel>\n                            <Select\n                              size=\"small\"\n                              id=\"family\"\n                              name={`familyDetails.${index}.RelationshipWithStudent`}\n                              value={familyMember.RelationshipWithStudent}\n                              onChange={handleChange}\n                              // onBlur={handleBlur}\n                              fullWidth\n                              IconComponent={ExpandMoreIcon}\n                              // displayEmpty\n                              label=\"Select Relation\"\n                            >\n                              <MenuItem disabled value=\"\">\n                                Select\n                              </MenuItem>\n                              {[\n                                { name: \"Father\", value: \"father\" },\n                                { name: \"Mother\", value: \"mother\" },\n                                { name: \"Spouse\", value: \"spouse\" },\n                                { name: \"Guardian\", value: \"guardian\" },\n                              ].map((option) => (\n                                <MenuItem key={option.value} value={option.value}>\n                                  {option.name}\n                                </MenuItem>\n                              ))}\n                            </Select>\n                          </FormControl>\n                          <ErrorMessage\n                            name={`familyDetails.${index}.RelationshipWithStudent`}\n                            component=\"div\"\n                            className=\"error\"\n                          />\n                        </Grid>\n                        <Grid xs={12} sm={6}></Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <Field\n                            as={TextField}\n                            size=\"small\"\n                            name={`familyDetails.${index}.GuardianFirstName`}\n                            placeholder=\"First Name\"\n                            value={familyMember.GuardianFirstName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            fullWidth\n                            label=\"First Name\"\n                          />\n                          <ErrorMessage\n                            name={`familyDetails.${index}.GuardianFirstName`}\n                            component=\"div\"\n                            className=\"error\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <Field\n                            as={TextField}\n                            size=\"small\"\n                            name={`familyDetails.${index}.GuardianLastName`}\n                            placeholder=\"Last Name\"\n                            value={familyMember.GuardianLastName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            fullWidth\n                            label=\"Last Name\"\n\n                          />\n                          <ErrorMessage\n                            name={`familyDetails.${index}.GuardianLastName`}\n                            component=\"div\"\n                            className=\"error\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <Field\n                            as={TextField}\n                            size=\"small\"\n                            type=\"email\"\n                            name={`familyDetails.${index}.GuardianEmail`}\n                            placeholder=\"Email\"\n                            value={familyMember.GuardianEmail}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            fullWidth\n                            label=\"Email\"\n\n                          />\n                          <ErrorMessage\n                            name={`familyDetails.${index}.GuardianEmail`}\n                            component=\"div\"\n                            className=\"error\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <ReactPhoneInput\n                            value={`${familyMember.GuardianContactNumber.countryCode}${familyMember.GuardianContactNumber.number}`}\n                            onChange={(value, data: any) => {\n                              const dialCode = data?.dialCode || \"\";\n                              setFieldValue(`familyDetails.${index}.GuardianContactNumber.countryCode`, \"+\" + dialCode);\n                              setFieldValue(`familyDetails.${index}.GuardianContactNumber.number`, value.slice(dialCode.length).trim());\n                            }}\n                            country=\"in\"\n                          />\n                          <ErrorMessage\n                            name={`familyDetails.${index}.GuardianContactNumber.number`}\n                            component=\"div\"\n                            className=\"error\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <Field\n                            as={TextField}\n                            size=\"small\"\n                            name={`familyDetails.${index}.GuardianOccupation`}\n                            placeholder=\"Occupation\"\n                            value={familyMember.GuardianOccupation}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            fullWidth\n                            label=\"Occupation\"\n\n                          />\n                          <ErrorMessage\n                            name={`familyDetails.${index}.GuardianOccupation`}\n                            component=\"div\"\n                            className=\"error\"\n                          />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                          <Field\n                            as={TextField}\n                            size=\"small\"\n                            name={`familyDetails.${index}.GuardianQualification`}\n                            placeholder=\"Educational Qualification\"\n                            value={familyMember.GuardianQualification}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            fullWidth\n                            label=\"Qualification\"\n                          />\n                        </Grid>\n\n                        {/* Delete Button */}\n                        {values.familyDetails.length > 1 && (\n                          <Grid item xs={12}>\n                            <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                              <img\n                                src={Images.deleteIcon}\n                                alt=\"delete\"\n                                style={{ width: \"1.5rem\" }}\n                                onClick={() => remove(index)}\n                              />\n                            </Box>\n                          </Grid>\n                        )}\n                      </Grid>\n                    </div>\n                  ))}\n                  <Stack\n                    direction=\"row\"\n                    sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n                    spacing={2}\n                  >\n                    <Button\n                      onClick={() =>\n                        push({\n                          GuardianFirstName: \"\",\n                          GuardianLastName: \"\",\n                          GuardianEmail: \"\",\n                          GuardianOccupation: \"\",\n                          GuardianQualification: \"\",\n                          RelationshipWithStudent: \"\",\n                          GuardianContactNumber: { number: \"\", countryCode: \"\" },\n                        })\n                      }\n                      sx={[secondaryButton, { width: \"100px\" }]}\n                    >\n                      Add new\n                    </Button>\n                    <CustomButton\n                      width=\"35%\"\n                      handleSubmit={handleSubmit}\n                    >\n                        {loading ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                    </CustomButton>\n                  </Stack>\n                </div>\n              )}\n            </FieldArray>\n\n            {/* <Grid item xs={12} sx={{ mt: 10, display: \"flex\", justifyContent: \"end\", mb: 10 }}>\n              <CustomButton\n                // name=\"Save\"\n                width =\"30%\" \n                handleSubmit={()=>console.log(\"\")}\n                // sx={{ backgroundColor: \"#46D7CB\", width: \"30%\" }}\n              >\nSave\n              </CustomButton>\n            </Grid> */}\n          </form>\n        )}\n      </Formik>\n    </Box>\n  );\n};\n\nexport default Family;\n","import {\n  Box,\n  Button,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\n// import { DestinationTypeEnum } from \"../../../../assets/enums\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { editProfile, sendSms, verifyEmailPhone } from \"../../../../services\";\nimport { setSharedInfo } from \"../../../../store/Slices/sharedInfoSlice\";\nimport { setPersonalInfo } from \"../../../../store/Slices/personalInfoSlice\";\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport Images from \"../../../../assets/index\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from 'yup';\nimport { nationalities } from \"../../../../assets/menu\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\n// import CityDropdown from \"./reuseDropdowns\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst PersonalDetails = () => {\n  const dispatch = useAppDispatch();\n  const verification = useAppSelector((state) => state.verification);\n  const phoneStatus = verification.data?.phoneLoginOtp.verified;\n  const emailStatus = verification.data?.emailLoginOtp?.verified;\n  const personalInfo = useAppSelector((state) => state.personalInfo);\n  const sharedInfo = useAppSelector((state) => state.sharedInfo);\n  const [refused, setRefused] = useState(personalInfo?.data?.visaRejectedDetails !== undefined ? \"yes\" : \"no\");\n  const [permanent, setPermanent] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [permanentstates, setpermanentstates] = useState<IState[]>([]);\n  const [permanentcities, setpermanentCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState<any>(\n    personalInfo?.data?.temporaryAddress?.country\n  );\n  const [selectedState, setSelectedState] = useState<any>(\n    personalInfo?.data?.temporaryAddress?.state\n  );\n  const [selectedCity, setSelectedCity] = useState<any>(\n    personalInfo?.data?.temporaryAddress?.city\n  );\n  const [permanentCountry, setPermanentCountry] = useState<any>(\n    personalInfo?.data?.permanentAddress?.country\n  );\n  const [permanentState, setpermanentState] = useState<any>(\n    personalInfo?.data?.permanentAddress?.state\n  );\n  const [permanentCity, setpermanentCity] = useState<any>(\n    personalInfo?.data?.permanentAddress?.city\n  );\n  const ITEM_HEIGHT = 78;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 220,\n      },\n    },\n  };\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const countryPInfo = countries.find((c: any) => c.name === permanentCountry);\n  const stateInPfo = states.find((s: any) => s.name === permanentState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryPInfo?.isoCode\n      );\n      setpermanentstates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInPfo?.countryCode ?? \"\",\n        stateInPfo?.isoCode ?? \"\"\n      );\n      setpermanentCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryPInfo, stateInPfo]);\n\n  useEffect(() => {\n    if (personalInfo?.data) {\n      setSelectedCountry(personalInfo?.data?.temporaryAddress?.country);\n      setSelectedState(personalInfo?.data?.temporaryAddress?.state);\n      setSelectedCity(personalInfo?.data?.temporaryAddress?.city);\n\n      setPermanentCountry(personalInfo?.data?.permanentAddress?.country);\n      setpermanentState(personalInfo?.data?.permanentAddress?.state);\n      setpermanentCity(personalInfo?.data?.permanentAddress?.city);\n    }\n  }, [personalInfo]);\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"temporaryCountry\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"temporaryState\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"temporaryCity\":\n        setSelectedCity(event.data);\n        break;\n      case \"permanentCountry\":\n        setPermanentCountry(event.data);\n        setpermanentState(\"\");\n        setpermanentCity('');\n        setpermanentCities([]);\n        const countryPInfo = countries.find((c: any) => c.name === event.data);\n        if (countryPInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(\n            countryPInfo.isoCode\n          );\n          setpermanentstates(statesOfCountry);\n        }\n        break;\n      case \"permanentState\":\n        setpermanentCity('');\n        setpermanentState(event.data);\n        const statePInfo = permanentstates.find((s: any) => s.name === event.data);\n        if (statePInfo) {\n          const citiesOfState = await City.getCitiesOfState(\n            statePInfo?.countryCode,\n            statePInfo?.isoCode\n          );\n          setpermanentCities(citiesOfState);\n        }\n        break;\n      case \"permanentCity\":\n        setpermanentCity(event.data);\n        break;\n      case \"verifyPhone\":\n        setLoad(true);\n        const response = await sendSms({});\n        if (response) {\n          setLoad(false);\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"phoneverification\",\n                  data: response.data.message,\n                  dimensions: {\n                    width: \"400px\",\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        } else {\n          setLoad(false);\n        }\n        break;\n      case \"verifyemail\":\n        setLoading(true);\n        if (event.data) {\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailRegex.test(event.data)) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: \"Please enter a valid email address.\",\n                    dimensions: {\n                      width: \"400px\",\n                      show:\"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n            setLoading(false);\n            return; \n          }\n          try {\n            const response = await verifyEmailPhone({ email: event.data });\n            if (response) {\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"verifyEmail\",\n                      data: event.data,\n                      dimensions: {\n                        width: \"500px\",\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n              setLoading(false);\n            } else {\n              console.log(\"Verification failed:\", response);\n            }\n          } catch (err) {\n            console.error(\"Error during verification:\", err);\n          } finally {\n            setLoading(false);\n          }\n        }else{\n          setLoading(false);\n        }\n        break;\n        default:\n          break;\n    }\n \n\n  };\n\n  // eslint-disable-next-line \n  const validationSchema = Yup.object().shape({\n    firstName: Yup.string().required('First name is required'),\n    lastName: Yup.string().required('Last name is required'),\n    email:  Yup.string()\n    .matches(\n      /([a-z0-9]+)([{1}])?([a-zA-Z0-9]+)([a-zA-Z0-9]+)([a-z]+)/g,\n      \"Enter Email Id\"\n    )\n    .required(\"Enter Email ID\")\n    .max(40, \"Email ID must be at most 40 characters\"),\n    personalDetails: Yup.object().shape({\n      DOB: Yup.date().required('Date of birth is required'),\n      Gender: Yup.string().required('Gender is required'),\n      nationality: Yup.string().required('Nationality is required'),\n      countyOfBirth: Yup.string().required('County of birth is required'),\n      maritalStatus: Yup.string().required('Marital status is required'),\n      temporaryAddress: Yup.object().shape({\n        city: Yup.string().required('City is required'),\n        state: Yup.string().required('State is required'),\n        pinCode: Yup.number().required('Pincode is required'),\n        country: Yup.string().required('Country is required'),\n        addressLine1: Yup.string().required('Address Line1 is required'),\n      }),\n      permanentAddress: Yup.object().when('permanent', {\n        is: 'no',\n        then: schema => schema.shape({\n          city: Yup.string().required('City is required'),\n          state: Yup.string().required('State is required'),\n          pinCode: Yup.number().required('Pincode is required'),\n          country: Yup.string().required('Country is required'),\n          addressLine1: Yup.string().required('Address Line1 is required'),\n        }),\n      }),\n    }),\n  });\n\n  const initialValues = {\n    firstName: sharedInfo?.data?.firstName,\n    lastName: sharedInfo?.data?.lastName,\n    email: sharedInfo?.data?.email,\n    personalDetails: {\n      DOB: personalInfo?.data?.DOB,\n      Gender: personalInfo?.data?.Gender,\n      nationality: personalInfo?.data?.nationality,\n      countyOfBirth: personalInfo?.data?.countyOfBirth,\n      maritalStatus: personalInfo?.data?.maritalStatus,\n      validPassport: personalInfo?.data?.validPassport,\n      validPermit: personalInfo?.data?.validPermit,\n      visaRejectedDetails: personalInfo?.data?.visaRejectedDetails,\n      temporaryAddress: {\n        city: selectedCity,\n        state: selectedState,\n        pinCode: personalInfo?.data?.temporaryAddress?.pinCode,\n        country: selectedCountry,\n        addressLine1: personalInfo?.data?.temporaryAddress?.addressLine1,\n        addressLine2: personalInfo?.data?.temporaryAddress?.addressLine2,\n        addressLine3: personalInfo?.data?.temporaryAddress?.addressLine3,\n      },\n      permanentAddress: {\n        city: permanentCity,\n        state: permanentState,\n        pinCode: personalInfo?.data?.permanentAddress?.pinCode,\n        country: permanentCountry,\n        addressLine1: personalInfo?.data?.permanentAddress?.addressLine1,\n        addressLine2: personalInfo?.data?.permanentAddress?.addressLine2,\n        addressLine3: personalInfo?.data?.permanentAddress?.addressLine3,\n      },\n    },\n  };\n\n  function isEmpty(obj: any): boolean {\n    if (obj == null) return true;\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  useEffect(() => {\n    const tempAddress = initialValues.personalDetails.temporaryAddress;\n    const permAddress = initialValues.personalDetails.permanentAddress;\n    if (isEmpty(personalInfo?.data?.permanentAddress)) {\n      setPermanent(\"\");\n    } else if (\n      tempAddress.city === permAddress.city &&\n      tempAddress.state === permAddress.state &&\n      tempAddress.pinCode === permAddress.pinCode &&\n      tempAddress.country === permAddress.country &&\n      tempAddress.addressLine1 === permAddress.addressLine1 &&\n      tempAddress.addressLine2 === permAddress.addressLine2 &&\n      tempAddress.addressLine3 === permAddress.addressLine3\n    ) {\n      setPermanent(\"yes\");\n    } else {\n      setPermanent(\"no\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const submit = async (values: any) => {\n    try {\n      setLoader(true);\n      if (permanent === \"yes\") {\n        values.personalDetails.permanentAddress = {\n          ...values.personalDetails.temporaryAddress,\n        };\n      }\n      const response = await editProfile(values);\n      if (response.data.success) {\n        const sharedProfile = {\n          _id: response.data?.data?._id,\n          firstName: response.data?.data?.firstName,\n          lastName: response.data?.data?.lastName,\n          displayPicSrc: response.data?.data?.displayPicSrc,\n          email: response.data?.data?.email,\n          phone: response.data?.data?.phone,\n          LeadSource: response.data?.data?.LeadSource,\n          isPlanningToTakeAcademicTest:\n            response.data?.data?.isPlanningToTakeAcademicTest,\n          isPlanningToTakeLanguageTest:\n            response.data?.data?.isPlanningToTakeLanguageTest,\n        };\n        const personalInfo = {\n          DOB: response.data?.data?.personalDetails.DOB,\n          Gender: response.data?.data?.personalDetails.Gender, // enum\n          temporaryAddress:\n            response.data?.data?.personalDetails.temporaryAddress,\n          permanentAddress:\n            response.data?.data?.personalDetails.permanentAddress,\n          nationality: response.data?.data?.personalDetails.nationality, // enum\n          countyOfBirth: response.data?.data?.personalDetails.countyOfBirth, // enum\n          maritalStatus: response.data?.data?.personalDetails.maritalStatus, // enum\n          validPassport: response.data?.data?.personalDetails.validPassport, // enum yes no and processing\n          validPermit: response.data?.data?.personalDetails.validPermit, // enum yes no and processing,\n          visaRejectedDetails:\n            response.data?.data?.personalDetails.visaRejectedDetails,\n        };\n        dispatch(\n          setSharedInfo({\n            ...sharedProfile,\n          })\n        );\n        dispatch(\n          setPersonalInfo({\n            ...personalInfo,\n          })\n        );\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Profile updated successfully\",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setLoader(false);\n      } else {\n        setLoader(false);\n      }\n    } catch (error) { }\n  };\n  const getMaxDate = () => {\n    const today = new Date();\n    return new Date(\n      today.getFullYear() - 12,\n      today.getMonth(),\n      today.getDate()\n    ); // Return a Date object\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Filter cities based on the search query\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const permfilteredCities = useMemo(\n    () =>\n      permanentcities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [permanentcities, searchQuery]\n  );\n\n\n  return (\n    <div style={{ height: \"100%\", overflowY: \"scroll\" }}>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        enableReinitialize\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\" }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    First Name{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    fullWidth\n                    error={touched.firstName && Boolean(errors.firstName)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"firstName\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Last Name{\" \"}\n                  </InputLabel>\n\n                  <CustomField\n                    id=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    fullWidth\n                    error={touched.lastName && Boolean(errors.lastName)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"lastName\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Email{\" \"}\n                  </InputLabel>\n\n                  <Box sx={{ display: \"flex\" }}>\n                    {emailStatus ? (\n                      <Typography\n                        sx={{\n                          border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                          p: 1,\n                          borderRadius: \"5px\",\n                          width: \"100%\",\n                        }}\n                      >\n                        {sharedInfo?.data?.email}\n                      </Typography>\n                    ) : (\n                      <>\n                        <CustomField\n                          id=\"lastName\"\n                          type=\"email\"\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          value={values.email}\n                          onChange={handleChange}\n                          fullWidth\n                          // disabled\n                          error={touched.email && Boolean(errors.email)}\n                        />\n                        <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                          <ErrorMessage name=\"email\" component=\"div\" />\n                        </div>\n                      </>\n                    )}\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"20%\",\n                      }}\n                    >\n                      {emailStatus ? (\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Verified\"}\n                          placement=\"right\"\n                        >\n                          <VerifiedIcon\n                            sx={{\n                              fontSize: { xs: \"1.2rem\" },\n                              color: \"green\",\n                              marginLeft: \"-8px\",\n                              cursor: \"pointer\"\n                            }}\n                          />\n                        </Tooltip>\n                      ) : sharedInfo?.data?.email !== \"\" || sharedInfo?.data?.email !== undefined  ? (\n                        <Button\n                          sx={[secondaryButton, { width: \"75px\" }]}\n                          onClick={() =>\n                            eventHandler({\n                              name: \"verifyemail\",\n                              data: values.email,\n                            })\n                          }\n                        >\n                          {loading ? (\n                            <img\n                              src={Images.standardLoader}\n                              alt=\"load\"\n                              style={{ width: \"1rem\" }}\n                            />\n                          ) : (\n                            \"Verify\"\n                          )}\n                        </Button>\n                      ):\"\"}\n                    </Box>\n                  </Box>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {sharedInfo?.data?.phone &&\n                    (sharedInfo.data.phone.number || Object.keys(sharedInfo.data.phone).length > 0) ? (\n                    <>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        Contact number\n                      </InputLabel>\n                      <Box sx={{ display: \"flex\" }}>\n                        <Typography\n                          sx={{\n                            border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                            p: 1,\n                            borderRadius: \"5px\",\n                            width: \"100%\",\n                          }}\n                          onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"phonenumber\",\n                                    dimensions: {\n                                      width: \"400px\",\n                                      // height: \"35%\",\n                                      // close: \"none\",\n                                      show: \"none\"\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }\n                        >\n                          {sharedInfo?.data?.phone?.countryCode}{\" \"}\n                          {sharedInfo?.data?.phone?.number}\n                        </Typography>\n                        <Box\n                          sx={{\n                            width: \"20%\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          {phoneStatus ? (\n                            <Tooltip\n                              slotProps={{\n                                tooltip: {\n                                  sx: {\n                                    color: \"#514E6A\",\n                                    backgroundColor: \"#ffff\",\n                                    boxShadow: 2,\n                                    cursor: \"pointer\",\n                                  },\n                                },\n                              }}\n                              title={\"Verified\"}\n                              placement=\"right\"\n                            >\n                              <VerifiedIcon\n                                sx={{\n                                  fontSize: { xs: \"1.2rem\" },\n                                  color: \"green\",\n                                  marginLeft: \"-8px\",\n                                  cursor: \"pointer\"\n                                }}\n                              />\n                            </Tooltip>\n                          ) : (\n                            <Button\n                              sx={[secondaryButton, { width: \"75px\" }]}\n                              onClick={() =>\n                                dispatch(\n                                  setPopup({\n                                    show: true,\n                                    data: {\n                                      container: {\n                                        name: \"phonenumber\",\n                                        dimensions: {\n                                          width: \"400px\",\n                                          // height: \"35%\",\n                                          // close: \"none\",\n                                          show: \"none\"\n                                        },\n                                      },\n                                      type: \"custom\",\n                                    },\n                                  })\n                                )\n                              }\n                            >\n                              {load ? (\n                                <img\n                                  src={Images.standardLoader}\n                                  alt=\"load\"\n                                  style={{ width: \"1rem\" }}\n                                />\n                              ) : (\n                                \"Verify\"\n                              )}\n                            </Button>\n                          )}\n                        </Box>\n                      </Box>\n                    </>\n                  ) : (\n                    <Button\n                      sx={{ textTransform: \"none\", fontSize: \"1rem\" }}\n                      onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"phonenumber\",\n                                dimensions: {\n                                  width: \"400px\",\n                                  // height: \"35%\",\n                                  // close: \"none\",\n                                  show: \"none\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }\n                    >\n                      + Add contact number\n                    </Button>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Gender\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"personalDetails.Gender\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={values.personalDetails.Gender}\n                    onChange={handleChange}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                    error={touched?.personalDetails?.Gender && Boolean(errors?.personalDetails?.Gender)}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Gender\n                    </MenuItem>\n\n                    {[\"Male\",\"Female\",\"Non-Binary\",\"Prefer Not to Say\"].map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.Gender\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Date of Birth\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values.personalDetails.DOB}\n                    onChange={(date) =>\n                      setFieldValue(\"personalDetails.DOB\", date?.toISOString().slice(0, 10))\n                    }\n                    maxDate={getMaxDate()}\n                    placeholderText=\"Date of Birth\"\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.DOB\" component=\"div\" />\n                  </div>\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Nationality\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Nationality\"\n                    name=\"personalDetails.nationality\"\n                    options={nationalities}\n                    value={values.personalDetails.nationality}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.nationality\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Country of Birth\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"personalDetails.countyOfBirth\"\n                    options={countries.map(country => country.name)}\n                    value={values.personalDetails.countyOfBirth}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.countyOfBirth\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Marital status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      aria-label=\"radio-group\"\n                      name=\"personalDetails.maritalStatus\"\n                      value={values.personalDetails.maritalStatus}\n                      sx={{ display: \"flex\", flexDirection: \"row\" }}\n                      onChange={handleChange}\n                    >\n                      {[\"Married\", \"Single\", \"Widowed\", \"Seperated\"].map(\n                        (option) => (\n                          <FormControlLabel\n                            key={option}\n                            value={option}\n                            control={\n                              <Radio\n                                sx={{\n                                  \"&.Mui-checked.Mui-disabled\": {\n                                    color: \"#14C6A4\",\n                                  },\n                                }}\n                              />\n                            }\n                            label={option}\n                          />\n                        )\n                      )}\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Do you have valid passport ?\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"personalDetails.validPassport\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={values.personalDetails.validPassport}\n                    onChange={handleChange}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                    error={touched?.personalDetails?.validPassport && Boolean(errors?.personalDetails?.validPassport)}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Do you have a valid passport\n                    </MenuItem>\n\n                    {[\n                      { name: \"Yes\", value: \"yes\" },\n                      { name: \"No\", value: \"no\" },\n                      { name: \"Processing\", value: \"processing\" },\n                    ].map((name: any) => (\n                      <MenuItem\n                        key={name}\n                        value={name.value}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.validPassport\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"refusedLabel\"\n                    sx={{\n                      fontWeight: \"500\",\n                      color: \"#000\",\n                      mb: 1,\n                      whiteSpace: \"normal\",\n                    }}\n                  >\n                    Have you ever been refused a visa from any country?\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"refusal\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={\n                      refused === \"no\" && values.personalDetails.visaRejectedDetails\n                        ? \"yes\" // Force \"Yes\" if visaRejectedDetails is present\n                        : refused\n                    }\n                    onChange={(e) => {\n                      const newValue = e.target.value;\n                      setRefused(newValue);\n\n                      // If 'No' is selected, clear the visaRejectedDetails\n                      if (newValue === \"no\") {\n                        handleChange({ target: { name: \"personalDetails.visaRejectedDetails\", value: \"\" } });\n                      }\n                    }}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {[\n                      { name: \"Yes\", value: \"yes\" },\n                      { name: \"No\", value: \"no\" },\n                    ].map((option) => (\n                      <MenuItem\n                        key={option.value}\n                        value={option.value}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {option.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n\n                {(refused === \"yes\" || values.personalDetails.visaRejectedDetails) && (\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel\n                      id=\"visaRejectedDetailsLabel\"\n                      sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                    >\n                      Reason for visa rejection\n                    </InputLabel>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"text\"\n                      id=\"visaRejectedDetails\"\n                      multiline\n                      fullWidth\n                      rows={3}\n                      placeholder=\"Reason for visa rejection\"\n                      onChange={handleChange}\n                      name=\"personalDetails.visaRejectedDetails\"\n                      value={values.personalDetails.visaRejectedDetails}\n                    />\n                  </Grid>\n                )}\n\n\n                <Grid item xs={12}>\n                  <Typography\n                    sx={{ p: 1, fontWeight: 600, fontSize: \"1.5rem\" }}\n                  >\n                    Address\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Address Line 1\n                  </InputLabel>\n                  <CustomField\n                    id=\"addressLine1\"\n                    type=\"text\"\n                    placeholder=\"Address Line 1\"\n                    name=\"personalDetails.temporaryAddress.addressLine1\"\n                    value={values.personalDetails.temporaryAddress.addressLine1}\n                    onChange={handleChange}\n                    fullWidth\n                    error={touched?.personalDetails?.temporaryAddress?.addressLine1 && Boolean(errors?.personalDetails?.temporaryAddress?.addressLine1)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.temporaryAddress.addressLine1\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Address Line 2\n                  </InputLabel>\n                  <CustomField\n                    id=\"addressLine2\"\n                    type=\"text\"\n                    placeholder=\"Address Line 2\"\n                    name=\"personalDetails.temporaryAddress.addressLine2\"\n                    value={values.personalDetails.temporaryAddress.addressLine2}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Address Line 3\n                  </InputLabel>\n                  <CustomField\n                    id=\"addressLine3\"\n                    type=\"text\"\n                    placeholder=\"Address Line 3\"\n                    name=\"personalDetails.temporaryAddress.addressLine3\"\n                    value={values.personalDetails.temporaryAddress.addressLine3}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"personalDetails.temporaryAddress.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"temporaryCountry\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.temporaryAddress.country\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"personalDetails.temporaryAddress.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"temporaryState\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.temporaryAddress.state\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"personalDetails.temporaryAddress.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        Select City\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined && selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        onClick={() => {\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"personalDetails.temporaryAddress.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: setSelectedCity,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.temporaryAddress.city\" component=\"div\" />\n                  </div>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                  >\n                    Zipcode\n                  </InputLabel>\n                  <CustomField\n                    id=\"pinCode\"\n                    type=\"number\"\n                    placeholder=\"Pincode\"\n                    name=\"personalDetails.temporaryAddress.pinCode\"\n                    value={values.personalDetails.temporaryAddress.pinCode}\n                    onChange={handleChange}\n                    fullWidth\n                    error={touched?.personalDetails?.temporaryAddress?.pinCode && Boolean(errors?.personalDetails?.temporaryAddress?.pinCode)}\n\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.temporaryAddress.pinCode\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}></Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#000\" }}>\n                    Is your Home address same as Contact address?\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      row\n                      aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                      name=\"row-radio-buttons-group\"\n                      value={permanent}\n                      onChange={(e: any) => setPermanent(e.target.value)}\n                    >\n                      <FormControlLabel\n                        value=\"yes\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"Yes\"\n                      />\n                      <FormControlLabel\n                        value=\"no\"\n                        control={\n                          <Radio\n                            size=\"small\"\n                            sx={{\n                              \"&.MuiRadio-root.Mui-checked\": {\n                                color: \"#3B3F76 !important\",\n                              },\n                            }}\n                          />\n                        }\n                        label=\"No\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}></Grid>\n                {permanent === \"no\" ? (\n                  <>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        Address Line 1\n                      </InputLabel>\n                      <CustomField\n                        id=\"addressLine1\"\n                        type=\"text\"\n                        placeholder=\"Address Line 1\"\n                        name=\"personalDetails.permanentAddress.addressLine1\"\n                        value={\n                          values.personalDetails.permanentAddress.addressLine1\n                        }\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        Address Line 2\n                      </InputLabel>\n                      <CustomField\n                        id=\"addressLine2\"\n                        type=\"text\"\n                        placeholder=\"Address Line 2\"\n                        name=\"personalDetails.permanentAddress.addressLine2\"\n                        value={\n                          values.personalDetails.permanentAddress.addressLine2\n                        }\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        Address Line 3\n                      </InputLabel>\n                      <CustomField\n                        id=\"addressLine3\"\n                        type=\"text\"\n                        placeholder=\"Address Line 3\"\n                        name=\"personalDetails.permanentAddress.addressLine3\"\n                        value={\n                          values.personalDetails.permanentAddress.addressLine3\n                        }\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <Select\n                        id=\"country\"\n                        size=\"small\"\n                        name=\"personalDetails.permanentAddress.country\"\n                        value={permanentCountry}\n                        onChange={(e) =>\n                          eventHandler({\n                            name: \"permanentCountry\",\n                            data: e?.target.value,\n                          })\n                        }\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                        MenuProps={MenuProps}\n                        displayEmpty\n                        defaultValue=\"\"\n                      >\n                        <MenuItem value=\"\" disabled>\n                          Select Country\n                        </MenuItem>\n                        {countries.map((country) => (\n                          <MenuItem key={country.isoCode} value={country.name}>\n                            {country.name}\n                          </MenuItem>\n                        ))}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            // setCustomField(true)\n                            // setShowDegree(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"personalDetails.permanentAddress.country\",\n                                      fieldName: selectedCountry,\n                                      setFieldName: setSelectedCountry,\n                                      placeholder: \"Enter your country\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your degree\n                        </MenuItem>\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n\n                      <Select\n                        id=\"state\"\n                        name=\"personalDetails.permanentAddress.state\"\n                        value={permanentState}\n                        size=\"small\"\n                        onChange={(e) =>\n                          eventHandler({\n                            name: \"permanentState\",\n                            data: e?.target.value,\n                          })\n                        }\n                        fullWidth\n                        displayEmpty\n                        defaultValue=\"\"\n                        IconComponent={ExpandMoreIcon}\n                        MenuProps={MenuProps}\n                      >\n                        <MenuItem value=\"\" disabled>\n                          Select State\n                        </MenuItem>\n                        {permanentstates.map((state) => (\n                          <MenuItem key={state.isoCode} value={state.name}>\n                            {state.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"personalDetails.permanentAddress.city\"\n                          value={permanentCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setpermanentCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            Select City\n                          </MenuItem>\n\n                          {permfilteredCities.length > 0 ? (\n                            permfilteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!permanentcities.some((city) => city.name === permanentCity) &&\n                            permanentCity !== undefined && permanentCity !== \"\" && (\n                              <MenuItem key={permanentCity} value={permanentCity}>\n                                {permanentCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            onClick={() => {\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"personalDetails.permanentAddress.city\",\n                                        fieldName: permanentCity,\n                                        setFieldName: setpermanentCity,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                      >\n                        Zipcode\n                      </InputLabel>\n                      <CustomField\n                        id=\"pinCode\"\n                        type=\"number\"\n                        placeholder=\"Pincode\"\n                        name=\"personalDetails.permanentAddress.pinCode\"\n                        value={values.personalDetails.permanentAddress.pinCode}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                  </>\n                ) : null}\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 1, mr: 10 }}\n                >\n                  <CustomButton\n                    width=\"100px\"\n                    handleSubmit={() => submit}\n                  >\n                    {loader ? (\n                      <img\n                        src={Images.standardLoader}\n                        alt=\"load\"\n                        style={{ width: \"1rem\" }}\n                      />\n                    ) : (\n                      \"Update\"\n                    )}\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default PersonalDetails;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  InputLabel,\n  Stack,\n  MenuItem,\n  Select,\n  FormControlLabel,\n  Radio,\n  FormControl,\n  RadioGroup,\n  Typography,\n  Tooltip,\n} from \"@mui/material\";\nimport Images from \"../../../../assets\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { Event, WorkExperience } from \"../../../../types/types\";\nimport { setWorkExperience } from \"../../../../store/Slices/workexperienceSlice\";\nimport { editProfile, uploadProfile } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { allowedFileTypes, industrySector, workTypes } from \"../../../../assets/menu\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport { Info } from \"@mui/icons-material\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst WorkExperiences = () => {\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const handleDeleteOpen = (item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n  const [document, setdoc] = useState<any>(null);\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [loading, setLoading] = useState(false);\n  const [load, setLoad] = useState(false);\n\n  const workExperienceData = useAppSelector((state) => state.workexperience);\n  const [WorkExperienceDetails, setWorkExperienceDetails] = useState<WorkExperience[]>(\n    workExperienceData.data?.length > 0\n      ? workExperienceData.data\n      : [\n        {\n          companyName: \"\",\n          sector: \"\",\n          type: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          designation: \"\",\n          docId: document,\n        },\n      ]\n  );\n  const [workStatus, setWorkStatus] = useState<(\"completed\" | \"ongoing\" | \"\")[]>(\n    WorkExperienceDetails.map((work) =>\n      work.endDate ? \"completed\" : \"\"\n    )\n  );\n  const [errors, setErrors] = useState<Record<number, Record<string, string>>>({});\n\n  const validateForm = () => {\n    const newErrors: Record<number, Record<string, string>> = {};\n    WorkExperienceDetails.forEach((detail, index) => {\n      const detailErrors: Record<string, string> = {};\n      if (!detail.companyName) {\n        detailErrors.companyName = \"Company Name is required\";\n      }\n      if (!detail.sector) {\n        detailErrors.sector = \"Sector is required\";\n      }\n      if (!detail.designation) {\n        detailErrors.designation = \"Designation is required\";\n      }\n      if (!detail.startDate) {\n        detailErrors.startDate = \"Start Date is required\";\n      }\n      if (workStatus[index] === \"completed\" && !detail.endDate) {\n        detailErrors.endDate = \"End Date is required\";\n      }\n      if (!detail.type) {\n        detailErrors.type = \"Work Type is required\";\n      }\n      if (!detail.docId && !loading) {\n        detailErrors.docId = \"Document upload is required\";\n      }\n      if (Object.keys(detailErrors).length > 0) {\n        newErrors[index] = detailErrors;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"addWork\":\n        setWorkExperienceDetails([\n          ...WorkExperienceDetails,\n          {\n            companyName: \"\",\n            sector: \"\",\n            type: \"\",\n            designation: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            docId: document,\n          },\n        ]);\n        setErrors({ ...errors, [WorkExperienceDetails.length]: {} });\n        break;\n      case \"removeWorkExperience\":\n        const newWorkExperienceDetails = [...WorkExperienceDetails];\n        newWorkExperienceDetails.splice(event.data, 1);\n        // setWorkExperienceDetails(newWorkExperienceDetails);\n        const newErrors = { ...errors };\n        delete newErrors[event.data];\n        setErrors(newErrors);\n        try {\n          let workexperience = {\n            workExperience: newWorkExperienceDetails,\n          };\n          const response = await editProfile(workexperience);\n          if (response) {\n            dispatch(setWorkExperience(response.data.data.workExperience));\n            setWorkExperienceDetails(response.data.data.workExperience?.length > 0 ? response.data.data.workExperience :[\n              {\n                companyName: \"\",\n                sector: \"\",\n                type: \"\",\n                designation: \"\",\n                startDate: \"\",\n                endDate: \"\",\n                docId: document,\n              },\n            ])\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: \"Work experience removed\",\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) { }\n        break;\n      case \"inputChange\":\n        const { name, value } = event.data.e.target;\n        setWorkExperienceDetails((prevDetails) => {\n          const newDetails = [...prevDetails];\n          newDetails[event.data.index] = {\n            ...newDetails[event.data.index],\n            [name]: value,\n          };\n          return newDetails;\n        });\n        setErrors((prevErrors) => {\n          const newErrors = { ...prevErrors };\n          if (newErrors[event.data.index]) {\n            delete newErrors[event.data.index][name];\n            if (Object.keys(newErrors[event.data.index]).length === 0) {\n              delete newErrors[event.data.index];\n            }\n          }\n          return newErrors;\n        });\n        break;\n      case \"inputClick\":\n        inputFile?.current?.click();\n        break;\n      case \"statusChange\":\n        const newWorkStatus = [...workStatus];\n        newWorkStatus[event.data.index] = event.data.e.target.value;\n        setWorkStatus(newWorkStatus);\n        break;\n      case \"submitForm\":\n        if (validateForm()) {\n          setLoad(true)\n          try {\n            let workexperience = {\n              workExperience: WorkExperienceDetails,\n            };\n            const response = await editProfile(workexperience);\n            if (response) {\n              dispatch(setWorkExperience(response.data.data.workExperience));\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"success\",\n                      data: \"Work experience added\",\n                      dimensions: {\n                        width: \"30%\",\n                        height: \"40%\",\n                        show: \"none\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            }\n            setLoad(false)\n          } catch (error) { \n            setLoad(false)\n          }\n        }\n        break;\n      case \"documentUpload\":\n        const file = event.data.e.target.files && event.data.e.target.files[0];\n        if (file && allowedFileTypes.includes(file.type)) {\n          try {\n            if (file !== null && file !== undefined) {\n              setLoading(true);\n              const formData = new FormData();\n              formData.append(\"uploaded_file\", file);\n              formData.append(\"fieldPath\", \"workExperiences\");\n              formData.append(\"fileIdentifier\", `workExperiences${file.name}`);\n              const response = await uploadProfile(formData);\n              if (response.data.success) {\n                dispatch(setDocuments(response.data.data.docs));\n                const lastDoc = response.data.data.docs.workExperiences[response.data.data.docs.workExperiences.length - 1];\n                setdoc(lastDoc);\n                const updatedWorkExperienceDetails = [...WorkExperienceDetails];\n                updatedWorkExperienceDetails[WorkExperienceDetails.length - 1].docId = lastDoc;\n                setWorkExperienceDetails(updatedWorkExperienceDetails);\n                setLoading(false);\n              } else {\n                setLoading(false);\n              }\n            } else {\n              setLoading(false);\n            }\n          } catch (err) {\n            setLoading(false);\n          }\n        } else {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"error\",\n                  data: \"Only jpeg , png , pdf files are accepted\",\n                  dimensions: {\n                    width: \"250px\",\n                    show: \"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        break;\n    }\n  };\n\n  return (\n    <Box sx={{ overflowY: \"scroll\", px: 3 }}>\n      <Typography fontSize=\"1rem\" gutterBottom color=\"#3b3f76\" sx={{ ml: 2, mb: 2, fontWeight: \"500\" }}>Provide details of your most recent or current experience</Typography>\n      {WorkExperienceDetails?.map((WorkExperienceMember, index) => (\n        <div className=\"mb-5\" key={index}>\n          <Grid container spacing={3} sx={{ px: 2 }}>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Name of Organization\n              </InputLabel>\n              <TextField\n                size=\"small\"\n                name={`companyName`}\n                placeholder=\"Name of Organization\"\n                value={WorkExperienceMember.companyName}\n                onChange={(e: any) =>\n                  eventHandler({\n                    name: \"inputChange\",\n                    data: { index, e },\n                  })\n                }\n                required\n                fullWidth\n                error={!!errors[index]?.companyName}\n                helperText={errors[index]?.companyName}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Sector\n              </InputLabel>\n              <Select\n                size=\"small\"\n                id=\"Country\"\n                name={`sector`}\n                displayEmpty\n                value={WorkExperienceMember.sector || \"\"}\n                onChange={(e: any) =>\n                  eventHandler({\n                    name: \"inputChange\",\n                    data: { index, e },\n                  })\n                }\n                IconComponent={ExpandMoreIcon}\n                required\n                fullWidth\n                error={!!errors[index]?.sector}\n                MenuProps={MenuProps}\n              >\n                <MenuItem disabled value=\"\">\n                  Select a sector\n                </MenuItem>\n                {industrySector.map((sector) => (\n                  <MenuItem key={sector.name} value={sector.value}>\n                    {sector.name}\n                  </MenuItem>\n                ))}\n\n                {WorkExperienceMember.sector &&\n                  !industrySector.some((sector) => sector.value === WorkExperienceMember.sector) && (\n                    <MenuItem key={WorkExperienceMember.sector} value={WorkExperienceMember.sector}>\n                      {WorkExperienceMember.sector}\n                    </MenuItem>\n                  )\n                }\n\n                <MenuItem\n                  sx={{\n                    fontSize: \"14px !important\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    whiteSpace: \"normal\",\n                    color: \"#1cbeb5  !important\",\n                  }}\n                  onClick={() => {\n                    dispatch(\n                      setPopup({\n                        show: true,\n                        data: {\n                          container: {\n                            name: \"customfield\",\n                            data: {\n                              name: `workExperience[${index}].sector`,\n                              fieldName: WorkExperienceMember.sector,\n                              setFieldName: (value: any) => {\n                                const newWorkExperience = [...WorkExperienceDetails];\n                                newWorkExperience[index].sector = value;\n                                setWorkExperienceDetails(newWorkExperience);\n                              },\n                              placeholder: \"Enter your sector\",\n                            },\n                            dimensions: {\n                              width: \"450px\",\n                            },\n                          },\n                          type: \"custom\",\n                        },\n                      })\n                    );\n                  }}\n                >\n                  Can't find your sector\n                </MenuItem>\n              </Select>\n\n\n              {errors[index]?.sector && (\n                <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                  {errors[index].sector}\n                </Box>\n              )}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Type of Work\n              </InputLabel>\n              <Select\n                size=\"small\"\n                id=\"Country\"\n                name={`type`}\n                displayEmpty\n                defaultValue=\"\"\n                value={WorkExperienceMember.type}\n                onChange={(e: any) =>\n                  eventHandler({\n                    name: \"inputChange\",\n                    data: { index, e },\n                  })\n                }\n                IconComponent={ExpandMoreIcon}\n                required\n                fullWidth\n                error={!!errors[index]?.type}\n                MenuProps={MenuProps}\n              >\n                <MenuItem disabled value=\"\">\n                  Select\n                </MenuItem>\n                {workTypes.map((type) => (\n                  <MenuItem key={type.name} value={type.value}>\n                    {type.name}\n                  </MenuItem>\n                ))}\n              </Select>\n              {errors[index]?.type && (\n                <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                  {errors[index].type}\n                </Box>\n              )}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Designation\n              </InputLabel>\n              <TextField\n                size=\"small\"\n                name={`designation`}\n                placeholder=\"Designation\"\n                value={WorkExperienceMember.designation}\n                onChange={(e: any) =>\n                  eventHandler({\n                    name: \"inputChange\",\n                    data: { index, e },\n                  })\n                }\n                required\n                fullWidth\n                error={!!errors[index]?.designation}\n                helperText={errors[index]?.designation}\n              />\n              \n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Status\n              </InputLabel>\n              <FormControl sx={{}}>\n                <RadioGroup\n                  row\n                  name={`workStatus`}\n                  value={workStatus[index]}\n                  onChange={(e: any) =>\n                    eventHandler({\n                      name: \"statusChange\",\n                      data: { index, e },\n                    })\n                  }\n                >\n                  <FormControlLabel\n                    value=\"completed\"\n                    control={<Radio />}\n                    label=\"Completed\"\n                  />\n                  <FormControlLabel\n                    value=\"ongoing\"\n                    control={<Radio />}\n                    label=\"Ongoing\"\n                  />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Upload Document\n              </InputLabel>\n              <Stack\n                direction=\"row\"\n                spacing={1}\n                alignItems=\"center\"\n                onClick={() =>\n                  inputFile?.current?.click()\n                }\n              >\n                {WorkExperienceMember.docId ? \"\" :\n                  <>\n                    <Button\n                      variant=\"outlined\"\n                      size=\"small\"\n                      component=\"label\"\n                      startIcon={<FileUploadOutlinedIcon />}\n                      sx={{\n                        ...secondaryButton,\n                        fontSize: \"12px\",\n                        textTransform: \"capitalize\",\n                      }}\n                    >\n                      Upload\n                      <input\n                        type=\"file\"\n                        hidden\n                        onChange={(e: any) =>\n                          eventHandler({\n                            name: \"documentUpload\",\n                            data: { index, e },\n                          })\n                        }\n                      />\n                    </Button>\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#000\",\n                            backgroundColor: \"#fff\",\n                            fontSize: \"14px\",\n                            boxShadow: 1,\n                            \"&.MuiTooltip-tooltip\":\n                            {\n                              marginTop: \"3px !important\",\n                            },\n                          },\n                        },\n                      }}\n                      title=\"Only jpeg , png , pdf files are accepted\"\n                      placement=\"bottom\"\n                    >\n                      <Info sx={{ color: \"#7d7d7d\", fontSize: \"1rem\", cursor: \"pointer\" }} />\n                    </Tooltip>\n                  </>}\n                {loading ? (\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Uploading...\n                  </Typography>\n                ) : (\n                  WorkExperienceMember.docId ?\n                    <Typography variant=\"body2\" color=\"textSecondary\" sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }} >\n                      {WorkExperienceMember?.docId?.data?.originalname}\n                      <VisibilityOutlinedIcon sx={{ fontSize: \"large\" }} onClick={() => {\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"fileViewer\",\n                                data: WorkExperienceMember.docId?.data?.preview_url,\n                                dimensions: {\n                                  width: \"500px\",\n                                  // height: \"35%\",\n                                  // close: \"none\",\n                                  // show: \"none\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }} />\n                    </Typography>\n                    : \"\"\n                )}\n              </Stack>\n              {errors[index]?.docId && (\n                <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                  {errors[index].docId}\n                </Box>\n              )}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                Start Date\n              </InputLabel>\n              <DatePickerComponent\n                    selectedDate={WorkExperienceMember?.startDate}\n                    onChange={(date: Date | null) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: {\n                          index,\n                          e: {\n                            target: {\n                              name: \"startDate\",\n                              value: date ? date.toISOString().slice(0, 10) : \"\",\n                            },\n                          },\n                        },\n                      })\n                    }\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                  {errors[index]?.startDate && (\n                <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                  {errors[index].startDate}\n                </Box>\n              )}\n            </Grid>\n            {workStatus[index] === \"completed\" && (\n              <Grid item xs={12} sm={6}>\n                <InputLabel id=\"\" sx={{ color: \"#000\", fontWeight: 500 }}>\n                  End Date\n                </InputLabel>\n                <DatePickerComponent\n                    selectedDate={WorkExperienceMember?.endDate}\n                    onChange={(date: Date | null) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: {\n                          index,\n                          e: {\n                            target: {\n                              name: \"endDate\",\n                              value: date ? date.toISOString().slice(0, 10) : \"\",\n                            },\n                          },\n                        },\n                      })\n                    }\n                    minDate={\n                      WorkExperienceMember?.startDate\n                        ? new Date(\n                          new Date(WorkExperienceMember?.startDate).getTime() + 10 * 24 * 60 * 60 * 1000\n                        )\n                        : undefined\n                    } \n                    maxDate={new Date()}\n                    placeholderText=\"End Date\"\n                  />\n                  {errors[index]?.endDate && (\n                <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                  {errors[index].endDate}\n                </Box>\n              )}\n              </Grid>\n            )}\n\n            {workExperienceData?.data?.length  > 0 && (\n              <Grid item xs={12} sx={{ mt: 3 }}>\n                <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                  <img\n                    src={Images.deleteIcon}\n                    alt=\"delete\"\n                    style={{ width: \"1.5rem\",cursor:\"pointer\" }}\n                    onClick={()=>handleDeleteOpen(index)}\n                  />\n                </Box>\n              </Grid>\n            )}\n          </Grid>\n        </div>\n      ))}\n      <Box sx={{ mt: 4 }}>\n        <Stack\n          direction=\"row\"\n          sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n          spacing={2}\n        >\n          {workExperienceData?.data?.length  > 0 && \n          <Button\n            variant=\"outlined\"\n            sx={{\n              ...secondaryButton,\n              textTransform: \"capitalize\",\n              // fontSize: \"12px\",\n            }}\n            onClick={() =>\n              eventHandler({\n                name: \"addWork\",\n                data: {},\n              })\n            }\n          >\n            Add Previous\n          </Button>}\n        \n          <CustomButton\n            // label=\"Submit\"\n            // variant=\"contained\"\n            width=\"100px\"\n            handleSubmit={() =>\n              eventHandler({\n                name: \"submitForm\",\n                data: {},\n              })\n            }\n          >\n              {load ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n          </CustomButton>\n        </Stack>\n      </Box>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => eventHandler({\n              name: \"removeWorkExperience\",\n              data: deleteItem,\n            }),\n          title: \"Are you sure you want to delete ?\",\n          content:\n            \"\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default WorkExperiences;\n","import { Box } from \"@mui/material\";\nimport React from \"react\";\n// import Images from \"../../../../assets\";\n// import ExpandCard from \"../../../../genericComponents/expandCard\";\nimport Education from \"../education\";\nimport TestScoreForm from \"../testScores/testScores\";\nimport ExtraCurricular from \"./extraCurricular\";\nimport Family from \"./family\";\nimport PersonalDetails from \"./personalDetails\";\nimport { Preferences } from \"./preferences\";\nimport WorkExperience from \"./workExperience\";\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\nimport PermIdentityOutlinedIcon from '@mui/icons-material/PermIdentityOutlined';\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\nimport CustomTabs from \"../../../../genericComponents/tabs\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\n// import Images from \"../../../../assets\";\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nconst ProfileSection = () => {\n\n  const profile = [\n    {\n      label: \"Personal Information\",\n      image: <PermIdentityOutlinedIcon/>,\n      Component: <PersonalDetails />,\n    },\n    {\n      label: \"Education\",\n      image:  <SchoolOutlinedIcon />,\n      Component: <Education/>\n    },\n    {\n      label: \"Test Scores\",\n      image:  <AssignmentIcon/>,\n      Component: <TestScoreForm />,\n    },\n    {\n      label: \"Work experience\",\n      image:  <WorkOutlineOutlinedIcon/>,\n      Component: <WorkExperience />,\n    },\n    {\n      label: \"Preferences\",\n      image:  <StarBorderOutlinedIcon/>,\n      Component: <Preferences />,\n    },\n    {\n      label: \"Family\",\n      image:  <Diversity3Icon/>,\n      Component: <Family />,\n    },\n    {\n      label: \"Extra Curriculum Activities \",\n      image:  <AccessibilityIcon/>,\n      Component: <ExtraCurricular />,\n    },\n  ];\n  \n  return (\n    <Box\n      sx={{\n      }}\n    >\n      <Box sx={{display:{xs:\"block\",lg:\"none\"}}}>\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.label} imageUrl={item.image}>\n          {item.Component}\n        </ExpandCard>\n      ))}\n      </Box>\n      <Box sx={{display:{xs:\"none\",lg:\"block\"}}}>\n      <CustomTabs tabs={profile}/>\n</Box>\n    </Box>\n  );\n};\n\nexport default ProfileSection;\n","/* eslint-disable */\nimport { Box, Grid, Stack, Tooltip, Typography } from \"@mui/material\";\nimport CustomCard from \"../../../../genericComponents/customCard\";\n// import WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { Application } from \"../../../../types/types\";\nimport Images from \"../../../../assets\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\n\nconst AppliedUniversities = () => {\n  const applicationsData = useAppSelector((state) => state.applications);\n  const dispatch = useAppDispatch();\n  function date(date: Date) {\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return month + \" \" + year;\n  }\n  return (\n    <div\n      style={{\n        // maxHeight: \"81vh\",\n        overflowY: \"scroll\",\n        paddingTop:\"1rem\"\n      }}\n    >\n      <Grid container spacing={3}>\n        {applicationsData?.data &&\n        applicationsData?.data?.length > 0 ? (\n          <>\n                     {applicationsData?.data?.map(\n              (item: Application, i: number) => (\n                <Grid item xs={12} sm={6} lg={4} sx={{paddingLeft:{xs:0,md:\"1rem\"}}}>\n                  <CustomCard title={item.stage} i={i}>\n                    <Box\n                      onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"applicationPopup\",\n                                data: item._id,\n                                dimensions: {\n                                  width: \"800px\",\n                                  height:\"85%\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }\n                    >\n                        {item?.cancellationRequest === true ? (\n                          <img\n                            src={Images.cancelledIcon}\n                            alt=\"cancelled\"\n                            style={{\n                              position: \"absolute\",\n                              top: \"-28px\",\n                              right: \"-26px\",\n                            }}\n                          />\n                        ) : (\n                          \"\"\n                        )}\n<Box sx={{display:\"flex\",gap:\"10px\",width:\"100%\"}}>\n                        <img\n                          src={item.course?.university?.logoSrc}\n                          alt=\"logo\"\n                          style={{\n                            width: \"1.5rem\",\n                            height: \"1.5rem\",\n                            marginRight: \"5px\",\n                            borderRadius: \"10px\",\n                          }}\n                        />\n                        <div style={{flex: 1 }}>\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#fff\",\n                                backgroundColor: \"#3B3F76\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\":\n                                  {\n                                    marginTop:\"-5px !important\",\n                                  },\n                              },\n                            },\n                          }}\n                          title={item.course.name}\n                          placement=\"bottom\"\n                        >\n                          <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              fontSize: { xs: \"13px\", lg: \"14px\" },\n                                fontWeight: 500,\n                                textOverflow: \"ellipsis \",\n                                lineClamp: 1,\n                                height: \"1.5rem\",\n                                textTransform: \"capitalize\",\n                                overflow: \"hidden\",\n                                display: \"-webkit-box\",\n                                WebkitLineClamp: \"1\",\n                                WebkitBoxOrient: \"vertical\",\n                            }}\n                          >\n                            {item.course.name}\n                          </Typography>\n                        </Tooltip>\n                        <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              // height: \"1.5rem\",\n                              fontSize: { xs: \"12px\", lg: \"12px\" },\n                              // textOverflow: \"ellipsis \",\n                              // lineClamp: 1,\n                              height: \"1.5rem\",\n                              textTransform: \"capitalize\",\n                              // overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              // WebkitLineClamp: \"1\",\n                              WebkitBoxOrient: \"vertical\",\n                              my: 1,\n                              // alignItems: \"center\",\n                            }}\n                          >\n\n                            {item.course?.university?.name} | &nbsp;\n                            {item.course?.university?.location?.country}\n\n                          </Typography>\n                        </div>\n                      </Box>\n                        <Stack direction=\"row\" justifyContent=\"end\"  spacing={1} sx={{mt:1}}>\n                          <Typography\n                            component=\"span\"\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"nowrap\",\n                            }} \n                          >\n                            <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                            &nbsp; Start date :\n                            {item?.intake ? date(new Date(item?.intake)) : null}\n                          </Typography>\n                          {/* <Divider\n                            orientation=\"vertical\"\n                            flexItem\n                            sx={{ borderWidth: \"2px\" }}\n                          />\n                          <Typography\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Tooltip\n                              slotProps={{\n                                tooltip: {\n                                  sx: {\n                                    color: \"#fff\",\n                                    backgroundColor: \"#3B3F76\",\n                                    boxShadow: 2,\n                                  },\n                                },\n                              }}\n                              title=\"Status\"\n                              placement=\"bottom\"\n                            >\n                              <WatchLaterIcon\n                                sx={{  fontSize: \"1.25rem\" }}\n                              />\n                            </Tooltip>\n                            &nbsp;{item.status}\n                          </Typography> */}\n                        </Stack>\n                        {/* <p style={{\n        position: 'absolute',\n        left: '10px',\n        bottom: '10%', background: \"#B7B7E7\", width: \"1.1rem\", height: \"1.1rem\", margin: 0, borderBottomLeftRadius: \"20px\", transform: \"rotate(45deg\"\n      }}></p> */}\n                      </Box>\n                  </CustomCard>\n                </Grid>\n              )\n            )}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"200px\",\n              flexDirection: \"column\",\n            }}\n          >\n            <img\n              src={Images.noData}\n              alt=\"noData\"\n              style={{ width: \"70px\", height: \"70px\", marginBottom: \"1rem\" }}\n            />\n            <Typography>No products purchased</Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default AppliedUniversities;\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Grid,\n  Stack,\n  Switch,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport {\n  // globalButton,\n  secondaryButton,\n} from \"../../../components/styles/customStyles\";\nimport CustomCard from \"../../../genericComponents/customCard\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\nimport { Event, Recommendation } from \"../../../types/types\";\nimport { monthNames } from \"../../../assets/menu\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteOutlinedIcon from '@mui/icons-material/FavoriteOutlined';\nimport NotInterestedOutlinedIcon from \"@mui/icons-material/NotInterestedOutlined\";\nimport {\n  addToShortList,\n  getRecommendations,\n  hideRecommendation,\n} from \"../../../services\";\nimport {\n  setShortlisted,\n} from \"../../../store/Slices/shortlistedCoursesSlice\";\nimport Images from \"../../../assets\";\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { setRecommended } from \"../../../store/Slices/recommendations\";\nimport { CustomButton } from \"../../../genericComponents/customButton\";\nimport { DestinationTypeEnum } from \"src/assets/enums\";\nimport { useParams } from \"react-router-dom\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\n\nconst Recommended = () => {\n  // const queryParams = new URLSearchParams(location.search.slice(1));\n  const { id }: any = useParams();\n  const [activeTab, setActiveTab] = useState<string>('Safe');\n  // console.log(id)\n\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const criteria = recommendations?.data?.criteria;\n  const preferences = useAppSelector((state) => state.preferences);\n  const underGraduation = useAppSelector((state) => state.educationhistory)\n  const testscores = useAppSelector(state => state.testscores)\n  const gre = testscores.data.find((item) => item.name === \"Graduate Record Examination\")\n\n  const isCriteriaMet =\n    criteria?.sub_discipline === JSON.stringify(preferences?.data?.courses) &&\n    criteria?.ug_gpa === JSON.stringify(underGraduation?.data?.underGraduation) &&\n    criteria?.gre === JSON.stringify(gre?.scores);\n\n  const ambitious = recommendations?.data && recommendations?.data?.data?.filter(\n    (item: Recommendation) => item?.possibilityOfAdmit === \"Ambitious\"\n  );\n  const safe: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Safe\"\n  );\n  const moderate: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Moderate\"\n  );\n  const courseChecked = (preferences?.data?.courses?.length ?? 0) > 0;\n\n  const [loading, setLoading] = useState(false);\n\n  const [alignment, setAlignment] = React.useState(\"interested\");\n\n  const handleChange = (\n    event: any\n  ) => {\n    setAlignment(event.target.checked ? \"interested\" : \"notInterested\");\n  };\n  useEffect(() => {\n    if (id) {\n      const matchedTab = tabs.find((tab) => tab.value.toLowerCase() === id.toLowerCase());\n      if (matchedTab) {\n        setActiveTab(matchedTab.value);\n      }\n    }\n    // eslint-disable-next-line\n  }, [id]);\n\n  const Card = (props: any) => {\n    const item = props?.data;\n    const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n    const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n    const dispatch = useAppDispatch();\n    const [loadingMap, setLoadingMap] = useState<{ [key: string]: boolean }>(\n      {}\n    );\n    const [open, setOpen] = React.useState(false);\n    const [deleteItem, setDeleteItem] = useState()\n    const eventHandler = async (event: Event) => {\n      switch (event.name) {\n        case \"cart\":\n          if (\n            userAuthStatus?.data?.isAuthorized &&\n            userAuthStatus?.data?.isAuthorized\n          ) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"applynow\",\n                    data: event?.data?.course,\n                    dimensions: {\n                      width: \"450px\",\n                      // show:\"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                      height: \"70%\",\n                      show: \"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n          break;\n        case \"shortlist\":\n          try {\n            if (\n              userAuthStatus?.data?.isAuthorized &&\n              userAuthStatus?.data?.isAuthorized\n            ) {\n              setLoadingMap((prevLoadingMap) => ({\n                ...prevLoadingMap,\n                [event.data.course._id]: true,\n              }));\n              const values = {\n                action: \"push\",\n                courseId: event.data?.course?._id,\n              };\n              const response = await addToShortList(values);\n              if (response.data.success) {\n                dispatch(setShortlisted(response.data.data))\n\n                setLoadingMap((prevLoadingMap) => ({\n                  ...prevLoadingMap,\n                  [event.data.course._id]: false,\n                }));\n              } else {\n                setLoadingMap((prevLoadingMap) => ({\n                  ...prevLoadingMap,\n                  [event.data.course._id]: false,\n                }));\n              }\n            } else {\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"login\",\n                      dimensions: {\n                        width: \"800px\",\n                        height: \"70%\",\n                        show: \"none\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            }\n          } catch (error) {\n            console.error(\"An error occurred while shortlisting:\", error);\n            setLoadingMap((prevLoadingMap) => ({\n              ...prevLoadingMap,\n              [event.data._id]: false,\n            }));\n          }\n          break;\n        case \"delete\":\n          try {\n            setLoadingMap((prevLoadingMap) => ({\n              ...prevLoadingMap,\n              [event.data.course._id]: true,\n            }));\n            const values = {\n              action: \"pull\",\n              courseId: event.data?.course?._id,\n            };\n\n            const response = await addToShortList(values);\n            if (response.data.success) {\n              setLoadingMap((prevLoadingMap) => ({\n                ...prevLoadingMap,\n                [event.data.course?._id]: false,\n              }));\n              dispatch(setShortlisted(response.data.data))\n\n            }\n          } catch (error) {\n            setLoadingMap((prevLoadingMap) => ({\n              ...prevLoadingMap,\n              [event.data.course._id]: false,\n            }));\n            console.error(\"An error occurred while unshortlisting:\", error);\n          }\n          break;\n        case \"hideRecommendation\":\n          try {\n            const response = await hideRecommendation({\n              recommendationId: event.data,\n            });\n            dispatch(setRecommended(response.data.data));\n            // console.log(response);\n          } catch (err) { }\n          break;\n        default:\n          break;\n      }\n    };\n\n    const handleDelete = (item: any) => {\n      setOpen(true)\n      setDeleteItem(item)\n    }\n\n    const fullToShort: Record<string, string> = Object.fromEntries(\n      Object.entries(DestinationTypeEnum).map(([key, value]) => [value, key])\n    );\n\n    return (\n      <div>\n        <CustomCard title={item?.counsellorRecommended === true ? \"Counsellor Recommended\" : \"AI recommended\"} i={props.i}>\n          <Box\n            onClick={() => {\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"mainPopup\",\n                      data: {\n                        ...item.course,\n                        university: {\n                          ...item?.course?.university,\n                        },\n                      },\n                      dimensions: {\n                        width: \"90%\",\n                        // height:\"80%\"\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            }}\n          >\n            <Box sx={{ display: \"flex\", gap: \"10px\", width: \"100%\" }}>\n              <img\n                src={item.course?.university?.logoSrc}\n                alt=\"logo\"\n                style={{\n                  width: \"1.5rem\",\n                  height: \"1.5rem\",\n                  marginRight: \"5px\",\n                  borderRadius: \"10px\",\n                }}\n              />\n              <div style={{ flex: 1 }}>\n                <Tooltip\n                  slotProps={{\n                    tooltip: {\n                      sx: {\n                        color: \"#fff\",\n                        backgroundColor: \"#3B3F76\",\n                        boxShadow: 1,\n                        \"&.MuiTooltip-tooltip\": {\n                          marginTop: \"-5px !important\",\n                        },\n                      },\n                    },\n                  }}\n                  title={item?.course?.name}\n                  placement=\"bottom\"\n                >\n                  <Typography\n                    fontSize=\"0.9rem\"\n                    sx={{\n                      fontSize: { xs: \"13px\", lg: \"14px\" },\n                      fontWeight: 500,\n                      textOverflow: \"ellipsis \",\n                      lineClamp: 1,\n                      height: \"1.5rem\",\n                      textTransform: \"capitalize\",\n                      overflow: \"hidden\",\n                      display: \"-webkit-box\",\n                      WebkitLineClamp: \"1\",\n                      WebkitBoxOrient: \"vertical\",\n                    }}\n                  >\n                    {item?.course?.name}\n                  </Typography>\n                </Tooltip>\n                <Typography fontSize=\"0.8rem\" color=\"#8D8B8B\">\n                  {item.course?.university?.name} ,&nbsp;\n                  {fullToShort[item?.course?.university?.location?.country]}\n                </Typography>\n              </div>\n\n            </Box>\n            <Stack sx={{ my: 1, marginLeft: \"2rem\" }} spacing={1}>\n\n\n              <Stack\n                direction=\"row\"\n                alignItems=\"center\"\n                spacing={1}\n                sx={{\n                  flexWrap: \"nowrap\",\n                  height: \"1.5rem\",\n                  fontWeight: 600,\n                  textOverflow: \"ellipsis\",\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                }}\n              >\n                <Typography\n                  component=\"span\"\n                  fontSize=\"0.8rem\"\n                  // fontWeight=\"500\"\n                  sx={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    whiteSpace: \"nowrap\",\n                  }}\n                >\n                  <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                  &nbsp; Start date :\n                  {\" \" +\n                    item?.course?.startDate\n                      ?.map(\n                        (item: any, index: number) =>\n                          monthNames[item?.courseStartingMonth]\n                      )\n                      .join(\", \")}\n                  {/* {item?.intake ? date(new Date(item?.intake)) : null} */}\n                </Typography>\n                <Typography fontSize=\"0.8rem\">\n                  {\"| \"}\n                  {item.course.studyLevel}\n                </Typography>\n                {/* <Typography fontSize=\"0.8rem\">\n                      {item.course.duration?.duration ? item.course.duration?.duration : \"\"}{\" \"}\n                      <sup\n                        style={{\n                          fontSize: \"9px\",\n                          marginTop: \"-3px\",\n                        }}\n                      >\n                        months\n                      </sup>{\" \"}\n                      |\n                    </Typography>\n                    <Typography fontSize=\"0.8rem\" sx={{ display: \"flex\" }}>\n                      <Typography\n                        sx={{\n                          fontSize: \"13px\",\n                          // margin: \"2px 2px 0 0\",\n                          position: \"relative\",\n                          \"&:hover .cancel-icon\": {\n                            display: \"block !important\",\n                          },\n                        }}\n                      >\n                        {\" \"}\n                        {item.course.tuitionFee?.tuitionFee\n                          ? item.course.currency.symbol\n                          : \"\"}\n                        <span\n                          className=\"cancel-icon\"\n                          style={{\n                            display: \"none\",\n                            color: \"#000\",\n                            position: \"absolute\",\n                            border: \"1px solid #7d7d7d\",\n                            width: \"100px\",\n                            zIndex: 1,\n                            background: \"#fff\",\n                            textAlign: \"center\",\n                            top: \"0px\",\n                            right: 0\n                          }}\n                        >\n                          Currency :{item.course.currency.code}\n                        </span>\n                      </Typography>\n                      {item.course.tuitionFee?.tuitionFee\n                        ? (\n                          Math.round(item.course.tuitionFee.tuitionFee * 100) /\n                          100\n                        ).toLocaleString(\"en-US\")\n                        : \"\"}\n                      {/* <span\n                              style={{\n                                fontSize: \"11px\",\n                                marginLeft: \"3px\",\n                                marginTop: \"2px\",\n                              }}\n                            >\n                              {\" \"}\n                              {item.course.tuitionFee?.tuitionFee\n                                ? \"/\" +\n                                  item.course.tuitionFee?.tuitionFeeType \n                                : \"\"}{\" \"}\n                            </span> */}\n                {/* <sup\n                        style={{\n                          fontSize: \"9px\",\n                          marginLeft: \"3px\",\n                          marginTop: \"-3px\",\n                        }}\n                      >\n                        {item.course.tuitionFee?.tuitionFeeType}\n                      </sup> */}\n                {/* </Typography> */}\n              </Stack>\n            </Stack>\n            {/* <p style={{\n        position: 'absolute',\n        right: '20px',\n        top: '30%', background: \"#B7B7E7\", width: \"1.1rem\", height: \"1.1rem\", margin: 0, borderBottomLeftRadius: \"20px\", transform: \"rotate(45deg\"\n      }}></p> */}\n\n          </Box>\n          <Grid container spacing={2} sx={{ paddingLeft: \"40px\", mt: \"0 !important\" }}>\n            <Grid item xs={12} sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"end\", gap: \"1rem\", }}>\n              <Box>\n                {loadingMap[item.course?._id] ? (\n                  <Button\n                    sx={{\n                      border: \"1px solid #1C1F40\", borderRadius: \"50%\", width: \"2rem\", display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      minWidth: 0\n\n                    }}\n                  //  sx={secondaryButton}\n                  >\n                    <Box\n                      component=\"img\"\n                      src={Images.standardLoader}\n                      alt=\"standardLoader\"\n                      sx={{ width: \"1rem\", height: \"1rem\" }}\n                    />\n                  </Button>\n                ) : shortlisted.data.some(\n                  (shortlistedCourse: any) =>\n                    shortlistedCourse._id === item.course?._id\n                ) ? (\n                  <Button\n                    sx={{\n                      border: \"1px solid #1C1F40\", borderRadius: \"50%\", width: \"2rem\", display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      minWidth: 0\n                    }}\n                    // sx={[secondaryButton,{width:\"100%\"}]}\n\n\n                    onClick={() =>\n                      eventHandler({\n                        name: \"delete\",\n                        data: item,\n                      })\n                    }\n                  >\n                    <FavoriteOutlinedIcon\n                      sx={{ color: \"#1C1F40\", fontSize: \"1.2rem\", }}\n                    />{\" \"}\n                    {/* Wishlisted */}\n                  </Button>\n                ) : (\n                  <Button\n                    sx={{\n                      border: \"1px solid #1C1F40\", borderRadius: \"50%\", width: \"2rem\", height: \"2rem\", display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      minWidth: 0\n\n                    }}\n                    // sx={[secondaryButton,{width:\"100%\"}]}\n\n\n                    onClick={() =>\n                      eventHandler({\n                        name: \"shortlist\",\n                        data: item,\n                      })\n                    }\n                  >\n                    <FavoriteBorderIcon\n                      sx={{ color: \"#1C1F40\", fontSize: \"1.2rem\", }}\n                    />\n                    {/* Wishlist */}\n                  </Button>\n                )}\n              </Box>\n              {/* </Grid> */}\n              {/* <Grid item xs={5}> */}\n              <Button\n                sx={{\n                  border: \"1px solid #1C1F40\", borderRadius: \"50%\", width: \"2rem\", height: \"2rem\", display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  minWidth: 0\n\n                }}\n                // sx={[globalButton,{width:\"100%\"}]}\n                onClick={() =>\n                  eventHandler({ name: \"cart\", data: item })\n                }\n              >\n                <ShoppingCartOutlinedIcon sx={{ fontSize: \"1.25rem\", color: \"#1C1F40\" }} />\n                {/* Add to cart */}\n              </Button>\n              {/* </Grid> */}\n              {/* <Grid item xs={1}> */}\n              <Box sx={{}}>\n                {item.notInterested === true ? (\n                  \"\"\n                ) : (\n                  <Tooltip\n                    slotProps={{\n                      tooltip: {\n                        sx: {\n                          color: \"#fff\",\n                          // backgroundColor: \"#3B3F76\",\n                          boxShadow: 1,\n                          \"&.MuiTooltip-tooltip\": {\n                            marginTop: \"-5px !important\",\n                          },\n                        },\n                      },\n                    }}\n                    title=\"Not interested\"\n                    placement=\"bottom\"\n                  >\n                    <Box\n                      sx={{\n                        border: \"1px solid #3B3F76\",\n                        borderRadius: \"50%\",\n                        p: 1,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        width: \"1rem\", height: \"1rem\"\n                        // background:\"#1C1F40\"\n                        // width: \"32%\",\n                        // height: \"45%\",\n                      }}\n                    >\n                      <NotInterestedOutlinedIcon\n                        sx={{ fontSize: \"1.1rem\", color: \"#3b3f76\" }}\n                        // onClick={() =>\n                        //   eventHandler({\n                        //     name: \"hideRecommendation\",\n                        //     data: item._id,\n                        //   })\n                        // }\n                        onClick={() => handleDelete(item._id)}\n                      />\n                    </Box>\n                  </Tooltip>\n                )}\n              </Box>\n            </Grid>\n          </Grid>\n        </CustomCard>\n        <ConfirmDialog\n          open={open}\n          handleClose={() => setOpen(false)}\n          additionalData={{\n            onSubmit: () =>\n              eventHandler({\n                name: \"hideRecommendation\",\n                data: deleteItem,\n              }),\n            title: \"Are you sure you want to make this course as not interested ?\",\n            content: \"\",\n          }}\n        />\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const filterCourses = (courses: Recommendation[]) => {\n    return courses?.filter(course =>\n      alignment === \"interested\" ? !course.notInterested : course.notInterested\n    );\n  };\n\n  const tabs = [\n    {\n      label: `Safe (${safe && filterCourses(safe).length})`,\n      Component: (\n        <Box className=\"recommended-card-list\">\n          <Grid\n            container\n            spacing={3}\n            sx={{\n              // height: \"100vh\",\n              overflowY: \"scroll\",\n              // padding: \"2rem\"\n            }}\n          >\n            {safe && filterCourses(safe).map((item, i: number) => (\n              <Grid item xs={12} sm={6} lg={4}>\n                <Card data={item} i={i} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      ),\n      value: 'Safe',\n    },\n    {\n      label: `Moderate (${moderate && filterCourses(moderate).length})`,\n      Component: (\n        <Box className=\"recommended-card-list\">\n          <Grid\n            container\n            spacing={3}\n            sx={{\n              // height: \"100vh\",\n              overflowY: \"scroll\",\n              // padding: \"2rem\"\n            }}\n          >\n            {moderate && filterCourses(moderate).map((item, i) => (\n              <Grid item xs={12} sm={6} lg={4}>\n                <Card data={item} key={item._id} i={i} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      ),\n      value: 'Moderate',\n    },\n    {\n      label: `Ambitious (${ambitious && filterCourses(ambitious).length})`,\n      Component: (\n        <Box >\n          <Grid\n            container\n            spacing={3}\n            sx={{\n              // height: \"100vh\",\n              overflowY: \"scroll\",\n              // padding: \"2rem\"\n            }}\n          >\n            {ambitious && filterCourses(ambitious).map((item, i) => (\n              <Grid item xs={12} sm={6} lg={4}>\n                <Card data={item} key={item._id} i={i} />\n              </Grid>\n\n            ))}\n          </Grid>\n        </Box>\n      ),\n      value: 'Ambitious',\n    },\n  ]\n  const dispatch = useAppDispatch();\n\n  const regenerateForm = async () => {\n    setLoading(true);\n    try {\n      const response = await getRecommendations({});\n      if (response) {\n        dispatch(setRecommended(response.data));\n      } else {\n      }\n    } catch (error) {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const submit = async () => {\n    if (courseChecked && underGraduation?.data?.underGraduation !== undefined && gre) {\n      regenerateForm()\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"qasection\",\n              dimensions: {\n                width: \"70%\",\n                height: \"90%\"\n              },\n            },\n            type: \"custom\",\n          },\n        }))\n    }\n\n  }\n  return (\n    <>\n      <Box>\n        {loading ? (\n          <Box sx={{\n            display: \"flex\", flexDirection: \"column\",\n            justifyContent: \"center\", alignItems: \"center\",\n            height: \"500px\",\n          }}>\n            <Typography textAlign=\"center\">Loading...</Typography>\n          </Box>\n        ) :\n          recommendations?.data && recommendations?.data?.data?.length > 0 ?\n            <>\n              {!isCriteriaMet && (\n                <Button onClick={regenerateForm} sx={secondaryButton}>\n                  {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Regenerate\"\n                  )}\n                </Button>\n              )}\n              {/* <Button onClick={()=>\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"qasection\",\n                    dimensions: {\n                      width: \"70%\",\n                      height: \"90%\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              }))\n    }>Generate</Button> */}\n              <Grid container spacing={2}>\n                <Grid item xs={9}>\n                </Grid>\n                <Grid item xs={3}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={alignment === \"interested\"}\n                        onChange={handleChange}\n                        // color=\"info\"\n                        sx={{\n                          '& .MuiSwitch-switchBase': {\n                            color: '#3b3f76',\n                            '&.Mui-checked': {\n                              color: '#3b3f76',\n                            },\n                            '&.Mui-checked + .MuiSwitch-track': {\n                              backgroundColor: '#3b3f76',\n                            },\n                          },\n                          '& .MuiSwitch-track': {\n                            backgroundColor: '#e0e0e0', // Adjust if needed\n                          },\n                        }}\n                      />\n                    }\n                    label={alignment === \"interested\" ? \"Interested\" : \"Not Interested\"}\n                    sx={{\n                      // width: \"100%\",\n                      \".MuiFormControlLabel-label\": {\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        color: \"#3b3f76\",\n                        fontWeight: \"400\",\n                        textTransform: \"capitalize\",\n                        // backgroundColor: alignment === \"interested\" ? \"#3b3f76\" : \"transparent\",\n                        borderRadius: \"8px\",\n                        padding: \"8px\",\n                        transition: \"background-color 0.3s\",\n                      },\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              {/* <CustomTabs tabs={tabs} /> */}\n              <Box sx={{ display: \"flex\", gap: \"1rem\", mb: 2 }}>\n                {tabs.map((item: any) => (\n                  <Button\n                    key={item.label}\n                    onClick={() => setActiveTab(item.value)}\n                    sx={{\n                      borderBottom: item.value === activeTab ? \"2px solid #3b3f76\" : \"none\",\n                      textTransform: \"none\",\n                      borderRadius: \"0\",\n                      color: item.value === activeTab ? \"#3b3f76\" : \"#3b3f7699\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      p: 1,\n                      px: 2,\n                      \"&:hover\": {\n                        // background: \"#3b3f76\",\n                        color: \"#3b3f76\",\n                      },\n                    }}\n                  >\n                    {item.label}\n                  </Button>\n                ))}\n              </Box>\n              {tabs.find((item) => item.value === activeTab)?.Component}\n            </> :\n            <Box sx={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", height: \"500px\", px: { xs: 3, md: 10 }, gap: \"1rem\" }}>\n              <Typography sx={{ fontSize: { xs: \"1.5rem\", md: \"2rem\" }, fontWeight: \"500\", color: \"#3B3F76\" }}>AI Recommended <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>Course finder</span></Typography>\n              <Typography textAlign=\"center\" sx={{ fontSize: { xs: \"0.85rem\", md: \"1rem\" } }}>Considering studying abroad but unsure about the best universities and courses for your needs? Give our AI-powered University Course Finder a try. Input your preferences, and let the AI analyze millions of data points to provide you with the information you need, saving you hours of research.</Typography>\n              <CustomButton width=\"150px\" handleSubmit={submit}>Generate</CustomButton>\n            </Box>\n        }\n\n      </Box>\n    </>\n  );\n};\n\nexport default Recommended;\n","import { Avatar, Box, Typography, Grid, Button } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport { getAdvisorTitle, setWordCase } from \"../../../assets/library\";\nimport { requestAdvisor } from \"../../../services\";\nimport { addAdvisorInfo, updateAdvisorInfo } from \"../../../store/Slices/advisorsSlice\";\nimport { addChats } from \"../../../store/Slices/chatsSlice\";\nimport { Advisor } from \"../../../types/types\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\n// import Images from \"src/assets\";\n// import { globalButton } from \"src/components/styles/customStyles\";\n// import { useNavigate } from \"react-router-dom\";\nimport CustomCard from \"src/genericComponents/customCard\";\n\nconst Advisors = () => {\n  const Preferences = useAppSelector((state) => state.preferences);\n  const advisors = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n  // const navigate = useNavigate();\n  const assignedCountries =\n    advisors?.data?.flatMap((advisor: Advisor) => advisor.assignedCountries) ||\n    [];\n  const unassignedCountries = Preferences?.data?.country?.filter(\n    (country: string) => !assignedCountries.includes(country)\n  );\n\n  const addAdvisors = async (item: string) => {\n    try {\n      const response = await requestAdvisor({\n        country: item,\n      });\n\n      const newAdvisor = response.data.data.advisor;\n      const existingAdvisor = advisors?.data?.find((advisor) => advisor._id === newAdvisor._id);\n\n      if (existingAdvisor) {\n        dispatch(updateAdvisorInfo(newAdvisor));\n      } else {\n        dispatch(addAdvisorInfo(newAdvisor));\n      }\n      if (response.data.data.chat !== null) {\n        dispatch(addChats(response.data.data.chat));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <Typography color=\"#3B3F76\" gutterBottom fontSize=\"1.2rem\">\n        Advisors\n      </Typography>\n      <Box\n        sx={{\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Grid container spacing={3}>\n          {advisors?.data?.map((item: Advisor, i: number) => (\n            <Grid item xs={12} sm={6} lg={4} key={i} sx={{ cursor: \"pointer\" }} onClick={() =>\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"advisor\",\n                      data: item,\n                      dimensions: {\n                        width: \"900px\",\n                        height:\"85%\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              )\n            }>\n              <CustomCard title={getAdvisorTitle(item?.info?.role)} i={i}>\n                <Box\n                  sx={{\n                    // backgroundColor: \"#EDEDFD\",\n                    px: 2,\n                    pb: 2,\n                    borderRadius: \"1rem\",\n                    display: \"flex\",\n                    gap: \"1rem\",\n                    position: \"relative\",\n                    height: \"100px\"\n                  }}\n                >\n                  <Avatar src={item?.info?.displayPicSrc} alt=\"\" />\n\n                  <div style={{ width: \"100%\" }}>\n                    <Typography gutterBottom fontSize=\"1.2rem\" >\n                      {setWordCase(item?.info?.firstName)}\n                    </Typography>\n                  \n                    {item?.info?.role === \"remoteStudentAdvisor\" ?\n                      <Typography\n                        // color=\"#FEB853\"\n                        fontSize=\"0.9rem\"\n                        sx={{ mt: 1 }}\n                      >\n                        Specialist in : {\" \"}\n\n                        <span style={{ color: \"#00000066\", fontWeight: \"500\" }}>Providing academic guidance and career support\n                        </span>\n                      </Typography> : \"\"}\n                    {item?.assignedCountries?.length > 0 ?\n                      <Typography\n                        // color=\"#FEB853\"\n                        fontSize=\"0.9rem\"\n                        sx={{ mt: 1 }}\n                      >\n                        Specialist in : {\" \"}\n                        {item?.assignedCountries?.map((country, i) => (\n                          <span key={i} style={{ color: \"#00000066\", fontWeight: \"500\" }}>{country}\n                            {i < item?.assignedCountries?.length - 1 && \", \"}</span>\n                        ))}\n                      </Typography> : \"\"}\n                  </div>\n                  {/* <p style={{\n        position: 'absolute',\n        right: '25px',\n        top: '20%', background: \"#B7B7E7\", width: \"1.1rem\", height: \"1.1rem\", margin: 0, borderBottomLeftRadius: \"20px\", transform: \"rotate(45deg\"\n      }}></p> */}\n                </Box>\n              </CustomCard>\n            </Grid>\n          ))}\n          {unassignedCountries?.map((item, i) => (\n            <Grid item xs={12} sm={6} lg={4} key={i}>\n              <Box\n                sx={{\n                  backgroundColor: \"#EDEDFD\",\n                  px: 2,\n                  py: 4,\n                  borderRadius: \"1rem\",\n                  display: \"flex\",\n                  gap: \"1rem\",\n                  position: \"relative\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100px\"\n                }}\n              >\n                <Typography color=\"#3B3F76CC\" fontSize=\"14px\">\n                  Click below to get the advisor assigned for {item}\n                </Typography>\n                <Button\n                  onClick={() => addAdvisors(item)}\n                  sx={{\n                    border: \"1px solid #3B3F76CC\",\n                    borderRadius: \"15px\",\n                    p: 0.5,\n                    textTransform: \"none\",\n                    color: \"#3B3F76CC\",\n                  }}\n                >\n                  Request for advisor\n                </Button>\n              </Box>\n            </Grid>\n          ))}\n\n        </Grid>\n\n      </Box>\n    </div>\n  );\n};\n\nexport default Advisors;\n","import { Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport Images from \"../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport {\n  globalButton, secondaryButton,\n} from \"../../../components/styles/customStyles\";\nimport CustomCard from \"../../../genericComponents/customCard\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Event } from \"../../../types/types\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\nimport { updateCart } from \"../../../services\";\nimport { setCart } from \"../../../store/Slices/cartSlice\";\nimport ConfirmDialog from \"../../../genericComponents/modalPopup/confirmDialog\";\nimport { useNavigate } from \"react-router-dom\";\n\n\ninterface CourseItem {\n  _id: string;\n  course: {\n    _id: string;\n    name: string;\n    elite: boolean;\n    university: {\n      name: string;\n      logoSrc: string;\n      location: {\n        country: string;\n      };\n    };\n  };\n  intake: string;\n}\n\n\nconst Shortlisted: React.FC = () => {\n  const advisors = useAppSelector((state: any) => state.advisor);\n  const cartCourses = useAppSelector((state: any) => state.cart);\n  const orders = useAppSelector((state: any) => state.orders);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  // const preference= useAppSelector(store =>store.preferences)\n  const [deleteItem, setDeleteItem] = useState<CourseItem | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n  const [selectedCourses, setSelectedCourses] = useState<string[]>([]);\n  const [isProceedDisabled, setIsProceedDisabled] = useState<boolean>(true);\n  // const countryPreference = preference?.data?.country?.map((item) => ({\n  //   name: item,\n  //   value: item\n  // }));\n\n  useEffect(() => {\n    const hasSelectedCourses = selectedCourses.length > 0;\n    const hasAlreadyApplied = selectedCourses.some((courseId) => {\n      const course = cartCourses.data.find((item: CourseItem) => item._id === courseId);\n      return course ? isAlreadyApplied(course) : false;\n    });\n    setIsProceedDisabled(!hasSelectedCourses || hasAlreadyApplied);\n    // eslint-disable-next-line\n  }, [selectedCourses, cartCourses]);\n\n  const isAlreadyApplied = (course: CourseItem): boolean => {\n    return orders?.data?.some(\n      (order: any) =>\n        order.products?.some(\n          (product: any) =>\n            product?.course?._id === course?.course?._id &&\n            new Date(product?.intake).getTime() === new Date(course?.intake).getTime()\n        )\n    );\n  };\n  const premiumApplicationCount = orders.data.reduce((acc: number, order: any) => {\n    const premiumProducts = order.products?.filter((product: any) => product.category === \"premium application\") || [];\n    return acc + premiumProducts.length;\n  }, 0);\n  \n  // console.log(premiumApplicationCount);\n\n  const handleCardClick = (item: CourseItem) => {\n    if (selectedCourses.includes(item._id)) {\n      setSelectedCourses(selectedCourses.filter((id) => id !== item._id));\n    } else {\n      setSelectedCourses([...selectedCourses, item._id]);\n    }\n  };\n\n  const handleDeleteOpen = (item: CourseItem) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const handleRequestQuote = () => {\n    if (advisors?.data?.length > 0) {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"advisor\",\n              data: advisors?.data?.[0],\n              dimensions: {\n                width: \"900px\",\n                height: \"85%\"\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    } else {\n      navigate(\"/profile/advisors\");\n    }\n  };\n\n  const handleCheckout = () => {\n    const selectedCourseData = cartCourses.data.filter((item: CourseItem) =>\n      selectedCourses.includes(item._id)\n    );\n    dispatch(\n      setPopup({\n        show: true,\n        data: {\n          container: {\n            name: \"checkout\",\n            data: selectedCourseData,\n            dimensions: {\n              width: \"90%\",\n              height: \"90%\",\n            },\n          },\n          type: \"custom\",\n        }\n      }))\n  }\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        try {\n          let values = {\n            action: \"remove\",\n            category: event?.data?.course?.elite ? \"elite application\" : \"premium application\",\n            courseId: event?.data?.course._id,\n            intake: event?.data?.intake,\n            itemId: event?.data?._id,\n          };\n          const response = await updateCart(values);\n          if (response.data.success) {\n            dispatch(setCart(response.data.data))\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: response.data.message,\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\",\n                      // height:\"20%\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) { }\n        setOpen(false);\n        break;\n      // case \"checkout\":\n      //   dispatch(\n      //     setPopup({\n      //       show: true,\n      //       data: {\n      //         container: {\n      //           name: \"checkout\",\n      //           data: courseCards,\n      //           dimensions: {\n      //             width: \"90%\",\n      //             height:\"90%\"\n      //           },\n      //         },\n      //         type: \"custom\",\n      //       },\n      //     })\n      //   );\n      // break;\n      default:\n        break;\n    }\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return `${month} ${year}`;\n  };\n\n\n  return (\n    <Box>\n      <Box sx={{ height: \"65vh\", overflowY: \"scroll\", p: 1 }}>\n        <Grid container spacing={3}>\n          {cartCourses.data && cartCourses.data.length > 0 ? (\n            cartCourses.data.map((item: CourseItem, i: number) => {\n              const alreadyApplied = isAlreadyApplied(item);\n              const isSelected = selectedCourses.includes(item._id);\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  lg={4}\n                  key={item._id}\n                  sx={{ paddingLeft: { xs: 0, md: \"1rem\" } }}\n                >\n                  <CustomCard\n                    title={item?.course?.university?.location?.country}\n                    disabled={alreadyApplied}\n                    i={i}\n                  >\n                    <Box sx={{ display: \"flex\", gap: \"10px\" }}\n                     onClick={() => {\n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"mainPopup\",\n                              data: item.course,\n                              dimensions: {\n                                width: \"80%\",\n                                // height:\"80%\"\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      );\n                    }}\n                    >\n                      <img\n                        src={item.course.university.logoSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"1.5rem\",\n                          height: \"1.5rem\",\n                          borderRadius: \"10px\",\n                        }}\n                      />\n                      <Box sx={{ flex: 1 }}>\n                        <Typography\n                          fontSize=\"0.9rem\"\n                          fontWeight=\"500\"\n                          gutterBottom\n                          sx={{\n                            textOverflow: \"ellipsis\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            mb: 1.5,\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          {item.course.university.name}\n                        </Typography>\n                        <Tooltip\n                          title={item.course.name}\n                          placement=\"bottom\"\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#fff\",\n                                backgroundColor: \"#3B3F76\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\": {\n                                  marginTop: \"-5px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              fontSize: { xs: \"13px\", lg: \"14px\" },\n                              fontWeight: 500,\n                              textOverflow: \"ellipsis \",\n                              lineClamp: 1,\n                              height: \"1.5rem\",\n                              textTransform: \"capitalize\",\n                              overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              WebkitLineClamp: \"1\",\n                              WebkitBoxOrient: \"vertical\",\n                            }}\n                          >\n                            {item.course.name}\n                          </Typography>\n                        </Tooltip>\n                        <Typography\n                          component=\"span\"\n                          fontSize=\"0.8rem\"\n                          fontWeight=\"500\"\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"nowrap\",\n                            mt: 1,\n                          }}\n                        >\n                          <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                          &nbsp; Start date:{\" \"}\n                          {item.intake ? formatDate(item.intake) : \"N/A\"}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Grid\n                      container\n                      spacing={2}\n                      sx={{ mt: 1, alignItems: \"center\" }}\n                    >\n                      <Grid\n                        item\n                        xs={6}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {!item.course.elite && !alreadyApplied && premiumApplicationCount < 5 && (\n                          <Button\n                            sx={{\n                              // width: \"100%\",\n                              color: \"#fff\",\n                              background:\n                                \"linear-gradient(90deg, #0252B2 0%, #561D6C 100%)\",\n                              fontWeight: \"500\",\n                              fontSize: \"10px\",\n                              textTransform: \"none\",\n                              borderRadius: \"15px\",\n                              padding: \"3px 0\",\n                              width: \"100px\"\n                            }}\n                          >\n                            Apply for free\n                          </Button>\n                        )}\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\",\n                          alignItems: \"center\",\n                          gap: \"8px\",\n                        }}\n                      >\n                        {alreadyApplied ? (\n                          <>\n                            <img\n                              src={Images.deleteIcon}\n                              alt=\"delete\"\n                              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                              onClick={() => handleDeleteOpen(item)}\n                            />\n                            <CheckCircleIcon\n                              sx={{\n                                fontSize: \"1.25rem\",\n                                color: \"#02b524\",\n                              }}\n                            />\n                            <Typography\n                              sx={{\n                                fontSize: \"12px\",\n                                color: \"#02b524\",\n                                textTransform: \"capitalize\",\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              Already placed\n                            </Typography>\n                          </>\n                        ) : (\n                          <>\n                            <img\n                              src={Images.deleteIcon}\n                              alt=\"delete\"\n                              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                              onClick={() => handleDeleteOpen(item)}\n                            />\n                            {isSelected ? (\n                              <CheckCircleIcon\n                                sx={{\n                                  fontSize: \"1.35rem\",\n                                  color: \"#1C1F40\",\n                                }}\n                                onClick={() => handleCardClick(item)}\n                              />\n                            ) : (\n                              <Box\n                                sx={{\n                                  width: '1.1rem',\n                                  height: '1.1rem',\n                                  borderRadius: '50%',\n                                  border: '1px solid #000',\n                                  marginTop: '3px',\n                                  marginLeft: \"5px\"\n                                }}\n                                onClick={() =>\n                                  handleCardClick(item)\n                                }\n                              ></Box>\n                            )}\n                          </>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </CustomCard>\n                </Grid>\n              );\n            })\n          ) : (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"200px\",\n                flexDirection: \"column\",\n              }}\n            >\n              <img\n                src={Images.noData}\n                alt=\"noData\"\n                style={{ width: \"70px\", height: \"70px\", marginBottom: \"1rem\" }}\n              />\n              <Typography sx={{ mb: 2 }}>Your cart is empty</Typography>\n              <Button sx={[globalButton, { width: \"150px\" }]}\n                onClick={() => {\n                  const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                    1\n                  )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                  const subDisciUrl = window.btoa(subDisUrl);\n                  navigate(`/explore?${subDisciUrl}`);\n                }}\n              >Add products</Button>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      {cartCourses.data && cartCourses.data.length > 0 && (\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: { xs: \"column\", sm: \"row\" },\n            gap: { xs: 2, md: 2 },\n            mb: 2,\n            p: 1,\n          }}\n        >\n          <Button\n            sx={[secondaryButton, { width: \"200px\" }]}\n            onClick={handleRequestQuote}\n          >\n            Request a Quote\n          </Button>\n\n\n          {isProceedDisabled ? (\n            <Tooltip\n              slotProps={{\n                tooltip: {\n                  sx: {\n                    color: \"#fff\",\n                    backgroundColor: \"#3B3F76\",\n                    boxShadow: 1,\n                    \"&.MuiTooltip-tooltip\": {\n                      marginTop: \"-5px !important\",\n                    },\n                  },\n                },\n              }}\n              title=\"Select courses to proceed\"\n              placement=\"top\"\n            >\n              <span style={{cursor:\"pointer\"}}>\n                <Button\n                  sx={[globalButton, { width: \"200px\", background: \"#dfe1e6\" }]}\n                  disabled\n                >\n                  Proceed to Checkout\n                </Button>\n              </span>\n            </Tooltip>\n          ) : (\n            <Button\n              sx={[globalButton, { width: \"200px\", background: \"#3b3f76\" }]}\n              onClick={handleCheckout}\n            >\n              Proceed to Checkout\n            </Button>\n          )}\n\n        </Box>\n      )}\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => eventHandler({ name: \"cart\", data: deleteItem }),\n          title: \"Are you sure you want to delete this from your cart?\",\n          content:\n            \"You’re just a few steps away from applying to universities.\",\n        }}\n      />\n\n    </Box>\n  );\n};\n\n\n\nconst Cart = () => {\n  return (\n    <div  >\n      <Box >\n        <Typography color=\"#3B3F76\" sx={{ fontSize: \"1.2rem\", fontWeight: \"500\", mb: 2 }}>Products</Typography>\n        <Box >\n          <Shortlisted />\n\n        </Box>\n      </Box>\n\n    </div>\n  )\n}\n\nexport default Cart\n\n\n","import { Box, Divider, Grid, Stack, Tooltip, Typography } from '@mui/material'\nimport React from 'react'\nimport Images from 'src/assets'\nimport { useAppSelector } from 'src/assets/hooks'\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport CustomCard from 'src/genericComponents/customCard'\nimport Razor from './checkout/razor';\nimport { setWordCase } from 'src/assets/library';\n\nconst Orders = () => {\n  const orders = useAppSelector(store => store.orders)\n  // console.log(orders)\n  function formatDate(date: Date): string {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n    const year = date.getFullYear();\n\n    return `${day}-${month}-${year}`;\n  }\n  function date(date: Date) {\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return month + \" \" + year;\n  }\n  return (\n    <div style={{\n      // height:\"100vh\",\n      // overflowY: \"scroll\",\n      padding: \"2rem\"\n    }}>\n      <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#75ECE5\", mb: 2 }}>\n        <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n          Orders\n        </Typography>\n      </Typography>\n      <Grid container spacing={3} sx={{}}>\n        {orders?.data?.length > 0 ? (\n          orders?.data?.map((item, i) => (\n            <React.Fragment key={i}>\n              <Grid item xs={12}>\n                <Box sx={{}}>\n                  <Grid container spacing={2}>\n                    {item?.products?.map((product, j) => (\n                      <Grid item xs={12} md={6} lg={4} key={j}>\n                        <CustomCard title={product.course?.university?.location?.country} i={j}>\n                          <Box>\n                            {product?.cancellationRequest === true ? (\n                              <img\n                                src={Images.cancelledIcon}\n                                alt=\"cancelled\"\n                                style={{\n                                  position: \"absolute\",\n                                  top: \"-28px\",\n                                  right: \"-26px\",\n                                }}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                            <Box sx={{ display: \"flex\", gap: \"10px\", width: \"100%\" }}>\n                              <img\n                                src={product.course?.university?.logoSrc || Images.establishedYear}\n                                alt=\"logo\"\n                                style={{\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  marginRight: \"5px\",\n                                  borderRadius: \"10px\",\n                                }}\n                              />\n                              <div style={{ flex: 1 }}>\n                                <Tooltip\n                                  slotProps={{\n                                    tooltip: {\n                                      sx: {\n                                        color: \"#fff\",\n                                        backgroundColor: \"#3B3F76\",\n                                        boxShadow: 1,\n                                        \"&.MuiTooltip-tooltip\": {\n                                          marginTop: \"-5px !important\",\n                                        },\n                                      },\n                                    },\n                                  }}\n                                  title={product?.course?.name}\n                                  placement=\"bottom\"\n                                >\n                                  <Typography\n                                    fontSize=\"0.9rem\"\n                                    sx={{\n                                      fontSize: { xs: \"13px\", lg: \"14px\" },\n                                      fontWeight: 500,\n                                      textOverflow: \"ellipsis \",\n                                      lineClamp: 1,\n                                      height: \"1.5rem\",\n                                      textTransform: \"capitalize\",\n                                      overflow: \"hidden\",\n                                      display: \"-webkit-box\",\n                                      WebkitLineClamp: \"1\",\n                                      WebkitBoxOrient: \"vertical\",\n                                    }}\n                                  >\n                                    {product?.course?.name}\n                                  </Typography>\n                                </Tooltip>\n                                <Typography\n                                  fontSize=\"0.9rem\"\n                                  sx={{\n                                    fontSize: { xs: \"12px\", lg: \"12px\" },\n                                    height: \"1.5rem\",\n                                    textTransform: \"capitalize\",\n                                    display: \"-webkit-box\",\n                                    WebkitBoxOrient: \"vertical\",\n                                    my: 1,\n                                  }}\n                                >\n                                  {product.course?.university?.name}\n\n                                </Typography>\n                              </div>\n                            </Box>\n                            <Stack\n                              direction=\"row\"\n                              justifyContent=\"end\"\n                              spacing={1}\n                              sx={{ mt: 1 }}\n                            >\n                              <Typography\n                                component=\"span\"\n                                fontSize=\"0.8rem\"\n                                fontWeight=\"500\"\n                                sx={{\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"nowrap\",\n                                }}\n                              >\n                                <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                                &nbsp; Start date :\n                                {product?.intake ? date(new Date(product?.intake)) : null}\n                              </Typography>\n                            </Stack>\n                            {/* <p\n                        style={{\n                          position: \"absolute\",\n                          left: \"10px\",\n                          bottom: \"10%\",\n                          background: \"#B7B7E7\",\n                          width: \"1.1rem\",\n                          height: \"1.1rem\",\n                          margin: 0,\n                          borderBottomLeftRadius: \"20px\",\n                          transform: \"rotate(45deg)\",\n                        }}\n                      ></p> */}\n                          </Box>\n                        </CustomCard>\n                      </Grid>\n                    ))}\n                  </Grid>\n                  <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <Box>\n                      {item?.paymentDetails?.paymentStatus !== \"paid\" ? <Razor data={item?._id} total={Math.floor(item?.paymentDetails?.amount / 100).toLocaleString(\"en-US\")} type=\"reorder\" /> : \"\"}\n                    </Box>\n                    <Box sx={{ float: 'right' }}>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\">Order total:{item?.paymentDetails?.currency} {Math.floor(item?.paymentDetails?.amount / 100).toLocaleString(\"en-US\")}</Typography>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\" sx={{ color: item?.paymentDetails?.paymentStatus === \"paid\" ? \"green\" : \"red\" }}>Status:{setWordCase(item?.paymentDetails?.paymentStatus)}</Typography>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\">Order placed: {item?.paymentDetails?.created_at ? formatDate(new Date(item?.paymentDetails?.created_at)) : \"N/A\"}</Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              {i < orders.data.length - 1 && (\n                <Grid item xs={12}>\n                  <Divider />\n                </Grid>\n              )}\n            </React.Fragment>\n          ))\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"50vh\",\n              flexDirection: \"column\",\n            }}\n          >\n            <img src={Images.noData} alt=\"noData\" style={{ width: \"70px\", height: \"70px\" }} />\n            <Typography>No orders </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  )\n}\n\nexport default Orders","import { Box } from \"@mui/material\";\nimport ProfileSidebar from \"./profileSidebar\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Documents from \"./section/documents\";\nimport Universities from \"./section/universities/universities\";\nimport Dashboard from \"./section/dashboard\";\nimport ProfileSection from \"./section/profileSection\";\nimport AppliedUniversities from \"./section/universities/appliedUniversities\";\nimport Recommended from \"./section/recommend\";\nimport Advisors from \"./section/advisors\";\nimport Cart from \"./section/cart\";\nimport Orders from \"./section/orders\";\n\nconst ProfileRightSide = () => {\n  return (\n    <Routes>\n      <Route path=\"dashboard\" element={<Dashboard />} />\n      <Route path=\"applications\" element={<AppliedUniversities />} />\n      <Route path=\"shortlisted\" element={<Universities />} />\n      <Route path=\"personal\" element={<ProfileSection />} />\n      <Route path=\"recommendedCourses/:id\" element={<Recommended />} />\n      <Route path=\"advisors\" element={<Advisors />} />\n      <Route path=\"documents\" element={<Documents />} />\n      <Route path=\"cart\" element={<Cart />} />\n      <Route path=\"orders\" element={<Orders />} />\n    </Routes>\n  );\n};\n\nconst ProfileLayout = () => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\", \n        width: \"100%\",\n        height: \"100vh\",\n        // overflow: \"hidden\", \n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          width: \"100%\",\n          maxWidth: \"1440px\",\n          height: \"100%\",\n        }}\n      >\n        {/* Sidebar */}\n        <Box\n          sx={{\n            width: { xs: \"60px\", md: \"220px\" }, \n            position: \"fixed\", \n            height: \"100vh\",\n            zIndex: 10,\n            paddingTop:\"3rem\"\n          }}\n        >\n          <ProfileSidebar />\n        </Box>\n\n        {/* Main Content */}\n        <Box\n          sx={{\n            marginLeft: { xs: \"60px\", md: \"220px\" },\n            flexGrow: 1,\n            // overflowY: \"auto\",\n            p: 2, \n            // height: \"100vh\", \n            backgroundColor: \"#fff\",\n            marginTop:\"5rem\"\n\n          }}\n        >\n          <ProfileRightSide />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfileLayout;\n"],"names":["_ref","accept","setLoading","inputFile","useRef","dispatch","useAppDispatch","_jsxs","className","children","_jsx","style","display","type","name","onChange","event","_event$target$files","file","target","files","formData","FormData","append","axios","post","concat","then","res","async","image","payload","displayPicSrc","response","editProfile","_response$data","_response$data$data","sharedInfoData","store","getState","sharedInfo","data","setSharedInfo","submit","secure_url","catch","err","console","error","ref","onClick","imageClick","current","click","CameraAltOutlinedIcon","sx","color","profileList","path","icon","src","Images","dashboard","alt","width","height","personal","documents","products","recommendations","wishlist","experts","orders","cart","ProfileSidebar","_profile$data","_profile$data2","location","useLocation","hovered","setHovered","React","loading","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","profile","useAppSelector","state","isRecommendedCoursesActive","pathname","startsWith","Box","mr","xs","lg","my","md","justifyContent","flexDirection","marginTop","List","pb","maxWidth","background","boxShadow","borderRadius","p","alignItems","mb","position","marginBottom","onMouseEnter","onMouseLeave","standardLoader","Avatar","IconButton","top","left","transform","backgroundColor","UploadImage","Typography","fontWeight","firstName","map","item","ListItem","component","Link","to","textDecoration","ListItemButton","selected","padding","Tooltip","title","placement","ListItemIcon","minWidth","pl","ListItemText","primary","fontSize","borderBottom","paddingBottom","marginRight","ExpandCard","imageUrl","open","setOpen","useState","_Fragment","Card","expandCardStyles","cardCollapse","CardHeader","cardTitle","avatar","cardImg","action","transition","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","cardContent","CardContent","Container","_testScoresGRE$docId","_testScoresGRE$docId$","_testScoresGMAT$docId","_testScoresSAT$docId$","_testScoresACT$docId$","testscores","findTestScoresByName","find","testScoresGRE","testScoresGMAT","testScoresACT","testScoresSAT","Grid","container","docId","pdfIcon","FileName","Stack","direction","spacing","VisibilityOutlinedIcon","_testScoresGRE$docId2","_testScoresGRE$docId3","setPopup","show","preview_url","dimensions","_testScoresGMAT$docId2","_testScoresGMAT$docId3","_testScoresSAT$docId","_testScoresSAT$docId$2","_testScoresACT$docId","_testScoresACT$docId$2","_testScoresTOEFL$docI","_testScoresIELTS$docI","_testScoresDET$docId$","_testScoresPTE$docId$","testScoresTOEFL","testScoresIELTS","testScoresDET","testScoresPTE","_testScoresTOEFL$docI2","_testScoresTOEFL$docI3","_testScoresIELTS$docI2","_testScoresIELTS$docI3","_testScoresDET$docId","_testScoresDET$docId$2","_testScoresPTE$docId","_testScoresPTE$docId$2","DocumentItem","_ref2","_doc$data","doc","handleDelete","originalname","_doc$data2","length","_id","OtherDocs","_documents$data","_documents$data$test","_documents$data2","_documents$data2$test","_documents$data3","Aptitude","test","general","EnglishTest","languageProf","WorkExperienceDocs","workExperiences","Accordion","size","ExpandLessIcon","paddingTop","inputFileRefs","secondarySchool","plus2","degree","deleteItem","setDeleteItem","identifier","setIdentifier","loadingState","setLoadingState","handleFileSubmit","fieldPath","fieldIdentifier","prevState","handleSubmit","allowedFileTypes","includes","undefined","uploadProfile","setDocuments","docs","deleteId","deleteUploadProfile","documentId","key","label","Bachelors","bachelorsFileRefs","transcripts","bonafide","CMM","PCM","OD","_data$doc$key","_data$doc$key$data","_data$doc$key2","_data$doc$key2$data","DeleteOutlineOutlinedIcon","handleDeleteOpen","Button","textTransform","_inputFileRefs$curren","FileUploadOutlinedIcon","bachelors","ConfirmDialog","handleClose","additionalData","onSubmit","content","Masters","mastersFileRefs","_ref3","_data$doc$key3","_data$doc$key3$data","_data$doc$key4","_data$doc$key4$data","_inputFileRefs$curren2","masters","Document","_ref4","_data$doc$key$data2","inputFileRef","_data$doc$key5","_data$doc$key5$data","_inputFileRef$current","textAlign","resume","passportBD","passportADD","TranscriptDocs","PersonalDocs","AcademicDocs","academic","Documents","tabs","Component","CustomTabs","Shortlisted","_shortlistedCourses$d","_shortlistedCourses$d2","shortlistedCourses","shortlistedcourses","setDeleteId","userAuthStatus","overflowY","i","_item$university","_item$university$loca","_item$university2","_item$startDate","sm","paddingLeft","CustomCard","university","country","gap","logoSrc","flex","textOverflow","lineClamp","overflow","WebkitLineClamp","WebkitBoxOrient","slotProps","tooltip","whiteSpace","mt","TimerIcon","startDate","index","monthNames","courseStartingMonth","join","border","_userAuthStatus$data","_userAuthStatus$data2","isAuthorized","isRegistered","eventHandler","ShoppingCartOutlinedIcon","deleteIcon","id","noData","values","courseId","addToShortList","success","setShortlisted","Universities","UpcomingSessions","_meetings$data","_meetings$data2","meetings","joinNowClick","link","window","filteredEvents","filter","_event$data","startTime","Date","start","dateTime","currentTime","status","rescheduledEvents","_event$data2","hasEvents","_data$data","_data$data2","_data$member","_data$member2","_data$member3","_data$data3","_data$data4","_data$data5","endTime","end","isEventInProgress","member","marginLeft","role","getAdvisorTitle","setWordCase","hangoutLink","disabled","right","gutterBottom","toLocaleString","month","year","day","hour","minute","hour12","cursor","description","InfoIcon","ml","float","bottom","_data$data6","_data$data7","_data$member4","_data$member5","_data$member6","_data$data8","_data$data9","_data$data10","noMeetings","modifyBooking","meetingId","option","updatemeetings","message","BookedSlots","CardPage","_recommendations$data","_recommendations$data2","_recommendations$data3","_recommendations$data4","_recommendations$data5","_recommendations$data6","_shortlisted$data","_applied$data","_recommendations$data7","_recommendations$data8","navigate","useNavigate","shortlisted","applied","applications","ambitious","possibilityOfAdmit","safe","moderate","sections","items","count","courseicon","ErrorIcon","idx","commonStackStyles","variant","commonTypographyStyles","noRecommend","Checklist","_applications$data","_inputFile$current","filteredApplications","_item$docChecklist","docChecklist","some","docItem","isChecked","_item$docChecklist2","_item$docChecklist3","_item$course","_item$course$universi","_item$course2","_docItem$doc2","_docItem$doc2$data","px","py","margin","course","_docItem$doc","_docItem$doc$data","uploadApplicationDocs","updateApplication","InfoOutlinedIcon","desc","zIndex","Events","_advisor$data","_advisor$data2","advisor","bgColors","overflowX","scrollbarWidth","flexWrap","_advisor$info","_advisor$info2","_advisor$info3","info","normalizeType","Dashboard","options","value","placeholder","searchEnabled","searchQuery","setSearchQuery","filteredOptions","useMemo","toLowerCase","FormControl","fullWidth","Select","labelId","displayEmpty","onClose","IconComponent","renderValue","MenuProps","PaperProps","maxHeight","autoFocus","ListSubheader","TextField","e","InputProps","startAdornment","InputAdornment","SearchIcon","onKeyDown","stopPropagation","MenuItem","Isbacklog","setIsbacklog","countries","setCountries","states","setStates","cities","setCities","institutions","setInstitutions","institutionName","setInstitutionName","instituteName","universities","setUniversities","affiliatedUniversity","setAffiliatedUniversity","programMajor","setProgramMAjor","degreeName","setDegreeName","degreeProgram","ieh","setIeh","institutionId","setInstitutionId","gradingSystem","setGradingSystem","totalScore","setTotalScore","iehStatus","setIEHStatus","IEH","hasSearched","setHasSearched","loader","setLoader","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","city","searchTerm","setSearchTerm","countryInfo","c","stateInfo","s","useEffect","allCountries","Country","getAllCountries","fetchCountries","profileSchema","Yup","shape","underGraduation","_stateInfo$countryCod","_stateInfo$isoCode","statesOfCountry","State","isoCode","citiesOfState","City","getCitiesOfState","countryCode","fetchStateAndCities","handleInputChange","getSearchUniversityDetails","customField","setCustomField","ITEM_HEIGHT","initialValues","endDate","backlogs","isCompleted","custom","specializations","setSpecializations","selectedSpecializations","bachelorCourses","filteredCities","cityHandle","newCity","handleOptionClick","_option$IEH","fieldName","setFieldName","InstitutionName","exists","submitHandler","setUnderGraduation","education","Formik","validationSchema","enableReinitialize","_values$underGraduati","_values$underGraduati2","_values$underGraduati3","touched","errors","handleChange","setFieldValue","Form","InputLabel","defaultValue","handleDegreeChange","selectedDegree","borderColor","Object","keys","ErrorMessage","autoComplete","endAdornment","CircularProgress","Close","_option$IEH2","Star","District","verificationStatus","globalButton","inputProps","step","min","max","list","onInput","parseFloat","Infinity","toString","slice","RadioGroup","row","FormControlLabel","control","Radio","DatePickerComponent","selectedDate","date","toISOString","maxDate","placeholderText","minDate","setFullYear","getFullYear","fourYearsFromStartDate","CustomField","ReusableDropdown","CustomButton","stream","setStream","board","setBoard","languageOfInstruction","setPlus2","required","this","parent","when","is","schema","nullable","_values$plus","_values$plus2","_values$plus3","resetForm","boards","languages","school","setSchool","_values$school","_values$school2","specialization","postGraduation","pgCourseList","setPostGraduation","_values$postGraduatio","_values$postGraduatio2","Education","educationhistory","PostGrad","Diploma","School","m","AcademicTestForm","_testscoresData$data","testscoresData","loadingMap","setLoadingMap","inputRefs","academicTestNames","AcademicTestNamesEnum","filteredTests","_item$docId","_item$docId$data","_item$scores","_item$docId2","_item$docId2$data","prevLoadingMap","lastDoc","at","updatedData","updatedTestscoresData","response1","tests","settestScores","documentUpload","_inputRefs$current$it","_inputRefs$current$it2","scores","score","j","testDate","EditOutlinedIcon","delete","_testscoresData$data2","updated","handleTestsDelete","EnglishTestForm","ENglishTestNamesEnum","TestScores","_tests$data","_tests$data2","englishTestNames","selectedTest","setSelectedTest","selectedGRETest","setSelectedGRETest","academicTests","englishTests","isSelected","setIsSelected","_sharedInfo$data","isPlanningToTakeLanguageTest","isGRESelected","setIsGRESelected","_sharedInfo$data2","isPlanningToTakeAcademicTest","Boolean","log","entries","isDisabled","Preferences","_Preferences$data","_Preferences$data2","_Preferences$data3","_Preferences$data4","_Preferences$data5","_Preferences$data6","_Preferences$data6$bu","_Preferences$data7","_Preferences$data7$bu","_Preferences$data8","_advisors$data","_Preferences$data9","_Preferences$data9$co","_Preferences$data10","preferences","intake","setIntake","setYear","setMonth","getMonth","courseData","setCourseData","courses","countryData","setCountryData","minBudget","setMinBudget","budget","lower","maxBudget","setMaxBudget","upper","selectedCurrency","setSelectedCurrency","currency","advisors","assignedCountries","flatMap","unassignedCountries","preference","of","currencies","currencySymbols","symbol","split","_event$data$newValue","newValue","Array","isArray","setpreferences","_touched$preference","_errors$preference","_touched$preference2","_errors$preference2","_touched$preference3","_errors$preference3","_touched$preference4","_touched$preference4$","_errors$preference4","_errors$preference4$b","_touched$preference5","_touched$preference5$","_errors$preference5","_errors$preference5$b","_touched$preference6","_errors$preference6","Autocomplete","multiple","limitTags","subDisciplines","getOptionLabel","filterSelectedOptions","ListboxProps","renderInput","params","countryList","_advisors$data2","requestAdvisor","newAdvisor","existingAdvisor","updateAdvisorInfo","addAdvisorInfo","chat","addChats","addAdvisors","degreeType","Number","Slider","valueLabelDisplay","paddingRight","String","Skills","skills","skilldata","setSkillsData","disableClearable","skillsList","handleOptionChange","setskills","secondaryButton","activity","otherwise","validationSchemaArray","ExtraCurricular","_extracurricular$data","extracurricular","extracurriculum","extraCurriculumActivities","designation","activities","submitForm","setExtraCurriculum","setSubmitting","handleBlur","isValid","dirty","FieldArray","push","remove","Field","as","onBlur","getTime","familyDetails","GuardianFirstName","GuardianLastName","GuardianOccupation","RelationshipWithStudent","GuardianContactNumber","number","phoneNumber","parsePhoneNumberFromString","Family","_familyData$data","familyData","familyInfo","GuardianEmail","GuardianQualification","family","setfamilyInfo","familyMember","ReactPhoneInput","dialCode","trim","PersonalDetails","_verification$data","_verification$data2","_verification$data2$e","_personalInfo$data","_personalInfo$data2","_personalInfo$data2$t","_personalInfo$data3","_personalInfo$data3$t","_personalInfo$data4","_personalInfo$data4$t","_personalInfo$data5","_personalInfo$data5$p","_personalInfo$data6","_personalInfo$data6$p","_personalInfo$data7","_personalInfo$data7$p","_sharedInfo$data3","_personalInfo$data14","_personalInfo$data15","_personalInfo$data16","_personalInfo$data17","_personalInfo$data18","_personalInfo$data19","_personalInfo$data20","_personalInfo$data21","_personalInfo$data22","_personalInfo$data22$","_personalInfo$data23","_personalInfo$data23$","_personalInfo$data24","_personalInfo$data24$","_personalInfo$data25","_personalInfo$data25$","_personalInfo$data26","_personalInfo$data26$","_personalInfo$data27","_personalInfo$data27$","_personalInfo$data28","_personalInfo$data28$","_personalInfo$data29","_personalInfo$data29$","verification","phoneStatus","phoneLoginOtp","verified","emailStatus","emailLoginOtp","personalInfo","refused","setRefused","visaRejectedDetails","permanent","setPermanent","load","setLoad","permanentstates","setpermanentstates","permanentcities","setpermanentCities","temporaryAddress","permanentCountry","setPermanentCountry","permanentAddress","permanentState","setpermanentState","permanentCity","setpermanentCity","countryPInfo","stateInPfo","_stateInPfo$countryCo","_stateInPfo$isoCode","_personalInfo$data8","_personalInfo$data8$t","_personalInfo$data9","_personalInfo$data9$t","_personalInfo$data10","_personalInfo$data10$","_personalInfo$data11","_personalInfo$data11$","_personalInfo$data12","_personalInfo$data12$","_personalInfo$data13","_personalInfo$data13$","statePInfo","sendSms","verifyEmailPhone","email","lastName","matches","personalDetails","DOB","Gender","nationality","countyOfBirth","maritalStatus","pinCode","addressLine1","validPassport","validPermit","addressLine2","addressLine3","_personalInfo$data30","tempAddress","permAddress","obj","constructor","_response$data2","_response$data2$data","_response$data3","_response$data3$data","_response$data4","_response$data4$data","_response$data5","_response$data5$data","_response$data6","_response$data6$data","_response$data7","_response$data7$data","_response$data8","_response$data8$data","_response$data9","_response$data9$data","_response$data10","_response$data10$data","_response$data11","_response$data11$data","_response$data12","_response$data12$data","_response$data13","_response$data13$data","_response$data14","_response$data14$data","_response$data15","_response$data15$data","_response$data16","_response$data16$data","_response$data17","_response$data17$data","_response$data18","_response$data18$data","_response$data19","_response$data19$data","sharedProfile","phone","LeadSource","setPersonalInfo","getMaxDate","today","getDate","permfilteredCities","_sharedInfo$data4","_sharedInfo$data5","_sharedInfo$data6","_sharedInfo$data7","_sharedInfo$data8","_sharedInfo$data8$pho","_sharedInfo$data9","_sharedInfo$data9$pho","_touched$personalDeta","_errors$personalDetai","_touched$personalDeta2","_errors$personalDetai2","_touched$personalDeta3","_touched$personalDeta4","_errors$personalDetai3","_errors$personalDetai4","_touched$personalDeta5","_touched$personalDeta6","_errors$personalDetai5","_errors$personalDetai6","VerifiedIcon","nationalities","multiline","rows","WorkExperiences","_workExperienceData$d","_workExperienceData$d3","document","setdoc","workExperienceData","workexperience","WorkExperienceDetails","setWorkExperienceDetails","companyName","sector","workStatus","setWorkStatus","work","setErrors","newWorkExperienceDetails","splice","newErrors","workExperience","_response$data$data$w","setWorkExperience","prevDetails","newDetails","prevErrors","newWorkStatus","validateForm","forEach","detail","detailErrors","updatedWorkExperienceDetails","WorkExperienceMember","_errors$index","_errors$index2","_errors$index3","_errors$index4","_errors$index5","_errors$index6","_errors$index7","_errors$index8","_WorkExperienceMember","_WorkExperienceMember2","_errors$index9","_errors$index10","_errors$index11","_workExperienceData$d2","helperText","industrySector","newWorkExperience","workTypes","_inputFile$current2","startIcon","hidden","Info","_WorkExperienceMember3","_WorkExperienceMember4","ProfileSection","PermIdentityOutlinedIcon","SchoolOutlinedIcon","AssignmentIcon","TestScoreForm","WorkOutlineOutlinedIcon","WorkExperience","StarBorderOutlinedIcon","Diversity3Icon","AccessibilityIcon","AppliedUniversities","_applicationsData$dat","_applicationsData$dat2","applicationsData","_item$course2$univers","_item$course3","_item$course3$univers","_item$course3$univers2","stage","cancellationRequest","cancelledIcon","Recommended","_preferences$data","_underGraduation$data","_preferences$data$cou","_preferences$data2","_preferences$data2$co","_recommendations$data9","_tabs$find","useParams","activeTab","setActiveTab","criteria","gre","isCriteriaMet","sub_discipline","JSON","stringify","ug_gpa","courseChecked","alignment","setAlignment","matchedTab","tab","props","_item$course4","_item$course5","_item$course5$univers","_item$course6","_item$course6$univers","_item$course6$univers2","_item$course7","_item$course7$startDa","_item$course8","_userAuthStatus$data3","_userAuthStatus$data4","_event$data2$course","_event$data3","_event$data3$course","_event$data$course","hideRecommendation","recommendationId","setRecommended","fullToShort","fromEntries","DestinationTypeEnum","counsellorRecommended","studyLevel","shortlistedCourse","_item$course9","FavoriteOutlinedIcon","FavoriteBorderIcon","notInterested","NotInterestedOutlinedIcon","Promise","resolve","setTimeout","fetchData","filterCourses","regenerateForm","getRecommendations","Switch","checked","_underGraduation$data2","Advisors","_Preferences$data$cou","_advisors$data3","_item$info","_item$info2","_item$info3","_item$info4","_item$assignedCountri","_item$assignedCountri2","_item$assignedCountri3","cartCourses","selectedCourses","setSelectedCourses","isProceedDisabled","setIsProceedDisabled","hasSelectedCourses","hasAlreadyApplied","isAlreadyApplied","_orders$data","order","_order$products","product","_product$course","_course$course","premiumApplicationCount","reduce","acc","_order$products2","category","handleCardClick","formatDate","dateString","_item$course$universi2","alreadyApplied","elite","CheckCircleIcon","subDisUrl","encodeURIComponent","subDisciUrl","btoa","handleRequestQuote","handleCheckout","selectedCourseData","_event$data4","itemId","updateCart","setCart","Cart","Orders","_orders$data2","padStart","_item$products","_item$paymentDetails","_item$paymentDetails2","_item$paymentDetails3","_item$paymentDetails4","_item$paymentDetails5","_item$paymentDetails6","_item$paymentDetails7","_item$paymentDetails8","_product$course$unive","_product$course$unive2","_product$course2","_product$course2$univ","_product$course3","_product$course4","_product$course5","_product$course5$univ","establishedYear","paymentDetails","paymentStatus","Razor","total","Math","floor","amount","created_at","Divider","ProfileRightSide","Routes","Route","element","ProfileLayout","flexGrow"],"sourceRoot":""}