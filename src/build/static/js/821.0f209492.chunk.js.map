{"version":3,"file":"static/js/821.0f209492.chunk.js","mappings":"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","sources":["pages/blogs/Blog.tsx","../node_modules/@mui/icons-material/KeyboardArrowLeft.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport KeyboardArrowLeftIcon from \"@mui/icons-material/KeyboardArrowLeft\";\nimport KeyboardArrowRightIcon from \"@mui/icons-material/KeyboardArrowRight\";\n\ninterface Blog {\n  _id: string;\n  title: string;\n  coverImageSrc: string;\n  summary: string;\n}\n\nconst AllBlogs: React.FC = () => {\n  const [blogs, setBlogs] = useState<Blog[]>([]);\n  const navigate = useNavigate();\n  const sliderRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const response = await axios.post(\n          \"https://campusroot.com/api/v1/public/listings/blogs\"\n        );\n        setBlogs(response.data.data.list);\n      } catch (error) {\n        console.error(\"Error fetching blogs:\", error);\n        alert(\"Failed to fetch blogs. Please try again later.\");\n      }\n    };\n    fetchBlogs();\n  }, []);\n\n  const handleBlogClick = (blogId: string) => {\n    navigate(`/blog/${blogId}`);\n  };\n\n  const scrollLeft = () => {\n    if (sliderRef.current) {\n      sliderRef.current.scrollBy({\n        left: -500, // Scroll amount\n        behavior: \"smooth\", // Smooth scrolling\n      });\n    }\n  };\n\n  const scrollRight = () => {\n    if (sliderRef.current) {\n      sliderRef.current.scrollBy({\n        left: 500, // Scroll amount\n        behavior: \"smooth\", // Smooth scrolling\n      });\n    }\n  };\n\n  return (\n    <div className=\"all-blogs\">\n      {/* Section 1 */}\n      <div className=\"gradient\">\n        <center style={{ marginBottom: \"5.5rem\" }}>\n          <h1>Welcome to our Blog</h1>\n          <p>Explore insights, tips, and stories about studying abroad.</p>\n        </center>\n        <div>\n          {blogs.length >= 4 ? (\n            <Grid container spacing={2}>\n              {[0, 1, 3].map((index, colIndex) => (\n                <Grid item xs={12} sm={6} md={4} lg={4} key={colIndex}>\n                  {index === 1 ? (\n                    blogs.slice(index, index + 2).map((blog, i) => (\n                      <img\n                        key={i}\n                        src={blog.coverImageSrc}\n                        alt={`Cover of blog titled ${blog.title}`}\n                        loading=\"lazy\"\n                        className={\n                          i === 0 ? \"small-blog margin-bottom\" : \"small-blog\"\n                        }\n                        onClick={() => handleBlogClick(blog._id)}\n                      />\n                    ))\n                  ) : (\n                    <img\n                      src={blogs[index]?.coverImageSrc}\n                      alt={`Cover of blog titled ${blogs[index]?.title}`}\n                      loading=\"lazy\"\n                      className=\"large-blog\"\n                      onClick={() => handleBlogClick(blogs[index]?._id)}\n                    />\n                  )}\n                </Grid>\n              ))}\n            </Grid>\n          ) : blogs.length === 0 ? (\n            <div className=\"loading-section\">\n              <CircularProgress />\n              <p>Loading blogs...</p>\n            </div>\n          ) : (\n            <p>No blogs available at the moment. Please check back later.</p>\n          )}\n        </div>\n      </div>\n\n      {/* Section 2 */}\n      <div className=\"section-2\">\n        <div className=\"headings\">\n          <h2>\n            Most viewed <span>Blogs</span>\n          </h2>\n        </div>\n        <div className=\"moving-cards\">\n          <KeyboardArrowLeftIcon\n            onClick={scrollLeft}\n            style={{ cursor: \"pointer\" }}\n          />\n\n          <div className=\"blog-slider\" ref={sliderRef}>\n            <Grid container spacing={2}>\n              {blogs.slice(5, 8).map((blog) => (\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  md={4}\n                  key={blog._id}\n                  onClick={() => handleBlogClick(blog._id)}\n                >\n                  <div className=\"blog-card\">\n                    <img\n                      src={blog.coverImageSrc}\n                      alt={`Cover of blog titled ${blog.title}`}\n                      className=\"blog-image\"\n                    />\n                    <div className=\"blog-content\">\n                      <h3 className=\"blog-title\">\n                        {blog.title.slice(0, 50)}...\n                      </h3>\n                      <p className=\"blog-summary\">\n                        {blog.summary.slice(0, 70)}...\n                      </p>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n\n          <KeyboardArrowRightIcon\n            onClick={scrollRight}\n            style={{ cursor: \"pointer\" }}\n          />\n        </div>\n      </div>\n\n      {/* Section 3 */}\n      <div className=\"section-3\">\n        <div className=\"headings\">\n          <h2>\n            What's new <span>today</span>\n          </h2>\n        </div>\n        <Grid container spacing={2} sx={{ marginTop: \"20px\" }}>\n          {[\n            { index: 0, count: 1, height: \"450px\", lg: 4 },\n            { index: 1, count: 3, lg: 4, triple: true },\n            { index: 4, count: 1, height: \"450px\", lg: 4 },\n          ].map((config, colIndex) => (\n            <Grid item lg={config.lg} md={6} sm={12} key={colIndex}>\n              {config.triple ? (\n                blogs\n                  .slice(config.index, config.index + config.count)\n                  .map((blog, _id) => (\n                    <div\n                      className=\"section-3-container\"\n                      key={_id}\n                      onClick={() => handleBlogClick(blog._id)}\n                    >\n                      <img\n                        src={blog.coverImageSrc}\n                        alt={`Cover of blog titled ${blog.title}`}\n                      />\n                      <h5 className=\"section-3-h5\">\n                        {blog.title.slice(0, 25)}... <br />\n                        <p className=\"section-3-p\">{blog.summary.slice(0, 150)}...</p>\n                      </h5>\n                    </div>\n                  ))\n              ) : (\n                <img\n                  key={config.index}\n                  src={blogs[config.index]?.coverImageSrc}\n                  alt={`Cover of blog titled ${blogs[config.index]?.title}`}\n                  style={{\n                    width: \"100%\",\n                    height: config.height,\n                    borderRadius: \"8px\",\n                    marginBottom: colIndex === 2 ? \"3vh\" : \"0\",\n                  }}\n                  onClick={() => handleBlogClick(blogs[config.index]?._id)}\n                />\n              )}\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n\n      {/* All Blogs Section */}\n      <div className=\"all-blogs\">\n        <div className=\"headings\">\n          <h2>\n            All <span>Blogs</span>\n          </h2>\n        </div>\n        <Grid container spacing={2} sx={{ marginTop: \"20px\" }}>\n          {blogs.slice(13).map((blog, index) => (\n            <Grid item lg={6} md={6} sm={12} key={index}>\n              <div\n                className={`all-blogs-card ${index % 2 === 0 ? \"even\" : \"odd\"}`}\n                onClick={() => handleBlogClick(blog._id)}\n              >\n                <h4 style={{\n                  textOverflow: \"ellipsis \",\n                  lineClamp: 2,\n                  height: \"4.5rem\",\n                  textTransform: \"capitalize\",\n                  overflow: \"hidden\",\n                  display: \"-webkit-box\",\n                  WebkitLineClamp: \"2\",\n                  WebkitBoxOrient: \"vertical\",\n                 }}>{blog.title}</h4>\n                <h5 style={{\n                  textOverflow: \"ellipsis \",\n                  lineClamp: 3,\n                  height: \"4rem\",\n                  textTransform: \"capitalize\",\n                  overflow: \"hidden\",\n                  display: \"-webkit-box\",\n                  WebkitLineClamp: \"3\",\n                  WebkitBoxOrient: \"vertical\",\n                 }}>{blog.summary}</h5>\n                <h6>View details</h6>\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default AllBlogs;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');"],"names":["AllBlogs","blogs","setBlogs","useState","navigate","useNavigate","sliderRef","useRef","useEffect","async","response","axios","post","data","list","error","console","alert","fetchBlogs","handleBlogClick","blogId","concat","_jsxs","className","children","style","marginBottom","_jsx","length","Grid","container","spacing","map","index","colIndex","_blogs$index","_blogs$index2","item","xs","sm","md","lg","slice","blog","i","src","coverImageSrc","alt","title","loading","onClick","_id","_blogs$index3","CircularProgress","KeyboardArrowLeftIcon","scrollLeft","current","scrollBy","left","behavior","cursor","ref","summary","KeyboardArrowRightIcon","scrollRight","sx","marginTop","count","height","triple","config","_blogs$config$index","_blogs$config$index2","width","borderRadius","_blogs$config$index3","textOverflow","lineClamp","textTransform","overflow","display","WebkitLineClamp","WebkitBoxOrient","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}