{"version":3,"file":"static/js/330.02a86a2c.chunk.js","mappings":"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","sources":["pages/countries/Country.tsx","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Box,\n  Container,\n} from \"@mui/material\";\nimport { singlePageStyles } from \"src/components/styles/customStyles\";\n\nconst CountryDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [country, setCountry] = useState<any>();\n  const [courses, setCourses] = useState<any>([]);\n  const [universities, setUniversities] = useState<any>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCountryDetails = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch country details\n        const countryResponse = await axios.get(\n          `https://campusroot.com/api/v1/public/destination/${id}`\n        );\n        const countryData = countryResponse?.data?.data;\n        if (!countryData) throw new Error(\"Invalid data from the country API.\");\n\n        let normalizedTitle = countryData.title;\n        if (normalizedTitle === \"USA\") {\n          normalizedTitle = \"United States of America\";\n        } else if (normalizedTitle === \"UK\") {\n          normalizedTitle = \"United Kingdom\";\n        }\n        const updatedCountryData = { ...countryData, title: normalizedTitle };\n        setCountry(updatedCountryData);\n\n        // Fetch university details\n        const universityResponse = await axios.post(\n          \"https://campusroot.com/api/v1/public/listings/universities\",\n          {\n            page: 1,\n            filterData: [\n              {\n                type: \"country\",\n                data: [normalizedTitle],\n              },\n            ],\n            currency: \"CAD\",\n          }\n        );\n        const universityList = universityResponse?.data?.data?.list || [];\n        setUniversities(universityList);\n        console.log(universityList);\n\n\n        // Fetch courses\n        const coursesResponse = await axios.post(\n          `https://campusroot.com/api/v1/public/listings/courses`,\n          {\n            page: 1,\n            filterData: [\n              {\n                type: \"country\",\n                data: [normalizedTitle],\n              },\n            ],\n            currency: \"CAD\",\n          }\n        );\n        const coursesList = coursesResponse?.data?.data?.list || [];\n        setCourses(coursesList);\n      } catch (err) {\n        // setError(err.message || \"Failed to load data.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCountryDetails();\n  }, [id]);\n\n  if (loading) return <Box sx={singlePageStyles.loadingDiv}>Loading details...</Box>;\n  if (!country) return <div>No details found for this country.</div>;\n\n  return (\n    <div style={{ textAlign: \"center\", padding: \"20px\", marginTop: \"5.5rem\" }}>\n      <h1>Study in {country.title}</h1>\n      <img\n        src={country.coverImageSrc}\n        alt={country.title}\n        style={{\n          width: \"50%\",\n          height: \"auto\",\n          objectFit: \"cover\",\n          marginBottom: \"20px\",\n        }}\n      />\n      <Container>\n        {/* Render universities */}\n        {universities.length > 0 ? (\n          <div\n            className=\"top-courses\"\n            style={{ marginTop: \"20px\", textAlign: \"left\" }}\n          >\n            <h4>\n              <strong>Top Universities</strong>\n            </h4>\n            <ul>\n              {universities.slice(0, 10).map((university: any) => (\n                <li\n                  key={university._id}\n                  onClick={() => navigate(`/singleuniversity/${university._id}`)}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  <strong>{university.name}</strong>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div>No universities available for this country.</div>\n        )}\n\n        {/* Render courses */}\n        {courses.length > 0 ? (\n          <div\n            className=\"top-courses\"\n            style={{ marginTop: \"20px\", textAlign: \"left\" }}\n          >\n            <h4>\n              <strong>Top Courses</strong>\n            </h4>\n            <ul>\n              {courses.slice(0, 10).map((course: any) => (\n                <li\n                  key={course._id}\n                  onClick={() => navigate(`/singlecourse/${course._id}`)}\n                  style={{ cursor: \"pointer\", color: \"blue\" }}\n                >\n                  <strong>{course.name}</strong>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div>No courses available for this country.</div>\n        )}\n      </Container>\n      <div\n        dangerouslySetInnerHTML={{ __html: country.content }}\n        style={{\n          textAlign: \"left\",\n          margin: \"20px auto\",\n          width: \"80%\",\n          lineHeight: \"1.6\",\n        }}\n        className=\"rich-content\"\n      />\n    </div>\n  );\n};\n\nexport default CountryDetails;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"names":["CountryDetails","id","useParams","navigate","useNavigate","country","setCountry","useState","courses","setCourses","universities","setUniversities","loading","setLoading","useEffect","async","_countryResponse$data","_universityResponse$d","_universityResponse$d2","_coursesResponse$data","_coursesResponse$data2","countryResponse","axios","get","concat","countryData","data","Error","normalizedTitle","title","updatedCountryData","universityResponse","post","page","filterData","type","currency","universityList","list","console","log","coursesResponse","coursesList","err","fetchCountryDetails","_jsx","Box","sx","singlePageStyles","loadingDiv","children","_jsxs","style","textAlign","padding","marginTop","src","coverImageSrc","alt","width","height","objectFit","marginBottom","Container","length","className","slice","map","university","onClick","_id","cursor","name","course","color","dangerouslySetInnerHTML","__html","content","margin","lineHeight","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","_ref","theme","_extends","marginLeft","boxSizing","marginRight","display","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref3","Math","max","xs","React","ref","component","other","_objectWithoutPropertiesLoose","classes","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled"],"sourceRoot":""}