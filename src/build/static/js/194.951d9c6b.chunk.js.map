{"version":3,"file":"static/js/194.951d9c6b.chunk.js","mappings":"4NAKA,MA+EA,EA/EmBA,KACjB,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAMC,IAAWC,EAAAA,EAAAA,aACjBC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,IAmBnC,OAjBAK,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,6CAADC,OACed,IAE/CG,EAAQQ,EAASI,KAAKA,MACtBT,GAAW,EACb,CAAE,MAAOC,GACPS,QAAQT,MAAM,uBAAwBA,GACtCC,EAAS,iDACTF,GAAW,EACb,GAEFW,EAAW,GACV,CAACjB,IAEAK,GACKa,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGRZ,GACKW,EAAAA,EAAAA,KAAA,KAAAC,SAAIZ,KAIXa,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,GAAI,CAAEC,UAAW,SAAS,sBAAsB,CAACC,SAAS,WAAYL,SAAA,EAC/ED,EAAAA,EAAAA,KAAA,MACEO,MAAO,CACLC,WAAY,IACZC,SAAU,OACVC,WAAY,OACZC,OAAQ,OACRC,UAAU,SACVC,MAAM,oBACNZ,SAEDjB,EAAK8B,SAEXd,EAAAA,EAAAA,KAAA,OAAKe,UAAU,SAAQd,UACtBC,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEjB,SAAA,EAC3BD,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACG,MAAI,EACTC,GAAI,EAAEnB,UACLD,EAAAA,EAAAA,KAAA,OAAAC,UAEED,EAAAA,EAAAA,KAAA,OACEO,MAAO,CACLC,WAAY,IACZC,SAAU,OACVC,WAAY,OACZG,MAAO,0BAETQ,wBAAyB,CAAEC,OAAQtC,EAAKuC,gBAM7CvB,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACG,MAAI,EAAEC,GAAI,EAAEnB,SAEjBjB,EAAKwC,gBACHxB,EAAAA,EAAAA,KAAA,OACEyB,IAAKzC,EAAKwC,cACVE,IAAG,aAAA9B,OAAeZ,EAAK8B,OACvBP,MAAO,CAAEoB,MAAO,eAAgBC,OAAQ,OAAQC,aAAc,kBAKxD,C","sources":["pages/blogs/ViewBlog.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\"; // To get the blog ID from the URL\nimport { Container, Grid } from \"@mui/material\";\n\nconst SingleBlog = () => {\n  const { id } = useParams(); // Get the blog ID from the URL\n  const [blog, setBlog] = useState<any>();\n  const [loading, setLoading] = useState(true); // Loading state\n  const [error, setError] = useState(\"\"); // Error state\n\n  useEffect(() => {\n    const fetchBlog = async () => {\n      try {\n        const response = await axios.get(\n          `https://campusroot.com/api/v1/public/blog/${id}`\n        );\n        setBlog(response.data.data); // Set the blog data\n        setLoading(false); // Set loading to false after fetching data\n      } catch (error) {\n        console.error(\"Error fetching blog:\", error);\n        setError(\"Failed to fetch blog. Please try again later.\");\n        setLoading(false); // Set loading to false in case of error\n      }\n    };\n    fetchBlog();\n  }, [id]);\n\n  if (loading) {\n    return <p>Loading...</p>; // Show loading state\n  }\n\n  if (error) {\n    return <p>{error}</p>; // Show error message\n  }\n\n  return (\n    <Container sx={{ marginTop: \"5.5rem\",\"&.MuiContainer-root\":{maxWidth:\"1440px\"} }}>\n      <h1\n        style={{\n          fontWeight: 600,\n          fontSize: \"48px\",\n          lineHeight: \"55px\",\n          margin: \"40px\",\n          textAlign:\"center\",\n          color:\"rgba(0, 0, 0, 1)\"\n        }}\n      >\n        {blog.title}\n      </h1>\n   <div className=\"d-flex\">\n    <Grid container spacing={2}>\n    <Grid item \n     lg={8}>\n      <div>\n        {/* Render HTML content from the blog */}\n        <div\n          style={{\n            fontWeight: 400,\n            fontSize: \"20px\",\n            lineHeight: \"30px\",\n            color: \"rgba(106, 106, 106, 1)\",\n          }}\n          dangerouslySetInnerHTML={{ __html: blog.content }} // Safely render HTML\n        />\n      </div>\n       \n\n     </Grid>\n     <Grid item  lg={4}>\n     {/* Check if cover image exists */}\n     {blog.coverImageSrc && (\n        <img\n          src={blog.coverImageSrc}\n          alt={`Cover for ${blog.title}`}\n          style={{ width: \"fit-content%\", height: \"auto\", borderRadius: \"8px\"  }}\n        />\n      )}</Grid>\n      </Grid>\n   </div>\n    </Container>\n  );\n};\n\nexport default SingleBlog;"],"names":["SingleBlog","id","useParams","blog","setBlog","useState","loading","setLoading","error","setError","useEffect","async","response","axios","get","concat","data","console","fetchBlog","_jsx","children","_jsxs","Container","sx","marginTop","maxWidth","style","fontWeight","fontSize","lineHeight","margin","textAlign","color","title","className","Grid","container","spacing","item","lg","dangerouslySetInnerHTML","__html","content","coverImageSrc","src","alt","width","height","borderRadius"],"sourceRoot":""}