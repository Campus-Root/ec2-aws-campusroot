{"version":3,"file":"static/js/416.048e85d6.chunk.js","mappings":"+dAQA,MAuBA,EAvBwDA,IAAkB,IAAjB,QAAEC,GAASD,EAClE,MAAME,EAAmBC,EAAAA,EAAUC,SAASH,GAE5C,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,WAAY,CACVC,EAAGC,IAAA,IAAC,KAAEC,EAAI,SAAEC,KAAaC,GAAMH,EAAA,OAC7BJ,EAAAA,EAAAA,KAAA,KACEK,KAAMA,EACNG,OAAO,SACPC,IAAI,yBACAF,EAAID,SAEPA,GACC,GAENA,SAEDT,GACa,E,0BCiBpB,MAAMa,EAAcC,EAAAA,YAAiB,SACnCC,EAGAC,GAEA,OAAOb,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAU,KAAKF,IAAKA,KAASD,GAC7C,IA4yBA,EAnyBsBjB,IAAyC,IAADqB,EAAA,IAAvC,KAAEC,EAAI,QAAEC,EAAO,GAAEC,EAAE,KAAEC,GAAazB,EAEvD,MAAM0B,GAAcC,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMC,aAC9CC,GAAcH,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMG,cAC9CC,GAAWL,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMK,UAC3CC,GAAOC,EAAAA,EAAAA,QAAkB,KACxBC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,GAAWZ,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMW,YAC1CC,EAAaC,IAAkBH,EAAAA,EAAAA,UAAiB,KAChDI,EAAWC,IAAgBL,EAAAA,EAAAA,UAAS,OACpCM,EAAUC,IAAeP,EAAAA,EAAAA,WAAS,IAClCQ,EAAcC,IAAmBT,EAAAA,EAAAA,UAAS,KAC1CU,EAAWC,IAAgBX,EAAAA,EAAAA,WAAS,IACpCY,EAAQC,IAAab,EAAAA,EAAAA,UAAS,IAE/Bc,GAAOzB,EAAAA,EAAAA,KAAgBC,IAC3B,IAAIyB,EAAezB,EAAM0B,MACzB,MAAgB,aAAT7B,EACH4B,EAAaE,KAAKvB,SAASwB,MAAMJ,GAASA,EAAKK,MAAQjC,IACvD6B,EAAaE,KAAKG,UAAUF,MAAMJ,GAASA,EAAKK,MAAQjC,GAAG,IAE3DmC,GAAWC,EAAAA,EAAAA,MAEXC,EAA6B,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaN,MAC/CO,IAAI,IAAAC,EAAA,OAAKD,EAAKN,OAAmB,OAAX/B,QAAW,IAAXA,GAAiB,QAANsC,EAAXtC,EAAa6B,YAAI,IAAAS,OAAN,EAAXA,EAAmBP,IAAG,IAIzCQ,GAAsB,OAARjC,QAAQ,IAARA,GAAc,QAANX,EAARW,EAAUuB,YAAI,IAAAlC,OAAN,EAARA,EAAgBmC,MAAMvB,IAAY,IAAAiC,EAAA,OAC7C,OAAPjC,QAAO,IAAPA,GAAa,QAANiC,EAAPjC,EAASkC,YAAI,IAAAD,OAAN,EAAPA,EAAeT,QAA0B,OAAlBI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,IAAG,IAG1CW,GAAeC,UACnB,MAAMC,QAAiBC,EAAAA,EAAAA,IAAmB/C,GAE1C,GAAI8C,EAASE,UACXb,GAASc,EAAAA,EAAAA,IAAWH,EAASf,OAE3B7B,EAAY6B,MACZ7B,EAAY6B,KAAKE,KACjBiB,OAAOC,OAAOjD,EAAY6B,MAAMqB,OAC7BC,QAAyBC,WAATD,KAEnB,CACA,IAAIE,EAA4B,CAC9B7B,OAAQ,OACR8B,OAAQ,IAAKtD,EAAY6B,KAAM0B,SAAU,WACzCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaqB,QAC3BC,IAAwB,IAAAC,EAAA,OACvBD,EAAY3B,OAAwB,QAArB4B,EAAK3D,EAAY6B,YAAI,IAAA8B,OAAA,EAAhBA,EAAkB5B,IAAG,IAE7CF,KAAMe,EAASf,MAEjB+B,EAAAA,EAAOC,KAAK,UAAWR,EACzB,CACF,EAGIS,GAAmBC,IACvB,GACO,SADCA,EAAcvC,OAGlBS,GAAS+B,EAAAA,EAAAA,IAAW,IAAKD,EAAclC,KAAKoC,QAASlE,KAAM,YAC3D2C,IAUJ,EAuIIwB,GAAevB,UACnB,IAAIU,EACJ,OAAQc,EAAMC,MACZ,IAAK,OACH,MAAMC,EAAW,IAAIC,SACrB,IAAKH,EAAMtC,KAAK0C,QAAiC,IAAvBzD,EAAY0D,OAGpC,YADAC,QAAQC,MAAM,gDAEdL,EAASM,OAAO,UAAWR,EAAMtC,MACnCwC,EAASM,OAAO,SAAU7E,GAC1B,IAAI8E,EAAY,EAEhB,GAAI9D,EAAY0D,OAAS,EAAG,CAC1B,MAAMK,EAAmB,CACvB,aACA,YACA,YACA,kBACA,qBACA,2EAGIC,EAAahE,EAAY2C,QAAQsB,IACrC,MAAMC,EAAcH,EAAiBI,SAAa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,MAC9CmF,GAAkB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,OAAQ,SAMlC,OAAOH,GAAeE,CAAW,IAGnC,GAA0B,IAAtBJ,EAAWN,SAAiBL,EAAMtC,KAEpC,OAOF,GAJAiD,EAAWM,SAASL,IAClBV,EAASM,OAAO,gBAAiBI,GACjCH,GAAaG,EAAKI,IAAI,IAEE,IAAtBL,EAAWN,SAAiBL,EAAMtC,KAAK0C,OAEzC,YADAE,QAAQC,MAAM,kDAGlB,CAEA,IACE,GAAIP,EAAMtC,KAAK0C,QAAUK,EAAY,EAAG,CACtC,MAAMhC,QAAiByC,EAAAA,EAAAA,IAAqBhB,GAC5C,GAAIzB,EAASf,KAAKiB,QAAS,CACzBb,GAASc,EAAAA,EAAAA,IAAWH,EAASf,KAAKA,KAAKH,OACvCO,GAAS+B,EAAAA,EAAAA,IAAWpB,EAASf,KAAKA,KAAKoC,UACvC,MAAMZ,EAAa,CACjB7B,OAAQ,OACR8B,OAAQ,IAAKtD,EAAY6B,KAAM0B,SAAU,WACzCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaqB,QAC3BC,IAAW,IAAA4B,EAAA,OAAK5B,EAAY3B,OAAwB,QAArBuD,EAAKtF,EAAY6B,YAAI,IAAAyD,OAAA,EAAhBA,EAAkBvD,IAAG,IAE5DF,KAAMe,EAASf,KAAKA,MAEtB+B,EAAAA,EAAOC,KAAK,UAAWR,GACvBtC,EAAe,GACjB,MACE0D,QAAQC,MAAM,0CAElB,CACF,CAAE,MAAOA,GACPD,QAAQC,MAAM,+CAAgDA,EAChE,CACA,MACF,IAAK,cACHrB,EAAa,CACX7B,OAAQ,SACR8B,OAAQ,IAAKtD,EAAY6B,KAAM0B,SAAU,WACzCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaqB,QAAQC,IAAW,IAAA6B,EAAA,OAAK7B,EAAY3B,MAAuB,QAApBwD,EAAIvF,EAAY6B,YAAI,IAAA0D,OAAA,EAAhBA,EAAkBxD,IAAI,IAC/FF,KAAM,SAER+B,EAAAA,EAAOC,KAAK,UAAWR,GACvB,MACF,IAAK,aACHA,EAAa,CACX7B,OAAQ,SACR8B,OAAQ,IAAKtD,EAAY6B,KAAM0B,SAAU,WACzCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaqB,QAAQC,IAAW,IAAA8B,EAAA,OAAK9B,EAAY3B,MAAuB,QAApByD,EAAIxF,EAAY6B,YAAI,IAAA2D,OAAA,EAAhBA,EAAkBzD,IAAI,IAC/FF,KAAM,QAER+B,EAAAA,EAAOC,KAAK,UAAWR,GACvB,MACF,IAAK,QACH,IACE,MAAMoC,QAAkBC,EAAAA,EAAAA,IAAiBlE,EAAQ2C,EAAMtC,KAAK/B,IAE1DmC,EADY,UAAXT,GACQmE,EAAAA,EAAAA,IAAeF,EAAU5D,KAAKA,KAAK+D,UAEnCC,EAAAA,EAAAA,IAAkBJ,EAAU5D,KAAKA,KAAK+D,QAAQ7D,KAG3D,CAAE,MAAO+D,GACPrB,QAAQsB,IAAID,EACd,EAIJ,GAGFE,EAAAA,EAAAA,YAAU,KAERpC,EAAAA,EAAOqC,eAAe,UAAWnC,IACjCF,EAAAA,EAAOsC,GAAG,UAAWpC,IApPFnB,WACnB8B,QAAQsB,IAAI,qBACZ,IACEpF,GAAW,GACX,MAAMiC,QAAiBuD,EAAAA,EAAAA,IAAiBrG,GACxC,GAAI8C,EAAU,CACZ,IAAIwD,EAAOxD,EAASf,KAAKwE,KAAKC,IAAY,IACrCA,EACHvG,KAAM,aAERqG,EAAKG,UACLtE,GACEuE,EAAAA,EAAAA,IAAa,CACXC,cAAe,YACfC,eAAgB,WAChBC,aAAa,EACbC,MAAO,GACP/E,KAAMuE,KAaM,IATV,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,eACHpD,QACE6C,IAAQ,IAAAQ,EAAA,OAAKR,EAAIrC,QAAQX,OAAOvB,OAAwB,QAArB+E,EAAK9G,EAAY6B,YAAI,IAAAiF,OAAA,EAAhBA,EAAkB/E,IAAG,IAE/D0B,QACEsD,IACEA,EAAgBC,KAAKlF,MACnBhC,IAAU,IAAAmH,EAAA,OAAKnH,KAAuB,QAArBmH,EAAKjH,EAAY6B,YAAI,IAAAoF,OAAA,EAAhBA,EAAkBlF,IAAG,MAEhDyC,eAEE9B,IAEV,CACA/B,GAAW,EACb,CAAE,MAAO+D,GAAS,CAClB/D,GAAW,EAAM,EAgNjBuG,GACO,KAAQtD,EAAAA,EAAOqC,eAAe,UAAWnC,GAAgB,IAE/D,IAEHtD,EAAK2G,QACHzF,GAAQ1B,EAAY6B,KAnNDuF,EAACvG,EAAqBa,EAAYW,KACrD,IAAIgF,EAAoB3F,EAAKU,aAAaqB,QACvC/B,GAASA,EAAKK,KAAOM,EAAKN,MAEzBvB,EAAkB,GAClB8G,EAAkC,GAEtCzG,EAAS0F,UACT1F,EAASuE,SAASkB,IAAS,IAADiB,EACxB,IAAc,QAAVA,EAAAjB,EAAIhD,cAAM,IAAAiE,OAAA,EAAVA,EAAYxF,MAAOM,EAAKN,IAC1B,GAAgC,GAA5BsF,EAAkB7C,OAAa,CAsBjC,GArBkC,GAA9B9C,EAAKmF,eAAerC,OACU,GAA5B6C,EAAkB7C,SACpB8C,EAAmB,IAAID,IAUvBC,EANC5F,EAAKmF,eAAe/E,MAClB0F,GAAcA,EAAUvD,QAAQlC,KAAOuE,EAAIvE,MAK3BsF,EAAkB5D,QAAQgE,IAAgB,IAAAC,EAAA,OAEH,QAFGA,EAC3DhG,EAAKmF,eACF/E,MAAM0F,GAAcA,EAAUvD,QAAQlC,KAAOuE,EAAIvE,aAAI,IAAA2F,OAAA,EADxDA,EAEIV,KAAKlF,MACJ6F,GAAoBA,GAAmBF,EAAiB1F,KAC1D,IAPc,IAAIsF,GAWI,GAA3BC,EAAiB9C,OAAa,CAChC,IAAIoD,EAAcN,EAAiBO,QACjC,CAAC5D,EAAS0D,IACR1D,EAAU0D,EAAgBG,UAAY,OACxC,YAEFtH,EAAKuH,KAAK,CACRhG,IAAKuE,EAAIvE,IAAM,QACfhC,KAAM,OACNxB,QAASqJ,EAAYI,UAAU,EAAGJ,EAAYpD,OAAS,GACvD9C,KAAMA,EAAKK,KAEf,CACAvB,EAAKuH,KAAKzB,GACVe,EAAoBA,EAAkB5D,QACnCgE,IACEH,EAAiBxF,MACf6F,GAAoBA,EAAgB5F,KAAO0F,EAAiB1F,OAGrE,MACEvB,EAAKuH,KAAKzB,QAGZ9F,EAAKuH,KAAKzB,EACZ,IAEF9F,EAAK+F,UACL,IAAI0B,EAAqBvG,EAAKU,aAAaqB,QACxCC,GAAwC,UAAxBA,EAAYwE,WAG/B,GAAiC,GAA7BD,EAAmBzD,OAAa,CAClC,IAAI2D,EAAgBF,EAAmBJ,QACrC,CAACvB,EAAK5C,IAAgBA,EAAYoE,UAAY,OAC9C,IAEFtH,EAAKuH,KAAK,CACRhG,IAAKL,EAAKK,IAAM,UAChBhC,KAAM,SACNxB,QACE4J,EAAcH,UAAU,EAAGG,EAAc3D,OAAS,IACpB,GAA7ByD,EAAmBzD,OAAc,aAAe,eACnD9C,KAAMA,EAAKK,IACXuB,OAAQ,CACN8E,cAAe,GACfN,UAAW,GACXO,SAAU,GACVC,MAAO,GACPvG,IAAKL,EAAKK,IAAM,UAChBwB,SAAU,KAIhB,CACA,OAAO/C,CAAI,EA6HP4G,CAAa,IAAIvG,EAASgB,MAAOH,EAAM1B,EAAY6B,MACnD,GAEN,MAAM0G,GAAUhJ,IAEZZ,EAAAA,EAAAA,KAAA,OACE6J,MAAO,CAAEC,WAAY,UAAWC,QAAS,SAAUC,aAAc,SAAUC,SAAU,YAAa3J,UAElG4J,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACpJ,UAAU,MAAMqJ,QAAS,EAAGC,WAAW,SAASC,eAAe,gBAAehK,SAAA,EACnF4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,IAAK,OAAQL,WAAY,UAAW/J,SAAA,EAC9DN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAkC,uBAAX,OAAlBpH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAA+BC,EAAAA,EAAOC,GAAuB,OAAlBvH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBiG,cACxFuB,IAAI,UACJR,GAAI,CAAES,MAAO,OAAQC,OAAQ,OAAQlB,aAAc,UAErDhK,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,WAAW,MAAMZ,GAAI,CAC/BP,SAAU,WAAYoB,MAAO,OAAQC,IAAK,QAASxB,WAAY,OAAQyB,EAAG,EAAGvB,aAAc,OAC3FwB,MAAoC,gBAAX,OAAlBhI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAAwB,UAAyC,wBAAX,OAAlBrH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAAgC,UAAY,UAAWY,SAAU,QACpJnL,SACmB,OAAlBkD,QAAkB,IAAlBA,GAAAA,EAAoBqH,MAAOa,EAAAA,EAAAA,IAAgC,OAAlBlI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAA0B,OAAlBrH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,QAE5F7K,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAAAjK,SACiB,OAAlBkD,QAAkB,IAAlBA,GAAAA,EAAoB2F,WAA+B,OAAlB3F,QAAkB,IAAlBA,GAAAA,EAAoBkG,UACpDQ,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CACTC,WAAW,MACXZ,GAAI,CACFmB,OAAQ,UACR,UAAW,CACTH,MAAO,UACPI,eAAgB,cAGpBC,QAASA,KACP/F,QAAQsB,IAAI,yBACZtB,QAAQsB,IAAI,sBAAuB5D,GACnCsC,QAAQsB,IAAI,eAAgBxD,IAC5BkC,QAAQsB,IAAI,qBAA8B,OAARzF,QAAQ,IAARA,OAAQ,EAARA,EAAUuB,MAG5C,IAAI4I,EAAmBlI,GAC4B,IAADmI,GAA7CD,GAAsC,OAAlBtI,QAAkB,IAAlBA,GAAAA,EAAoBJ,MAC3C0I,EAA2B,OAARnK,QAAQ,IAARA,GAAc,QAANoK,EAARpK,EAAUuB,YAAI,IAAA6I,OAAN,EAARA,EAAgB5I,MAAMvB,IAAY,IAAAoK,EAAA,OAC5C,OAAPpK,QAAO,IAAPA,GAAa,QAANoK,EAAPpK,EAASkC,YAAI,IAAAkI,OAAN,EAAPA,EAAe5I,OAAQI,EAAmBJ,MACnC,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASwB,OAAQI,EAAmBJ,GAAG,IAEzC0C,QAAQsB,IAAI,kCAAmC0E,IAIjD,GAAsB,OAAlBtI,QAAkB,IAAlBA,GAAAA,EAAoBqH,MACS,uBAAX,OAAlBrH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAA8B,CACpD/E,QAAQsB,IAAI,4BAGZ,MAAM6E,EAAYH,GAAoB,CACpC1I,IAAKI,EAAmBJ,IACxBU,KAAMN,EACN0I,kBAAmB,IAGrB5I,GACE6I,EAAAA,EAAAA,IAAS,CACPC,MAAM,EACNlJ,KAAM,CACJmJ,UAAW,CACT5G,KAAM,UACNvC,KAAM+I,EACNK,WAAY,CACVrB,MAAO,SACPC,OAAQ,QAGZ9J,KAAM,YAId,MACE0E,QAAQsB,IAAI,wCACZtB,QAAQsB,IAAI,QAA2B,OAAlB5D,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MACzC/E,QAAQsB,IAAI,sBAAoD,uBAAX,OAAlB5D,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MACzD,EACAvK,SAAA,EAEDiM,EAAAA,EAAAA,IAA8B,OAAlB/I,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB2F,WAAW,QACrCoD,EAAAA,EAAAA,IAA8B,OAAlB/I,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBkG,cACzB1J,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAAA7K,SAAC,cAIA,YAAf,OAAlBkD,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBoB,YACrB5E,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEgC,MAAO,SAAUlM,UAC1BN,EAAAA,EAAAA,KAACyM,EAAAA,EAAM,CAACjC,GAAI,CAAEkC,cAAe,OAAQlB,MAAO,UAAWgB,MAAO,SAC9DX,QAASA,KACP,MAAMc,EAAYlL,EAAYyB,KAAK0J,MAChCpI,IAAkB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,QAA0B,OAAlBI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,OAEnDN,EAAU6J,EAAY,UAAY,SAClC/L,EAAMgC,cAAa,EAAK,EACxBtC,SACCmB,EAAYyB,KAAK0J,MACfpI,IACK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,QAA0B,OAAlBI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,OAClC,UAAY,iBAOtByJ,GAAUA,KACd,MAAMC,GAAYhL,EAAAA,EAAAA,QAAuB,MACnCiL,GAAmBjL,EAAAA,EAAAA,QAAuB,OACzCkL,EAAgBC,IAAqBhL,EAAAA,EAAAA,WAAS,GAqBrD,OAXAoF,EAAAA,EAAAA,YAAU,KACa,IAAD6F,EAAhBF,IACe,QAAjBE,EAAAJ,EAAUtE,eAAO,IAAA0E,GAAjBA,EAAmBC,eAAe,CAAEC,SAAU,SAChD,GACC,CAACvL,EAAK2G,WAETnB,EAAAA,EAAAA,YAAU,KAAO,IAADgG,EACG,QAAjBA,EAAAP,EAAUtE,eAAO,IAAA6E,GAAjBA,EAAmBF,eAAe,CAAEC,SAAU,QAAS,GACtD,KAIDlD,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACF1J,IAAKkM,EACLO,SAtBiBC,KACnB,GAAIR,EAAiBvE,QAAS,CAC5B,MAAM,UAAEgF,EAAS,aAAEC,EAAY,aAAEC,GAAiBX,EAAiBvE,QAEnEyE,EADmBQ,EAAeD,EAAYE,GAAgB,EAEhE,GAkBElD,GAAI,CACFmD,UAAW,SACXC,GAAI,EACJ1C,OAAQ,QACR,uBAAwB,CACtBD,MAAO,QAET,6BAA8B,CAC5B4C,gBAAiB,cACjB7D,aAAc,QAEhB1J,SAAA,CAEDyB,GACC/B,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTH,eAAgB,SAChBD,WAAY,SACZa,OAAQ,SACR5K,UAEFN,EAAAA,EAAAA,KAAC8N,EAAAA,EAAgB,OAGnB9N,EAAAA,EAAAA,KAAA,OAAK+N,UAAU,iBAAgBzN,SAC5BuB,EAAK2G,QAAQ3C,OAAS,GACrBqE,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA1N,SAAA,CACGuB,EAAK2G,QAAQd,KAAKpC,IAAY,IAAA2I,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC7BzO,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,SACoB,SAAjBgF,EAAQlE,MAAoC,WAAjBkE,EAAQlE,MAClC8I,EAAAA,EAAAA,MAAA,OAEE6D,UAAS,WAAAW,QAAoB,OAAPpJ,QAAO,IAAPA,GAAe,QAAR2I,EAAP3I,EAASX,cAAM,IAAAsJ,OAAR,EAAPA,EAAiB7K,QAAwB,QAArB8K,EAAK7M,EAAY6B,YAAI,IAAAgL,OAAA,EAAhBA,EAAkB9K,KAC7D,OACA,YACC9C,SAAA,EAELN,EAAAA,EAAAA,KAAC2O,EAAe,CAAC/O,QAAS0F,EAAQ1F,UAC1B,OAAP0F,QAAO,IAAPA,GAAiB,QAAV6I,EAAP7I,EAASsJ,gBAAQ,IAAAT,GAAM,QAANC,EAAjBD,EAAmBjL,YAAI,IAAAkL,GAAvBA,EAAyBS,aAExB7O,EAAAA,EAAAA,KAAA,UACE4K,IAAY,OAAPtF,QAAO,IAAPA,GAAiB,QAAV+I,EAAP/I,EAASsJ,gBAAQ,IAAAP,GAAM,QAANC,EAAjBD,EAAmBnL,YAAI,IAAAoL,OAAhB,EAAPA,EAAyBO,YAC9BC,MAAM,UACNjF,MAAO,CACLkF,OAAQ,OACR9D,MAAO,QACPC,OAAQ,QACR8D,UAAW,aAGb,IACJhP,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAmB,QAAhB2D,EAAEjJ,EAAQX,cAAM,IAAA4J,OAAA,EAAdA,EAAgB9E,cACrBuB,IAAI,GACJR,IACS,OAAPlF,QAAO,IAAPA,GAAe,QAARkJ,EAAPlJ,EAASX,cAAM,IAAA6J,OAAR,EAAPA,EAAiBpL,QAAwB,QAArBqL,EAAKpN,EAAY6B,YAAI,IAAAuL,OAAA,EAAhBA,EAAkBrL,KACvC,CACA6H,MAAO,SACPC,OAAQ,SACRlB,aAAc,MACdC,SAAU,WACVqB,IAAK,QACLD,MAAO,GAEP,CACAJ,MAAO,SACPC,OAAQ,SACRlB,aAAc,MACdC,SAAU,WACVqB,IAAK,QACL2D,KAAM,OAvCT3J,EAAQlC,MA6CfpD,EAAAA,EAAAA,KAAA,OAAK+N,UAAU,UAASzN,SAAEgF,EAAQ1F,WAEnC,KAELI,EAAAA,EAAAA,KAAA,OAAKa,IAAKiM,IAAiB,gBAC3BtJ,GACExD,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAAC+D,UAAU,SAAQ5O,SAAC,gBAC/BN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAAC+D,UAAU,SAAQ5O,SAAC,cAKvC,KAAGmB,EAAYyB,KAAK0J,MACnBpI,IACK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,QAA0B,OAAlBI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,SAElCpD,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAAC+D,UAAU,SAASzD,SAAS,SAAQnL,SAAC,+BAEjD,EAGJ6O,GAAUvO,IACd,MAAOhB,EAASwP,IAAcnN,EAAAA,EAAAA,UAAS,KAChCF,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCoN,GAAevN,EAAAA,EAAAA,QAAyB,MA8BxCwN,EAAatL,UACjB,IACyB,KAAnBpE,EAAQgG,QAAkBzD,GAAeA,EAAY0D,OAAS,GAChE7D,GAAW,GACXd,GAAQ,SAEFN,EAAM2E,aAAa,CAAEE,KAAM,OAAQvC,KAAMtD,KAE/CkG,QAAQsB,IAAI,+BAEhB,CAAE,MAAOrB,GACPD,QAAQC,MAAM,uBAAwBA,EACxC,CAAC,QACC/D,GAAW,EACb,GAUF,OACEhC,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,SACGkD,IACC0G,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEI,SAAU,YAAa3J,SAAA,EACvB,OAAX6B,QAAW,IAAXA,OAAW,EAAXA,EAAa0D,QAAS,IACrB7F,EAAAA,EAAAA,KAAA,OAAK6J,MAAO,CACVY,QAAS,OAAQ8E,cAAe,SAAUlF,WAAY,SAAUJ,SAAU,WAC1EqB,IAAK,QACLD,MAAO,OACP/K,UACA4J,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEoB,MAAO,cAAe3K,SAAA,EAClCN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACM,SAAS,SAAQnL,SAAC,qBAC9BN,EAAAA,EAAAA,KAAA,MAAI6J,MAAO,CAAE2F,UAAW,OAAQzF,QAAS,EAAG0F,OAAQ,GAAInP,SACrD6B,EAAYuF,KAAI,CAACtB,EAAMsJ,KACtBxF,EAAAA,EAAAA,MAAA,MAAIL,MAAO,CAAE4B,SAAU,OAAQhB,QAAS,QAASnK,SAAA,CAC9C8F,EAAKX,MACNzF,EAAAA,EAAAA,KAAC2P,EAAAA,EAAK,CAAC9D,QAASA,IA9ChB6D,KAClB,MAAME,EAAe,IAAIzN,GACzByN,EAAaC,OAAOH,EAAO,GAC3BtN,EAAewN,EAAa,EA2CYE,CAAWJ,GAAQlF,GAAI,CAAEiB,SAAU,OAAQE,OAAQ,eAFpB+D,YAU/DnN,GAAWvC,EAAAA,EAAAA,KAAA,OAAK+N,UAAU,WAAUzN,UAClC4J,EAAAA,EAAAA,MAAA,MAAA5J,SAAA,CAAI,cAAYmC,OACT,GAGVhB,EAAYyB,KAAK0J,MACfpI,IACK,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,QAA0B,OAAlBI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,OACnC,IACD8G,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC1D,WAAS,EAAC7B,GAAI,CAAEV,WAAY,UAAWC,QAAS,SAAUC,aAAc,UAAW1J,SAAA,EAEvFN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CACHvL,MAAI,EACJwL,GAAI,EACJxF,GAAI,CACFC,QAAS,OACTH,eAAgB,SAChBD,WAAY,UACZ/J,UAEF4J,EAAAA,EAAAA,MAAA,OAAA5J,SAAA,EACEN,EAAAA,EAAAA,KAAA,SACEoB,KAAK,OACL6O,UAAQ,EACRpG,MAAO,CAAEY,QAAS,QAClByF,SApFQ1K,IACxB,MAAM2K,EAAgBC,MAAMC,KAAK7K,EAAMhF,OAAO8P,OAC9ClO,EAAe+N,EAAwB,EAmFvBtP,IAAKwO,KAEPrP,EAAAA,EAAAA,KAACuQ,EAAAA,EAAe,CAAC/F,GAAI,CAAEgB,MAAO,GAAIG,OAAQ,WAAaE,QAASA,KAAA,IAAA2E,EAAA,OAAkB,OAAZnB,QAAY,IAAZA,GAAqB,QAATmB,EAAZnB,EAAc7G,eAAO,IAAAgI,OAAT,EAAZA,EAAuBC,OAAO,UAKxGzQ,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,IAAI1P,UACjBN,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAS,CACRC,QAAQ,WACRnK,KAAK,QACLoK,QAASA,IAAMhQ,EAAM2E,aAAa,CAAEE,KAAM,gBAC1CoL,OAAQA,IAAMjQ,EAAM2E,aAAa,CAAEE,KAAM,eACzCqL,WAAS,EAETC,KAAM,EACNC,WAAS,EACTC,MAAOrR,EACPsR,YAAY,uBACZ1G,GAAI,CACF,qCAAsC,CACpCuE,OAAQ,EACR,UAAW,CACTA,OAAQ,IAGZ,kDAAmD,CACjDA,OAAQ,oBAGZmB,SAAWiB,GAAM/B,EAAW+B,EAAE3Q,OAAOyQ,OACrCG,UAxFO5L,IACH,UAAdA,EAAM6L,KAAoB7L,EAAM8L,UAA+B,KAAnB1R,EAAQgG,SACtDJ,EAAM+L,iBACNjC,IACF,OAuFUtP,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CACHvL,MAAI,EACJwL,GAAI,IACJxF,GAAI,CACFC,QAAS,OACTH,eAAgB,SAChBD,WAAY,SACZP,WAAY,OAAQE,aAAc,OAClC1J,SAEDyB,GACC/B,EAAAA,EAAAA,KAAA,OACE4K,IAAKE,EAAAA,EAAO0G,eACZxG,IAAI,SACJnB,MAAO,CAAEoB,MAAO,WAGlBjL,EAAAA,EAAAA,KAAA,OACE4K,IAAKE,EAAAA,EAAO2G,SACZzG,IAAI,WACJnB,MAAO,CAAEoB,MAAO,OAAQC,OAAQ,QAChCW,QAASyD,aAOtB,EAKP,OACEpF,EAAAA,EAAAA,MAAA,OAAA5J,SAAA,EACE4J,EAAAA,EAAAA,MAACwH,EAAAA,EAAM,CACLzQ,KAAMA,EACNuJ,GAAI,CACFa,MAAO,IACP4D,KAAM,CAAE0C,GAAI,MAAO3B,GAAI,IAAK4B,GAAI,OAChCtG,IAAK,CAAEqG,GAAI,OAAQ3B,GAAI,IAAK4B,GAAI,SAElCC,WAAY,CACVhI,MAAO,CACLG,aAAc,OACdD,QAAS,OACTkB,MAAO,QACPC,OAAQ,UAIZ4G,oBAAqBpR,EACrBqR,aAAW,EACXC,QAASA,IAAM9Q,GAAQ,GACvB,mBAAiB,iCAAgCZ,SAAA,EAEjDN,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTJ,WAAY,SACZC,eAAgB,UAChBhK,UAEFN,EAAAA,EAAAA,KAACiS,EAAAA,EAAqB,CACpBzH,GAAI,CACFP,SAAU,WACVqB,IAAK,EACLE,MAAO,UACPC,SAAU,OACVE,OAAQ,UACRlB,QAAS,OACTH,eAAgB,SAChBD,WAAY,UAEdwB,QAASA,IAAM3K,GAAQ,QAG3BgJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CAAEoD,GAAI,GAAItN,SAAA,EACjBN,EAAAA,EAAAA,KAAC4J,GAAM,CAACrE,aAAcA,GAAc3C,aAAcA,KAClD5C,EAAAA,EAAAA,KAAC6M,GAAO,KACR7M,EAAAA,EAAAA,KAACmP,GAAM,CAAC5J,aAAcA,YAG1BvF,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CACZjR,KAAM0B,EACNwP,YAAaA,IAAMvP,GAAa,GAChCwP,eAAgB,CACdC,SAAUA,IAAM9M,GAAa,CAC3BE,KAAM,QACNvC,KAAM,CAAE/B,GAAsB,OAAlBqC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,OAElC0L,MAAM,4BAADJ,OAA8B7L,EAAM,eACzCjD,QAAS,QAGT,E,0BCl0BV,MAoOA,EApO8BgB,IAA2B,IAAD0R,EACtD,MAAOC,EAAOC,IAAYvQ,EAAAA,EAAAA,WAAS,GAC7BZ,GAAcC,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMC,aAC9CiR,EAAqB,OAAXpR,QAAW,IAAXA,OAAW,EAAXA,EAAa6B,KAgGvBwP,EAAYD,EAhDDE,EAACC,EAAeH,KAAoC,IAADI,EAAAC,EAAAC,EAClE,IAAIL,EAAuB,CACzBM,GAAI,GACJvN,KAAM,GACNwN,eAAgB,EAChBC,mBAAoB,GACpBC,SAAU,MACVC,iBAAa3O,EACboG,KAAM,IAGJwI,EAAqB,OAAPT,QAAO,IAAPA,GAAqB,QAAdC,EAAPD,EAASnP,oBAAY,IAAAoP,OAAd,EAAPA,EAAuB1P,MACtC4B,GAAgBA,EAAY3B,MAAQqP,EAAQrP,MAG3CkQ,EAAoB,OAAPV,QAAO,IAAPA,GAAqB,QAAdE,EAAPF,EAASnP,oBAAY,IAAAqP,OAAd,EAAPA,EAAuBhO,QACrCC,GAAiBA,EAAY3B,MAAQqP,EAAQrP,MAEP,IAADmQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAA7B,OAAPhB,QAAO,IAAPA,GAAqB,QAAdG,EAAPH,EAASnP,oBAAY,IAAAsP,OAAd,EAAPA,EAAuBlN,SAAU,GACnC6M,EAAUjN,MAAiB,OAAV6N,QAAU,IAAVA,OAAU,EAAVA,EAAYzN,QAAS,GACzB,OAAVyN,QAAU,IAAVA,GAAe,QAALC,EAAVD,EAAa,UAAE,IAAAC,GAAfA,EAAiBpK,UACJ,OAAVmK,QAAU,IAAVA,GAAe,QAALE,EAAVF,EAAa,UAAE,IAAAE,OAAL,EAAVA,EAAiBrK,UACjB,SACO,OAAVmK,QAAU,IAAVA,GAAe,QAALG,EAAVH,EAAa,UAAE,IAAAG,GAAfA,EAAiB/J,SACd,KAAgB,OAAV4J,QAAU,IAAVA,GAAe,QAALI,EAAVJ,EAAa,UAAE,IAAAI,OAAL,EAAVA,EAAiBhK,UACvB,IACJ,eACFgJ,EAAUM,IAAe,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYzN,QAAS,EAAc,OAAVyN,QAAU,IAAVA,GAAe,QAALK,EAAVL,EAAa,UAAE,IAAAK,OAAL,EAAVA,EAAiBlK,cAAc,GACvEiJ,EAAU7H,MAAiB,OAAVyI,QAAU,IAAVA,OAAU,EAAVA,EAAYzN,QAAS,EAAc,OAAVyN,QAAU,IAAVA,GAAe,QAALM,EAAVN,EAAa,UAAE,IAAAM,OAAL,EAAVA,EAAiB/I,KAAM,KAEjE6H,EAAUS,SAAW,QACrBT,EAAUjN,KAAO,cAenB,OAZAiN,EAAUO,eAAiBL,EAAQ1K,eAChCpD,QAAQ6C,IAAG,IAAAkM,EAAAC,EAAA,OAAgB,QAAXD,EAAAlM,EAAIrC,eAAO,IAAAuO,GAAQ,QAARC,EAAXD,EAAalP,cAAM,IAAAmP,OAAR,EAAXA,EAAqB1Q,QAAe,OAAPqP,QAAO,IAAPA,OAAO,EAAPA,EAASrP,IAAI,IAC1D0B,QACEiP,IACEA,EAAgB1L,KAAKuE,MAAMzL,GAAOA,IAAOsR,EAAQrP,QACpDyC,OAEA+M,EAAQQ,aAAeC,IACzBX,EAAUU,YAxFUY,EAACpB,EAAeS,KAA8B,IAADY,EAAAC,EAAAC,EACnE,IAAIzB,EAAyB,CAC3B/N,QACqB,QAAnBsP,EAAArB,EAAQQ,mBAAW,IAAAa,OAAA,EAAnBA,EAAqBtP,UAAW0O,EAAYjQ,IAAM,UAAY,SAChEkC,QAA4B,QAAnB4O,EAAAtB,EAAQQ,mBAAW,IAAAc,GAAnBA,EAAqBtU,QAA6B,QAAtBuU,EAAGvB,EAAQQ,mBAAW,IAAAe,OAAA,EAAnBA,EAAqBvU,QAAU,GACvEwU,OAAQ,QAEV,GAAyB,YAArB1B,EAAU/N,OACZ+N,EAAU0B,QAGD,IAFPxB,EAAQ1K,eAAemM,WACpB7P,IAAI,IAAA8P,EAAA,OAAK9P,EAAKc,QAAQlC,OAA2B,QAAxBkR,EAAK1B,EAAQQ,mBAAW,IAAAkB,OAAA,EAAnBA,EAAqBlR,IAAG,IAErD,OACA,aACD,CACL,IAAIsM,EAAQkD,EAAQ1K,eAAemM,WAChC7P,IAAI,IAAA+P,EAAA,OAAK/P,EAAKc,QAAQlC,OAA2B,QAAxBmR,EAAK3B,EAAQQ,mBAAW,IAAAmB,OAAA,EAAnBA,EAAqBnR,IAAG,IAEzDsP,EAAU0B,QACG,IAAX1E,EACI,QAGK,IAFLkD,EAAQ1K,eAAewH,GAAOrH,KAAKgM,WAClC7P,GAASA,IAAS6O,EAAYjQ,MAE7B,SACA,MACV,CACA,OAAOsP,CAAS,EA6DUsB,CAAgBpB,EAASS,GACjDX,EAAUQ,mBA3DOsB,EAAC5B,EAAeS,KACnC,IAAIoB,EAAS7B,EAAQnP,aAAaqB,QAC/BC,GAC0B,WAAzBA,EAAYwE,UAAyBxE,EAAY3B,MAAQiQ,EAAYjQ,MAErEsR,EAAS9B,EAAQnP,aAAaqB,QAC/BC,GAC0B,WAAzBA,EAAYwE,UAAyBxE,EAAY3B,MAAQiQ,EAAYjQ,MAMzE,MAAO,IAJMwP,EAAQnP,aAAaqB,QAC/BC,GAC0B,WAAzBA,EAAYwE,UAAyBxE,EAAY3B,MAAQiQ,EAAYjQ,SAEnDqR,KAAWC,EAAO,EA8CPF,CAAa5B,EAASS,IAGhDX,CAAS,EAEUC,CAAS/R,EAAMsC,KAAMuP,GAAW,KAEtDkC,EAAuBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjC,OACEjL,EAAAA,EAAAA,MAAA,OACEL,MAAO,CACLY,QAAS,OAETC,IAAK,MACLO,MAAO,QACP3K,SAAA,CAEkC,aAA1B,OAAToS,QAAS,IAATA,GAAsB,QAAbkC,EAATlC,EAAWU,mBAAW,IAAAwB,OAAb,EAATA,EAAwBjQ,SACvB3E,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,SACsC,UAA1B,OAAToS,QAAS,IAATA,GAAsB,QAAbmC,EAATnC,EAAWU,mBAAW,IAAAyB,OAAb,EAATA,EAAwBT,SACvBpU,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,QAASnK,UAC3BN,EAAAA,EAAAA,KAACoV,EAAAA,EAAW,CAAC5K,GAAI,CAAEgB,MAAO,UAAWC,SAAU,aAGjDzL,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,QAASnK,UAC3BN,EAAAA,EAAAA,KAACoV,EAAAA,EAAW,CAAC5K,GAAI,CAAEgB,MAAO,OAAQC,SAAU,cAIhD,MACJvB,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CACTX,GAAI,CACFiB,SAAU,OACVR,MAAO,QACPC,OAAQ,OACRmK,aAAc,WACdC,WAAY,SACZC,SAAU,SACVnK,WACqC,aAA1B,OAATsH,QAAS,IAATA,GAAsB,QAAboC,EAATpC,EAAWU,mBAAW,IAAA0B,OAAb,EAATA,EAAwBnQ,SAEe,UAA1B,OAAT+N,QAAS,IAATA,GAAsB,QAAbqC,EAATrC,EAAWU,mBAAW,IAAA2B,OAAb,EAATA,EAAwBX,QADxB,MAGE,MACR5I,MACqC,aAA1B,OAATkH,QAAS,IAATA,GAAsB,QAAbsC,EAATtC,EAAWU,mBAAW,IAAA4B,OAAb,EAATA,EAAwBrQ,SAEe,UAA1B,OAAT+N,QAAS,IAATA,GAAsB,QAAbuC,EAATvC,EAAWU,mBAAW,IAAA6B,OAAb,EAATA,EAAwBb,QADxB,UAGE,QACR9T,SAAA,CAEQ,OAAToS,QAAS,IAATA,GAAsB,QAAbwC,EAATxC,EAAWU,mBAAW,IAAA8B,OAAb,EAATA,EAAwB5P,SACzBtF,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACwF,QAAQ,QAAQvF,WAAW,MAAMI,MAAM,OAAOC,SAAS,SAAQnL,SAC/D,OAAToS,QAAS,IAATA,GAAsB,QAAbyC,EAATzC,EAAWU,mBAAW,IAAA+B,GAAtBA,EAAwB7P,QAAU,GAAK,qBAGxC,EAIV,OACE4E,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEI,SAAU,YAAa3J,SAAA,EACnCN,EAAAA,EAAAA,KAACwV,EAAAA,EAAI,CACHhL,GAAI,CACFiL,GAAI,EAAG3L,WAAY,UAAWE,aAAc,OAAQ0L,UAAW,EAC/D/J,OAAQ,WAEVE,QAASA,IAAM2G,GAAS,GAAMlS,UAE9B4J,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EAAE9J,SAAA,EACzB4J,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAAEC,QAAS,OAAQH,eAAgB,SAAUD,WAAY,SAAUJ,SAAU,YAAa3J,SAAA,EAE9GN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAyB,uBAAX,OAAT8H,QAAS,IAATA,OAAS,EAATA,EAAW7H,MAA+BC,EAAAA,EAAOC,GAAY,OAAT2H,QAAS,IAATA,OAAS,EAATA,EAAWM,GACpEhI,IAAI,OACJnB,MAAO,CAAEoB,MAAO,SAAUC,OAAQ,SAAUlB,aAAc,MAAO2L,WAAY,YAKrD,SAAf,OAATjD,QAAS,IAATA,OAAS,EAATA,EAAWS,WAEgC,KAAhC,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWQ,mBAAmBrN,SAA8D,aAArC,OAAT6M,QAAS,IAATA,OAAS,EAATA,EAAWQ,mBAAmB,GAAG3J,WAE7EvJ,EAAAA,EAAAA,KAAC4V,EAAAA,EAAqB,CAACpL,GAAI,CAAEgB,MAAO,QAASC,SAAU,OAAQxB,SAAU,WAAY4L,OAAQ,OAAQxK,MAAO,UAI9G,SAGNnB,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAAEoD,GAAI,GAAItN,SAAA,EAC9BN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,WAAW,MAAM0K,cAAY,EAAAxV,UACtCiM,EAAAA,EAAAA,IAAqB,OAATmG,QAAS,IAATA,OAAS,EAATA,EAAWjN,QAEL,kBAAX,OAATiN,QAAS,IAATA,OAAS,EAATA,EAAWjN,OAA0BzF,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAACe,EAAE,MAClDvL,EAAAA,EAAAA,KAAC2U,EAAoB,QAEvB3U,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAAEC,QAAS,OAAQH,eAAgB,SAAUD,WAAY,UAAW/J,UACxFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACX,GAAI,CACdV,WAAY,UACZ0B,MAAO,OACPxB,aAAc,MACdiB,MAAO,OACPC,OAAQ,OACR6D,OAAQ,oBACRtD,SAAU,OACVyD,UAAW,UAEX5O,SAAW,OAAToS,QAAS,IAATA,OAAS,EAATA,EAAWO,oBAEjBjT,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAIxF,GAAI,CAAEP,SAAU,WAAYoB,MAAO,OAAQC,IAAK,SAAWhL,UAC5EN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,WAAW,MAAMZ,GAAI,CAC/BV,WAAY,OAAQyB,EAAG,GAAKvB,aAAc,OAC1CwB,MAA2B,gBAAX,OAATkH,QAAS,IAATA,OAAS,EAATA,EAAW7H,MAAwB,UAAgC,wBAAX,OAAT6H,QAAS,IAATA,OAAS,EAATA,EAAW7H,MAAgC,UAAY,UAAWY,SAAU,QAClInL,SACU,OAAToS,QAAS,IAATA,GAAAA,EAAW7H,MAAOa,EAAAA,EAAAA,IAAuB,OAATgH,QAAS,IAATA,OAAS,EAATA,EAAW7H,MAAiB,OAAT6H,QAAS,IAATA,OAAS,EAATA,EAAW7H,cAKtE0H,GACCvS,EAAAA,EAAAA,KAAC+V,EAAa,CACZ9U,KAAMsR,EACNrR,QAASsR,EACTrR,GAAS,OAALP,QAAK,IAALA,GAAW,QAAN0R,EAAL1R,EAAOsC,YAAI,IAAAoP,OAAN,EAALA,EAAalP,IACjBhC,KAAK,aAEL,OACA,E,eC5OV,MA0UA,EA1UiB4U,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAApV,EAAAqV,EAAAC,EAAAC,EAAAC,EACrB,MAAMC,GAAenV,EAAAA,EAAAA,KAAgBC,GAAUA,EAAM0B,QAC/CtB,GAAWL,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMK,UAC3C0B,GAAWC,EAAAA,EAAAA,OACVmT,EAAaC,IAAkB1U,EAAAA,EAAAA,UAAwB,OACvD2U,EAAYC,IAAiB5U,EAAAA,EAAAA,UAAwB,OACrD6U,EAAaC,IAAkB9U,EAAAA,EAAAA,UAAS,KACxC8D,EAAOiR,IAAY/U,EAAAA,EAAAA,UAAwB,MAE5CgV,EAA6BC,GACd,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcpS,QAAQlD,IAAkB,IAADuV,EAC5C,QAAe,OAAPvV,QAAO,IAAPA,GAAqB,QAAduV,EAAPvV,EAAS6B,oBAAY,IAAA0T,GAArBA,EAAuBvK,MAAMrB,GAAsB,sBAAXA,EAAEV,OAA6B,IAI7EuM,EAA+B,OAAZX,QAAY,IAAZA,GAAkB,QAANR,EAAZQ,EAAcvT,YAAI,IAAA+S,GAAU,QAAVC,EAAlBD,EAAoBtU,gBAAQ,IAAAuU,OAAhB,EAAZA,EAA8B/S,MAAMqB,IAAI,IAAA6S,EAAA,OAC3D,OAAJ7S,QAAI,IAAJA,GAAkB,QAAd6S,EAAJ7S,EAAMf,oBAAY,IAAA4T,OAAd,EAAJA,EAAoBlU,MAAMmU,GAAyB,sBAAfA,EAAMzM,MAA6B,IAGnE0M,EAAmBH,EACrB,CAACA,KAAqBH,GAAsC,OAAZR,QAAY,IAAZA,GAAkB,QAANN,EAAZM,EAAcvT,YAAI,IAAAiT,OAAN,EAAZA,EAAoBxU,WAAY,KAChFsV,GAAsC,OAAZR,QAAY,IAAZA,GAAkB,QAANL,EAAZK,EAAcvT,YAAI,IAAAkT,OAAN,EAAZA,EAAoBzU,WAAY,IAE5DmE,QAAQsB,IAAI,gBAAgBmQ,GAG9B,MAAMC,GAAoC,OAAR7V,QAAQ,IAARA,GAAc,QAANX,EAARW,EAAUuB,YAAI,IAAAlC,OAAN,EAARA,EAAgB8D,QAAQlD,IACxD,GAAY,OAAPA,QAAO,IAAPA,IAAAA,EAASkC,KAAM,OAAO,EAE3B,MAAM2T,EAAW,GAAA/I,QAAGhD,EAAAA,EAAAA,IAAc9J,EAAQkC,KAAKqF,WAAa,IAAG,KAAAuF,QAAIhD,EAAAA,EAAAA,IAAc9J,EAAQkC,KAAK4F,UAAY,KAAMgO,cAC1G7M,GAAO8M,EAAAA,EAAAA,IAAgB/V,EAAQkC,KAAK+G,MAAM6M,cAC1CE,EAAQd,EAAYY,cAE1B,OAAOD,EAASnR,SAASsR,IAAU/M,EAAKvE,SAASsR,EAAM,MACnD,GAqDAC,EAAe7T,UACnB,IACE,MAAMC,QAAiB6T,EAAAA,EAAAA,IAAiC3W,GAMxD,OALI8C,GAAYA,EAASf,KAKlBe,EAASf,IAClB,CAAC,MAAM6C,GAEP,GAGF,OACEmE,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CACPmD,UAAW,SACXzC,OAAQ,QACR,uBAAwB,CACtBD,MAAO,QAET,6BAA8B,CAC5B4C,gBAAiB,OACjB7D,aAAc,OAEhB,6BAA8B,CAC5B6D,gBAAiB,QAEnB5C,MAAM,OACN2C,GAAG,GACHtN,SAAA,CAECyF,IACC/F,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,OACTH,eAAgB,SAChByN,GAAI,EACJxM,EAAG,EACHsC,gBAAiB,UACjB7D,aAAc,OACdgO,GAAI,GACJ1X,UACAN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,UAAUC,SAAS,SAAQnL,SAC1CyF,OAMP/F,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEuN,GAAI,EAAGE,GAAI,GAAI3X,UACxBN,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAS,CACRM,WAAS,EACTE,YAAY,qBACZD,MAAO6F,EACP5G,SAAWiB,GAAM4F,EAAe5F,EAAE3Q,OAAOyQ,OACzCiH,WAAY,CACVC,gBACEnY,EAAAA,EAAAA,KAACoY,EAAAA,EAAc,CAACnO,SAAS,QAAO3J,UAC9BN,EAAAA,EAAAA,KAACqY,EAAAA,EAAU,CAAC7N,GAAI,CAAEgB,MAAO,aAI/BhB,GAAI,CACF,2BAA4B,CAC1BR,aAAc,OACd6D,gBAAiB,OACjB,aAAc,CACZyK,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,iBAQtBxB,GAAoD,IAArCU,EAA0B3R,SACxCqE,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CACPC,QAAS,OACTH,eAAgB,SAChBD,WAAY,SACZa,OAAQ,QACRqE,cAAe,SACf7E,IAAK,GACLpK,SAAA,EACA4J,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACK,MAAM,OAAOC,SAAS,OAAMnL,SAAA,CAAC,0BACfwW,EAAY,QAEtC9W,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,OAAOC,SAAS,SAAQnL,SAAC,4CAO/C4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAAAjK,SAAA,EACFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CACTK,MAAM,UACNC,SAAS,SACTL,WAAY,IACZ2M,GAAI,EACJvN,GAAI,CAAEyN,GAAI,GAAI3X,SACf,kBAGD4J,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EAAE9J,SAAA,CAExBiX,IAAgC,OAAZd,QAAY,IAAZA,GAAkB,QAANJ,EAAZI,EAAcvT,YAAI,IAAAmT,GAAU,QAAVC,EAAlBD,EAAoB1U,gBAAQ,IAAA2U,OAAhB,EAAZA,EAA8BzQ,QAAS,IAC1C,OAAhB0R,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB7P,KAAI,CAAClD,EAAY+T,KACjCvY,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAG1P,UAChBN,EAAAA,EAAAA,KAACwY,EAAoB,CAACtV,KAAMsB,MADF,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,MAAOmV,MAOxCf,EAA0B9P,KAAI,CAAC9F,EAAkB6W,KAChD,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACF,MAAMC,EAnIOnX,KAAsB,IAADoX,EAAAC,EAC5C,OAAmB,OAAZxC,QAAY,IAAZA,GAAkB,QAANuC,EAAZvC,EAAcvT,YAAI,IAAA8V,GAAU,QAAVC,EAAlBD,EAAoBrX,gBAAQ,IAAAsX,OAAhB,EAAZA,EAA8B9V,MAAMJ,IAAS,IAAAmW,EAAA,OAC9C,OAAJnW,QAAI,IAAJA,GAAkB,QAAdmW,EAAJnW,EAAMU,oBAAY,IAAAyV,OAAd,EAAJA,EAAoBtM,MAAM7H,IAAgB,IAAAiH,EAAA,OAC7B,OAAXjH,QAAW,IAAXA,OAAW,EAAXA,EAAa3B,QAAe,OAAPxB,QAAO,IAAPA,GAAa,QAANoK,EAAPpK,EAASkC,YAAI,IAAAkI,OAAN,EAAPA,EAAe5I,IAAG,GACxC,GACF,EA8HyB+V,CAAgBvX,GAGhC,OAAY,OAAPA,QAAO,IAAPA,IAAAA,EAASkC,MAAQiV,EACb,MAIP/Y,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAG1P,UAChB4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTJ,WAAY,SACZP,WAAY,OACZE,aAAc,OACduB,EAAG,EACHmK,UAAW,0BACX3G,OAAQ,wBACRpD,OAAQ,UACR,UAAW,CACT+J,UAAW,4BAEbqC,GAAI,EACJqB,QAAS1C,IAAgB9U,EAAQwB,IAAM,GAAM,GAE/CyI,QAASA,IAvMH7H,WACtB,GAAY,OAAPpC,QAAO,IAAPA,GAAAA,EAASwB,IAAd,CAKAuT,EAAe/U,EAAQwB,KAEvB,IAAK,IAADiW,EAAAC,EAEF,MAAMC,EAA0B,OAAZ9C,QAAY,IAAZA,GAAkB,QAAN4C,EAAZ5C,EAAcvT,YAAI,IAAAmW,GAAU,QAAVC,EAAlBD,EAAoB1X,gBAAQ,IAAA2X,OAAhB,EAAZA,EAA8BnW,MAAMJ,IAAS,IAAAyW,EAAA,OAC3D,OAAJzW,QAAI,IAAJA,GAAkB,QAAdyW,EAAJzW,EAAMU,oBAAY,IAAA+V,OAAd,EAAJA,EAAoB5M,MAAM7H,IAAgB,IAAAlB,EAAA,OAC7B,OAAXkB,QAAW,IAAXA,OAAW,EAAXA,EAAa3B,QAAe,OAAPxB,QAAO,IAAPA,GAAa,QAANiC,EAAPjC,EAASkC,YAAI,IAAAD,OAAN,EAAPA,EAAeT,IAAG,GACxC,IAGH,GAAImW,EAEF1C,EAAc0C,EAAYnW,UAG1B,GAAIxB,EAAQsK,mBAAqBtK,EAAQsK,kBAAkBrG,OAAS,EAAG,CAAC,IAAD4T,EAAAC,EAIrE,MAAMzV,QAAiB4T,EAAajW,EAAQkC,KAAKV,KACrC,OAARa,QAAQ,IAARA,GAAc,QAANwV,EAARxV,EAAUf,YAAI,IAAAuW,GAAM,QAANC,EAAdD,EAAgBvW,YAAI,IAAAwW,GAApBA,EAAsB3W,OACxBO,GAASqW,EAAAA,EAAAA,IAAS1V,EAASf,OAC3B2T,EAAc5S,EAASf,KAAKE,KAEhC,MACE0C,QAAQC,MAAM,0CAGpB,CAAE,MAAOA,GACPD,QAAQC,MAAM,sBAAuBA,GACrCiR,EAAS,yCACX,CAAC,QACCL,EAAe,KACjB,CAnCA,MAFE7Q,QAAQC,MAAM,wBAqChB,EAgK+B6T,CAAgBhY,GAAStB,SAAA,EAExCN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAY,OAAPhJ,QAAO,IAAPA,GAAa,QAAN8W,EAAP9W,EAASkC,YAAI,IAAA4U,OAAN,EAAPA,EAAejP,cACpBuB,IAAI,MACJR,GAAI,CAAES,MAAO,GAAIC,OAAQ,GAAI2O,GAAI,EAAGnE,UAAW,wBAEjDxL,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CAAEsP,KAAM,GAAIxZ,SAAA,EACnB4J,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,WAAY,IAAKI,MAAM,UAAUC,SAAS,OAAOsO,WAAY,IAAIzZ,SAAA,EAC1EoL,EAAAA,EAAAA,KAAqB,OAAP9J,QAAO,IAAPA,GAAa,QAAN+W,EAAP/W,EAASkC,YAAI,IAAA6U,OAAN,EAAPA,EAAexP,YAAa,IAAI,KAAEuC,EAAAA,EAAAA,KAAqB,OAAP9J,QAAO,IAAPA,GAAa,QAANgX,EAAPhX,EAASkC,YAAI,IAAA8U,OAAN,EAAPA,EAAelP,WAAY,QAE5F1J,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,OAAOC,SAAS,UAAUL,WAAY,IAAK2O,WAAY,IAAIzZ,UAC1EqX,EAAAA,EAAAA,IAAuB,OAAP/V,QAAO,IAAPA,GAAa,QAANiX,EAAPjX,EAASkC,YAAI,IAAA+U,OAAN,EAAPA,EAAehO,YAKpC7K,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,eACTwN,GAAI,IACJ+B,GAAI,GACJhQ,aAAc,OACdF,WAAY,UACZiF,OAAQ,oBACR8K,GAAI,GACJvZ,UAEFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACM,SAAS,UAAUD,MAAM,UAAUJ,WAAY,IAAI9K,UAC5DqX,EAAAA,EAAAA,IAAuB,OAAP/V,QAAO,IAAPA,GAAa,QAANkX,EAAPlX,EAASkC,YAAI,IAAAgV,OAAN,EAAPA,EAAejO,WAKpC7K,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTJ,WAAY,SACZC,eAAgB,SAChBW,MAAO,GACPC,OAAQ,GACRlB,aAAc,MACdF,WAAY,UACZ0B,MAAO,QACPlL,UAEFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACM,SAAS,SAASL,WAAY,IAAI9K,SAC3CoW,IAAgB9U,EAAQwB,IAAM,MAAQ,YAhEvBxB,EAAQwB,KAAOqV,EAsE3C,CAAE,MAAOtR,GAEP,OADArB,QAAQC,MAAM,2BAA4BoB,GACnC,IACT,cAMK,OAARxF,QAAQ,IAARA,GAAAA,EAAUuB,OAAiC,IAAzBvB,EAASuB,KAAK2C,WAChC0R,GAA6D,KAA7B,OAAZd,QAAY,IAAZA,GAAkB,QAANF,EAAZE,EAAcvT,YAAI,IAAAqT,GAAU,QAAVC,EAAlBD,EAAoB5U,gBAAQ,IAAA6U,OAAhB,EAAZA,EAA8B3Q,WACnDqE,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CACPU,OAAO,OACPlB,aAAa,OACbS,QAAQ,OACR8E,cAAe,SACfjF,eAAe,SACfD,WAAW,SACXY,MAAM,OACNP,IAAK,GACLpK,SAAA,EACAN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,UAASlL,SAAC,0BAC5BN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,OAAOC,SAAS,SAAQnL,SAAC,kDAO9CsW,IACC5W,EAAAA,EAAAA,KAAC+V,EAAa,CACZ9U,OAAQ2V,EACR1V,QAASA,IAAM2V,EAAc,MAC7B1V,GAAIyV,EACJxV,KAAK,eAIL,ECjGV,EA5NgCR,IAA2B,IAAD0R,EACxD,MAAOC,EAAOC,IAAYvQ,EAAAA,EAAAA,WAAS,GAC7BZ,GAAcC,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMC,aAC9CiR,EAAqB,OAAXpR,QAAW,IAAXA,OAAW,EAAXA,EAAa6B,KAiGvBwP,EAAYD,EA/CDE,EAACC,EAAeH,KAC/B,IAAIC,EAAuB,CACzBM,GAAI,GACJvN,KAAM,GACNwN,eAAgB,EAChBC,mBAAoB,GACpBC,SAAU,MACVC,iBAAa3O,GAGX4O,EAAcT,EAAQnP,aAAaN,MACpC4B,GAAgBA,EAAY3B,MAAQqP,EAAQrP,MAG3CkQ,EAAaV,EAAQnP,aAAaqB,QACnCC,GAAgBA,EAAY3B,MAAQqP,EAAQrP,MAGR,IAADmQ,EAAAC,EAAAC,EAAAC,EAAlCd,EAAQnP,aAAaoC,QAAU,GACjC6M,EAAUjN,MAAiB,OAAV6N,QAAU,IAAVA,OAAU,EAAVA,EAAYzN,QAAS,GACzB,OAAVyN,QAAU,IAAVA,GAAe,QAALC,EAAVD,EAAa,UAAE,IAAAC,GAAfA,EAAiBpK,UACJ,OAAVmK,QAAU,IAAVA,GAAe,QAALE,EAAVF,EAAa,UAAE,IAAAE,OAAL,EAAVA,EAAiBrK,UACjB,SACO,OAAVmK,QAAU,IAAVA,GAAe,QAALG,EAAVH,EAAa,UAAE,IAAAG,GAAfA,EAAiB/J,SACd,KAAgB,OAAV4J,QAAU,IAAVA,GAAe,QAALI,EAAVJ,EAAa,UAAE,IAAAI,OAAL,EAAVA,EAAiBhK,UACvB,IACJ,eACFgJ,EAAUM,IAAe,OAAVM,QAAU,IAAVA,OAAU,EAAVA,EAAYzN,QAAS,EAAc,OAAVyN,QAAU,IAAVA,OAAU,EAAVA,EAAa,GAAG7J,cAAc,KAEtEiJ,EAAUS,SAAW,QACrBT,EAAUjN,KAAO,cAenB,OAZAiN,EAAUO,eAAiBL,EAAQ1K,eAChCpD,QAAQ6C,IAAG,IAAAkM,EAAAC,EAAA,OAAQ,OAAHnM,QAAG,IAAHA,GAAY,QAATkM,EAAHlM,EAAKrC,eAAO,IAAAuO,GAAQ,QAARC,EAAZD,EAAclP,cAAM,IAAAmP,OAAjB,EAAHA,EAAsB1Q,QAAe,OAAPqP,QAAO,IAAPA,OAAO,EAAPA,EAASrP,IAAI,IAC3D0B,QACEiP,IACEA,EAAgB1L,KAAKuE,MAAMzL,GAAOA,IAAOsR,EAAQrP,QACpDyC,OAEA+M,EAAQQ,aAAeC,IACzBX,EAAUU,YAzFUY,EAACpB,EAAeS,KAA8B,IAADY,EAAAC,EAAAC,EACnE,IAAIzB,EAAyB,CAC3B/N,QACqB,QAAnBsP,EAAArB,EAAQQ,mBAAW,IAAAa,OAAA,EAAnBA,EAAqBtP,UAAW0O,EAAYjQ,IAAM,UAAY,SAChEkC,QAA4B,QAAnB4O,EAAAtB,EAAQQ,mBAAW,IAAAc,GAAnBA,EAAqBtU,QAA6B,QAAtBuU,EAAGvB,EAAQQ,mBAAW,IAAAe,OAAA,EAAnBA,EAAqBvU,QAAU,GACvEwU,OAAQ,QAEV,GAAyB,YAArB1B,EAAU/N,OAEZ+N,EAAU0B,QAGD,IAFPxB,EAAQ1K,eAAemM,WACpB7P,IAAI,IAAA8P,EAAA,OAAK9P,EAAKc,QAAQlC,OAA2B,QAAxBkR,EAAK1B,EAAQQ,mBAAW,IAAAkB,OAAA,EAAnBA,EAAqBlR,IAAG,IAErD,OACA,aACD,CACL,IAAIsM,EAAQkD,EAAQ1K,eAAemM,WAChC7P,IAAI,IAAA+P,EAAA,OAAK/P,EAAKc,QAAQlC,OAA2B,QAAxBmR,EAAK3B,EAAQQ,mBAAW,IAAAmB,OAAA,EAAnBA,EAAqBnR,IAAG,IAEzDsP,EAAU0B,QACG,IAAX1E,EACI,QAGO,IAFPkD,EAAQ1K,eAAewH,GAAOrH,KAAKgM,WAChC7P,GAASA,IAAS6O,EAAYjQ,MAEjC,SACA,MACR,CACA,OAAOsP,CAAS,EA6DUsB,CAAgBpB,EAASS,GACjDX,EAAUQ,mBA3DOsB,EAAC5B,EAAeS,KACnC,IAAIoB,EAAS7B,EAAQnP,aAAaqB,QAC/BC,GAC0B,WAAzBA,EAAYwE,UAAyBxE,EAAY3B,MAAQiQ,EAAYjQ,MAErEsR,EAAS9B,EAAQnP,aAAaqB,QAC/BC,GAC0B,WAAzBA,EAAYwE,UAAyBxE,EAAY3B,MAAQiQ,EAAYjQ,MAOzE,MAAO,IALMwP,EAAQnP,aAAaqB,QAC/BC,GAC0B,WAAzBA,EAAYwE,UAAyBxE,EAAY3B,MAAQiQ,EAAYjQ,SAGnDqR,KAAWC,EAAO,EA6CPF,CAAa5B,EAASS,IAGhDX,CAAS,EAEUC,CAAS/R,EAAMsC,KAAMuP,GAAW,KAEtDkC,EAAuBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjC,OACEjL,EAAAA,EAAAA,MAAA,OACEL,MAAO,CACLY,QAAS,OAETC,IAAI,MACJO,MAAO,QACP3K,SAAA,CAEkC,aAA1B,OAAToS,QAAS,IAATA,GAAsB,QAAbkC,EAATlC,EAAWU,mBAAW,IAAAwB,OAAb,EAATA,EAAwBjQ,SACvB3E,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,SACsC,UAA1B,OAAToS,QAAS,IAATA,GAAsB,QAAbmC,EAATnC,EAAWU,mBAAW,IAAAyB,OAAb,EAATA,EAAwBT,SACvBpU,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,QAASnK,UAC3BN,EAAAA,EAAAA,KAACoV,EAAAA,EAAW,CAAC5K,GAAI,CAAEgB,MAAO,UAAWC,SAAU,aAGjDzL,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,QAASnK,UAC3BN,EAAAA,EAAAA,KAACoV,EAAAA,EAAW,CAAC5K,GAAI,CAAEgB,MAAO,OAAQC,SAAU,cAIhD,MACJvB,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CACTX,GAAI,CACFiB,SAAU,OACVR,MAAM,QACNC,OAAQ,OACRmK,aAAc,WACdC,WAAY,SACZC,SAAU,SACVnK,WACqC,aAA1B,OAATsH,QAAS,IAATA,GAAsB,QAAboC,EAATpC,EAAWU,mBAAW,IAAA0B,OAAb,EAATA,EAAwBnQ,SAEe,UAA1B,OAAT+N,QAAS,IAATA,GAAsB,QAAbqC,EAATrC,EAAWU,mBAAW,IAAA2B,OAAb,EAATA,EAAwBX,QADxB,MAGA,MACN5I,MACqC,aAA1B,OAATkH,QAAS,IAATA,GAAsB,QAAbsC,EAATtC,EAAWU,mBAAW,IAAA4B,OAAb,EAATA,EAAwBrQ,SAEe,UAA1B,OAAT+N,QAAS,IAATA,GAAsB,QAAbuC,EAATvC,EAAWU,mBAAW,IAAA6B,OAAb,EAATA,EAAwBb,QADxB,UAGA,QACN9T,SAAA,CAEQ,OAAToS,QAAS,IAATA,GAAsB,QAAbwC,EAATxC,EAAWU,mBAAW,IAAA8B,OAAb,EAATA,EAAwB5P,SACzBtF,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACwF,QAAQ,QAAQvF,WAAW,MAAMI,MAAM,OAAOC,SAAS,SAAQnL,SAC/D,OAAToS,QAAS,IAATA,GAAsB,QAAbyC,EAATzC,EAAWU,mBAAW,IAAA+B,GAAtBA,EAAwB7P,QAAU,GAAK,qBAGxC,EAIV,OACE4E,EAAAA,EAAAA,MAAA,OAAA5J,SAAA,EACEN,EAAAA,EAAAA,KAACwV,EAAAA,EAAI,CACHhL,GAAI,CAAEe,EAAG,GAAIzB,WAAW,UAAUE,aAAa,OAAO0L,UAAU,EAChE/J,OAAO,WAEPE,QAASA,IAAM2G,GAAS,GAAMlS,UAE9B4J,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EAAE9J,SAAA,EACzB4J,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAACC,QAAQ,OAAOH,eAAe,SAASD,WAAW,SAASJ,SAAS,YAAY3J,SAAA,EACrGN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAc,OAAT8H,QAAS,IAATA,OAAS,EAATA,EAAWM,GAChBhI,IAAI,OACJnB,MAAO,CAAEoB,MAAO,SAAUC,OAAQ,SAAUlB,aAAc,MAAM2L,WAAW,YAG/C,SAAb,OAATjD,QAAS,IAATA,OAAS,EAATA,EAAWS,WAEgC,KAA9B,OAATT,QAAS,IAATA,OAAS,EAATA,EAAWQ,mBAAmBrN,SAA0D,aAAnC,OAAT6M,QAAS,IAATA,OAAS,EAATA,EAAWQ,mBAAmB,GAAG3J,WAE7EvJ,EAAAA,EAAAA,KAAC4V,EAAAA,EAAqB,CAACpL,GAAI,CAACgB,MAAM,QAAQC,SAAS,OAAOxB,SAAS,WAAW4L,OAAO,OAAOxK,MAAM,UAItG,SAGVnB,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAE1P,SAAA,EACfN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,WAAW,MAAM0K,cAAY,EAAAxV,UACtCiM,EAAAA,EAAAA,IAAqB,OAATmG,QAAS,IAATA,OAAS,EAATA,EAAWjN,QAEL,kBAAX,OAATiN,QAAS,IAATA,OAAS,EAATA,EAAWjN,OAA0BzF,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAACe,EAAE,MAClDvL,EAAAA,EAAAA,KAAC2U,EAAoB,QAEvB3U,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAACC,QAAQ,OAAOH,eAAe,SAASD,WAAW,UAAU/J,UACjFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CACTX,GAAI,CACFV,WAAY,UACZ0B,MAAM,OACNxB,aAAc,MACdiB,MAAO,OACPC,OAAQ,OACR6D,OAAO,oBACPtD,SAAU,OACVyD,UAAW,UACX5O,SAEQ,OAAToS,QAAS,IAATA,OAAS,EAATA,EAAWO,wBAKnBV,GACCvS,EAAAA,EAAAA,KAAC+V,EAAa,CACZ9U,KAAMsR,EACNrR,QAASsR,EACTrR,GAAS,OAALP,QAAK,IAALA,GAAW,QAAN0R,EAAL1R,EAAOsC,YAAI,IAAAoP,OAAN,EAALA,EAAalP,IACjBhC,KAAK,cAEL,OACA,ECpMV,EApCsB6Y,KAAO,IAADhE,EAAAiE,EAAA/D,EAAAgE,EAC1B,MAAM1D,GAAenV,EAAAA,EAAAA,KAAgBC,GAAUA,EAAM0B,QACrD,OACEjD,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CACPmD,UAAW,SACXzC,OAAQ,QACR,uBAAwB,CACtBD,MAAO,QAET,6BAA8B,CAC5B4C,gBAAiB,OACjB7D,aAAc,OAEhB,6BAA8B,CAC5B6D,gBAAiB,QAEnB5C,MAAM,OACN2C,GAAG,GACHtN,UACAN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EACvBI,GAAI,CAACoD,GAAG,GAAGtN,UAEA,OAAZmW,QAAY,IAAZA,GAAkB,QAANR,EAAZQ,EAAcvT,YAAI,IAAA+S,GAAW,QAAXiE,EAAlBjE,EAAoB5S,iBAAS,IAAA6W,OAAjB,EAAZA,EAA+BrU,QAAS,EAAe,OAAZ4Q,QAAY,IAAZA,GAAkB,QAANN,EAAZM,EAAcvT,YAAI,IAAAiT,GAAW,QAAXgE,EAAlBhE,EAAoB9S,iBAAS,IAAA8W,OAAjB,EAAZA,EAA+BzS,KAAI,CAAClD,EAAW+T,KACzFvY,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAG1P,UAClBN,EAAAA,EAAAA,KAACoa,EAAsB,CAAClX,KAAMsB,KADN+T,MAI1BvY,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAACU,OAAO,OAAOlB,aAAa,OAAOS,QAAQ,OAAOH,eAAe,SAASD,WAAW,SAASY,MAAM,QAAQ3K,UACrHN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,UAASlL,SAAC,0BAIxB,EC4EV,EApGgB+Z,KAAO,IAADpE,EAAAC,EACpB,MAAOoE,EAAUC,IAAetY,EAAAA,EAAAA,WAAS,GACnCwU,GAAenV,EAAAA,EAAAA,KAAgBC,GAAUA,EAAM0B,QAG/CmU,EAA+B,OAAZX,QAAY,IAAZA,GAAkB,QAANR,EAAZQ,EAAcvT,YAAI,IAAA+S,GAAU,QAAVC,EAAlBD,EAAoBtU,gBAAQ,IAAAuU,OAAhB,EAAZA,EAA8B/S,MAAMqB,IAAU,IAAA6S,EAAA,OACpD,QADoDA,EACrE7S,EAAKf,oBAAY,IAAA4T,OAAA,EAAjBA,EAAmBzK,MAAM7H,GAA0C,sBAArBA,EAAY8F,MAA6B,IAGzF,OACEX,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CACPmD,UAAW,SACXzC,OAAQ,QACR,uBAAwB,CACtBD,MAAO,QAET,6BAA8B,CAC5B4C,gBAAiB,OACjB7D,aAAc,OAEhB,6BAA8B,CAC5B6D,gBAAiB,QAEnB5C,MAAO,OACP2C,GAAI,GACJtN,SAAA,EACAN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EAAGI,GAAI,CAAEoD,GAAI,GAAItN,SACvC8W,GACCpX,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAG1P,UAChBN,EAAAA,EAAAA,KAACwY,EAAoB,CAACtV,KAAMkU,OAG9BpX,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAG1P,UACHN,EAAAA,EAAAA,KAACwV,EAAAA,EAAI,CACfhL,GAAI,CACFiL,GAAI,EACJ3L,WAAY,UACZE,aAAc,OACd0L,UAAW,EACXnK,EAAG,GACHjL,UAEH4J,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EAAGC,WAAW,SAAQ/J,SAAA,EAC7CN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAAEC,QAAS,OAAQH,eAAgB,SAAUD,WAAY,UAAW/J,UACxFN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAKE,EAAAA,EAAOC,GACZC,IAAI,WACJnB,MAAO,CAAEoB,MAAO,SAAUC,OAAQ,SAAUlB,aAAc,YAG9DE,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAE1P,SAAA,EACfN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,WAAW,MAAM0K,cAAY,EAAAxV,SAAC,cAG1CN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACwF,QAAQ,QAAQnF,MAAM,UAASlL,SAAC,oBAI9CN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAGxF,GAAI,CAAEC,QAAS,OAAQH,eAAgB,SAAUD,WAAY,UAAW/J,UACxFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACX,GAAI,CACdV,WAAY,UACZ0B,MAAO,OACPxB,aAAc,MACdiB,MAAO,OACPC,OAAQ,OACR6D,OAAQ,oBACRtD,SAAU,OACVyD,UAAW,UACX5O,SAAC,SAILN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,GAAIxF,GAAI,CAAEP,SAAU,WAAYoB,MAAO,OAAQC,IAAK,SAAUhL,UAC3EN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACC,WAAW,MAAMZ,GAAI,CAC/BV,WAAY,OACZyB,EAAG,GACHvB,aAAc,OACdwB,MAAO,UACPC,SAAU,QACVnL,SAAC,iCASbga,IACCta,EAAAA,EAAAA,KAAC+V,EAAa,CACZ9U,KAAMqZ,EACNpZ,QAASqZ,EACTpZ,IAAoB,OAAhBiW,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBhU,MAAO,MAC7BhC,KAAK,eAGL,E,qCCpFX,MAAMoZ,EAAa7Z,EAAAA,YAAiB,SAClCC,EACAC,GAEA,OAAOb,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAU,KAAKF,IAAKA,KAASD,GAC7C,IA4HM6Z,EAAwDra,IAIvD,IAJwD,aAC7DmF,EAAY,QACZmV,EAAO,QACPC,GACDva,EACC,OACE8J,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,EAAG2D,UAAU,4BAA4BvD,GAAI,CAAEoD,GAAI,EAAG1C,OAAQ,SAAU5K,SAAA,EACpFN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAAC+D,UAAU,SAAS9D,WAAW,MAAK9K,SAAC,cAClDN,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAS,CACRlK,KAAK,QACLwK,WAAS,EACTd,SAAWiB,GAAI5L,EAAa,CAACE,KAAK,eAAevC,KAAKiO,IACtDhQ,GAAG,iBACH+P,YAAY,SACZP,QAAQ,WACRiK,aAAa,QACbpQ,GAAI,CACF,2BAA4B,CAC1BR,aAAc,SAGlBkO,WAAY,CACVC,gBACEnY,EAAAA,EAAAA,KAACoY,EAAAA,EAAc,CAACnO,SAAS,QAAO3J,UAC9BN,EAAAA,EAAAA,KAACqY,EAAAA,EAAU,UAMnBrY,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAACU,OAAO,QAAQyC,UAAU,SAASpC,EAAE,GAAGjL,SAC9Coa,EAAQhT,KAAI,CAAClD,EAAMkL,KAAK,IAAAmL,EAAA,OACnB3Q,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CAAC1D,WAAS,EAACjC,QAAS,EAAGyB,QAASA,IAAKtG,EAAa,CAACE,KAAK,SAASvC,KAAKsB,IAAQgG,GAAI,CAACe,EAAE,GAAGjL,SAAA,EAC3FN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CACHvL,MAAI,EACJwL,GAAI,EACJxF,GAAI,CACFC,QAAS,OACTH,eAAgB,SAChBD,WAAY,UACZ/J,UAEFN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAKpG,EAAKiF,cACVuB,IAAI,UACJnB,MAAO,CAAEoB,MAAO,OAAQC,OAAQ,OAAQlB,aAAc,YAG1DhK,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAE1P,UACfN,EAAAA,EAAAA,KAAA,MAAAM,UAAKiM,EAAAA,EAAAA,IAAY/H,EAAK2E,WAAa,KAAMoD,EAAAA,EAAAA,IAAgB,OAAJ/H,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,eAE7D1J,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,EAAKxF,GAAI,CACpBC,QAAS,OACTH,eAAgB,SAChBD,WAAY,UACZ/J,SACc,QAAfua,EAAAF,EAAQnS,eAAO,IAAAqS,GAAfA,EAAiB1X,MAAM2X,GAAwBA,EAAO1X,MAAQoB,EAAKpB,OAClEpD,EAAAA,EAAAA,KAAA,QAAM6J,MAAO,CAAC2B,MAAM,qBAAqBlL,SAAC,YAE1CN,EAAAA,EAAAA,KAAC+a,EAAAA,EAAa,CAACvQ,GAAI,CAAEiB,SAAU,SAAUD,MAAO,cA3B6CkE,EA+B5F,QAGT,EAIZ,EAhM0C/P,IAAuB,IAADqb,EAAAC,EAAA,IAArB,KAAEha,EAAI,QAAEC,GAAQvB,EACzD,MAAOub,EAAYC,IAAiBlZ,EAAAA,EAAAA,UAAwB,OACrDF,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCyY,EAAQU,IAAcnZ,EAAAA,EAAAA,UAAiB,IACxCwQ,GAAUnR,EAAAA,EAAAA,KAAeC,GAAQA,EAAMC,aACvCyB,GAAQ3B,EAAAA,EAAAA,KAAeC,GAAQA,EAAM0B,QACrCoY,EAAW,IAAIpY,EAAMC,KAAKvB,YAAYsB,EAAMC,KAAKG,WACjDsX,GAAU7Y,EAAAA,EAAAA,QAAmB,QAAZkZ,EAAAvI,EAAQvP,YAAI,IAAA8X,GAAZA,EAAc5X,KAAMkY,EAAAA,EAAAA,IAAWD,EAAqB,QAAbJ,EAACxI,EAAQvP,YAAI,IAAA+X,OAAA,EAAZA,EAAc7X,KAAO,IAC9EE,GAAWC,EAAAA,EAAAA,MA2CjB,OACEvD,EAAAA,EAAAA,KAAA,OAAAM,UACEN,EAAAA,EAAAA,KAAC0R,EAAAA,EAAM,CACLzQ,KAAMA,EACNuJ,GAAI,CACAa,MAAO,IACP4D,KAAM,CAAE0C,GAAI,MAAO3B,GAAI,IAAK4B,GAAI,OAChCtG,IAAK,CAAEqG,GAAI,OAAQ3B,GAAI,IAAK4B,GAAI,SAElCC,WAAY,CACVhI,MAAO,CACLG,aAAc,OACdD,QAAS,OACTkB,MAAO,QACPC,OAAQ,UAGd4G,oBAAqB0I,EACrBzI,aAAW,EACXC,QAASA,IAAM9Q,GAAQ,GACvB,mBAAiB,iCAAgCZ,SAEhDyB,GACC/B,EAAAA,EAAAA,KAAA,OACE6J,MAAO,CACLY,QAAS,OACTH,eAAgB,SAChBD,WAAY,SACZa,OAAQ,SACR5K,UAEFN,EAAAA,EAAAA,KAAC8N,EAAAA,EAAgB,OAGnB5D,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA1N,SAAA,EACEN,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTJ,WAAY,SACZC,eAAgB,UAChBhK,UAEFN,EAAAA,EAAAA,KAACiS,EAAAA,EAAqB,CACpBpG,QAASA,IAAM3K,GAAQ,GACvBsJ,GAAI,CAAES,MAAO,OAAQC,OAAQ,aAGjClL,EAAAA,EAAAA,KAACya,EAAkB,CACjBS,WAAYA,EAEZ3V,aAnEOvB,UACnB,OAAOwB,EAAMC,MACX,IAAK,eAC6B,KAA5BD,EAAMtC,KAAK1C,OAAOyQ,QACpBkK,EAAc3V,EAAMtC,KAAK1C,OAAOyQ,OA5BhBjN,WACpB,MAAMC,QAAiBsX,EAAAA,EAAAA,IAAuBL,GACA,IAADzB,EAAzCxV,QAA8BQ,IAAlBR,EAASf,MACvBkY,EACU,OAARnX,QAAQ,IAARA,GAAc,QAANwV,EAARxV,EAAUf,YAAI,IAAAuW,OAAN,EAARA,EAAgB3U,QAAQN,IAAc,IAADgX,EACnC,OAAOhX,EAAKpB,OAAoB,QAAjBoY,EAAK/I,EAAQvP,YAAI,IAAAsY,OAAA,EAAZA,EAAcpY,IAAG,IAK3C,EAmBIqY,CAAcjW,EAAMtC,KAAK1C,OAAOyQ,MAAMrL,SAE1C,MACA,IAAK,SACH5D,GAAW,GACXA,GAAW,GACXd,GAAQ,GACT,MAAM4F,OAxBS9C,WAChB,IACE,MAAMC,QAAiB6T,EAAAA,EAAAA,IAAiC3W,GAIxD,OAHI8C,GAAYA,EAASf,KAGlBe,EAASf,IAClB,CAAC,MAAM6C,GAEP,GAeyB2V,CAAUlW,EAAMtC,KAAKE,KAC5CE,GAASqW,EAAAA,EAAAA,IAAS7S,IACtB,EAsDY4T,QAASA,EAETC,QAASA,UAKb,E,4DCtGV,MAAMja,GAAcC,EAAAA,YAAiB,SACnCC,EAGAC,GAEA,OAAOb,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAU,KAAKF,IAAKA,KAASD,GAC7C,IA0uBA,GAjuB6BjB,IAAyC,IAAxC,KAAEsB,EAAI,QAAEC,EAAO,GAAEC,EAAE,KAAEC,GAAazB,EAC9D,MAAM0B,GAAcC,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMC,aAC9CK,GAAOC,EAAAA,EAAAA,QAAkB,KACxBC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GACjCC,GAAWZ,EAAAA,EAAAA,KAAgBC,GAAUA,EAAMW,YAC1CC,EAAaC,IAAkBH,EAAAA,EAAAA,UAAiB,KAChDI,EAAWC,IAAgBL,EAAAA,EAAAA,UAAS,OACpCM,EAAUC,IAAeP,EAAAA,EAAAA,WAAS,IAClCQ,EAAcC,IAAmBT,EAAAA,EAAAA,UAAS,KAC1C0Z,EAAQC,IAAa3Z,EAAAA,EAAAA,UAAS,IAC/Bc,GAAOzB,EAAAA,EAAAA,KAAgBC,IAC3B,IAAIyB,EAAezB,EAAM0B,MACzB,MAAgB,aAAT7B,EACH4B,EAAaE,KAAKvB,SAASwB,MAAMJ,GAASA,EAAKK,MAAQjC,IACvD6B,EAAaE,KAAKG,UAAUF,MAAMJ,GAASA,EAAKK,MAAQjC,GAAG,IAE3DmC,GAAWC,EAAAA,EAAAA,MAEXC,EAAyB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaN,MAC3CO,IAAI,IAAAC,EAAA,OAAKD,EAAKN,OAAmB,OAAX/B,QAAW,IAAXA,GAAiB,QAANsC,EAAXtC,EAAa6B,YAAI,IAAAS,OAAN,EAAXA,EAAmBP,IAAG,IAEzCW,EAAeC,UACnB,MAAMC,QAAiBC,EAAAA,EAAAA,IAAmB/C,GAE1C,GAAI8C,EAASE,UACXb,GAASc,EAAAA,EAAAA,IAAWH,EAASf,OAE3B7B,EAAY6B,MACZ7B,EAAY6B,KAAKE,KACjBiB,OAAOC,OAAOjD,EAAY6B,MAAMqB,OAC7BC,QAAyBC,WAATD,KAEnB,CACA,IAAIE,EAA4B,CAC9B7B,OAAQ,OACR8B,OAAQ,IAAKtD,EAAY6B,KAAM0B,SAAU,WACzCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaqB,QAC3BC,IAAwB,IAAAC,EAAA,OACvBD,EAAY3B,OAAwB,QAArB4B,EAAK3D,EAAY6B,YAAI,IAAA8B,OAAA,EAAhBA,EAAkB5B,IAAG,IAE7CF,KAAMe,EAASf,MAEjB+B,EAAAA,EAAOC,KAAK,UAAWR,EACzB,CACF,EA0JIa,EAAevB,UACnB,IAAIU,EACJ,OAAQc,EAAMC,MACZ,IAAK,OACH,MAAMC,EAAW,IAAIC,SACrBD,EAASM,OAAO,UAAWR,EAAMtC,MACjCwC,EAASM,OAAO,SAAU7E,GAE1B,IACE,GAAIqE,EAAMtC,KAAK0C,OAAQ,CACrB,MAAM3B,QAAiByC,EAAAA,EAAAA,IAAqBhB,GAC5CkW,EAAU,iBAEN3X,EAASf,KAAKiB,SAChBb,GAASc,EAAAA,EAAAA,IAAWH,EAASf,KAAKA,KAAKH,OACvCO,GAAS+B,EAAAA,EAAAA,IAAWpB,EAASf,KAAKA,KAAKoC,UACvClD,EAAe,KAEf0D,QAAQC,MAAM,2CAEhB,MAAMe,QAAkB+U,EAAAA,EAAAA,IAAwB,CAC9Cjc,QAAS4F,EAAMtC,KACf4Y,OAAQ3a,IAEVya,EAAU,IAEN9U,EAAU5D,KAAKiB,SACjBb,GAASc,EAAAA,EAAAA,IAAW0C,EAAU5D,KAAKA,KAAKH,OACxCO,GAAS+B,EAAAA,EAAAA,IAAWyB,EAAU5D,KAAKA,KAAKoC,WAExCQ,QAAQC,MAAM,0CAElB,CACF,CAAE,MAAOA,GACPD,QAAQC,MAAM,+CAAgDA,EAChE,CAEA,MACF,IAAK,cACHrB,EAAa,CACX7B,OAAQ,SACR8B,OAAQ,IAAKtD,EAAY6B,KAAM0B,SAAU,WACzCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAaqB,QAC3BC,IAAW,IAAA4B,EAAA,OAAK5B,EAAY3B,MAAuB,QAApBuD,EAAItF,EAAY6B,YAAI,IAAAyD,OAAA,EAAhBA,EAAkBvD,IAAG,IAE3DF,KAAM,SAiBZ,GAGFmE,EAAAA,EAAAA,YAAU,KArMWrD,WACnB,IACEhC,GAAW,GACX,MAAMiC,QAAiBuD,EAAAA,EAAAA,IAAiBrG,GACxC,GAAI8C,EAAU,CACZ,IAAIwD,EAAOxD,EAASf,KAAKwE,KAAKC,IAAY,IACrCA,EACHvG,KAAM,aAERqG,EAAKG,UACLtE,GACEuE,EAAAA,EAAAA,IAAa,CACXC,cAAe,YACfC,eAAgB,WAChBC,aAAa,EACbC,MAAO,GACP/E,KAAMuE,KAaM,IATV,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,eACHpD,QACE6C,IAAQ,IAAAQ,EAAA,OAAKR,EAAIrC,QAAQX,OAAOvB,OAAwB,QAArB+E,EAAK9G,EAAY6B,YAAI,IAAAiF,OAAA,EAAhBA,EAAkB/E,IAAG,IAE/D0B,QACEsD,IACEA,EAAgBC,KAAKlF,MACnBhC,IAAU,IAAAmH,EAAA,OAAKnH,KAAuB,QAArBmH,EAAKjH,EAAY6B,YAAI,IAAAoF,OAAA,EAAhBA,EAAkBlF,IAAG,MAEhDyC,eAEE9B,GAEV,CACA/B,GAAW,EACb,CAAE,MAAO+D,GACP/D,GAAW,EACb,GAoKAuG,EAAc,GAGb,IAEH1G,EAAK2G,QACHzF,GAAQ1B,EAAY6B,KAvKDuF,EAACvG,EAAqBa,EAAYW,KACrD,IAAIgF,EAAoB3F,EAAKU,aAAaqB,QACvC/B,GAASA,EAAKK,KAAOM,EAAKN,MAEzBvB,EAAkB,GAClB8G,EAAkC,GAEtCzG,EAAS0F,UACT1F,EAASuE,SAASkB,IAAS,IAADiB,EACxB,IAAc,QAAVA,EAAAjB,EAAIhD,cAAM,IAAAiE,OAAA,EAAVA,EAAYxF,MAAOM,EAAKN,IAC1B,GAAgC,GAA5BsF,EAAkB7C,OAAa,CAsBjC,GArBkC,GAA9B9C,EAAKmF,eAAerC,OACU,GAA5B6C,EAAkB7C,SACpB8C,EAAmB,IAAID,IAUvBC,EANC5F,EAAKmF,eAAe/E,MAClB0F,GAAcA,EAAUvD,QAAQlC,KAAOuE,EAAIvE,MAK3BsF,EAAkB5D,QAAQgE,IAAgB,IAAAC,EAAA,OAEH,QAFGA,EAC3DhG,EAAKmF,eACF/E,MAAM0F,GAAcA,EAAUvD,QAAQlC,KAAOuE,EAAIvE,aAAI,IAAA2F,OAAA,EADxDA,EAEIV,KAAKlF,MACJ6F,GAAoBA,GAAmBF,EAAiB1F,KAC1D,IAPc,IAAIsF,GAWI,GAA3BC,EAAiB9C,OAAa,CAChC,IAAIoD,EAAcN,EAAiBO,QACjC,CAAC5D,EAAS0D,IACR1D,EAAU0D,EAAgBG,UAAY,OACxC,YAEFtH,EAAKuH,KAAK,CACRhG,IAAKuE,EAAIvE,IAAM,QACfhC,KAAM,OACNxB,QAASqJ,EAAYI,UAAU,EAAGJ,EAAYpD,OAAS,GACvD9C,KAAMA,EAAKK,KAEf,CACAvB,EAAKuH,KAAKzB,GACVe,EAAoBA,EAAkB5D,QACnCgE,IACEH,EAAiBxF,MACf6F,GAAoBA,EAAgB5F,KAAO0F,EAAiB1F,OAGrE,MACEvB,EAAKuH,KAAKzB,QAGZ9F,EAAKuH,KAAKzB,EACZ,IAEF9F,EAAK+F,UACL,IAAI0B,EAAqBvG,EAAKU,aAAaqB,QACxCC,GAAwC,UAAxBA,EAAYwE,WAG/B,GAAiC,GAA7BD,EAAmBzD,OAAa,CAClC,IAAI2D,EAAgBF,EAAmBJ,QACrC,CAACvB,EAAK5C,IAAgBA,EAAYoE,UAAY,OAC9C,IAEFtH,EAAKuH,KAAK,CACRhG,IAAKL,EAAKK,IAAM,UAChBhC,KAAM,SACNxB,QACE4J,EAAcH,UAAU,EAAGG,EAAc3D,OAAS,IACpB,GAA7ByD,EAAmBzD,OAAc,aAAe,eACnD9C,KAAMA,EAAKK,IACXuB,OAAQ,CACN8E,cAAe,GACfN,UAAW,GACXO,SAAU,GACVC,MAAO,GACPvG,IAAKL,EAAKK,IAAM,UAChBwB,SAAU,KAIhB,CACA,OAAO/C,CAAI,EAiFP4G,CAAa,IAAIvG,EAASgB,MAAOH,EAAM1B,EAAY6B,MACnD,GAEN,MAAM0G,EAAUhJ,IAEZZ,EAAAA,EAAAA,KAAA,OACE6J,MAAO,CACLC,WAAY,UACZC,QAAS,SACTC,aAAc,SACdC,SAAU,YACV3J,UAEF4J,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJpJ,UAAU,MACVqJ,QAAS,EACTC,WAAW,SACXC,eAAe,gBAAehK,SAAA,EAE9B4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CAAEC,QAAS,OAAQC,IAAK,OAAQL,WAAY,UAAW/J,SAAA,EAC9DN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAC+B,uBAAX,OAAlBpH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAChBC,EAAAA,EAAOC,GACW,OAAlBvH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBiG,cAE1BuB,IAAI,UACJR,GAAI,CAAES,MAAO,OAAQC,OAAQ,OAAQlB,aAAc,UAErDhK,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CACTC,WAAW,MACXZ,GAAI,CACFP,SAAU,WACVoB,MAAO,OACPC,IAAK,QACLxB,WAAY,OACZyB,EAAG,EACHvB,aAAc,OACdwB,MAC+B,gBAAX,OAAlBhI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAChB,UAC6B,wBAAX,OAAlBrH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MACpB,UACA,UACNY,SAAU,QACVnL,SAEiB,OAAlBkD,QAAkB,IAAlBA,GAAAA,EAAoBqH,MACjBa,EAAAA,EAAAA,IAAgC,OAAlBlI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,MAChB,OAAlBrH,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,QAE1B7K,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAAAjK,SACiB,OAAlBkD,QAAkB,IAAlBA,GAAAA,EAAoB2F,WAA+B,OAAlB3F,QAAkB,IAAlBA,GAAAA,EAAoBkG,UACpDQ,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACC,WAAW,MAAK9K,SAAA,EACzBiM,EAAAA,EAAAA,IAA8B,OAAlB/I,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB2F,WAAW,QACrCoD,EAAAA,EAAAA,IAA8B,OAAlB/I,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBkG,cAGzC1J,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAAA7K,SAAC,eAIlBN,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CAACC,GAAI,CAAEgC,MAAO,SAAUlM,UAC1BN,EAAAA,EAAAA,KAACyM,EAAAA,EAAM,CACLjC,GAAI,CAAEkC,cAAe,OAAQlB,MAAO,UAAWgB,MAAO,SACtDX,QAASA,IACPjL,EAAM2E,aAAa,CACjBE,KAAM,QACNvC,KAAM,CACJL,OAAQ,QACR1B,GAAsB,OAAlBqC,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBJ,OAG7B9C,SAEAkD,GAC8B,uBAAX,OAAlBA,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBqH,OACpB,iBAORgC,EAAWjM,IACf,MAAMkM,GAAYhL,EAAAA,EAAAA,QAAuB,MACnCiL,GAAmBjL,EAAAA,EAAAA,QAAuB,OACzCkL,EAAgBC,IAAqBhL,EAAAA,EAAAA,WAAS,GAyBrD,OAVAoF,EAAAA,EAAAA,YAAU,KACa,IAAD6F,EAAhBF,IACe,QAAjBE,EAAAJ,EAAUtE,eAAO,IAAA0E,GAAjBA,EAAmBC,eAAe,CAAEC,SAAU,SAChD,GACC,CAACvL,EAAK2G,WAETnB,EAAAA,EAAAA,YAAU,KAAO,IAADgG,EACG,QAAjBA,EAAAP,EAAUtE,eAAO,IAAA6E,GAAjBA,EAAmBF,eAAe,CAAEC,SAAU,QAAS,GACtD,KAGDpN,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACF1J,IAAKkM,EACLO,SA1BiBC,KACnB,GAAIR,EAAiBvE,QAAS,CAC5B,MAAM,UAAEgF,EAAS,aAAEC,EAAY,aAAEC,GAC/BX,EAAiBvE,QAEnByE,EADmBQ,EAAeD,EAAYE,GAAgB,EAEhE,GAqBElD,GAAI,CACFmD,UAAW,SACXC,GAAI,EACJ1C,OAAQ,QACR,uBAAwB,CACtBD,MAAO,QAET,6BAA8B,CAC5B4C,gBAAiB,cACjB7D,aAAc,QAEhB1J,SAEDyB,GACC/B,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTH,eAAgB,SAChBD,WAAY,SACZa,OAAQ,SACR5K,UAEFN,EAAAA,EAAAA,KAAC8N,EAAAA,EAAgB,OAGnB9N,EAAAA,EAAAA,KAAA,OAAK+N,UAAU,iBAAgBzN,SAC5BuB,EAAK2G,QAAQ3C,OAAS,GACrBqE,EAAAA,EAAAA,MAAA8D,EAAAA,SAAA,CAAA1N,SAAA,CACGuB,EAAK2G,QAAQd,KAAKpC,IAAY,IAAA2I,EAAArH,EAAAuH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3H,EAAA,OAC7B7G,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,SACoB,SAAjBgF,EAAQlE,MAAoC,WAAjBkE,EAAQlE,MAClC8I,EAAAA,EAAAA,MAAA,OAEE6D,UAAS,WAAAW,QACA,OAAPpJ,QAAO,IAAPA,GAAe,QAAR2I,EAAP3I,EAASX,cAAM,IAAAsJ,OAAR,EAAPA,EAAiB7K,QAAwB,QAArBwD,EAAKvF,EAAY6B,YAAI,IAAA0D,OAAA,EAAhBA,EAAkBxD,KACvC,OACA,YACH9C,SAAA,EAEHN,EAAAA,EAAAA,KAAC2O,EAAe,CAAC/O,QAAS0F,EAAQ1F,UAC1B,OAAP0F,QAAO,IAAPA,GAAiB,QAAV6I,EAAP7I,EAASsJ,gBAAQ,IAAAT,GAAM,QAANC,EAAjBD,EAAmBjL,YAAI,IAAAkL,GAAvBA,EAAyBS,aACxB7O,EAAAA,EAAAA,KAAA,UACE4K,IAAY,OAAPtF,QAAO,IAAPA,GAAiB,QAAV+I,EAAP/I,EAASsJ,gBAAQ,IAAAP,GAAM,QAANC,EAAjBD,EAAmBnL,YAAI,IAAAoL,OAAhB,EAAPA,EAAyBO,YAC9BC,MAAM,UACNjF,MAAO,CACLkF,OAAQ,OACR9D,MAAO,QACPC,OAAQ,QACR8D,UAAW,aAIf,IAEFhP,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CACLC,IAAmB,QAAhB2D,EAAEjJ,EAAQX,cAAM,IAAA4J,OAAA,EAAdA,EAAgB9E,cACrBuB,IAAI,GACJR,IACS,OAAPlF,QAAO,IAAPA,GAAe,QAARkJ,EAAPlJ,EAASX,cAAM,IAAA6J,OAAR,EAAPA,EAAiBpL,QAAwB,QAArByD,EAAKxF,EAAY6B,YAAI,IAAA2D,OAAA,EAAhBA,EAAkBzD,KACvC,CACE6H,MAAO,SACPC,OAAQ,SACRlB,aAAc,MACdC,SAAU,WACVqB,IAAK,QACLD,MAAO,GAET,CACEJ,MAAO,SACPC,OAAQ,SACRlB,aAAc,MACdC,SAAU,WACVqB,IAAK,QACL2D,KAAM,OAzCX3J,EAAQlC,MA+CfpD,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,UACEN,EAAAA,EAAAA,KAAA,OAAK+N,UAAU,UAASzN,SACrBgF,EAAQ1F,SADmB0F,EAAQlC,QAKzC,IAEJuY,IACC3b,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CACTX,GAAI,CACF0E,UAAW,QACXzD,SAAU,OACVD,MAAO,UACPuQ,UAAW,OACXzb,SAEDqb,KAGL3b,EAAAA,EAAAA,KAAA,OAAKa,IAAKiM,QAGZ5C,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CAAEC,QAAS,OAAQ8E,cAAe,SAAU7E,IAAK,OAAQpK,SAAA,EAE7D4J,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACX,GAAI,CAAEiB,SAAU,QAASnL,SAAA,CAAC,kDACY,OA7HnC,CACzB,sBACA,2CA6H8BoH,KAAI,CAACC,EAAK+H,KAC5B1P,EAAAA,EAAAA,KAACgc,GAAAA,EAAI,CAEHxR,GAAI,CACFiB,SAAU,OACVG,eAAgB,OAChBD,OAAQ,WAEVE,QAASA,IACPjL,EAAM2E,aAAa,CAAEE,KAAM,OAAQvC,KAAMyE,IAC1CrH,SAEAqH,GAVI+H,WAiBb,EAIJP,EAAUvO,IACd,MAAOhB,EAASwP,IAAcnN,EAAAA,EAAAA,UAAS,KAChCF,EAASC,IAAcC,EAAAA,EAAAA,WAAS,GA6BjCqN,IA5BexN,EAAAA,EAAAA,QAAyB,MA4B3BkC,UACjB,IACyB,KAAnBpE,EAAQgG,QAAkBzD,GAAeA,EAAY0D,OAAS,GAChE7D,GAAW,SACLpB,EAAM2E,aAAa,CAAEE,KAAM,OAAQvC,KAAMtD,KAE/CkG,QAAQsB,IAAI,+BAEhB,CAAE,MAAOrB,GACPD,QAAQC,MAAM,uBAAwBA,EACxC,CAAC,QACC/D,GAAW,EACb,IAUF,OACEhC,EAAAA,EAAAA,KAAAgO,EAAAA,SAAA,CAAA1N,SACGkD,IACC0G,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEI,SAAU,YAAa3J,SAAA,EACvB,OAAX6B,QAAW,IAAXA,OAAW,EAAXA,EAAa0D,QAAS,IACrB7F,EAAAA,EAAAA,KAAA,OACE6J,MAAO,CACLY,QAAS,OACT8E,cAAe,SACflF,WAAY,SACZJ,SAAU,WACVqB,IAAK,QACLD,MAAO,OACP/K,UAEF4J,EAAAA,EAAAA,MAAA,OAAKL,MAAO,CAAEoB,MAAO,cAAe3K,SAAA,EAClCN,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACM,SAAS,SAAQnL,SAAC,qBAC9BN,EAAAA,EAAAA,KAAA,MAAI6J,MAAO,CAAE2F,UAAW,OAAQzF,QAAS,EAAG0F,OAAQ,GAAInP,SACrD6B,EAAYuF,KAAI,CAACtB,EAAMsJ,KACtBxF,EAAAA,EAAAA,MAAA,MACEL,MAAO,CAAE4B,SAAU,OAAQhB,QAAS,QAASnK,SAAA,CAG5C8F,EAAKX,MACNzF,EAAAA,EAAAA,KAAC2P,EAAAA,EAAK,CACJ9D,QAASA,IArDX6D,KAClB,MAAME,EAAe,IAAIzN,GACzByN,EAAaC,OAAOH,EAAO,GAC3BtN,EAAewN,EAAa,EAkDOE,CAAWJ,GAC1BlF,GAAI,CAAEiB,SAAU,OAAQE,OAAQ,eAL7B+D,YAahBnN,GACCvC,EAAAA,EAAAA,KAAA,OAAK+N,UAAU,WAAUzN,UACvB4J,EAAAA,EAAAA,MAAA,MAAA5J,SAAA,CAAI,cAAYmC,OAGlB,IAEFyH,EAAAA,EAAAA,MAAC6F,EAAAA,GAAI,CACH1D,WAAS,EACT7B,GAAI,CACFV,WAAY,UACZC,QAAS,SACTC,aAAc,UACd1J,SAAA,EAEFN,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CAACvL,MAAI,EAACwL,GAAI,IAAI1P,UACjBN,EAAAA,EAAAA,KAAC0Q,EAAAA,EAAS,CACRC,QAAQ,WACRnK,KAAK,QACLoK,QAASA,IAAMhQ,EAAM2E,aAAa,CAAEE,KAAM,gBAC1CoL,OAAQA,IAAMjQ,EAAM2E,aAAa,CAAEE,KAAM,eACzCqL,WAAS,EAETC,KAAM,EACNC,WAAS,EACTE,YAAY,uBACZD,MAAOrR,EACP4K,GAAI,CACF,qCAAsC,CACpCuE,OAAQ,EACR,UAAW,CACTA,OAAQ,IAGZ,kDAAmD,CACjDA,OAAQ,oBAGZmB,SAAWiB,GAAM/B,EAAW+B,EAAE3Q,OAAOyQ,OACrCG,UAhFS5L,IACH,UAAdA,EAAM6L,KAAoB7L,EAAM8L,UAA+B,KAAnB1R,EAAQgG,SACtDJ,EAAM+L,iBACNjC,IACF,OA+EQtP,EAAAA,EAAAA,KAAC+P,EAAAA,GAAI,CACHvL,MAAI,EACJwL,GAAI,IACJxF,GAAI,CACFC,QAAS,OACTH,eAAgB,SAChBD,WAAY,SACZP,WAAY,OACZE,aAAc,OACd1J,SAEDyB,GACC/B,EAAAA,EAAAA,KAAA,OACE4K,IAAKE,EAAAA,EAAO0G,eACZxG,IAAI,SACJnB,MAAO,CAAEoB,MAAO,WAGlBjL,EAAAA,EAAAA,KAAA,OACE4K,IAAKE,EAAAA,EAAO2G,SACZzG,IAAI,WACJnB,MAAO,CAAEoB,MAAO,OAAQC,OAAQ,QAChCW,QAASyD,aAOpB,EAIP,OACEtP,EAAAA,EAAAA,KAAA,OAAAM,UACE4J,EAAAA,EAAAA,MAACwH,EAAAA,EAAM,CACLzQ,KAAMA,EACNuJ,GAAI,CACFa,MAAO,IACP4D,KAAM,CAAE0C,GAAI,MAAO3B,GAAI,IAAK4B,GAAI,OAChCtG,IAAK,CAAEqG,GAAI,OAAQ3B,GAAI,IAAK4B,GAAI,SAElCC,WAAY,CACVhI,MAAO,CACLG,aAAc,OACdD,QAAS,OACTkB,MAAO,QACPC,OAAQ,UAIZ4G,oBAAqBpR,GACrBqR,aAAW,EACXC,QAASA,IAAM9Q,GAAQ,GACvB,mBAAiB,iCAAgCZ,SAAA,EAEjDN,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTJ,WAAY,SACZC,eAAgB,UAChBhK,UAEFN,EAAAA,EAAAA,KAACiS,EAAAA,EAAqB,CACpBzH,GAAI,CACFP,SAAU,WACVqB,IAAK,EACLE,MAAO,UACPC,SAAU,OACVE,OAAQ,UACRlB,QAAS,OACTH,eAAgB,SAChBD,WAAY,UAEdwB,QAASA,IAAM3K,GAAQ,QAG3BgJ,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAACC,GAAI,CAAEoD,GAAI,GAAItN,SAAA,EACjBN,EAAAA,EAAAA,KAAC4J,EAAM,CAACrE,aAAcA,KACtBvF,EAAAA,EAAAA,KAAC6M,EAAO,CAACtH,aAAcA,KACvBvF,EAAAA,EAAAA,KAACmP,EAAM,CAAC5J,aAAcA,WAGtB,ECrnBV,GAtJyB3E,IAAgB,IAADqV,EAAAgG,EACpC,MAAOC,EAAiBC,IAAsBla,EAAAA,EAAAA,WAAS,IAChDsQ,EAAOC,IAAYvQ,EAAAA,EAAAA,WAAS,GAC7BqB,GAAWC,EAAAA,EAAAA,OACV6Y,EAAgBC,IAAqBpa,EAAAA,EAAAA,UAAwB,MAC9Dqa,GAAiBhb,EAAAA,EAAAA,KAAgBC,GAAUA,EAAM+a,iBAKjDC,EAAoB1Z,IACtBwZ,EAAkBxZ,EAAO,EAGvB2Z,EAAmBA,KACrBH,EAAkB,KAAK,EAGrB5F,GAAenV,EAAAA,EAAAA,KAAgBC,GAAUA,EAAM0B,QAc/CwZ,EAZwBvF,KAC1B,IAAK,MAAMtV,KAAWsV,EAAc,CAAC,IAADC,EAIhC,GAH2B,OAAPvV,QAAO,IAAPA,GAAqB,QAAduV,EAAPvV,EAAS6B,oBAAY,IAAA0T,OAAd,EAAPA,EAAuBhU,MACtCoI,GAAsB,sBAAXA,EAAEV,OAGd,OAAOjJ,CAEf,CACA,OAAO,IAAI,EAGQ8a,CAAiC,OAAZjG,QAAY,IAAZA,GAAkB,QAANR,EAAZQ,EAAcvT,YAAI,IAAA+S,OAAN,EAAZA,EAAoBtU,UAEhE,OACIuI,EAAAA,EAAAA,MAAA,OACIL,MAAO,CACHI,SAAU,QACV4L,OAAQ,GACRxK,MAAO,GACPsR,OAAO,GACTrc,SAAA,EAEF4J,EAAAA,EAAAA,MAAC0S,EAAAA,EAAS,CACNC,UAAU,mBACVC,KACIZ,GACIlc,EAAAA,EAAAA,KAAC+c,EAAAA,EAAS,CAAClT,MAAO,CAAE2B,MAAO,QAASC,SAAU,WAE9CzL,EAAAA,EAAAA,KAACgd,EAAAA,EAAQ,CAACnT,MAAO,CAAE2B,MAAO,QAASC,SAAU,UAGrDI,QAASA,IAAKjL,EAAMM,SAAQ,GAC5BD,KAAMib,EACNnb,UAAU,KACVkc,SAAU,CACNpT,MAAO,CACHgE,gBAAiB,UACjBrC,MAAO,UAEblL,SAAA,EAEFN,EAAAA,EAAAA,KAACkd,EAAAA,EAAe,CACZJ,MACI9c,EAAAA,EAAAA,KAAA,OACI6J,MAAO,CACHoB,MAAO,OACPC,OAAQ,OACRS,OAAQ,WAEZf,IAAKE,EAAAA,EAAOqS,SACZnS,IAAI,cAGZoS,YAAgC,SAAnBhB,EACbiB,cACIrd,EAAAA,EAAAA,KAAA,OAAK6J,MAAO,CAAEoB,MAAO,QAASiE,UAAW,UAAW5O,SAAC,iBAIzDuL,QAASA,IAAMjL,EAAMM,SAAQ,GAC7Boc,aAAcA,IAAMf,EAAiB,QACrCgB,aAAcf,KAElBxc,EAAAA,EAAAA,KAACkd,EAAAA,EAAe,CACZJ,MACI9c,EAAAA,EAAAA,KAAA,OACI6J,MAAO,CACHoB,MAAO,SACPC,OAAQ,SACRS,OAAQ,UACR7G,OAAQ,aAEZ8F,IAAKE,EAAAA,EAAOC,GACZC,IAAI,iBAGZiS,SAAU,CACNpT,MAAO,CACHgE,gBAAiB,UACjBrC,MAAO,QACPP,MAAO,OACPC,OAAQ,SAGhBkS,YAAgC,OAAnBhB,EACbiB,cACIrd,EAAAA,EAAAA,KAAA,OAAK6J,MAAO,CAAEoB,MAAO,QAASiE,UAAW,UAAW5O,SAAC,iBAIzDuL,QAASA,KAAM,IAAD2R,EACY,QAAtBA,EAAGlB,EAAepZ,YAAI,IAAAsa,GAAnBA,EAAqBC,aACpBjL,GAAS,GAETlP,GACI6I,EAAAA,EAAAA,IAAS,CACPC,MAAM,EACNlJ,KAAM,CACJmJ,UAAW,CACT5G,KAAM,QACN6G,WAAY,CACVrB,MAAO,QACPC,OAAQ,MACRkB,KAAM,SAIVhL,KAAM,YAIlB,EAEJkc,aAAcA,IAAMf,EAAiB,MACrCgB,aAAcf,OAGF,QAAnBP,EAAAK,EAAepZ,YAAI,IAAA+Y,GAAnBA,EAAqBwB,cAAgBlL,GAClCvS,EAAAA,EAAAA,KAAC0d,GAAoB,CACjBzc,KAAMsR,EACNrR,QAASsR,EACTrR,GAAkB,OAAdsb,QAAc,IAAdA,OAAc,EAAdA,EAAgBrZ,IACpBhC,KAAK,aAET,OACF,ECrIRoZ,GAAa7Z,EAAAA,YAAiB,SAClCC,EAGAC,GAEA,OAAOb,EAAAA,EAAAA,KAACc,EAAAA,EAAK,CAACC,UAAU,KAAKF,IAAKA,KAASD,GAC7C,IACa+c,GAAYA,KACvB,MAAMra,GAAWC,EAAAA,EAAAA,MAEjB,OACE2G,EAAAA,EAAAA,MAAA,OACEL,MAAO,CACLC,WAAY,UACZC,QAAS,SACTC,aAAc,OACdC,SAAU,YACV3J,SAAA,EAEF4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACT8E,cAAe,SACflF,WAAY,QACZC,eAAgB,QAChByN,GAAI,GACJzX,SAAA,EAEF4J,EAAAA,EAAAA,MAAC0T,EAAAA,EAAW,CAACC,IAAK,EAAEvd,SAAA,EAClBN,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CAACK,IAAI,aAAaJ,IAAI,iCAC7B5K,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CAACK,IAAI,gBAAgBJ,IAAI,iCAChC5K,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CAACK,IAAI,cAAcJ,IAAI,iCAC9B5K,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CAACK,IAAI,eAAeJ,IAAI,iCAC/B5K,EAAAA,EAAAA,KAAC2K,EAAAA,EAAM,CAACK,IAAI,mBAAmBJ,IAAI,oCAErC5K,EAAAA,EAAAA,KAACmL,EAAAA,EAAU,CAACK,MAAM,UAAUJ,WAAW,MAAM0K,cAAY,EAAAxV,SAAC,sCAG1D4J,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAACK,MAAM,wBAAwBsK,cAAY,EAAAxV,SAAA,CAAC,8CACT,WAGhD4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CACFV,WAAY,OACZyB,EAAG,EACHvB,aAAc,OACdC,SAAU,WACVgF,KAAM,OACN5D,MAAO,OACPqK,UAAW,IACXjL,QAAS,OACT8E,cAAe,SACfjF,eAAgB,SAChBD,WAAY,UAEZ/J,SAAA,EAEF4J,EAAAA,EAAAA,MAACiB,EAAAA,EAAU,CAAC2K,cAAY,EAAAxV,SAAA,CAAC,2BACE,KACzBN,EAAAA,EAAAA,KAAA,QAAM6J,MAAO,CAAE2B,MAAO,yBAA0BlL,SAAC,cAAgB,QAC7DN,EAAAA,EAAAA,KAAA,QAAM6J,MAAO,CAAE2B,MAAO,yBAA0BlL,SAAC,aAAe,QAEtEN,EAAAA,EAAAA,KAAC8d,EAAAA,EAAY,CACX7S,MAAM,QACN8S,aAAcA,KAEZza,GACE6I,EAAAA,EAAAA,IAAS,CACPC,MAAM,EACNlJ,KAAM,CACJmJ,UAAW,CACT5G,KAAM,QACN6G,WAAY,CACVrB,MAAO,QACPC,OAAQ,MACRkB,KAAM,SAIVhL,KAAM,YAGX,EACDd,SACH,eAIC,EAyJV,GAtJa0d,KAAO,IAADR,EACjB,MAAMlB,GAAiBhb,EAAAA,EAAAA,KAAgBC,GAAUA,EAAM+a,kBAChDrb,EAAMC,IAAWe,EAAAA,EAAAA,WAAS,IAC1Bgc,EAAaC,IAAcjc,EAAAA,EAAAA,WAAS,GAGrCwY,EAAqBA,KACzB,MAAO0D,EAAWC,IAAgBnc,EAAAA,EAAAA,UAA+C,YACjF,OACEiI,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,EAAGI,GAAI,CAAEU,OAAQ,QAASK,EAAG,EAAGjB,eAAgB,SAAUD,WAAY,UAAW/J,SAAA,EAC/F4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CACFC,GAAI,CAAEC,QAAS,OAAQH,eAAgB,SAAUD,WAAY,SAAUY,MAAO,MAAMP,IAAI,QAASpK,SAAA,EAEjGN,EAAAA,EAAAA,KAACyM,EAAAA,EAAM,CACLZ,QAASA,IAAMuS,EAAa,YAC5B5T,GAAI,CACF6T,aAA4B,aAAdF,EAA2B,oBAAsB,EAC/D3S,MAAqB,aAAd2S,EAA2B,UAAY,YAC9CnU,aAAc,EACd0C,cAAe,OACfjB,SAAU,UACVnL,SACH,cAGDN,EAAAA,EAAAA,KAACyM,EAAAA,EAAM,CACLZ,QAASA,IAAMuS,EAAa,aAC5B5T,GAAI,CACF6T,aAA4B,cAAdF,EAA4B,oBAAsB,EAChE3S,MAAqB,cAAd2S,EAA4B,UAAY,YAC/CzR,cAAe,OACf1C,aAAc,EACdyB,SAAU,UACVnL,SACH,eAGDN,EAAAA,EAAAA,KAACyM,EAAAA,EAAM,CACLZ,QAASA,IAAMuS,EAAa,WAC5B5T,GAAI,CACF6T,aAA4B,YAAdF,EAA0B,oBAAsB,EAC9D3S,MAAqB,YAAd2S,EAA0B,UAAY,YAC7CzR,cAAe,OACf1C,aAAc,EACdyB,SAAU,UACVnL,SACH,gBAIY,aAAd6d,GACCne,EAAAA,EAAAA,KAACgW,EAAQ,IAAoB,cAAdmI,GACbne,EAAAA,EAAAA,KAACse,EAAS,IAAoB,YAAdH,GAChBne,EAAAA,EAAAA,KAACqa,EAAO,IAAM,IAElBra,EAAAA,EAAAA,KAAA,OAAK6J,MAAO,CAAEI,SAAU,WAAY4L,OAAQ,OAAQxK,MAAO,QAAS/K,UAClEN,EAAAA,EAAAA,KAAA,OACE6L,QAASA,IAAMqS,GAAW,GAC1BrU,MAAO,CACLC,WAAY,UACZ0B,MAAO,OACPN,OAAQ,OACRD,MAAO,OACPjB,aAAc,MAAOD,QAAS,SAC9B4B,OAAQ,WAERrL,UAEFN,EAAAA,EAAAA,KAACue,EAAAA,EAAO,CAAC/T,GAAI,CAAEiB,SAAU,gBAIvB,EAIZ,OACEzL,EAAAA,EAAAA,KAAA,OAAAM,UACE4J,EAAAA,EAAAA,MAAA,OAAA5J,SAAA,EACEN,EAAAA,EAAAA,KAACwe,GAAe,CAACtd,QAASA,KAC1BlB,EAAAA,EAAAA,KAAC0R,EAAAA,EAAM,CACLzQ,KAAMA,EACNuJ,GAAI,CACFa,MAAO,IACP4D,KAAM,CAAE0C,GAAI,MAAO3B,GAAI,IAAK4B,GAAI,OAChCtG,IAAK,CAAEqG,GAAI,KAAM3B,GAAI,IAAK4B,GAAI,OAEhCC,WAAY,CACVhI,MAAO,CACLG,aAAc,OACdD,QAAS,OACTkB,MAAO,QACPC,OAAQ,UAGZ4G,oBAAqB0I,GACrBzI,aAAW,EACXC,QAASA,IAAM9Q,GAAQ,GACvB,mBAAiB,iCAAgCZ,UAEjD4J,EAAAA,EAAAA,MAACK,EAAAA,EAAG,CAAAjK,SAAA,EACFN,EAAAA,EAAAA,KAACuK,EAAAA,EAAG,CACFC,GAAI,CACFC,QAAS,OACTH,eAAgB,UAChBhK,UAEFN,EAAAA,EAAAA,KAACiS,EAAAA,EAAqB,CACpBpG,QAASA,IAAM3K,GAAQ,GACvBsJ,GAAI,CACFP,SAAU,WACVqB,IAAK,EACLE,MAAO,UACPC,SAAU,OACVE,OAAQ,UACRlB,QAAS,OACTH,eAAgB,SAChBD,WAAY,cAIE,QAAnBmT,EAAAlB,EAAepZ,YAAI,IAAAsa,GAAnBA,EAAqBC,cACpBzd,EAAAA,EAAAA,KAACya,EAAkB,KAEnBza,EAAAA,EAAAA,KAAA,OACE6J,MAAO,CACLY,QAAS,OACT8E,cAAe,SACfjF,eAAgB,SAChBY,OAAQ,QACR5K,UAEFN,EAAAA,EAAAA,KAAC2d,GAAS,WAKjBM,GACCje,EAAAA,EAAAA,KAACye,EAAgB,CACfxd,KAAMgd,EACN/c,QAASgd,IAGX,OAGA,C","sources":["pages/chats/Content.tsx","pages/chats/chatContainer.tsx","genericComponents/advisorChatComponent.tsx","pages/chats/advisors.tsx","genericComponents/communityChatComponent.tsx","pages/chats/community.tsx","pages/chats/avaLite.tsx","pages/chats/newChatComponent.tsx","pages/chats/virtualChatContainer.tsx","pages/chats/chatIcon.tsx","pages/chats/chat.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport DOMPurify from \"dompurify\";\n\ninterface ContentRendererProps {\n  content: string;\n}\n\nconst ContentRenderer: React.FC<ContentRendererProps> = ({ content }) => {\n  const sanitizedContent = DOMPurify.sanitize(content);\n\n  return (\n    <ReactMarkdown\n      components={{\n        a: ({ href, children, ...rest }) => (\n          <a\n            href={href}\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            {...rest}\n          >\n            {children}\n          </a>\n        ),\n      }}\n    >\n      {sanitizedContent}\n    </ReactMarkdown>\n  );\n};\n\nexport default ContentRenderer;\n","/* eslint-disable */\nimport {\n  Avatar,\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  Grid,\n  Slide,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport Images from \"../../assets\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport {\n  blockUserRequest,\n  communicationMessage,\n  fetchAllMessages,\n  seenMessageDetails,\n} from \"../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { addMessage, initMessages } from \"../../store/Slices/messagesSlice\";\nimport {\n  Chat,\n  Event,\n  Message,\n  Participant,\n  Sharedinfo,\n  TriggerObject,\n} from \"../../types/types\";\nimport { updateChat } from \"../../store/Slices/chatsSlice\";\nimport { setPopup } from \"../../store/Slices/popupSlice\";\nimport Socket from \"../../assets/socket\";\nimport { normalizeType, setWordCase } from \"../../assets/library\";\nimport { Close } from \"@mui/icons-material\";\nimport ContentRenderer from \"./Content\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport { addBlockedList, removeBlockedList } from \"src/store/Slices/blockedListSlice\";\n\n\nconst Transition1 = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface props {\n  open: boolean;\n  setOpen: Function;\n  id: string;\n  type: \"advisors\" | \"community\";\n}\n\nconst ChatContainer = ({ open, setOpen, id, type }: props) => {\n  \n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const blockedList = useAppSelector((state) => state.BlockedList);\n  const advisors = useAppSelector((state) => state.advisor);\n  const list = useRef<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const messages = useAppSelector((state) => state.messages);\n  const [uploadFiles, setUploadFiles] = useState<File[]>([])\n  const [repliedTo, setRepliedTo] = useState(null);\n  const [replyDiv, setReplyDiv] = useState(false)\n  const [replyDivData, setReplyDivData] = useState('')\n  const [blockopen, setBlockOpen] = useState(false);\n  const [action, setAction] = useState(\"\");\n\n  const chat = useAppSelector((state) => {\n    let currentChats = state.chats;\n    return type === \"advisors\"\n      ? currentChats.data.advisors.find((chat) => chat._id === id)\n      : currentChats.data.community.find((chat) => chat._id === id);\n  });\n  const dispatch = useAppDispatch();\n\n  const participantDetails:any = chat?.participants.find(\n    (user) => user._id !== profileInfo?.data?._id\n  );\n\n  // Find the advisor data from the advisors list\n  const advisorData = advisors?.data?.find((advisor: any) => \n    advisor?.info?._id === participantDetails?._id\n  );\n\n  const seenMessages = async () => {\n    const response = await seenMessageDetails(id);\n    // console.log(response)\n    if (response.success) {\n      dispatch(updateChat(response.data));\n      if (\n        profileInfo.data &&\n        profileInfo.data._id &&\n        Object.values(profileInfo.data).every(\n          (item) => typeof item !== undefined\n        )\n      ) {\n        let triggerObj: TriggerObject = {\n          action: \"seen\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter(\n            (participant: Participant) =>\n              participant._id !== profileInfo.data?._id\n          ),\n          data: response.data,\n        };\n        Socket.emit(\"trigger\", triggerObj);\n      }\n    }\n  };\n\n  const triggerMessages = (triggerObject: TriggerObject) => {\n    switch (triggerObject.action) {\n      case \"send\":\n        //console.log(\"message send trigger\",triggerObject.data.message)\n        dispatch(addMessage({ ...triggerObject.data.message, type: \"normal\" }));\n        seenMessages();\n        break;\n\n      case \"typing\":\n        //triggerObject.data==\"start\"?dispatch(startTypingMessage({...triggerObject.sender,activity:'typing'})):dispatch(stopTypingMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n\n      case \"seen\":\n        //dispatch(seenMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n    }\n  };\n\n  const fetchMessage = async () => {\n    console.log(\"Fetching Messages\");\n    try {\n      setLoading(true);\n      const response = await fetchAllMessages(id);\n      if (response) {\n        let msgs = response.data.map((msg: Message) => ({\n          ...msg,\n          type: \"normal\",\n        }));\n        msgs.reverse();\n        dispatch(\n          initMessages({\n            requestStatus: \"initiated\",\n            responseStatus: \"recieved\",\n            haveAnIssue: false,\n            issue: \"\",\n            data: msgs,\n          })\n        );\n        if (\n          chat?.unSeenMessages\n            .filter(\n              (msg: any) => msg.message.sender._id !== profileInfo.data?._id\n            )\n            .filter(\n              (recievedMessage: any) =>\n                !recievedMessage.seen.find(\n                  (id: string) => id === profileInfo.data?._id\n                )\n            ).length != 0\n        ) {\n          await seenMessages();\n        }\n      }\n      setLoading(false);\n    } catch (error) { }\n    setLoading(false)\n  };\n\n  const bakeMessages = (messages: Message[], chat: Chat, user: Sharedinfo) => {\n    let unsetParticipants = chat.participants.filter(\n      (chat) => chat._id != user._id\n    );\n    let list: Message[] = [];\n    let seenParticipants: Participant[] = [];\n    let unseenParticipants: Participant[] = [];\n    messages.reverse();\n    messages.forEach((msg) => {\n      if (msg.sender?._id == user._id) {\n        if (unsetParticipants.length != 0) {\n          if (chat.unSeenMessages.length == 0) {\n            if (unsetParticipants.length != 0) {\n              seenParticipants = [...unsetParticipants];\n            }\n          } else {\n            if (\n              !chat.unSeenMessages.find(\n                (unseenMsg) => unseenMsg.message._id == msg._id\n              )\n            ) {\n              seenParticipants = [...unsetParticipants];\n            } else {\n              seenParticipants = unsetParticipants.filter((unsetParticipant) =>\n                chat.unSeenMessages\n                  .find((unseenMsg) => unseenMsg.message._id == msg._id)\n                  ?.seen.find(\n                    (seenParticipant) => seenParticipant == unsetParticipant._id\n                  )\n              );\n            }\n          }\n          if (seenParticipants.length != 0) {\n            let seenMessage = seenParticipants.reduce(\n              (message, seenParticipant) =>\n                message + seenParticipant.firstName + \" , \",\n              \"Seen by \"\n            );\n            list.push({\n              _id: msg._id + \"_seen\",\n              type: \"seen\",\n              content: seenMessage.substring(0, seenMessage.length - 3),\n              chat: chat._id,\n            });\n          }\n          list.push(msg);\n          unsetParticipants = unsetParticipants.filter(\n            (unsetParticipant) =>\n              !seenParticipants.find(\n                (seenParticipant) => seenParticipant._id == unsetParticipant._id\n              )\n          );\n        } else {\n          list.push(msg);\n        }\n      } else {\n        list.push(msg);\n      }\n    });\n    list.reverse();\n    let typingParticipants = chat.participants.filter(\n      (participant) => participant.activity == \"typing\"\n    );\n    //console.log(\"Typing\",typingParticipants)\n    if (typingParticipants.length != 0) {\n      let typingMessage = typingParticipants.reduce(\n        (msg, participant) => participant.firstName + \" , \",\n        \"\"\n      );\n      list.push({\n        _id: chat._id + \"_typing\",\n        type: \"typing\",\n        content:\n          typingMessage.substring(0, typingMessage.length - 3) +\n          (typingParticipants.length == 1 ? \" is typing\" : \" are typing\"),\n        chat: chat._id,\n        sender: {\n          displayPicSrc: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          _id: chat._id + \"_typing\",\n          userType: \"\",\n        },\n      });\n      //console.log(list)\n    }\n    return list;\n    //let bakedParticipants=getParticipantsLastSeenMessage(chat,user,messages);\n    //return bakeMessagesWithSeenInfo(messages,bakedParticipants);\n  };\n\n  const eventHandler = async (event: Event) => {\n    let triggerObj: TriggerObject\n    switch (event.name) {\n      case \"send\":\n        const formData = new FormData();\n        if (!event.data.trim() && uploadFiles.length === 0) {\n          // If there's no message content and no valid files, return early.\n          console.error(\"No message content or valid files to upload.\");\n          return;\n        } formData.append(\"content\", event.data);\n        formData.append(\"chatId\", id);\n        let totalSize = 0;\n\n        if (uploadFiles.length > 0) {\n          const allowedFileTypes = [\n            \"image/jpeg\",\n            \"image/jpg\",\n            \"image/png\",\n            \"application/pdf\",\n            \"application/msword\",\n            \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n          ];\n\n          const validFiles = uploadFiles.filter((file) => {\n            const isValidType = allowedFileTypes.includes(file?.type);\n            const isValidSize = file?.size <= 16 * 1024 * 1024;\n\n            if (!isValidType || !isValidSize) {\n              // console.log(`File \"${file?.name}\" is not allowed or exceeds 16MB.`);\n            }\n\n            return isValidType && isValidSize;\n          });\n\n          if (validFiles.length === 0 && !event.data) {\n            // console.error(\"No valid files selected and no message content.\");\n            return;\n          }\n\n          validFiles.forEach((file) => {\n            formData.append(\"uploaded_file\", file);\n            totalSize += file.size;\n          });\n          if (validFiles.length === 0 && !event.data.trim()) {\n            console.error(\"No valid files selected and no message content.\");\n            return;\n          }\n        }\n\n        try {\n          if (event.data.trim() || totalSize > 0) {\n            const response = await communicationMessage(formData);\n            if (response.data.success) {\n              dispatch(updateChat(response.data.data.chat));\n              dispatch(addMessage(response.data.data.message));\n              const triggerObj = {\n                action: \"send\",\n                sender: { ...profileInfo.data, userType: \"student\" },\n                recievers: chat?.participants.filter(\n                  (participant) => participant._id !== profileInfo.data?._id\n                ),\n                data: response.data.data,\n              };\n              Socket.emit(\"trigger\", triggerObj);\n              setUploadFiles([]);\n            } else {\n              console.error(\"Failed to send message or upload files.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error during file upload or message sending:\", error);\n        }\n        break;\n      case \"startTyping\":\n        triggerObj = {\n          action: \"typing\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter((participant) => participant._id != profileInfo.data?._id),\n          data: \"start\"\n        }\n        Socket.emit(\"trigger\", triggerObj);\n        break;\n      case \"stopTyping\":\n        triggerObj = {\n          action: \"typing\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter((participant) => participant._id != profileInfo.data?._id),\n          data: \"stop\"\n        }\n        Socket.emit(\"trigger\", triggerObj);\n        break;\n      case \"block\":\n        try {\n          const response1 = await blockUserRequest(action, event.data.id)\n          if(action === \"block\"){\n            dispatch(addBlockedList(response1.data.data.blocked))\n          }else{\n            dispatch(removeBlockedList(response1.data.data.blocked._id))\n\n          }\n        } catch (err) {\n          console.log(err)\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    // if (id) {\n    Socket.removeListener(\"trigger\", triggerMessages);\n    Socket.on(\"trigger\", triggerMessages);\n    fetchMessage();\n    return () => { Socket.removeListener(\"trigger\", triggerMessages) }\n    // }\n  }, []);\n\n  list.current =\n    chat && profileInfo.data\n      ? bakeMessages([...messages.data], chat, profileInfo.data)\n      : [];\n\n  const Header = (props: any) => {\n    return (\n      <div\n        style={{ background: \"#F8F8FC\", padding: \"0.5rem\", borderRadius: \"0.8rem\", position: \"relative\" }}\n      >\n        <Stack direction=\"row\" spacing={2} alignItems=\"center\" justifyContent=\"space-between\">\n          <Box sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n            <Avatar\n              src={participantDetails?.role === \"Virtual_Assistant\" ? Images.ai : participantDetails?.displayPicSrc}\n              alt=\"profile\"\n              sx={{ width: \"3rem\", height: \"3rem\", borderRadius: \"50%\" }}\n            />\n            <Typography fontWeight=\"500\" sx={{\n              position: \"absolute\", right: \"10px\", top: \"-1rem\", background: \"#fff\", p: 1, borderRadius: \"10px\",\n              color: participantDetails?.role === \"counsellor\" ? \"#3B3F76\" : participantDetails?.role === \"processCoordinator\" ? \"#569228\" : \"#FEB853\", fontSize: \"14px\"\n            }}>\n              {participantDetails?.role ? normalizeType(participantDetails?.role) : participantDetails?.role}\n            </Typography>\n            <Box>\n              {participantDetails?.firstName || participantDetails?.lastName ?\n                <Typography \n                  fontWeight=\"500\"\n                  sx={{\n                    cursor: 'pointer',\n                    '&:hover': {\n                      color: '#4CAF50',\n                      textDecoration: 'underline'\n                    }\n                  }}\n                  onClick={() => {\n                    console.log(\"Advisor name clicked!\");\n                    console.log(\"participantDetails:\", participantDetails);\n                    console.log(\"advisorData:\", advisorData);\n                    console.log(\"All advisors data:\", advisors?.data);\n                    \n                    // Try to find advisor data even if the initial lookup failed\n                    let foundAdvisorData = advisorData;\n                    if (!foundAdvisorData && participantDetails?._id) {\n                      foundAdvisorData = advisors?.data?.find((advisor: any) => \n                        advisor?.info?._id === participantDetails._id ||\n                        advisor?._id === participantDetails._id\n                      );\n                      console.log(\"Found advisor data after retry:\", foundAdvisorData);\n                    }\n                    \n                    // Very permissive conditions - allow clicking for any advisor that's not virtual assistant\n                    if (participantDetails?.role && \n                        participantDetails?.role !== \"Virtual_Assistant\") {\n                      console.log(\"Opening advisor popup...\");\n                      \n                      // If we have advisor data, use it; otherwise create a basic structure\n                      const dataToUse = foundAdvisorData || {\n                        _id: participantDetails._id,\n                        info: participantDetails,\n                        assignedCountries: []\n                      };\n                      \n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"advisor\",\n                              data: dataToUse,\n                              dimensions: {\n                                width: \"1200px\",\n                                height: \"85%\"\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      );\n                    } else {\n                      console.log(\"Conditions not met for opening popup\");\n                      console.log(\"role:\", participantDetails?.role);\n                      console.log(\"isVirtualAssistant:\", participantDetails?.role === \"Virtual_Assistant\");\n                    }\n                  }}\n                >\n                  {setWordCase(participantDetails?.firstName)}\n                  &nbsp;{setWordCase(participantDetails?.lastName)}\n                </Typography> : <Typography>User</Typography>\n              }\n            </Box>\n          </Box>\n          {participantDetails?.userType !== \"member\" && \n          <Box sx={{ float: \"right\" }}>\n            <Button sx={{ textTransform: \"none\", color: \"#3b3f76\", float: \"right\" }} \n            onClick={() => {\n              const isBlocked = blockedList.data.some(\n                (item: any) => item?._id === participantDetails?._id\n              );\n              setAction(isBlocked ? \"unblock\" : \"block\");\n              props.setBlockOpen(true);\n            }}>\n              {blockedList.data.some(\n                (item: any) =>\n                  item?._id === participantDetails?._id\n              ) ? \"Unblock\" : \"Block\"}\n            </Button>\n          </Box> }\n        </Stack>\n      </div>\n    );\n  };\n  const Content = () => {\n    const bottomRef = useRef<HTMLDivElement>(null);\n    const chatContainerRef = useRef<HTMLDivElement>(null);\n    const [isUserAtBottom, setIsUserAtBottom] = useState(true);\n\n    const handleScroll = () => {\n      if (chatContainerRef.current) {\n        const { scrollTop, scrollHeight, clientHeight } = chatContainerRef.current;\n        const isAtBottom = scrollHeight - scrollTop - clientHeight <= 5;\n        setIsUserAtBottom(isAtBottom);\n      }\n    };\n\n    useEffect(() => {\n      if (isUserAtBottom) {\n        bottomRef.current?.scrollIntoView({ behavior: 'auto' });\n      }\n    }, [list.current]);\n\n    useEffect(() => {\n      bottomRef.current?.scrollIntoView({ behavior: 'auto' });\n    }, []);\n\n\n    return (\n      <Box\n        ref={chatContainerRef}\n        onScroll={handleScroll}\n        sx={{\n          overflowY: \"scroll\",\n          mt: 3,\n          height: \"390px\",\n          \"&::-webkit-scrollbar\": {\n            width: \"12px\",\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            backgroundColor: \"transparent\",\n            borderRadius: \"8px\",\n          },\n        }}\n      >\n        {loading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"300px\",\n            }}\n          >\n            <CircularProgress />\n          </Box>\n        ) : (\n          <div className=\"chat-container\" >\n            {list.current.length > 0 ?\n              <>\n                {list.current.map((message: any) => (\n                  <>\n                    {message.type !== \"seen\" && message.type !== \"typing\" ? (\n                      <div\n                        key={message._id}\n                        className={`message ${message?.sender?._id === profileInfo.data?._id\n                          ? \"sent\"\n                          : \"received\"\n                          }`}\n                      >\n                        <ContentRenderer content={message.content} />\n                        {message?.document?.data?.preview_url ?\n                          // auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit\n                          <iframe\n                            src={message?.document?.data?.preview_url}\n                            title=\"preview\"\n                            style={{\n                              border: \"none\",\n                              width: \"150px\",\n                              height: \"150px\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n                          : \"\"}\n                        <Avatar\n                          src={message.sender?.displayPicSrc}\n                          alt=\"\"\n                          sx={\n                            message?.sender?._id === profileInfo.data?._id\n                              ? {\n                                width: \"1.5rem\",\n                                height: \"1.5rem\",\n                                borderRadius: \"50%\",\n                                position: \"absolute\",\n                                top: \"-12px\",\n                                right: 0,\n                              }\n                              : {\n                                width: \"1.5rem\",\n                                height: \"1.5rem\",\n                                borderRadius: \"50%\",\n                                position: \"absolute\",\n                                top: \"-12px\",\n                                left: 0,\n                              }\n                          }\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"seenMsg\">{message.content}</div>\n                    )}\n                  </>\n                ))}\n                <div ref={bottomRef}></div>          </> : (\n                participantDetails ?\n                  <Typography textAlign=\"center\">Start chat</Typography> :\n                  <Typography textAlign=\"center\">No chat</Typography>\n\n              )}\n\n          </div>\n        )}  {blockedList.data.some(\n          (item: any) =>\n            item?._id === participantDetails?._id\n        ) \n&&          <Typography textAlign=\"center\" fontSize=\"0.9rem\">You blocked this member.</Typography>\n        }\n      </Box>\n    );\n  };\n  const Footer = (props: any) => {\n    const [content, setContent] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const actionHandler = (action: any) => {\n\n      // console.log('action', action)\n\n      if (action.type == 'reply') {\n        setRepliedTo(action.data.id)\n      }\n      if (action.type == 'copy') {\n        // console.log(messages[action.data.index])\n        // navigator.clipboard.writeText(messages[action.data.index].content);\n      }\n    }\n\n    const showReplyDiv = (messagedata: any) => {\n      setReplyDiv(true)\n      setReplyDivData(messagedata)\n\n    }\n    const handleFileChange = (event: any) => {\n      const selectedFiles = Array.from(event.target.files);\n      setUploadFiles(selectedFiles as File[]);\n      // console.log(selectedFiles)\n    };\n    const removeFile = (index: any) => {\n      const updatedFiles = [...uploadFiles];\n      updatedFiles.splice(index, 1);\n      setUploadFiles(updatedFiles);\n    };\n\n    const handleSend = async () => {\n      try {\n        if (content.trim() !== \"\" || (uploadFiles && uploadFiles.length > 0)) {\n          setLoading(true);\n          setOpen(true)\n\n          await props.eventHandler({ name: \"send\", data: content });\n        } else {\n          console.log(\"No content or files to send.\");\n        }\n      } catch (error) {\n        console.error(\"Error while sending:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === \"Enter\" && !event.shiftKey && content.trim() !== \"\") {\n        event.preventDefault();\n        handleSend();\n      }\n    };\n\n    return (\n      <>\n        {participantDetails &&\n          <div style={{ position: \"relative\" }}>\n            {uploadFiles?.length > 0 && (\n              <div style={{\n                display: 'flex', flexDirection: 'column', alignItems: 'center', position: \"absolute\",\n                top: \"-44px\",\n                right: \"35%\",\n              }}>\n                <div style={{ width: 'fitContent' }}>\n                  <Typography fontSize=\"0.9rem\">Selected files:</Typography>\n                  <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>\n                    {uploadFiles.map((file, index) => (\n                      <li style={{ fontSize: '12px', display: 'flex' }} key={index}>\n                        {file.name}\n                        <Close onClick={() => removeFile(index)} sx={{ fontSize: \"1rem\", cursor: \"pointer\" }} />\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )}\n            {\n              replyDiv ? <div className='replyDiv'>\n                <h5>reply to:- {replyDivData}</h5>\n              </div> : ''\n            }\n\n            {blockedList.data.some(\n              (item: any) =>\n                item?._id === participantDetails?._id\n            ) ?\"\":\n              <Grid container sx={{ background: \"#F8F8FC\", padding: \"0.5rem\", borderRadius: \"0.8rem\" }}>\n\n                <Grid\n                  item\n                  xs={1}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <div>\n                    <input\n                      type=\"file\"\n                      multiple\n                      style={{ display: 'none' }}\n                      onChange={handleFileChange}\n                      ref={fileInputRef}\n                    />\n                    <DescriptionIcon sx={{ color: \"\", cursor: \"pointer\" }} onClick={() => fileInputRef?.current?.click()} />\n\n                  </div>\n                </Grid>\n\n                <Grid item xs={9.5}>\n                  <TextField\n                    variant=\"outlined\"\n                    size=\"small\"\n                    onFocus={() => props.eventHandler({ name: \"startTyping\" })}\n                    onBlur={() => props.eventHandler({ name: \"stopTyping\" })}\n                    multiline\n                    // maxRows={3}\n                    rows={2}\n                    fullWidth\n                    value={content}\n                    placeholder=\"Type your message...\"\n                    sx={{\n                      \"& .MuiOutlinedInput-notchedOutline\": {\n                        border: 0,\n                        \"&:Focus\": {\n                          border: 0,\n                        },\n                      },\n                      \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                        border: \"none !important\",\n                      },\n                    }}\n                    onChange={(e) => setContent(e.target.value)}\n                    onKeyDown={handleKeyDown}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  xs={1.5}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    background: \"#fff\", borderRadius: \"6px\"\n                  }}\n                >\n                  {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"loader\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    <img\n                      src={Images.sendIcon}\n                      alt=\"sendIcon\"\n                      style={{ width: \"2rem\", height: \"2rem\" }}\n                      onClick={handleSend}\n                    />\n                  )}\n                </Grid>\n              </Grid>\n            }\n          </div>}\n      </>\n\n    );\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        sx={{\n          right: \"0\",\n          left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n          top: { md: \"10px\", xs: \"0\", lg: \"25px\" },\n        }}\n        PaperProps={{\n          style: {\n            borderRadius: \"1rem\",\n            padding: \"1rem\",\n            width: \"410px\",\n            height: \"582px\",\n            // background: \"#EDF2F6\",\n          },\n        }}\n        TransitionComponent={Transition1}\n        keepMounted\n        onClose={() => setOpen(false)}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <KeyboardArrowDownIcon\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              color: \"#0F0F0F\",\n              fontSize: \"2rem\",\n              cursor: \"pointer\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onClick={() => setOpen(false)}\n          />\n        </Box>\n        <Box sx={{ mt: 3 }}>\n          <Header eventHandler={eventHandler} setBlockOpen={setBlockOpen} />\n          <Content />\n          <Footer eventHandler={eventHandler} />\n        </Box>\n      </Dialog>\n      <ConfirmDialog\n        open={blockopen}\n        handleClose={() => setBlockOpen(false)}\n        additionalData={{\n          onSubmit: () => eventHandler({\n            name: \"block\",\n            data: { id: participantDetails?._id }\n          }),\n          title: `Are you sure you want to ${action} this user?`,\n          content: \"\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","import { Avatar, Box, Card, Grid, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppSelector } from \"../assets/hooks\";\nimport { normalizeType, setWordCase } from \"../assets/library\";\nimport ChatContainer from \"../pages/chats/chatContainer\";\nimport { Chat, Participant, Sharedinfo } from \"../types/types\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport Images from \"src/assets\";\n\ninterface BakedData {\n  dp: string;\n  name: string;\n  lastMessage?: LastMessage;\n  unseenMessages: number;\n  chatType: \"1-1\" | \"group\";\n  activeParticipants: Participant[];\n  role: string;\n}\ninterface LastMessage {\n  sender: \"current\" | \"others\";\n  status: \"seen\" | \"unseen\";\n  message: string;\n}\n\nconst AdvisorChatComponent = (props: { data: Chat }) => {\n  const [open1, setOpen1] = useState(false);\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const profile = profileInfo?.data;\n\n  const bakeLastMessage = (rawdata: Chat, currentUser: Participant) => {\n    let bakedData: LastMessage = {\n      sender:\n        rawdata.lastMessage?.sender === currentUser._id ? \"current\" : \"others\",\n      message: rawdata.lastMessage?.content ? rawdata.lastMessage?.content : \"\",\n      status: \"seen\",\n    };\n    if (bakedData.sender === \"current\") {\n      bakedData.status =\n        rawdata.unSeenMessages.findIndex(\n          (item) => item.message._id === rawdata.lastMessage?._id\n        ) === -1\n          ? \"seen\"\n          : \"unseen\";\n    } else {\n      let index = rawdata.unSeenMessages.findIndex(\n        (item) => item.message._id === rawdata.lastMessage?._id\n      );\n      bakedData.status =\n        index === -1\n          ? \"seen\"\n          : rawdata.unSeenMessages[index].seen.findIndex(\n            (item) => item === currentUser._id\n          ) === -1\n            ? \"unseen\"\n            : \"seen\";\n    }\n    return bakedData;\n  };\n\n  const bakeActivity = (rawdata: Chat, currentUser: Participant) => {\n    let inchat = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"inchat\" && participant._id !== currentUser._id\n    );\n    let online = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"online\" && participant._id !== currentUser._id\n    );\n    let typing = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"typing\" && participant._id !== currentUser._id\n    );\n    return [...typing, ...inchat, ...online];\n  };\n\n  const bakedata = (rawdata: Chat, profile: Sharedinfo): BakedData => {\n    let bakedData: BakedData = {\n      dp: \"\",\n      name: \"\",\n      unseenMessages: 0,\n      activeParticipants: [],\n      chatType: \"1-1\",\n      lastMessage: undefined,\n      role: \"\"\n    };\n\n    let currentUser = rawdata?.participants?.find(\n      (participant) => participant._id === profile._id\n    );\n\n    let otherUsers = rawdata?.participants?.filter(\n      (participant) => (participant._id !== profile._id)\n    );\n    if (rawdata?.participants?.length <= 2) {\n      bakedData.name = otherUsers?.length > 0 \n      ? (otherUsers?.[0]?.firstName \n          ? otherUsers?.[0]?.firstName \n          : \"user\") + \n        (otherUsers?.[0]?.lastName \n          ? \" \" + otherUsers?.[0]?.lastName \n          : \"\")\n      : \"Deleted User\";\n      bakedData.dp = otherUsers?.length > 0 ? otherUsers?.[0]?.displayPicSrc:\"\";\n      bakedData.role = otherUsers?.length > 0 ? otherUsers?.[0]?.role :\"\";\n    } else{\n      bakedData.chatType = \"group\";\n      bakedData.name = \"Group Name\";\n    }\n\n    bakedData.unseenMessages = rawdata.unSeenMessages\n      .filter((msg) => msg.message?.sender?._id !== profile?._id)\n      .filter(\n        (receivedMessage) =>\n          !receivedMessage.seen.some((id) => id === profile._id)\n      ).length;\n\n    if (rawdata.lastMessage && currentUser) {\n      bakedData.lastMessage = bakeLastMessage(rawdata, currentUser);\n      bakedData.activeParticipants = bakeActivity(rawdata, currentUser);\n    }\n\n    return bakedData;\n  };\n  const bakedData = profile ? bakedata(props.data, profile) : null;\n\n  const LastMessageContainer = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          // justifyContent: \"space-between\",\n          gap: \"8px\",\n          width: \"100%\",\n        }}\n      >\n        {bakedData?.lastMessage?.sender === \"current\" ? (\n          <>\n            {bakedData?.lastMessage?.status === \"seen\" ? (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"#2196f3\", fontSize: \"1rem\" }} />\n              </Box>\n            ) : (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"gray\", fontSize: \"1rem\" }} />\n              </Box>\n            )}\n          </>\n        ) : null}\n        <Typography\n          sx={{\n            fontSize: \"12px\",\n            width: \"200px\",\n            height: \"2rem\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            fontWeight:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"300\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                  ? \"300\"\n                  : \"600\",\n            color:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"#98999A\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                  ? \"#98999A\"\n                  : \"#000\",\n          }}\n        >\n          {bakedData?.lastMessage?.message}\n          <Typography variant=\"body1\" fontWeight=\"400\" color=\"#000\" fontSize=\"0.8rem\">\n            {bakedData?.lastMessage?.message ? \"\" : \"Tap to chat\"}\n          </Typography>\n        </Typography>\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Card\n        sx={{\n          pl: 1, background: \"#F8F8FC\", borderRadius: \"10px\", boxShadow: 0,\n          cursor: \"pointer\"\n        }}\n        onClick={() => setOpen1(true)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={2} sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", position: \"relative\" }}>\n            {/* <Box sx={{position:\"absolute\",top:\"-15px\",display:\"flex\",gap:\"1rem\"}}> */}\n            <Avatar\n              src={bakedData?.role === \"Virtual_Assistant\" ? Images.ai:bakedData?.dp}\n              alt=\"logo\"\n              style={{ width: \"2.5rem\", height: \"2.5rem\", borderRadius: \"50%\", marginLeft: \"0.8rem\" }}\n            />\n\n            {/* </Box> */}\n            {\n              bakedData?.chatType === \"1-1\"\n                ?\n                bakedData?.activeParticipants.length !== 0 && bakedData?.activeParticipants[0].activity !== \"offline\"\n                  ?\n                  <FiberManualRecordIcon sx={{ color: \"green\", fontSize: \"1rem\", position: \"absolute\", bottom: \"10px\", right: \"-7px\" }} />\n                  :\n                  null\n                :\n                null\n            }\n          </Grid>\n          <Grid item xs={8} sx={{ mt: 1 }}>\n            <Typography fontWeight=\"500\" gutterBottom>\n              {setWordCase(bakedData?.name)}\n            </Typography>\n            {bakedData?.name === \"Deleted User\" ? <Box sx={{p:1}}></Box>: \n            <LastMessageContainer /> }\n          </Grid>\n          <Grid item xs={2} sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n            <Typography sx={{\n              background: \"#3b3f76\",\n              color: \"#fff\",\n              borderRadius: \"50%\",\n              width: \"1rem\",\n              height: \"1rem\",\n              border: \"1px solid #3B3F76\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n\n            }}>{bakedData?.unseenMessages}</Typography>\n          </Grid>\n          <Grid item xs={12} sx={{ position: \"absolute\", right: \"10px\", top: \"-2rem\", }}>\n            <Typography fontWeight=\"500\" sx={{\n              background: \"#fff\", p: 0.5, borderRadius: \"10px\",\n              color: bakedData?.role === \"counsellor\" ? \"#3B3F76\" : bakedData?.role === \"processCoordinator\" ? \"#569228\" : \"#FEB853\", fontSize: \"14px\"\n            }}>\n              {bakedData?.role ? normalizeType(bakedData?.role) : bakedData?.role}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Card>\n      {open1 ? (\n        <ChatContainer\n          open={open1}\n          setOpen={setOpen1}\n          id={props?.data?._id}\n          type=\"advisors\"\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default AdvisorChatComponent;\n","import { Box, Grid, Typography, Avatar, TextField, InputAdornment } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../../assets/hooks\";\nimport AdvisorChatComponent from \"../../genericComponents/advisorChatComponent\";\nimport { Chat } from \"../../types/types\";\nimport { postingNewChatOrRetrivingOldChat, requestAdvisor } from \"../../services\";\nimport { addChats } from \"../../store/Slices/chatsSlice\";\nimport { setPopup } from \"../../store/Slices/popupSlice\";\nimport { Advisor } from \"../../types/types\";\nimport { getAdvisorTitle, normalizeType } from \"../../assets/library\";\nimport ChatContainer from \"./chatContainer\";\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Advisors = () => {\n  const advisorchats = useAppSelector((state) => state.chats);\n  const advisors = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n  const [loadingChat, setLoadingChat] = useState<string | null>(null);\n  const [openChatId, setOpenChatId] = useState<string | null>(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n\n  const filterOutVirtualAssistant = (advisorArray: Chat[]) => {\n    return advisorArray?.filter((advisor: any) => {\n      return !advisor?.participants?.some((p: any) => p.role === \"Virtual_Assistant\");\n    });\n  };\n  \n  const virtualAssistant = advisorchats?.data?.advisors?.find((item) => \n    item?.participants?.find((item2) => item2.role === \"Virtual_Assistant\")\n  ) as Chat;\n  \n  const filteredAdvisors = virtualAssistant \n    ? [virtualAssistant, ...filterOutVirtualAssistant(advisorchats?.data?.advisors || [])]\n    : filterOutVirtualAssistant(advisorchats?.data?.advisors || []);\n\n    console.log(\"Advisor Chats\",filteredAdvisors);\n\n  // Filter dashboard advisors based on search query\n  const filteredDashboardAdvisors = advisors?.data?.filter((advisor: Advisor) => {\n    if (!advisor?.info) return false;\n    \n    const fullName = `${normalizeType(advisor.info.firstName || '')} ${normalizeType(advisor.info.lastName || '')}`.toLowerCase();\n    const role = getAdvisorTitle(advisor.info.role).toLowerCase();\n    const query = searchQuery.toLowerCase();\n    \n    return fullName.includes(query) || role.includes(query);\n  }) || [];\n\n  const handleChatClick = async (advisor: Advisor) => {\n    if (!advisor?._id) {\n      console.error(\"Advisor ID is missing\");\n      return;\n    }\n    \n    setLoadingChat(advisor._id);\n    \n    try {\n      // Find the chat for this advisor\n      const advisorChat = advisorchats?.data?.advisors?.find((chat: any) => \n        chat?.participants?.some((participant: any) => \n          participant?._id === advisor?.info?._id\n        )\n      );\n      \n      if (advisorChat) {\n        // Chat exists, open it directly\n        setOpenChatId(advisorChat._id);\n      } else {\n        // Chat doesn't exist, create one by requesting advisor for the first assigned country\n        if (advisor.assignedCountries && advisor.assignedCountries.length > 0) {\n          // const response = await requestAdvisor({\n          //   country: advisor.assignedCountries[0],\n          // });\n          const response = await initiateChat(advisor.info._id)\n          if (response?.data?.data?.chat) {\n            dispatch(addChats(response.data));\n            setOpenChatId(response.data._id);\n          }\n        } else {\n          console.error(\"No assigned countries found for advisor\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error opening chat:\", error);\n      setError(\"Failed to open chat. Please try again.\");\n    } finally {\n      setLoadingChat(null);\n    }\n  };\n\n  // Check if advisor has an existing chat\n  const hasExistingChat = (advisor: Advisor) => {\n    return advisorchats?.data?.advisors?.find((chat: any) => \n      chat?.participants?.some((participant: any) => \n        participant?._id === advisor?.info?._id\n      )\n    );\n  };\n\n  const initiateChat = async (id:string) => {\n    try{\n      const response = await postingNewChatOrRetrivingOldChat(id);\n      if (response && response.data !== undefined) {\n\n      } else {\n\n      }\n      return response.data;\n    }catch(error){\n\n    }\n  }\n\n  return (\n    <Box sx={{\n      overflowY: \"scroll\",\n      height: \"450px\",\n      \"&::-webkit-scrollbar\": {\n        width: \"12px\",\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n      },\n      \"&::-webkit-scrollbar-track\": {\n        backgroundColor: \"#fff\",\n      },\n      width:\"100%\",\n      mt:1\n    }}>\n      {/* Error display */}\n      {error && (\n        <Box sx={{ \n          display: 'flex', \n          justifyContent: 'center', \n          mb: 2,\n          p: 2,\n          backgroundColor: '#ffebee',\n          borderRadius: '12px',\n          mx: 1\n        }}>\n          <Typography color=\"#d32f2f\" fontSize=\"0.9rem\">\n            {error}\n          </Typography>\n        </Box>\n      )}\n\n      {/* Search Bar */}\n      <Box sx={{ mb: 3, px: 1 }}>\n        <TextField\n          fullWidth\n          placeholder=\"Search advisors...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon sx={{ color: '#666' }} />\n              </InputAdornment>\n            ),\n          }}\n          sx={{\n            '& .MuiOutlinedInput-root': {\n              borderRadius: '12px',\n              backgroundColor: '#fff',\n              '& fieldset': {\n                borderColor: '#E0E0F6',\n              },\n              '&:hover fieldset': {\n                borderColor: '#3B3F76',\n              },\n              '&.Mui-focused fieldset': {\n                borderColor: '#3B3F76',\n              },\n            },\n          }}\n        />\n      </Box>\n\n      {/* No results message */}\n      {searchQuery && filteredDashboardAdvisors.length === 0 && (\n        <Box sx={{ \n          display: 'flex', \n          justifyContent: 'center', \n          alignItems: 'center',\n          height: '100px',\n          flexDirection: 'column',\n          gap: 1\n        }}>\n          <Typography color=\"#666\" fontSize=\"1rem\">\n            No advisors found for \"{searchQuery}\"\n          </Typography>\n          <Typography color=\"#999\" fontSize=\"0.8rem\">\n            Try searching with a different term\n          </Typography>\n        </Box>\n      )}\n\n      {/* Active Chats section - now includes all advisors */}\n      <Box>\n        <Typography \n          color=\"#3B3F76\" \n          fontSize=\"1.1rem\" \n          fontWeight={600} \n          mb={2}\n          sx={{ px: 1 }}\n        >\n          Active Chats\n        </Typography>\n        <Grid container spacing={2}>\n          {/* Show existing chat components first */}\n          {filteredAdvisors && advisorchats?.data?.advisors?.length > 0 && \n            filteredAdvisors?.map((item: Chat, i:any) => (\n              <Grid item xs={12} key={item?._id || i}>\n                <AdvisorChatComponent data={item} />\n              </Grid>\n            ))\n          }\n          \n          {/* Show dashboard advisors that don't have existing chats */}\n          {filteredDashboardAdvisors.map((advisor: Advisor, idx: number) => {\n            try {\n              const hasChat = hasExistingChat(advisor);\n              \n              // Skip if advisor info is missing or already has a chat (shown above)\n              if (!advisor?.info || hasChat) {\n                return null;\n              }\n              \n              return (\n                <Grid item xs={12} key={advisor._id || idx}>\n                  <Box\n                    sx={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      background: '#fff',\n                      borderRadius: '12px',\n                      p: 2,\n                      boxShadow: '0px 2px 8px 0px #E0E0F6',\n                      border: '2px solid transparent',\n                      cursor: 'pointer',\n                      '&:hover': {\n                        boxShadow: '0px 4px 12px 0px #E0E0F6',\n                      },\n                      mb: 1,\n                      opacity: loadingChat === advisor._id ? 0.7 : 1,\n                    }}\n                    onClick={() => handleChatClick(advisor)}\n                  >\n                    <Avatar\n                      src={advisor?.info?.displayPicSrc}\n                      alt=\"pic\"\n                      sx={{ width: 40, height: 40, mr: 2, boxShadow: '0 1px 4px #E0E0F6' }}\n                    />\n                    <Box sx={{ flex: 1 }}>\n                      <Typography fontWeight={700} color=\"#3B3F76\" fontSize=\"1rem\" lineHeight={1.3}>\n                        {normalizeType(advisor?.info?.firstName || '')} {normalizeType(advisor?.info?.lastName || '')}\n                      </Typography>\n                      <Typography color=\"#666\" fontSize=\"0.85rem\" fontWeight={400} lineHeight={1.3}>\n                        {getAdvisorTitle(advisor?.info?.role)}\n                      </Typography>\n                    </Box>\n                    \n                    {/* Role badge */}\n                    <Box\n                      sx={{\n                        display: 'inline-block',\n                        px: 1.5,\n                        py: 0.3,\n                        borderRadius: '12px',\n                        background: '#E6E6FA',\n                        border: '1px solid #3B3F76',\n                        mr: 1,\n                      }}\n                    >\n                      <Typography fontSize=\"0.65rem\" color=\"#3B3F76\" fontWeight={600}>\n                        {getAdvisorTitle(advisor?.info?.role)}\n                      </Typography>\n                    </Box>\n                    \n                    {/* Status badge */}\n                    <Box\n                      sx={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        width: 20,\n                        height: 20,\n                        borderRadius: '50%',\n                        background: '#3B3F76',\n                        color: '#fff',\n                      }}\n                    >\n                      <Typography fontSize=\"0.6rem\" fontWeight={600}>\n                        {loadingChat === advisor._id ? '...' : '!'}\n                      </Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              );\n            } catch (err) {\n              console.error(\"Error rendering advisor:\", err);\n              return null;\n            }\n          })}\n        </Grid>\n      </Box>\n\n      {/* Empty state when no advisors and no chats */}\n      {(!advisors?.data || advisors.data.length === 0) && \n       (!filteredAdvisors || advisorchats?.data?.advisors?.length === 0) && (\n        <Box sx={{\n          height:\"5rem\",\n          borderRadius:\"20px\",\n          display:\"flex\",\n          flexDirection: \"column\",\n          justifyContent:\"center\",\n          alignItems:\"center\",\n          width:\"100%\",\n          gap: 2\n        }}>\n          <Typography color=\"#3B3F76\">No advisors assigned</Typography>\n          <Typography color=\"#666\" fontSize=\"0.8rem\">\n            Contact support to get assigned an advisor\n          </Typography>\n        </Box>\n      )}\n\n      {/* Chat Container for selected advisor */}\n      {openChatId && (\n        <ChatContainer\n          open={!!openChatId}\n          setOpen={() => setOpenChatId(null)}\n          id={openChatId}\n          type=\"advisors\"\n        />\n      )}\n     \n    </Box>\n  );\n};\n\nexport default Advisors\n","import { Avatar, Box, Card, Grid, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppSelector } from \"../assets/hooks\";\nimport { setWordCase } from \"../assets/library\";\nimport ChatContainer from \"../pages/chats/chatContainer\";\nimport { Chat, Participant, Sharedinfo } from \"../types/types\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\ninterface BakedData {\n  dp: string;\n  name: string;\n  lastMessage?: LastMessage;\n  unseenMessages: number;\n  chatType: \"1-1\" | \"group\";\n  activeParticipants: Participant[];\n}\ninterface LastMessage {\n  sender: \"current\" | \"others\";\n  status: \"seen\" | \"unseen\";\n  message: string;\n}\n\nconst CommunityChatComponent = (props: { data: Chat }) => {\n  const [open1, setOpen1] = useState(false);\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const profile = profileInfo?.data;\n\n  const bakeLastMessage = (rawdata: Chat, currentUser: Participant) => {\n    let bakedData: LastMessage = {\n      sender:\n        rawdata.lastMessage?.sender === currentUser._id ? \"current\" : \"others\",\n      message: rawdata.lastMessage?.content ? rawdata.lastMessage?.content : \"\",\n      status: \"seen\",\n    };\n    if (bakedData.sender === \"current\") {\n      //console.log(\"sender\",rawdata._id,rawdata.unSeenMessages.findIndex((item)=>item._id===rawdata.lastMessage?._id));\n      bakedData.status =\n        rawdata.unSeenMessages.findIndex(\n          (item) => item.message._id === rawdata.lastMessage?._id\n        ) === -1\n          ? \"seen\"\n          : \"unseen\";\n    } else {\n      let index = rawdata.unSeenMessages.findIndex(\n        (item) => item.message._id === rawdata.lastMessage?._id\n      );\n      bakedData.status =\n        index === -1\n          ? \"seen\"\n          : rawdata.unSeenMessages[index].seen.findIndex(\n              (item) => item === currentUser._id\n            ) === -1\n          ? \"unseen\"\n          : \"seen\";\n    }\n    return bakedData;\n  };\n\n  const bakeActivity = (rawdata: Chat, currentUser: Participant) => {\n    let inchat = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"inchat\" && participant._id !== currentUser._id\n    );\n    let online = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"online\" && participant._id !== currentUser._id\n    );\n    let typing = rawdata.participants.filter(\n      (participant) =>\n        participant.activity === \"typing\" && participant._id !== currentUser._id\n    );\n    //console.log(JSON.stringify(rawdata.participants,null,2))\n    return [...typing, ...inchat, ...online];\n  };\n\n  const bakedata = (rawdata: Chat, profile: Sharedinfo): BakedData => {\n    let bakedData: BakedData = {\n      dp: \"\",\n      name: \"\",\n      unseenMessages: 0,\n      activeParticipants: [],\n      chatType: \"1-1\",\n      lastMessage: undefined,\n    };\n\n    let currentUser = rawdata.participants.find(\n      (participant) => participant._id === profile._id\n    );\n\n    let otherUsers = rawdata.participants.filter(\n      (participant) => participant._id !== profile._id\n    );\n\n    if (rawdata.participants.length <= 2) {\n      bakedData.name = otherUsers?.length > 0 \n      ? (otherUsers?.[0]?.firstName \n          ? otherUsers?.[0]?.firstName \n          : \"user\") + \n        (otherUsers?.[0]?.lastName \n          ? \" \" + otherUsers?.[0]?.lastName \n          : \"\")\n      : \"Deleted User\"\n      bakedData.dp = otherUsers?.length > 0 ? otherUsers?.[0].displayPicSrc:\"\";\n    } else{\n      bakedData.chatType = \"group\";\n      bakedData.name = \"Group Name\";\n    }\n\n    bakedData.unseenMessages = rawdata.unSeenMessages\n      .filter((msg) => msg?.message?.sender?._id !== profile?._id)\n      .filter(\n        (receivedMessage) =>\n          !receivedMessage.seen.some((id) => id === profile._id)\n      ).length;\n\n    if (rawdata.lastMessage && currentUser) {\n      bakedData.lastMessage = bakeLastMessage(rawdata, currentUser);\n      bakedData.activeParticipants = bakeActivity(rawdata, currentUser);\n    }\n\n    return bakedData;\n  };\n  const bakedData = profile ? bakedata(props.data, profile) : null;\n\n  const LastMessageContainer = () => {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          // justifyContent: \"space-between\",\n          gap:\"8px\",\n          width: \"100%\",\n        }}\n      >\n        {bakedData?.lastMessage?.sender === \"current\" ? (\n          <>\n            {bakedData?.lastMessage?.status === \"seen\" ? (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"#2196f3\", fontSize: \"1rem\" }} />\n              </Box>\n            ) : (\n              <Box sx={{ display: \"flex\" }}>\n                <DoneAllIcon sx={{ color: \"gray\", fontSize: \"1rem\" }} />\n              </Box>\n            )}\n          </>\n        ) : null}\n        <Typography\n          sx={{\n            fontSize: \"12px\",\n            width:\"200px\",\n            height: \"2rem\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            fontWeight:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"300\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                ? \"300\"\n                : \"400\",\n            color:\n              bakedData?.lastMessage?.sender === \"current\"\n                ? \"#98999A\"\n                : bakedData?.lastMessage?.status === \"seen\"\n                ? \"#98999A\"\n                : \"#000\",\n          }}\n        >\n          {bakedData?.lastMessage?.message}\n          <Typography variant=\"body1\" fontWeight=\"400\" color=\"#000\" fontSize=\"0.8rem\">\n            {bakedData?.lastMessage?.message ? \"\" : \"Tap to chat\"}\n          </Typography>\n        </Typography>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Card\n        sx={{ p: 0.5,background:\"#F8F8FC\",borderRadius:\"10px\",boxShadow:0 ,\n        cursor:\"pointer\"\n      }}\n        onClick={() => setOpen1(true)}\n      >\n        <Grid container spacing={2}>\n          <Grid item xs={2} sx={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",position:\"relative\"}}>\n            <Avatar\n              src={bakedData?.dp}\n              alt=\"logo\"\n              style={{ width: \"2.5rem\", height: \"2.5rem\", borderRadius: \"50%\",marginLeft:\"0.8rem\"}}\n            />\n             {\n                    bakedData?.chatType===\"1-1\"\n                    ?\n                        bakedData?.activeParticipants.length!==0 && bakedData?.activeParticipants[0].activity!==\"offline\"\n                        ?\n                        <FiberManualRecordIcon sx={{color:\"green\",fontSize:\"1rem\",position:\"absolute\",bottom:\"10px\",right:\"-7px\"}}/>\n                        :\n                        null\n                    :\n                    null\n                }\n          </Grid>\n          <Grid item xs={8}>\n            <Typography fontWeight=\"500\" gutterBottom>\n              {setWordCase(bakedData?.name)}\n            </Typography>\n            {bakedData?.name === \"Deleted User\" ? <Box sx={{p:1}}></Box>: \n            <LastMessageContainer /> }\n          </Grid>\n          <Grid item xs={2} sx={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}>\n            <Typography\n              sx={{\n                background: \"#3B3F76\",\n                color:\"#fff\",\n                borderRadius: \"50%\",\n                width: \"1rem\",\n                height: \"1rem\",\n                border:\"1px solid #3B3F76\",\n                fontSize: \"11px\",\n                textAlign: \"center\",\n              }}\n            >\n              {bakedData?.unseenMessages}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Card>\n      {open1 ? (\n        <ChatContainer\n          open={open1}\n          setOpen={setOpen1}\n          id={props?.data?._id}\n          type=\"community\"\n        />\n      ) : null}\n    </div>\n  );\n};\n\nexport default CommunityChatComponent;\n","import { Box, Grid, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../assets/hooks\";\nimport CommunityChatComponent from \"../../genericComponents/communityChatComponent\";\nimport { Chat} from \"../../types/types\";\n\nconst CommunityChat = () => {\n  const advisorchats = useAppSelector((state) => state.chats);\n  return (\n    <Box sx={{\n      overflowY: \"scroll\",\n      height: \"450px\",\n      \"&::-webkit-scrollbar\": {\n        width: \"12px\",\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n      },\n      \"&::-webkit-scrollbar-track\": {\n        backgroundColor: \"#fff\",\n      },\n      width:\"100%\",\n      mt:2\n    }}>\n      <Grid container spacing={2} \n        sx={{mt:0}}\n        >\n      {advisorchats?.data?.community?.length > 0 ?advisorchats?.data?.community?.map((item: Chat,i) => (\n        <Grid item xs={12} key={i}>\n        <CommunityChatComponent data={item} />\n        </Grid>\n      )) : \n      <Box sx={{height:\"5rem\",borderRadius:\"20px\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",width:\"100%\"}}>\n      <Typography color=\"#3B3F76\">Start a new chat</Typography>\n      </Box>\n      }\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CommunityChat;\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Grid,\n  Typography,\n  Card,\n  Avatar\n} from '@mui/material';\nimport { useAppSelector } from '../../assets/hooks';\nimport AdvisorChatComponent from '../../genericComponents/advisorChatComponent';\nimport ChatContainer from './chatContainer';\nimport { Chat } from '../../types/types';\nimport Images from '../../assets';\n\nconst AvaLite = () => {\n  const [openChat, setOpenChat] = useState(true); // Set to true to auto-open\n  const advisorchats = useAppSelector((state) => state.chats);\n\n  // Find the Virtual Assistant chat\n  const virtualAssistant = advisorchats?.data?.advisors?.find((item: Chat) => \n    item.participants?.some((participant: any) => participant.role === \"Virtual_Assistant\")\n  );\n\n  return (\n    <Box sx={{\n      overflowY: \"scroll\",\n      height: \"450px\",\n      \"&::-webkit-scrollbar\": {\n        width: \"12px\",\n      },\n      \"&::-webkit-scrollbar-thumb\": {\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n      },\n      \"&::-webkit-scrollbar-track\": {\n        backgroundColor: \"#fff\",\n      },\n      width: \"100%\",\n      mt: 1\n    }}>\n      <Grid container spacing={2} sx={{ mt: 0 }}>\n        {virtualAssistant ? (\n          <Grid item xs={12}>\n            <AdvisorChatComponent data={virtualAssistant} />\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n                         <Card\n               sx={{\n                 pl: 1,\n                 background: \"#F8F8FC\",\n                 borderRadius: \"10px\",\n                 boxShadow: 0,\n                 p: 2\n               }}\n             >\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item xs={2} sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                  <Avatar\n                    src={Images.ai}\n                    alt=\"Ava Lite\"\n                    style={{ width: \"2.5rem\", height: \"2.5rem\", borderRadius: \"50%\" }}\n                  />\n                </Grid>\n                <Grid item xs={8}>\n                  <Typography fontWeight=\"500\" gutterBottom>\n                    Ava Lite\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"#98999A\">\n                    Tap to chat\n                  </Typography>\n                </Grid>\n                <Grid item xs={2} sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                  <Typography sx={{\n                    background: \"#3b3f76\",\n                    color: \"#fff\",\n                    borderRadius: \"50%\",\n                    width: \"1rem\",\n                    height: \"1rem\",\n                    border: \"1px solid #3B3F76\",\n                    fontSize: \"11px\",\n                    textAlign: \"center\",\n                  }}>\n                    0\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} sx={{ position: \"absolute\", right: \"10px\", top: \"-2rem\" }}>\n                  <Typography fontWeight=\"500\" sx={{\n                    background: \"#fff\",\n                    p: 0.5,\n                    borderRadius: \"10px\",\n                    color: \"#F48438\",\n                    fontSize: \"14px\"\n                  }}>\n                    Virtual_Assistant\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Card>\n          </Grid>\n                 )}\n       </Grid>\n       {openChat && (\n         <ChatContainer\n           open={openChat}\n           setOpen={setOpenChat}\n           id={virtualAssistant?._id || \"new\"}\n           type=\"advisors\"\n         />\n       )}\n     </Box>\n   );\n };\n\nexport default AvaLite;\n","import React, { useRef, useState } from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Slide from \"@mui/material/Slide\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { Avatar, Grid, Typography} from \"@mui/material\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport {\n  Box,\n  InputAdornment,\n  Stack,\n  TextField,\n} from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { getNewChatsUsingSearch, postingNewChatOrRetrivingOldChat } from \"../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { getFriends, setWordCase } from \"../../assets/library\";\nimport { Event, Participant, User } from \"../../types/types\";\nimport { addChats } from \"../../store/Slices/chatsSlice\";\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\n\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Transition = React.forwardRef(function Transition(\n  props: any,\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst NewChatContainer: React.FC<Props> = ({ open, setOpen}) => {\n  const [searchTerm, setSearchTerm] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [options,setOptions] = useState<User[]>([])\n  const profile = useAppSelector(state =>state.sharedInfo);\n  const chats = useAppSelector(state =>state.chats);\n  const allChats = [...chats.data.advisors,...chats.data.community]\n  const friends = useRef(profile.data?._id ? getFriends(allChats,profile.data?._id) : []);\n  const dispatch = useAppDispatch();\n\n  const fetchNewChats = async (searchTerm:string) => {\n    const response = await getNewChatsUsingSearch(searchTerm);\n    if (response && response.data !== undefined) {\n      setOptions(\n        response?.data?.filter((item:any) => {\n          return item._id !== profile.data?._id;\n        })\n      );\n    } else {\n      \n    }\n  };\n  const getChatId = async (id:string) => {\n    try{\n      const response = await postingNewChatOrRetrivingOldChat(id);\n      if (response && response.data !== undefined) {\n      } else {\n      }\n      return response.data;\n    }catch(error){\n\n    }\n  \n};\nconst eventHandler = async (event:Event)=>{\n  switch(event.name){\n    case \"handleChange\":\n      if (event.data.target.value !== \"\") {\n        setSearchTerm(event.data.target.value);\n        fetchNewChats(event.data.target.value.trim())\n      }\n    break;\n    case \"select\":\n      setLoading(true);\n      setLoading(false);\n      setOpen(false)\n     const response1 = await getChatId(event.data._id)\n      dispatch(addChats(response1))\n  }\n} \n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        sx={{\n            right: \"0\",\n            left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n            top: { md: \"10px\", xs: \"0\", lg: \"25px\" },\n          }}\n          PaperProps={{\n            style: {\n              borderRadius: \"1rem\",\n              padding: \"1rem\",\n              width: \"410px\",\n              height: \"550px\",\n            },\n          }}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => setOpen(false)}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        {loading ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"300px\",\n            }}\n          >\n            <CircularProgress />\n          </div>\n        ) : (\n          <>\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <KeyboardArrowDownIcon\n                onClick={() => setOpen(false)}\n                sx={{ width: \"2rem\", height: \"2rem\" }}\n              />\n            </Box>\n            <ChatsListContainer\n              searchTerm={searchTerm}\n              // handleSelect={handleSelect}\n              eventHandler = {eventHandler}\n              options={options}\n              // handleChange={handleChange}\n              friends={friends}\n            />\n          </>\n        )}\n      </Dialog>\n    </div>\n  );\n};\n\ninterface ChatsListContainerProps {\n  // handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  // handleSelect: (data: User) => void;\n  eventHandler:any,\n  options: User[];\n  searchTerm: string | null;\n  friends:any\n}\n\nconst ChatsListContainer: React.FC<ChatsListContainerProps> = ({\n  eventHandler,\n  options,\n  friends\n}) => {\n  return (\n    <Stack spacing={1} className=\"chat-container-messenger1\" sx={{ mt: 2, height: \"480px\" }}>\n        <Typography textAlign=\"center\" fontWeight=\"600\">New Chat</Typography>\n      <TextField\n        size=\"small\"\n        fullWidth\n        onChange={(e)=>eventHandler({name:\"handleChange\",data:e})}\n        id=\"outlined-basic\"\n        placeholder=\"Search\"\n        variant=\"outlined\"\n        autoComplete=\"false\"\n        sx={{\n          \"& .MuiOutlinedInput-root\": {\n            borderRadius: \"10px\",\n          },\n        }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <Box sx={{height:\"420px\",overflowY:\"scroll\",p:1}}>\n        {options.map((item, index) => (\n              <Grid container spacing={3} onClick={() =>eventHandler({name:\"select\",data:item})} sx={{p:0}} key={index}>\n                <Grid\n                  item\n                  xs={2}\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Avatar\n                    src={item.displayPicSrc}\n                    alt=\"profile\"\n                    style={{ width: \"2rem\", height: \"2rem\", borderRadius: \"50%\" }}\n                  />\n                </Grid>\n                <Grid item xs={8} >\n                  <h5>{setWordCase(item.firstName) + \" \" + setWordCase(item?.lastName)}</h5>\n                </Grid>\n                <Grid item xs={2}   sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}>\n                  {friends.current?.find((friend: Participant) => friend._id === item._id) ? (\n                    <span style={{color:\"rgb(255, 117, 26)\"}}>Friend</span>\n                  ) : (\n                    <PersonAddIcon sx={{ fontSize: \"1.2rem\", color: \"teal\" }} />\n\n                  )}\n                </Grid>\n              </Grid>\n        ))}\n      </Box>\n    </Stack>\n  );\n};\n\nexport default NewChatContainer;\n","/* eslint-disable */\nimport {\n  Avatar,\n  Box,\n  Button,\n  CircularProgress,\n  Dialog,\n  Grid,\n  Link,\n  Slide,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport Images from \"../../assets\";\nimport {\n  AVAcommunicationMessage,\n  communicationMessage,\n  fetchAllMessages,\n  seenMessageDetails,\n} from \"../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport { addMessage, initMessages } from \"../../store/Slices/messagesSlice\";\nimport {\n  Chat,\n  Event,\n  Message,\n  Participant,\n  Sharedinfo,\n  TriggerObject,\n} from \"../../types/types\";\nimport { updateChat } from \"../../store/Slices/chatsSlice\";\nimport Socket from \"../../assets/socket\";\nimport { normalizeType, setWordCase } from \"../../assets/library\";\nimport { Close } from \"@mui/icons-material\";\nimport ContentRenderer from \"./Content\";\n\nconst Transition1 = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface props {\n  open: boolean;\n  setOpen: Function;\n  id: any;\n  type: \"advisors\" | \"community\";\n}\n\nconst VirtualChatContainer = ({ open, setOpen, id, type }: props) => {\n  const profileInfo = useAppSelector((state) => state.sharedInfo);\n  const list = useRef<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n  const messages = useAppSelector((state) => state.messages);\n  const [uploadFiles, setUploadFiles] = useState<File[]>([]);\n  const [repliedTo, setRepliedTo] = useState(null);\n  const [replyDiv, setReplyDiv] = useState(false);\n  const [replyDivData, setReplyDivData] = useState(\"\");\n  const [typing, setTyping] = useState(\"\");\n  const chat = useAppSelector((state) => {\n    let currentChats = state.chats;\n    return type === \"advisors\"\n      ? currentChats.data.advisors.find((chat) => chat._id === id)\n      : currentChats.data.community.find((chat) => chat._id === id);\n  });\n  const dispatch = useAppDispatch();\n\n  const participantDetails = chat?.participants.find(\n    (user) => user._id !== profileInfo?.data?._id\n  );\n  const seenMessages = async () => {\n    const response = await seenMessageDetails(id);\n    // console.log(response)\n    if (response.success) {\n      dispatch(updateChat(response.data));\n      if (\n        profileInfo.data &&\n        profileInfo.data._id &&\n        Object.values(profileInfo.data).every(\n          (item) => typeof item !== undefined\n        )\n      ) {\n        let triggerObj: TriggerObject = {\n          action: \"seen\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter(\n            (participant: Participant) =>\n              participant._id !== profileInfo.data?._id\n          ),\n          data: response.data,\n        };\n        Socket.emit(\"trigger\", triggerObj);\n      }\n    }\n  };\n\n  const triggerMessages = (triggerObject: TriggerObject) => {\n    switch (triggerObject.action) {\n      case \"send\":\n        dispatch(addMessage({ ...triggerObject.data.message, type: \"normal\" }));\n        seenMessages();\n        // console.log(\"message send trigger\", triggerObject.data.message);\n\n        break;\n\n      case \"typing\":\n        //triggerObject.data==\"start\"?dispatch(startTypingMessage({...triggerObject.sender,activity:'typing'})):dispatch(stopTypingMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n\n      case \"seen\":\n        //dispatch(seenMessage({...triggerObject.sender,activity:\"inchat\"}))\n        break;\n    }\n  };\n\n  const fetchMessage = async () => {\n    try {\n      setLoading(true);\n      const response = await fetchAllMessages(id);\n      if (response) {\n        let msgs = response.data.map((msg: Message) => ({\n          ...msg,\n          type: \"normal\",\n        }));\n        msgs.reverse();\n        dispatch(\n          initMessages({\n            requestStatus: \"initiated\",\n            responseStatus: \"recieved\",\n            haveAnIssue: false,\n            issue: \"\",\n            data: msgs,\n          })\n        );\n        if (\n          chat?.unSeenMessages\n            .filter(\n              (msg: any) => msg.message.sender._id !== profileInfo.data?._id\n            )\n            .filter(\n              (recievedMessage: any) =>\n                !recievedMessage.seen.find(\n                  (id: string) => id === profileInfo.data?._id\n                )\n            ).length != 0\n        ) {\n          await seenMessages();\n        }\n      }\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const bakeMessages = (messages: Message[], chat: Chat, user: Sharedinfo) => {\n    let unsetParticipants = chat.participants.filter(\n      (chat) => chat._id != user._id\n    );\n    let list: Message[] = [];\n    let seenParticipants: Participant[] = [];\n    let unseenParticipants: Participant[] = [];\n    messages.reverse();\n    messages.forEach((msg) => {\n      if (msg.sender?._id == user._id) {\n        if (unsetParticipants.length != 0) {\n          if (chat.unSeenMessages.length == 0) {\n            if (unsetParticipants.length != 0) {\n              seenParticipants = [...unsetParticipants];\n            }\n          } else {\n            if (\n              !chat.unSeenMessages.find(\n                (unseenMsg) => unseenMsg.message._id == msg._id\n              )\n            ) {\n              seenParticipants = [...unsetParticipants];\n            } else {\n              seenParticipants = unsetParticipants.filter((unsetParticipant) =>\n                chat.unSeenMessages\n                  .find((unseenMsg) => unseenMsg.message._id == msg._id)\n                  ?.seen.find(\n                    (seenParticipant) => seenParticipant == unsetParticipant._id\n                  )\n              );\n            }\n          }\n          if (seenParticipants.length != 0) {\n            let seenMessage = seenParticipants.reduce(\n              (message, seenParticipant) =>\n                message + seenParticipant.firstName + \" , \",\n              \"Seen by \"\n            );\n            list.push({\n              _id: msg._id + \"_seen\",\n              type: \"seen\",\n              content: seenMessage.substring(0, seenMessage.length - 3),\n              chat: chat._id,\n            });\n          }\n          list.push(msg);\n          unsetParticipants = unsetParticipants.filter(\n            (unsetParticipant) =>\n              !seenParticipants.find(\n                (seenParticipant) => seenParticipant._id == unsetParticipant._id\n              )\n          );\n        } else {\n          list.push(msg);\n        }\n      } else {\n        list.push(msg);\n      }\n    });\n    list.reverse();\n    let typingParticipants = chat.participants.filter(\n      (participant) => participant.activity == \"typing\"\n    );\n    //console.log(\"Typing\",typingParticipants)\n    if (typingParticipants.length != 0) {\n      let typingMessage = typingParticipants.reduce(\n        (msg, participant) => participant.firstName + \" , \",\n        \"\"\n      );\n      list.push({\n        _id: chat._id + \"_typing\",\n        type: \"typing\",\n        content:\n          typingMessage.substring(0, typingMessage.length - 3) +\n          (typingParticipants.length == 1 ? \" is typing\" : \" are typing\"),\n        chat: chat._id,\n        sender: {\n          displayPicSrc: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          _id: chat._id + \"_typing\",\n          userType: \"\",\n        },\n      });\n      //console.log(list)\n    }\n    return list;\n    //let bakedParticipants=getParticipantsLastSeenMessage(chat,user,messages);\n    //return bakeMessagesWithSeenInfo(messages,bakedParticipants);\n  };\n\n  const eventHandler = async (event: Event) => {\n    let triggerObj: TriggerObject;\n    switch (event.name) {\n      case \"send\":\n        const formData = new FormData();\n        formData.append(\"content\", event.data);\n        formData.append(\"chatId\", id);\n\n        try {\n          if (event.data.trim()) {\n            const response = await communicationMessage(formData);\n            setTyping(\"Ava is typing\");\n\n            if (response.data.success) {\n              dispatch(updateChat(response.data.data.chat));\n              dispatch(addMessage(response.data.data.message));\n              setUploadFiles([]);\n            } else {\n              console.error(\"Failed to send message or upload files.\");\n            }\n            const response1 = await AVAcommunicationMessage({\n              content: event.data,\n              chatId: id,\n            });\n            setTyping(\"\");\n\n            if (response1.data.success) {\n              dispatch(updateChat(response1.data.data.chat));\n              dispatch(addMessage(response1.data.data.message));\n            } else {\n              console.error(\"Failed to send message or upload files.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"Error during file upload or message sending:\", error);\n        }\n\n        break;\n      case \"startTyping\":\n        triggerObj = {\n          action: \"typing\",\n          sender: { ...profileInfo.data, userType: \"student\" },\n          recievers: chat?.participants.filter(\n            (participant) => participant._id != profileInfo.data?._id\n          ),\n          data: \"start\",\n        };\n        //   Socket.emit(\"trigger\", triggerObj);\n        break;\n      case \"stopTyping\":\n        //   triggerObj = {\n        //     action: \"typing\",\n        //     sender: { ...profileInfo.data, userType: \"student\" },\n        //     recievers: chat?.participants.filter((participant) => participant._id != profileInfo.data?._id),\n        //     data: \"stop\"\n        //   }\n        // setTyping(\"\")\n\n        //   Socket.emit(\"trigger\", triggerObj);\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    //   // if (id) {\n    //   Socket.removeListener(\"trigger\", triggerMessages);\n    //   Socket.on(\"trigger\", triggerMessages);\n    fetchMessage();\n    //   return () => { Socket.removeListener(\"trigger\", triggerMessages) }\n    // }\n  }, []);\n\n  list.current =\n    chat && profileInfo.data\n      ? bakeMessages([...messages.data], chat, profileInfo.data)\n      : [];\n\n  const Header = (props: any) => {\n    return (\n      <div\n        style={{\n          background: \"#F8F8FC\",\n          padding: \"0.5rem\",\n          borderRadius: \"0.8rem\",\n          position: \"relative\",\n        }}\n      >\n        <Stack\n          direction=\"row\"\n          spacing={2}\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n            <Avatar\n              src={\n                participantDetails?.role === \"Virtual_Assistant\"\n                  ? Images.ai\n                  : participantDetails?.displayPicSrc\n              }\n              alt=\"profile\"\n              sx={{ width: \"3rem\", height: \"3rem\", borderRadius: \"50%\" }}\n            />\n            <Typography\n              fontWeight=\"500\"\n              sx={{\n                position: \"absolute\",\n                right: \"10px\",\n                top: \"-1rem\",\n                background: \"#fff\",\n                p: 1,\n                borderRadius: \"10px\",\n                color:\n                  participantDetails?.role === \"counsellor\"\n                    ? \"#3B3F76\"\n                    : participantDetails?.role === \"processCoordinator\"\n                    ? \"#569228\"\n                    : \"#FEB853\",\n                fontSize: \"14px\",\n              }}\n            >\n              {participantDetails?.role\n                ? normalizeType(participantDetails?.role)\n                : participantDetails?.role}\n            </Typography>\n            <Box>\n              {participantDetails?.firstName || participantDetails?.lastName ? (\n                <Typography fontWeight=\"500\">\n                  {setWordCase(participantDetails?.firstName)}\n                  &nbsp;{setWordCase(participantDetails?.lastName)}\n                </Typography>\n              ) : (\n                <Typography>User</Typography>\n              )}\n            </Box>\n          </Box>\n          <Box sx={{ float: \"right\" }}>\n            <Button\n              sx={{ textTransform: \"none\", color: \"#3b3f76\", float: \"right\" }}\n              onClick={() =>\n                props.eventHandler({\n                  name: \"block\",\n                  data: {\n                    action: \"block\",\n                    id: participantDetails?._id,\n                  },\n                })\n              }\n            >\n              {participantDetails &&\n                participantDetails?.role !== \"Virtual_Assistant\" &&\n                \"Block\"}\n            </Button>\n          </Box>\n        </Stack>\n      </div>\n    );\n  };\n  const Content = (props: any) => {\n    const bottomRef = useRef<HTMLDivElement>(null);\n    const chatContainerRef = useRef<HTMLDivElement>(null);\n    const [isUserAtBottom, setIsUserAtBottom] = useState(true);\n\n    const handleScroll = () => {\n      if (chatContainerRef.current) {\n        const { scrollTop, scrollHeight, clientHeight } =\n          chatContainerRef.current;\n        const isAtBottom = scrollHeight - scrollTop - clientHeight <= 5;\n        setIsUserAtBottom(isAtBottom);\n      }\n    };\n    const predefinedMessages = [\n      \"Top courses in USA?\",\n      \"Best universities in Computer Science ?\",\n    ];\n\n    useEffect(() => {\n      if (isUserAtBottom) {\n        bottomRef.current?.scrollIntoView({ behavior: \"auto\" });\n      }\n    }, [list.current]);\n\n    useEffect(() => {\n      bottomRef.current?.scrollIntoView({ behavior: \"auto\" });\n    }, []);\n\n    return (\n      <Box\n        ref={chatContainerRef}\n        onScroll={handleScroll}\n        sx={{\n          overflowY: \"scroll\",\n          mt: 3,\n          height: \"390px\",\n          \"&::-webkit-scrollbar\": {\n            width: \"12px\",\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            backgroundColor: \"transparent\",\n            borderRadius: \"8px\",\n          },\n        }}\n      >\n        {loading ? (\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"300px\",\n            }}\n          >\n            <CircularProgress />\n          </Box>\n        ) : (\n          <div className=\"chat-container\">\n            {list.current.length > 0 ? (\n              <>\n                {list.current.map((message: any) => (\n                  <>\n                    {message.type !== \"seen\" && message.type !== \"typing\" ? (\n                      <div\n                        key={message._id}\n                        className={`message ${\n                          message?.sender?._id === profileInfo.data?._id\n                            ? \"sent\"\n                            : \"received\"\n                        }`}\n                      >\n                        <ContentRenderer content={message.content} />\n                        {message?.document?.data?.preview_url ? (\n                          <iframe\n                            src={message?.document?.data?.preview_url}\n                            title=\"preview\"\n                            style={{\n                              border: \"none\",\n                              width: \"150px\",\n                              height: \"150px\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n                        ) : (\n                          \"\"\n                        )}\n                        <Avatar\n                          src={message.sender?.displayPicSrc}\n                          alt=\"\"\n                          sx={\n                            message?.sender?._id === profileInfo.data?._id\n                              ? {\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  borderRadius: \"50%\",\n                                  position: \"absolute\",\n                                  top: \"-12px\",\n                                  right: 0,\n                                }\n                              : {\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  borderRadius: \"50%\",\n                                  position: \"absolute\",\n                                  top: \"-12px\",\n                                  left: 0,\n                                }\n                          }\n                        />\n                      </div>\n                    ) : (\n                      <>\n                        <div className=\"seenMsg\" key={message._id}>\n                          {message.content}\n                        </div>\n                      </>\n                    )}\n                  </>\n                ))}\n                {typing && (\n                  <Typography\n                    sx={{\n                      textAlign: \"right\",\n                      fontSize: \"13px\",\n                      color: \"#3b3f76\",\n                      marginTop: \"8px\",\n                    }}\n                  >\n                    {typing}\n                  </Typography>\n                )}\n                <div ref={bottomRef}></div>\n              </>\n            ) : (\n              <Box\n                sx={{ display: \"flex\", flexDirection: \"column\", gap: \"8px\" }}\n              >\n                <Typography sx={{ fontSize: \"14px\" }}>\n                  Hi, How can I help you ? Here are few questions{\" \"}\n                </Typography>\n                {predefinedMessages.map((msg, index) => (\n                  <Link\n                    key={index}\n                    sx={{\n                      fontSize: \"14px\",\n                      textDecoration: \"none\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() =>\n                      props.eventHandler({ name: \"send\", data: msg })\n                    }\n                  >\n                    {msg}\n                  </Link>\n                ))}\n              </Box>\n            )}\n          </div>\n        )}\n      </Box>\n    );\n  };\n\n  const Footer = (props: any) => {\n    const [content, setContent] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n    const actionHandler = (action: any) => {\n      // console.log('action', action)\n\n      if (action.type == \"reply\") {\n        setRepliedTo(action.data.id);\n      }\n      if (action.type == \"copy\") {\n        // console.log(messages[action.data.index])\n        // navigator.clipboard.writeText(messages[action.data.index].content);\n      }\n    };\n\n    const showReplyDiv = (messagedata: any) => {\n      setReplyDiv(true);\n      setReplyDivData(messagedata);\n    };\n    const handleFileChange = (event: any) => {\n      const selectedFiles = Array.from(event.target.files);\n      setUploadFiles(selectedFiles as File[]);\n      // console.log(selectedFiles)\n    };\n    const removeFile = (index: any) => {\n      const updatedFiles = [...uploadFiles];\n      updatedFiles.splice(index, 1);\n      setUploadFiles(updatedFiles);\n    };\n\n    const handleSend = async () => {\n      try {\n        if (content.trim() !== \"\" || (uploadFiles && uploadFiles.length > 0)) {\n          setLoading(true);\n          await props.eventHandler({ name: \"send\", data: content });\n        } else {\n          console.log(\"No content or files to send.\");\n        }\n      } catch (error) {\n        console.error(\"Error while sending:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === \"Enter\" && !event.shiftKey && content.trim() !== \"\") {\n        event.preventDefault();\n        handleSend();\n      }\n    };\n\n    return (\n      <>\n        {participantDetails && (\n          <div style={{ position: \"relative\" }}>\n            {uploadFiles?.length > 0 && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  position: \"absolute\",\n                  top: \"-44px\",\n                  right: \"35%\",\n                }}\n              >\n                <div style={{ width: \"fitContent\" }}>\n                  <Typography fontSize=\"0.9rem\">Selected files:</Typography>\n                  <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\n                    {uploadFiles.map((file, index) => (\n                      <li\n                        style={{ fontSize: \"12px\", display: \"flex\" }}\n                        key={index}\n                      >\n                        {file.name}\n                        <Close\n                          onClick={() => removeFile(index)}\n                          sx={{ fontSize: \"1rem\", cursor: \"pointer\" }}\n                        />\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            )}\n            {replyDiv ? (\n              <div className=\"replyDiv\">\n                <h5>reply to:- {replyDivData}</h5>\n              </div>\n            ) : (\n              \"\"\n            )}\n            <Grid\n              container\n              sx={{\n                background: \"#F8F8FC\",\n                padding: \"0.5rem\",\n                borderRadius: \"0.8rem\",\n              }}\n            >\n              <Grid item xs={9.5}>\n                <TextField\n                  variant=\"outlined\"\n                  size=\"small\"\n                  onFocus={() => props.eventHandler({ name: \"startTyping\" })}\n                  onBlur={() => props.eventHandler({ name: \"stopTyping\" })}\n                  multiline\n                  // maxRows={3}\n                  rows={2}\n                  fullWidth\n                  placeholder=\"Type your message...\"\n                  value={content}\n                  sx={{\n                    \"& .MuiOutlinedInput-notchedOutline\": {\n                      border: 0,\n                      \"&:Focus\": {\n                        border: 0,\n                      },\n                    },\n                    \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                      border: \"none !important\",\n                    },\n                  }}\n                  onChange={(e) => setContent(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                />\n              </Grid>\n              <Grid\n                item\n                xs={1.5}\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  background: \"#fff\",\n                  borderRadius: \"6px\",\n                }}\n              >\n                {loading ? (\n                  <img\n                    src={Images.standardLoader}\n                    alt=\"loader\"\n                    style={{ width: \"1rem\" }}\n                  />\n                ) : (\n                  <img\n                    src={Images.sendIcon}\n                    alt=\"sendIcon\"\n                    style={{ width: \"2rem\", height: \"2rem\" }}\n                    onClick={handleSend}\n                  />\n                )}\n              </Grid>\n            </Grid>\n          </div>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        sx={{\n          right: \"0\",\n          left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n          top: { md: \"10px\", xs: \"0\", lg: \"25px\" },\n        }}\n        PaperProps={{\n          style: {\n            borderRadius: \"1rem\",\n            padding: \"1rem\",\n            width: \"410px\",\n            height: \"582px\",\n            // background: \"#EDF2F6\",\n          },\n        }}\n        TransitionComponent={Transition1}\n        keepMounted\n        onClose={() => setOpen(false)}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <KeyboardArrowDownIcon\n            sx={{\n              position: \"absolute\",\n              top: 0,\n              color: \"#0F0F0F\",\n              fontSize: \"2rem\",\n              cursor: \"pointer\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n            onClick={() => setOpen(false)}\n          />\n        </Box>\n        <Box sx={{ mt: 3 }}>\n          <Header eventHandler={eventHandler} />\n          <Content eventHandler={eventHandler} />\n          <Footer eventHandler={eventHandler} />\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default VirtualChatContainer;\n","import React, { useState } from 'react';\nimport { SpeedDial, SpeedDialAction } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport Images from 'src/assets';\nimport VirtualChatContainer from './virtualChatContainer';\nimport { useAppDispatch, useAppSelector } from 'src/assets/hooks';\nimport { Chat } from 'src/types/types';\nimport { setPopup } from 'src/store/Slices/popupSlice';\n\nconst CustomSpeedDial = (props: any) => {\n    const [isSpeedDialOpen, setIsSpeedDialOpen] = useState(false);\n    const [open1, setOpen1] = useState(false);\n    const dispatch = useAppDispatch();\n    const [tooltipVisible, setTooltipVisible] = useState<string | null>(null);\n    const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n    const handleSpeedDialToggle = () => {\n        setIsSpeedDialOpen((prev) => !prev);\n    };\n\n    const handleMouseEnter = (action: string) => {\n        setTooltipVisible(action);\n    };\n\n    const handleMouseLeave = () => {\n        setTooltipVisible(null);\n    };\n\n    const advisorchats = useAppSelector((state) => state.chats);\n\n    const findVirtualAssistant = (advisorArray: Chat[]) => {\n        for (const advisor of advisorArray) {\n            const participant = advisor?.participants?.find(\n                (p: any) => p.role === 'Virtual_Assistant'\n            );\n            if (participant) {\n                return advisor;\n            }\n        }\n        return null;\n    };\n\n    const virtualAdvisor = findVirtualAssistant(advisorchats?.data?.advisors);\n\n    return (\n        <div\n            style={{\n                position: 'fixed',\n                bottom: 16,\n                right: 16,\n                zIndex:1\n            }}\n        >\n            <SpeedDial\n                ariaLabel=\"Custom SpeedDial\"\n                icon={\n                    isSpeedDialOpen ? (\n                        <CloseIcon style={{ color: 'white', fontSize: '28px' }} />\n                    ) : (\n                        <ChatIcon style={{ color: 'white', fontSize: '28px' }} />\n                    )\n                }\n                onClick={()=> props.setOpen(true)}\n                open={isSpeedDialOpen}\n                direction=\"up\"\n                FabProps={{\n                    style: {\n                        backgroundColor: '#3b3f76',\n                        color: 'white',\n                    },\n                }}\n            >\n                <SpeedDialAction\n                    icon={\n                        <img\n                            style={{\n                                width: '3rem',\n                                height: '3rem',\n                                cursor: 'pointer',\n                            }}\n                            src={Images.chaticon}\n                            alt=\"chat icon\"\n                        />\n                    }\n                    tooltipOpen={tooltipVisible === 'chat'}\n                    tooltipTitle={\n                        <div style={{ width: '120px', textAlign: 'center' }}>\n                            Chat with us\n                        </div>\n                    }\n                    onClick={() => props.setOpen(true)}\n                    onMouseEnter={() => handleMouseEnter('chat')}\n                    onMouseLeave={handleMouseLeave}\n                />\n                <SpeedDialAction\n                    icon={\n                        <img\n                            style={{\n                                width: '1.7rem',\n                                height: '1.7rem',\n                                cursor: 'pointer',\n                                filter: 'invert(1)',\n                            }}\n                            src={Images.ai}\n                            alt=\"AI chat icon\"\n                        />\n                    }\n                    FabProps={{\n                        style: {\n                            backgroundColor: '#3b3f76',\n                            color: 'white',\n                            width: \"45px\",\n                            height: \"45px\",\n                        },\n                    }}\n                    tooltipOpen={tooltipVisible === 'ai'}\n                    tooltipTitle={\n                        <div style={{ width: '120px', textAlign: 'center' }}>\n                            Chat with AI\n                        </div>\n                    }\n                    onClick={() =>{\n                        if(userAuthStatus.data?.isAuthorized){\n                            setOpen1(true)\n                        }else{\n                            dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"login\",\n                                      dimensions: {\n                                        width: \"800px\",\n                                        height: \"70%\",\n                                        show: \"none\"\n                  \n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                        }\n                    } }\n                    onMouseEnter={() => handleMouseEnter('ai')}\n                    onMouseLeave={handleMouseLeave}\n                />\n            </SpeedDial>\n            {userAuthStatus.data?.isAuthorized && open1 ? (\n                <VirtualChatContainer\n                    open={open1}\n                    setOpen={setOpen1}\n                    id={virtualAdvisor?._id}\n                    type=\"advisors\" \n                />\n            ) : null}\n        </div>\n    );\n};\n\nexport default CustomSpeedDial;\n","import {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Dialog,\n  Slide,\n  Stack,\n  Typography,\n  Button\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../assets/hooks\";\nimport Advisors from \"./advisors\";\nimport Community from \"./community\";\nimport AvaLite from \"./avaLite\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { CustomButton } from \"../../genericComponents/customButton\";\nimport { setPopup } from \"../../store/Slices/popupSlice\";\nimport NewChatContainer from \"./newChatComponent\";\nimport CustomSpeedDial from \"./chatIcon\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nexport const GuestUser = () => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <div\n      style={{\n        background: \"#EDF2F6\",\n        padding: \"1.5rem\",\n        borderRadius: \"10px\",\n        position: \"relative\",\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"start\",\n          justifyContent: \"start\",\n          mb: 2,\n        }}\n      >\n        <AvatarGroup max={4}>\n          <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n          <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />\n          <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />\n          <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />\n          <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />\n        </AvatarGroup>\n        <Typography color=\"#3B3F76\" fontWeight=\"600\" gutterBottom>\n          Say goodbye to all your doubts !\n        </Typography>\n        <Typography color=\"rgba(48, 51, 99, 0.5)\" gutterBottom>\n          As you say hello to our profound advisors !{\" \"}\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          background: \"#fff\",\n          p: 2,\n          borderRadius: \"10px\",\n          position: \"absolute\",\n          left: \"20px\",\n          right: \"20px\",\n          boxShadow: \"2\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n\n        }}\n      >\n        <Typography gutterBottom>\n          Login to start chat with{\" \"}\n          <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>Students </span>\n          and <span style={{ color: \"rgba(48, 51, 99, 0.5)\" }}>Advisors</span>.\n        </Typography>\n        <CustomButton\n          width=\"100px\"\n          handleSubmit={() => {\n            // setOpen(false);\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                      height: \"70%\",\n                      show: \"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }}\n        >\n          Login\n        </CustomButton>\n      </Box>\n    </div>\n  );\n};\nconst Chat = () => {\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const [open, setOpen] = useState(false);\n  const [newChatOpen, setNewOpen] = useState(false);\n\n\n  const ChatsListContainer = () => {\n    const [activeTab, setActiveTab] = useState<\"advisors\" | \"community\" | \"avaLite\">(\"advisors\");\n    return (\n      <Stack spacing={1} sx={{ height: \"480px\", p: 2, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Box\n          sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", width: \"80%\",gap:\"1rem\" }}\n        >\n          <Button\n            onClick={() => setActiveTab(\"advisors\")}\n            sx={{\n              borderBottom: activeTab === \"advisors\" ? \"2px solid #3B3F76\" : 0,\n              color: activeTab === \"advisors\" ? \"#3B3F76\" : \"#3b3f7699\",\n              borderRadius: 0,\n              textTransform: \"none\",\n              fontSize: \"0.9rem\",\n            }}\n          >\n            Advisors\n          </Button>\n          <Button\n            onClick={() => setActiveTab(\"community\")}\n            sx={{\n              borderBottom: activeTab === \"community\" ? \"2px solid #3B3F76\" : 0,\n              color: activeTab === \"community\" ? \"#3B3F76\" : \"#3b3f7699\",\n              textTransform: \"none\",\n              borderRadius: 0,\n              fontSize: \"0.9rem\",\n            }}\n          >\n            Community\n          </Button>\n          <Button\n            onClick={() => setActiveTab(\"avaLite\")}\n            sx={{\n              borderBottom: activeTab === \"avaLite\" ? \"2px solid #3B3F76\" : 0,\n              color: activeTab === \"avaLite\" ? \"#3B3F76\" : \"#3b3f7699\",\n              textTransform: \"none\",\n              borderRadius: 0,\n              fontSize: \"0.9rem\",\n            }}\n          >\n            Ava Lite\n          </Button>\n        </Box>\n        {activeTab === \"advisors\" ?\n          <Advisors /> : activeTab === \"community\" ?\n            <Community /> : activeTab === \"avaLite\" ?\n            <AvaLite /> : \"\"\n        }\n        <div style={{ position: \"absolute\", bottom: \"12px\", right: \"12px\" }}>\n          <div\n            onClick={() => setNewOpen(true)}\n            style={{\n              background: \"#3B3F76\",\n              color: \"#fff\",\n              height: \"1rem\",\n              width: \"1rem\",\n              borderRadius: \"50%\", padding: \"0.2rem\",\n              cursor: \"pointer\"\n\n            }}\n          >\n            <AddIcon sx={{ fontSize: \"1rem\" }} />\n          </div>\n        </div>\n\n      </Stack>\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <CustomSpeedDial setOpen={setOpen}/>\n        <Dialog\n          open={open}\n          sx={{\n            right: \"0\",\n            left: { md: \"45%\", xs: \"0\", lg: \"68%\" },\n            top: { md: \"1%\", xs: \"0\", lg: \"5%\" },\n          }}\n          PaperProps={{\n            style: {\n              borderRadius: \"1rem\",\n              padding: \"1rem\",\n              width: \"410px\",\n              height: \"550px\",\n            },\n          }}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setOpen(false)}\n          aria-describedby=\"alert-dialog-slide-description\"\n        >\n          <Box>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <KeyboardArrowDownIcon\n                onClick={() => setOpen(false)}\n                sx={{\n                  position: \"absolute\",\n                  top: 0,\n                  color: \"#0F0F0F\",\n                  fontSize: \"2rem\",\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              />\n            </Box>\n            {userAuthStatus.data?.isAuthorized ? (\n              <ChatsListContainer />\n            ) : (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  height: \"50vh\",\n                }}\n              >\n                <GuestUser />\n              </div>\n            )}\n          </Box>\n        </Dialog>\n        {newChatOpen ? (\n          <NewChatContainer\n            open={newChatOpen}\n            setOpen={setNewOpen}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"names":["_ref","content","sanitizedContent","DOMPurify","sanitize","_jsx","ReactMarkdown","components","a","_ref2","href","children","rest","target","rel","Transition1","React","props","ref","Slide","direction","_advisors$data","open","setOpen","id","type","profileInfo","useAppSelector","state","sharedInfo","blockedList","BlockedList","advisors","advisor","list","useRef","loading","setLoading","useState","messages","uploadFiles","setUploadFiles","repliedTo","setRepliedTo","replyDiv","setReplyDiv","replyDivData","setReplyDivData","blockopen","setBlockOpen","action","setAction","chat","currentChats","chats","data","find","_id","community","dispatch","useAppDispatch","participantDetails","participants","user","_profileInfo$data","advisorData","_advisor$info","info","seenMessages","async","response","seenMessageDetails","success","updateChat","Object","values","every","item","undefined","triggerObj","sender","userType","recievers","filter","participant","_profileInfo$data2","Socket","emit","triggerMessages","triggerObject","addMessage","message","eventHandler","event","name","formData","FormData","trim","length","console","error","append","totalSize","allowedFileTypes","validFiles","file","isValidType","includes","isValidSize","size","forEach","communicationMessage","_profileInfo$data5","_profileInfo$data6","_profileInfo$data7","response1","blockUserRequest","addBlockedList","blocked","removeBlockedList","err","log","useEffect","removeListener","on","fetchAllMessages","msgs","map","msg","reverse","initMessages","requestStatus","responseStatus","haveAnIssue","issue","unSeenMessages","_profileInfo$data3","recievedMessage","seen","_profileInfo$data4","fetchMessage","current","bakeMessages","unsetParticipants","seenParticipants","_msg$sender","unseenMsg","unsetParticipant","_chat$unSeenMessages$","seenParticipant","seenMessage","reduce","firstName","push","substring","typingParticipants","activity","typingMessage","displayPicSrc","lastName","email","Header","style","background","padding","borderRadius","position","_jsxs","Stack","spacing","alignItems","justifyContent","Box","sx","display","gap","Avatar","src","role","Images","ai","alt","width","height","Typography","fontWeight","right","top","p","color","fontSize","normalizeType","cursor","textDecoration","onClick","foundAdvisorData","_advisors$data2","_advisor$info2","dataToUse","assignedCountries","setPopup","show","container","dimensions","setWordCase","float","Button","textTransform","isBlocked","some","Content","bottomRef","chatContainerRef","isUserAtBottom","setIsUserAtBottom","_bottomRef$current","scrollIntoView","behavior","_bottomRef$current2","onScroll","handleScroll","scrollTop","scrollHeight","clientHeight","overflowY","mt","backgroundColor","CircularProgress","className","_Fragment","_message$sender","_profileInfo$data8","_message$document","_message$document$dat","_message$document2","_message$document2$da","_message$sender2","_message$sender3","_profileInfo$data9","concat","ContentRenderer","document","preview_url","title","border","objectFit","left","textAlign","Footer","setContent","fileInputRef","handleSend","flexDirection","listStyle","margin","index","Close","updatedFiles","splice","removeFile","Grid","xs","multiple","onChange","selectedFiles","Array","from","files","DescriptionIcon","_fileInputRef$current","click","TextField","variant","onFocus","onBlur","multiline","rows","fullWidth","value","placeholder","e","onKeyDown","key","shiftKey","preventDefault","standardLoader","sendIcon","Dialog","md","lg","PaperProps","TransitionComponent","keepMounted","onClose","KeyboardArrowDownIcon","ConfirmDialog","handleClose","additionalData","onSubmit","_props$data","open1","setOpen1","profile","bakedData","bakedata","rawdata","_rawdata$participants","_rawdata$participants2","_rawdata$participants3","dp","unseenMessages","activeParticipants","chatType","lastMessage","currentUser","otherUsers","_otherUsers$","_otherUsers$2","_otherUsers$3","_otherUsers$4","_otherUsers$5","_otherUsers$6","_msg$message","_msg$message$sender","receivedMessage","bakeLastMessage","_rawdata$lastMessage","_rawdata$lastMessage2","_rawdata$lastMessage3","status","findIndex","_rawdata$lastMessage4","_rawdata$lastMessage5","bakeActivity","inchat","online","LastMessageContainer","_bakedData$lastMessag","_bakedData$lastMessag2","_bakedData$lastMessag3","_bakedData$lastMessag4","_bakedData$lastMessag5","_bakedData$lastMessag6","_bakedData$lastMessag7","_bakedData$lastMessag8","DoneAllIcon","textOverflow","whiteSpace","overflow","Card","pl","boxShadow","marginLeft","FiberManualRecordIcon","bottom","gutterBottom","ChatContainer","Advisors","_advisorchats$data","_advisorchats$data$ad","_advisorchats$data2","_advisorchats$data3","_advisorchats$data6","_advisorchats$data6$a","_advisorchats$data7","_advisorchats$data7$a","advisorchats","loadingChat","setLoadingChat","openChatId","setOpenChatId","searchQuery","setSearchQuery","setError","filterOutVirtualAssistant","advisorArray","_advisor$participants","virtualAssistant","_item$participants","item2","filteredAdvisors","filteredDashboardAdvisors","fullName","toLowerCase","getAdvisorTitle","query","initiateChat","postingNewChatOrRetrivingOldChat","mb","mx","px","InputProps","startAdornment","InputAdornment","SearchIcon","borderColor","i","AdvisorChatComponent","idx","_advisor$info3","_advisor$info4","_advisor$info5","_advisor$info6","_advisor$info7","hasChat","_advisorchats$data5","_advisorchats$data5$a","_chat$participants2","hasExistingChat","opacity","_advisorchats$data4","_advisorchats$data4$a","advisorChat","_chat$participants","_response$data","_response$data$data","addChats","handleChatClick","mr","flex","lineHeight","py","CommunityChat","_advisorchats$data$co","_advisorchats$data2$c","CommunityChatComponent","AvaLite","openChat","setOpenChat","Transition","ChatsListContainer","options","friends","autoComplete","_friends$current","friend","PersonAddIcon","_profile$data","_profile$data2","searchTerm","setSearchTerm","setOptions","allChats","getFriends","getNewChatsUsingSearch","_profile$data3","fetchNewChats","getChatId","typing","setTyping","AVAcommunicationMessage","chatId","marginTop","Link","_userAuthStatus$data2","isSpeedDialOpen","setIsSpeedDialOpen","tooltipVisible","setTooltipVisible","userAuthStatus","handleMouseEnter","handleMouseLeave","virtualAdvisor","findVirtualAssistant","zIndex","SpeedDial","ariaLabel","icon","CloseIcon","ChatIcon","FabProps","SpeedDialAction","chaticon","tooltipOpen","tooltipTitle","onMouseEnter","onMouseLeave","_userAuthStatus$data","isAuthorized","VirtualChatContainer","GuestUser","AvatarGroup","max","CustomButton","handleSubmit","Chat","newChatOpen","setNewOpen","activeTab","setActiveTab","borderBottom","Community","AddIcon","CustomSpeedDial","NewChatContainer"],"sourceRoot":""}