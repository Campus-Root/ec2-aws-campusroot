{"version":3,"file":"static/js/194.20c2386b.chunk.js","mappings":"4NAYA,MAoEA,EApE6BA,KAC3B,MAAM,GAAEC,IAAOC,EAAAA,EAAAA,MACRC,EAAMC,IAAWC,EAAAA,EAAAA,UAAsB,OACvCC,EAASC,IAAcF,EAAAA,EAAAA,WAAkB,IACzCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAiB,IAmB3C,OAjBAK,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,6CAADC,OACed,IAE/CG,EAAQQ,EAASI,KAAKA,MACtBT,GAAW,EACb,CAAE,MAAOU,GACPC,QAAQV,MAAM,uBAAwBS,GACtCR,EAAS,iDACTF,GAAW,EACb,GAEFY,EAAW,GACV,CAAClB,IAEAK,GACKc,EAAAA,EAAAA,KAAA,KAAAC,SAAG,eAGRb,GACKY,EAAAA,EAAAA,KAAA,KAAAC,SAAIb,IAGRL,GAKHmB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,GAAI,CAAEC,UAAW,SAAS,sBAAsB,CAACC,SAAS,WAAYL,SAAA,EAC/ED,EAAAA,EAAAA,KAAA,MAAIO,UAAU,QAAON,SAAElB,EAAKyB,SAC5BR,EAAAA,EAAAA,KAAA,OACEO,UAAU,iBACVE,MAAO,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,UAAW,cAAeX,UAE1DC,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAEd,SAAA,EACzBD,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGX,UAAU,YAAWN,UAC5CD,EAAAA,EAAAA,KAAA,OAAAC,UAEED,EAAAA,EAAAA,KAAA,OACEO,UAAU,gBACVY,wBAAyB,CAAEC,OAAQrC,EAAKsC,gBAI9CrB,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGX,UAAU,YAAWN,SAE3ClB,EAAKuC,gBACJtB,EAAAA,EAAAA,KAAA,OACEuB,IAAKxC,EAAKuC,cACVE,IAAG,aAAA7B,OAAeZ,EAAKyB,OACvBD,UAAU,2BA1BfP,EAAAA,EAAAA,KAAA,KAAAC,SAAG,kBAgCE,C","sources":["pages/blogs/ViewBlog.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\"; // To get the blog ID from the URL\nimport { Container, Grid } from \"@mui/material\"; // MUI components for better styling\n\n// Define types for the blog data\ninterface Blog {\n  title: string;\n  content: string;\n  coverImageSrc?: string; // Optional because it might not exist\n}\n\nconst SingleBlog: React.FC = () => {\n  const { id } = useParams<{ id: string }>(); // Get the blog ID from the URL\n  const [blog, setBlog] = useState<Blog | null>(null); // State to store blog data\n  const [loading, setLoading] = useState<boolean>(true); // Loading state\n  const [error, setError] = useState<string>(\"\"); // Error state\n\n  useEffect(() => {\n    const fetchBlog = async () => {\n      try {\n        const response = await axios.get(\n          `https://campusroot.com/api/v1/public/blog/${id}`\n        );\n        setBlog(response.data.data); // Set the blog data\n        setLoading(false); // Set loading to false after fetching data\n      } catch (err) {\n        console.error(\"Error fetching blog:\", err);\n        setError(\"Failed to fetch blog. Please try again later.\");\n        setLoading(false); // Set loading to false in case of error\n      }\n    };\n    fetchBlog();\n  }, [id]);\n\n  if (loading) {\n    return <p>Loading...</p>; // Show loading state\n  }\n\n  if (error) {\n    return <p>{error}</p>; // Show error message\n  }\n\n  if (!blog) {\n    return <p>No blog found.</p>; // Handle case where blog is null\n  }\n\n  return (\n    <Container sx={{ marginTop: \"5.5rem\",\"&.MuiContainer-root\":{maxWidth:\"1440px\"} }}>\n      <h1 className=\"title\">{blog.title}</h1>\n      <div\n        className=\"grid-container\"\n        style={{ margin: 0, padding: 0, boxSizing: \"border-box\" }}\n      >\n        <Grid container spacing={2}>\n          <Grid item lg={8} md={7} className=\"grid-item\">\n            <div>\n              {/* Render HTML content from the blog */}\n              <div\n                className=\"blog-content2\"\n                dangerouslySetInnerHTML={{ __html: blog.content }} // Safely render HTML\n              />\n            </div>\n          </Grid>\n          <Grid item lg={4} md={5} className=\"grid-item\">\n            {/* Check if cover image exists */}\n            {blog.coverImageSrc && (\n              <img\n                src={blog.coverImageSrc}\n                alt={`Cover for ${blog.title}`}\n                className=\"cover-image\"\n              />\n            )}\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default SingleBlog;\n"],"names":["SingleBlog","id","useParams","blog","setBlog","useState","loading","setLoading","error","setError","useEffect","async","response","axios","get","concat","data","err","console","fetchBlog","_jsx","children","_jsxs","Container","sx","marginTop","maxWidth","className","title","style","margin","padding","boxSizing","Grid","container","spacing","item","lg","md","dangerouslySetInnerHTML","__html","content","coverImageSrc","src","alt"],"sourceRoot":""}