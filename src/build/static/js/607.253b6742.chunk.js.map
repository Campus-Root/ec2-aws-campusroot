{"version":3,"file":"static/js/607.253b6742.chunk.js","mappings":"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","sources":["genericComponents/expandCard.tsx","pages/profile/section/documents/aptitude.tsx","pages/profile/section/documents/englishTest.tsx","pages/profile/section/documents/workExperienceDocs.tsx","pages/profile/section/documents/otherDocs.tsx","genericComponents/accordian.tsx","pages/profile/section/documents/academicDocs.tsx","pages/profile/section/documents/documentPreview.tsx","pages/profile/section/documents/personalDocs.tsx","pages/profile/section/documents/personal.tsx","pages/profile/section/documents.tsx","genericComponents/CustomCardHOC.tsx","pages/profile/section/universities/shortlisted.tsx","pages/profile/section/universities/universities.tsx","pages/profile/section/dashboard/upcomingSessions.tsx","pages/profile/section/dashboard/bookedSlots.tsx","pages/profile/section/dashboard/cardPage.tsx","pages/profile/section/dashboard/events.tsx","pages/profile/section/dashboard/advisors.tsx","pages/profile/section/dashboard.tsx","genericComponents/reusableSelect.tsx","pages/profile/section/education/bachelors.tsx","pages/profile/section/education/diploma.tsx","pages/profile/section/education/grade10.tsx","pages/profile/section/education/postGrad.tsx","genericComponents/modalPopup/useProfileData.tsx","pages/profile/section/education/index.tsx","pages/profile/section/testScores/testScores.tsx","pages/profile/section/profileSection/preferences.tsx","pages/profile/section/profileSection/extraCurricular.tsx","pages/profile/section/profileSection/family.tsx","pages/profile/section/profileSection/workExperience.tsx","pages/profile/section/profileSection/personalDetails.tsx","pages/profile/section/profileSection/address.tsx","pages/profile/section/profileSection/profile.tsx","pages/profile/section/profileSection/index.tsx","genericComponents/customCard.tsx","pages/profile/section/universities/appliedUniversities.tsx","assets/constants/courseList.ts","pages/profile/section/RecommendEdit.tsx","genericComponents/shimmer/SimpleShimmer.tsx","pages/profile/section/recommend.tsx","hooks/useSimplePerformance.ts","pages/profile/section/advisors.tsx","pages/profile/section/cart.tsx","pages/profile/section/orders.tsx","pages/profile/Profile.tsx","pages/profile/profileSidebar.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Collapse,\n  Box,\n  ListItemIcon,\n  IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { expandCardStyles } from \"../components/styles/customStyles\";\n\ninterface expandCardProps {\n  title: string;\n  children: React.ReactNode;\n  imageUrl: string;\n}\n\nexport default function ExpandCard({\n  title,\n  children,\n  imageUrl,\n}: expandCardProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Card\n        sx={[\n          expandCardStyles.cardCollapse,\n          {\n            boxShadow: open ? \"4px 4px 50px rgb(14 4 4 / 8%)\" : 0,\n          },\n        ]}\n      >\n        <CardHeader\n          onClick={() => setOpen(!open)}\n          sx={{\n            ...expandCardStyles.cardTitle,\n            color: \"#8E9091\",\n          }}\n          title={title}\n          avatar={\n            <Box\n              sx={{\n                ...expandCardStyles.cardImg,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  color: \"#495052\",\n                  fontWeight: 500,\n                }}\n              >\n                {imageUrl}\n              </ListItemIcon>\n            </Box>\n          }\n          action={\n            <IconButton\n              onClick={() => setOpen(!open)}\n              sx={{\n                transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                transition: \"transform 0.3s\",\n              }}\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          }\n        />\n        <div>\n          <Collapse\n            in={open}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={expandCardStyles.cardContent}\n          >\n            <CardContent sx={{padding:0.5}}>\n              <Container sx={{padding:0}}>{children}</Container>\n            </CardContent>\n          </Collapse>\n        </div>\n      </Card>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport Images from \"../../../../assets\";\n// import { Link } from \"react-router-dom\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nconst Aptitude = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const testscores = useAppSelector((state) => state.testscores);\n  const findTestScoresByName = (name: string) => {\n    return testscores.data.find((item) => item.name === name);\n  };\n  const testScoresGRE = findTestScoresByName(\"Graduate Record Examination\");\n  const testScoresGMAT = findTestScoresByName(\"Graduate Management Admission Test\");\n  const testScoresACT = findTestScoresByName(\"American College Testing\");\n  const testScoresSAT = findTestScoresByName(\"Scholastic Assessment Test\");\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">GRE</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresGRE?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresGRE.docId?.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresGRE.docId?.contentType}&id=${testScoresGRE.docId?._id}`}\n                  target=\"_blank\"\n                  // onClick={() => {\n                  //   localStorage.setItem(\"docId\", testScoresGRE.docId._id);\n                  // }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                  <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresGRE.docId?.data?.preview_url} title=\"gre\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresGRE.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      {/* Passport ADD */}\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">GMAT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresGMAT?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresGMAT.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >            \n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresGMAT.docId?.contentType}&id=${testScoresGMAT.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresGMAT.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresGMAT.docId?.data?.preview_url} title=\"gmat\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresGMAT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">SAT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresSAT?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresSAT.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresSAT.docId?.contentType}&id=${testScoresSAT.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresSAT.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\"  }}\n                 >\n                  <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresSAT.docId?.data?.preview_url} title=\"sat\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresSAT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">ACT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresACT?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresACT.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresACT.docId?.contentType}&id=${testScoresACT.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresACT.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\"  }}\n                 >\n                   <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresACT.docId?.data?.preview_url} title=\"act\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresACT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Aptitude;\n","import React from \"react\";\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport Images from \"../../../../assets\";\n// import { Link } from \"react-router-dom\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\n\nconst EnglishTest = ({data}:any) => {\n  const testscores = useAppSelector((state) => state.testscores);\nconst dispatch = useAppDispatch();\n  const findTestScoresByName = (name: string) => {\n    return testscores.data.find((item) => item.name === name);\n  };\n\n  const testScoresTOEFL = findTestScoresByName(\"Test of English as a Foreign Language\");\n  const testScoresIELTS = findTestScoresByName(\"International English Language Testing System\");\n  const testScoresDET = findTestScoresByName(\"Duolingo English Test\");\n  const testScoresPTE = findTestScoresByName(\"Pearson Test of English\");\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">TOEFL</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n        {testScoresTOEFL?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresTOEFL.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresTOEFL.docId?.contentType}&id=${testScoresTOEFL.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresTOEFL.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                  >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresTOEFL.docId?.data?.preview_url} title=\"toefl\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresTOEFL.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">IELTS</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresIELTS?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresIELTS.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresIELTS.docId?.contentType}&id=${testScoresIELTS.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresIELTS.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                  <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresIELTS.docId?.data?.preview_url} title=\"ielts\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresIELTS.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">DET</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresDET?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresDET.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresDET.docId?.contentType}&id=${testScoresDET.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresDET.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                  >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresDET.docId?.data?.preview_url} title=\"det\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresDET.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">PTE</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresPTE?.docId && (\n           <>\n           <Typography>\n             <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n             {testScoresPTE.docId.data?.FileName}\n           </Typography>\n           <Stack\n           direction=\"row\"\n           spacing={2}\n           sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n         >\n               {/* <Link\n                 to={`/pdfPreview?type=${testScoresPTE.docId?.contentType}&id=${testScoresPTE.docId?._id}`}\n                 target=\"_blank\"\n                 onClick={() => {\n                   localStorage.setItem(\"docId\", testScoresPTE.docId._id);\n                 }}\n                 style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                 >\n                   <VisibilityOutlinedIcon/>\n               </Link> */}\n                    {/* <iframe src={testScoresPTE.docId?.data?.preview_url} title=\"pte\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresPTE.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n         </Stack>\n         </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default EnglishTest;\n","import { Grid, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Document } from \"../../../../types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { useAppDispatch } from \"src/assets/hooks\";\nimport { setPopup } from \"src/store/Slices/popupSlice\";\n\n\nconst WorkExperienceDocs = ({data}:any) => {\nconst dispatch=useAppDispatch();\n\n  const DocumentItem = ({ doc, handleDelete }:any) => {\n\n  \n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">{doc?.data?.originalname}</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n                <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:doc?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n        </Grid>\n      </Grid>\n    );\n  };\n  return (\n    <div>\n      { data?.length > 0 ? data?.map((doc:Document) => (\n          <DocumentItem\n          key={doc._id}\n          doc={doc}\n        />\n        )) : <Typography>No data available</Typography>}\n      \n    </div>\n  );\n};\n\nexport default WorkExperienceDocs;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport Aptitude from \"./aptitude\";\nimport EnglishTest from \"./englishTest\";\nimport WorkExperienceDocs from \"./workExperienceDocs\";\n\nconst OtherDocs = () => {\n  const documents = useAppSelector(state=>state.documents)\n\n  const profile = [\n    {\n      title: \"Aptitude Test Marksheet\",\n      image: <div>\n     \n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          1\n        </Typography>\n    \n    </div>,\n      component: <Aptitude data={documents?.data?.test?.general}/>,\n    },\n    {\n      title: \"English Proficiency Test Scores report\",\n      image: <div>\n\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          2\n        </Typography>\n\n    </div>,\n      component: <EnglishTest data={documents?.data?.test?.languageProf}/>,\n    },\n    {\n      title: \"Work Experience\",\n      image: <div>\n\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          3\n        </Typography>\n\n    </div>,\n      component: <WorkExperienceDocs data={documents?.data?.workExperiences}/>,\n    },\n  ];\n  return (\n    <Box>\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.title} imageUrl={item.image}>\n          {item.component}\n        </ExpandCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default OtherDocs;\n","import {\n  Card,\n  CardHeader,\n  CardContent,\n  Collapse,\n  IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\n\ninterface ExpandCardProps {\n  title: string;\n  children: React.ReactNode;\n  isOpen: boolean;\n  onToggle: () => void;\n}\n\nexport default function Accordion({ title, children, isOpen, onToggle }: ExpandCardProps) {\n  return (\n    <Card sx={{ boxShadow: 0, p: 0, borderRadius: \"8px\", overflow: \"hidden\", marginBottom: 1 }}>\n      <CardHeader\n        onClick={onToggle}\n        sx={{\n          padding: \"8px !important\",\n          background: \"#F7FAFD\",\n          color: \"#495052\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          \".MuiTypography-root\": {\n            fontSize: \"1rem\",\n            fontWeight: 500,\n          },\n        }}\n        title={title}\n        action={\n          <IconButton\n            onClick={(e) => {\n              e.stopPropagation();\n              onToggle();\n            }}\n            aria-label=\"expand\"\n            size=\"small\"\n            sx={{ marginRight: \"12px\" }}\n          >\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          </IconButton>\n        }\n      />\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <CardContent sx={{ boxShadow: 3, p: 2 }}>{children}</CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { deleteUploadProfile, uploadProfile } from \"../../../../services\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\n\nconst AcademicDocs = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n\n  const [openIndex, setOpenIndex] = useState<number | null>(null); // Manage open state centrally\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [identifier, setIdentifier] = useState<any | null>(null);\n\n  const handleToggle = (index: number) => {\n    setOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n  };\n\n  const handleDeleteOpen = (name: any, item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n    setIdentifier(name);\n  };\n\n  const inputFileRefs = {\n    secondarySchool: useRef<HTMLInputElement>(null),\n    plus2: useRef<HTMLInputElement>(null),\n    degree: useRef<HTMLInputElement>(null),\n  };\n\n  const documents = [\n    { key: \"transcripts\", label: \"Transcripts\" },\n    { key: \"bonafide\", label: \"Bonafide\" },\n    { key: \"CMM\", label: \"CMM\" },\n    { key: \"PCM\", label: \"PCM\" },\n    { key: \"OD\", label: \"OD\" },\n  ];\n\n  const secondaryDocuments = [\n    { key: \"secondarySchool\", label: \"School\" },\n    { key: \"plus2\", label: \"Grade 12\" },\n    { key: \"degree\", label: \"Degree\" },\n  ];\n  const DocumentItem = ({ doc, data, handleDelete }: any) => {\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">{doc.label}</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {data && data[doc.key] ? (\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n            >\n              <Typography>{data[doc.key]?.data?.FileName}</Typography>\n              <VisibilityOutlinedIcon\n                sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                onClick={() => {\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data: data[doc.key]?.data?.preview_url,\n                          dimensions: { width: \"500px\" },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  );\n                }}\n              />\n              <DeleteOutlineOutlinedIcon\n                sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                onClick={() => handleDelete(`academic.${doc.key}`, data[doc.key]._id)}\n              />\n            </Stack>\n          ) : (\n            <Typography color=\"gray\">No file uploaded</Typography>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n  const handleDelete = async (fieldPath: string, deleteId: string) => {\n    try {\n      const response = await deleteUploadProfile({\n        fieldPath: fieldPath,\n        documentId: deleteId,\n      });\n  \n      if (response) {\n        dispatch(setDocuments(response.data.data)); // Update Redux store\n        setOpen(false); // Close the dialog after deletion\n      }\n    } catch (error) {\n      console.error(\"Failed to delete document:\", error);\n    }\n  };\n  \n\n  const FileUploadSection = ({ title, docData, docPath, index }: any) => {\n    return (\n      <Accordion title={title} isOpen={openIndex === index} onToggle={() => handleToggle(index)}>\n        <>\n          {documents.map((doc) => (\n            <DocumentItem\n              key={doc.key}\n              doc={doc}\n              data={docData}\n              handleDelete={handleDeleteOpen}\n            />\n          ))}\n        </>\n      </Accordion>\n    );\n  };\n\n  return (\n    <div>\n      <Typography textAlign=\"right\">\n        <b>Note:</b> Only jpeg, png, pdf files are accepted\n      </Typography>\n\n      {/* Bachelors Section */}\n      <FileUploadSection title=\"Bachelors\" docData={data?.bachelors} docPath=\"academic.bachelors\" index={0} />\n\n      {/* Masters Section */}\n      <FileUploadSection title=\"Masters\" docData={data?.masters} docPath=\"academic.masters\" index={1} />\n\n      {/* Secondary Documents */}\n      {secondaryDocuments.map((doc, idx) => (\n        <DocumentItem\n          key={doc.key}\n          doc={doc}\n          data={data}\n          handleDelete={handleDeleteOpen}\n        />\n      ))}\n\n<ConfirmDialog\n  open={open}\n  handleClose={() => setOpen(false)}\n  additionalData={{\n    onSubmit: () => handleDelete(identifier, deleteItem), // ✅ Now handleDelete is properly defined\n    title: \"Are you sure you want to delete?\",\n    content: \"\",\n  }}\n/>\n\n    </div>\n  );\n};\n\nexport default AcademicDocs;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nimport { useAppDispatch } from \"src/assets/hooks\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\n\nconst Document = ({ doc, data, inputFileRef, handleSubmit, handleDelete }: any) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [identifier, setIdentifier] = useState<any | null>(null);\n  \n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleDeleteOpen = (name: any, item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n    setIdentifier(name);\n  };\n\n  const dispatch = useAppDispatch();\n\n  const handleFileSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier: string\n  ) => {\n    setLoading(true); \n    await handleSubmit(event, fieldPath, fieldIdentifier);\n    setLoading(false); \n  };\n\n  return (\n    <Grid\n      container\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        borderRadius: \"8px\",\n        padding: \"10px\",\n        background: \"#F7FAFD\",\n        mb: 2,\n      }}\n    >\n      <Grid item xs={4}>\n        <Typography fontWeight=\"500\">{doc.label}</Typography>\n      </Grid>\n      <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n        {data && data[doc.key] ? (\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n            <Typography>{data[doc.key]?.data?.FileName}</Typography>\n            <VisibilityOutlinedIcon\n              sx={{ fontSize: \"large\" }}\n              onClick={() => {\n                dispatch(\n                  setPopup({\n                    show: true,\n                    data: {\n                      container: {\n                        name: \"fileViewer\",\n                        data: data[doc.key]?.data?.preview_url,\n                        dimensions: {\n                          width: \"500px\",\n                        },\n                      },\n                      type: \"custom\",\n                    }\n                  })\n                );\n              }}\n            />\n            <DeleteOutlineOutlinedIcon\n              sx={{ fontSize: \"large\" }}\n              onClick={() => handleDeleteOpen(`personal.${doc.key}`, data[doc.key]._id)}\n            />\n          </Stack>\n        ) : (\n          <>\n            <input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              onChange={(event) => handleFileSubmit(event, `personal.${doc.key}`, doc.label)}\n              ref={inputFileRef}\n              accept=\".jpeg,.png,.pdf\"\n            />\n            {loading ? (\n              <img\n              src={Images.standardLoader}\n              alt=\"load\"\n              style={{ width: \"20px\", height: \"20px\",marginRight:\"10px\"}}\n            />\n            ) : (\n              <Button\n                sx={{\n                  color: \"#000\",\n                  textTransform: \"none\",\n                  p: 0,\n                  fontSize: \"0.7rem\",\n                }}\n                onClick={() => inputFileRef.current?.click()}\n              >\n                <FileUploadOutlinedIcon />\n              </Button>\n            )}\n          </>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => handleDelete(identifier, deleteItem),\n          title: \"Are you sure you want to delete?\",\n          content: \"\",\n        }}\n      />\n    </Grid>\n  );\n};\n\nexport default Document;\n","import React, { useRef } from \"react\";\nimport {\n  Typography,\n} from \"@mui/material\";\nimport { deleteUploadProfile, uploadProfile } from \"../../../../services\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { allowedFileTypes } from \"../../../../assets/menu\";\nimport Document from \"./documentPreview\";\n\nconst PersonalDocs = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const inputFileRefs = {\n    resume: useRef<HTMLInputElement>(null),\n    passportBD: useRef<HTMLInputElement>(null),\n    passportADD: useRef<HTMLInputElement>(null),\n  };\n  const secondarydocuments = [\n    { key: \"resume\", label: \"Resume\" },\n    { key: \"passportBD\", label: \"Passport Photo Page\" },\n    { key: \"passportADD\", label: \"Passport Address Page\" },\n  ];\n\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier:string\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    if (file && allowedFileTypes.includes(file.type)) {\n      try {\n        const formData = new FormData();\n        formData.append(\"uploaded_file\", file);\n        formData.append(\"fieldPath\", fieldPath);\n        formData.append(\"fileIdentifier\", fieldIdentifier);\n        const response = await uploadProfile(formData);\n        if (response) {\n          dispatch(setDocuments(response.data.data.docs));\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Document added successfully\",\n                  dimensions: {\n                    width: \"30%\",\n                    height:\"40%\",\n                    show:\"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n      } catch (err) {\n        console.error(\"Upload failed\", err);\n      }\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"error\",\n              data: \"Only jpeg, png, pdf files are accepted\",\n              dimensions: {\n                width: \"250px\",\n                show:\"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  };\n\n  const handleDelete = async (fieldPath: string, deleteId: string) => {\n    try {\n      const response = await deleteUploadProfile({ fieldPath, documentId: deleteId });\n      if (response) {\n        dispatch(setDocuments(response.data.data));\n      }\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n    }\n  };\n\n  return (\n    <div>\n      <Typography textAlign=\"right\">\n        <b>Note:</b> Only jpeg, png, pdf files are accepted\n      </Typography>\n      {secondarydocuments.map((doc) => (\n        <Document\n          key={doc.key}\n          doc={doc}\n          data={data}\n          inputFileRef={inputFileRefs[doc.key as keyof typeof inputFileRefs]}\n          handleSubmit={handleSubmit}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PersonalDocs;\n","import { Box, Typography } from \"@mui/material\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport AcademicDocs from \"./academicDocs\";\nimport PersonalDocs from \"./personalDocs\";\n\nconst TranscriptDocs = () => {\n  const documents = useAppSelector(state=>state.documents)\n  const profile = [\n    {\n      title: \"Personal Documents\",\n      image:  <div>\n   \n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          1\n        </Typography>\n  \n    </div>,\n      component: <PersonalDocs data={documents?.data?.personal}/>\n    },\n    {\n      title: \"Academic Documents\",\n      image: \n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          2\n\n    </Typography> ,\n      component:<AcademicDocs data={documents?.data?.academic}/> \n    }\n    \n  ];\n  return (\n    <Box\n     \n    >\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.title} imageUrl={item.image} key={item}>\n          {item.component}\n        </ExpandCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default TranscriptDocs;\n","import { Box, Typography } from '@mui/material'\nimport React from 'react'\nimport CustomTabs from '../../../genericComponents/tabs'\nimport OtherDocs from './documents/otherDocs'\nimport TranscriptDocs from './documents/personal'\n\nconst Documents = () => {\n  return (\n    <Box sx={{display:'flex',flexDirection:'column',justifyContent:'flex-start'}}>\n      <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} sx={{color:\"#8E9091\"}}>Documents</Typography>\n      <TranscriptDocs />\n      <OtherDocs />\n    </Box>\n  )\n}\n\nexport default Documents","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\ninterface CustomCardHOCProps {\n  logoSrc: string;\n  universityName: string;\n  courseName: string;\n  countryName: string;\n  children?: React.ReactNode; // For start date row or other custom content\n  actions?: React.ReactNode; // For action icons row\n}\n\nconst CustomCardHOC = React.memo<CustomCardHOCProps>(({\n  logoSrc,\n  universityName,\n  courseName,\n  countryName,\n  children,\n  actions,\n}) => (\n  <Box\n    sx={{\n      position: \"relative\",\n      borderRadius: \"16px\",\n      background: \"#fff\",\n      border: \"1px solid #E6E6E6\",\n      boxShadow: \"0 2px 8px rgba(0,0,0,0.04)\",\n      p: 2.5,\n      minHeight: 180,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n      transition: \"box-shadow 200ms ease, transform 200ms ease\",\n      \"&:hover\": {\n        boxShadow: \"0 8px 24px rgba(0,0,0,0.08)\",\n        transform: \"translateY(-2px)\",\n      },\n    }}\n  >\n    {/* Country name top-right */}\n    <Typography\n      sx={{\n        position: \"absolute\",\n        top: -14,\n        right: 20,\n        fontSize: \"0.8rem\",\n        color: \"#3B3F76\",\n        fontWeight: 600,\n        backgroundColor: \"#EAF2FF\",\n        border: \"1px solid #D7E4FF\",\n        borderRadius: \"14px\",\n        px: 1.25,\n        py: 0.4,\n      }}\n    >\n      {countryName}\n    </Typography>\n    {/* Logo and names */}\n    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1.25, mt: 2.5 }}>\n      <img\n        src={logoSrc}\n        alt=\"logo\"\n        style={{\n          width: \"2.4rem\",\n          height: \"2.4rem\",\n          borderRadius: \"8px\",\n        }}\n      />\n      <Box>\n        <Typography sx={{ fontWeight: 700, fontSize: \"1rem\", color: \"#1F2937\" }}>\n          {universityName}\n        </Typography>\n        <Typography sx={{ fontSize: \"0.92rem\", color: \"#6B7280\" }}>\n          {courseName}\n        </Typography>\n      </Box>\n    </Box>\n    {/* Start date row or custom content */}\n    <Box sx={{ display: \"flex\", alignItems: \"center\", mt: 1.25, mb: 1.25 }}>\n      {children}\n    </Box>\n    {/* Actions row */}\n    <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", gap: 2 }}>\n      {actions}\n    </Box>\n  </Box>\n));\n\nexport default CustomCardHOC; ","import { Box, Button, Grid,Tooltip, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport CustomCard from \"../../../../genericComponents/customCard\";\nimport ConfirmDialog from \"../../../../genericComponents/modalPopup/confirmDialog\";\nimport { addToShortList} from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport {  setShortlisted } from \"../../../../store/Slices/shortlistedCoursesSlice\";\nimport {  Event, ShortlistedCourse } from \"../../../../types/types\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { monthNames } from \"../../../../assets/menu\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomCardHOC from '../../../../genericComponents/CustomCardHOC';\n\nconst Shortlisted = () => {\n  const navigate=useNavigate()\n  const shortlistedCourses = useAppSelector(\n    (state) => state.shortlistedcourses\n  );\n  const [open, setOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const dispatch = useAppDispatch();\n  // const navigate = useNavigate();\n  const handleDeleteOpen = (id: string) => {\n    setOpen(true);\n    setDeleteId(id);\n  };\n  const handleDelete = async () => {\n    const values = {\n      action: \"pull\",\n      courseId: deleteId,\n    };\n   \n    const response = await addToShortList(values);\n    if (response.data.success) {\n      dispatch(setShortlisted(response.data.data))\n    }\n      setOpen(false);\n    \n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        try {\n          if (\n            userAuthStatus?.data?.isAuthorized &&\n            userAuthStatus?.data?.isRegistered\n          ) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"applynow\",\n                    data:event.data,\n                    dimensions: {\n                      width: \"450px\",\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                  height:\"70%\",\n                  show:\"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) {}\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={3}\n        sx={{\n          overflowY: \"scroll\",  \n        }}\n      >\n        {shortlistedCourses.data && shortlistedCourses?.data?.length > 0 ? (\n          <>\n            {shortlistedCourses.data?.map(\n              (item: ShortlistedCourse, i: number) => (\n                                <Grid item xs={12} sm={6} lg={5} sx={{paddingLeft:{xs:0,md:\"1rem\"}}} key={i}>\n                  <CustomCardHOC\n                      logoSrc={item.university.logoSrc}\n                      universityName={item.university.name}\n                      courseName={item.name}\n                      countryName={item.university.location.country}\n                      actions={\n                        <>\n                          <Box\n                            sx={{border:\"1px solid #1C1F40\",borderRadius:\"50%\",width:\"2rem\",height:\"2rem\",display: \"flex\",justifyContent: \"center\",alignItems: \"center\",}}\n                            onClick={() => eventHandler({ name: \"cart\", data: item })}\n                          >\n                            <ShoppingCartOutlinedIcon sx={{fontSize:\"1.25rem\",color:\"#1C1F40\"}} />\n                          </Box>\n                          <Box\n                            component=\"img\"\n                            src={Images.deleteIcon}\n                            alt=\"icon\"\n                            sx={{width:\"2rem\",height:\"2rem\" }}\n                            onClick={() => handleDeleteOpen(item._id)}\n                          />\n                        </>\n                      }\n                    >\n                      <Typography\n                        component=\"span\"\n                        fontSize=\"0.8rem\"\n                        fontWeight=\"500\"\n                        sx={{ display: \"flex\", alignItems: \"center\", whiteSpace: \"nowrap\", mt: 1,color:'#5C6163' }}\n                      >\n                        <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                        &nbsp; Start date :\n                        {item?.startDate\n                          ?.map((item: any, index: number) => monthNames[item?.courseStartingMonth])\n                          .join(\", \")}\n                      </Typography>\n                    </CustomCardHOC>\n                </Grid>\n              )\n            )}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n            }}\n          >\n            <img\n              src={Images.Confused}\n              alt=\"noData\"\n              style={{ width: \"220px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n            />\n            <Typography\n              sx={{\n                mb: 1,\n                fontSize: \"1.6rem\",\n                fontWeight: 600,\n                color: \"#495052\",\n                textAlign: \"center\",\n              }}\n            >\n              No Favourites Yet\n            </Typography>\n            <Typography\n              sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n              }}\n            >\n            Discover programs and save the ones that exite you!\n            </Typography>\n            <Button\n              sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                \"&:hover\": {\n                  background: \"#F48438\",\n                },\n              }}\n              onClick={() => {\n                const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                  1\n                )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              Add products\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: handleDelete, // Pass the function directly without curly braces\n          title: \"Are you sure you want to delete this from your shortlist?\",\n          content:\n            \"You're just a few steps away from applying to universities.\",\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shortlisted;\n","import { Box} from \"@mui/material\";\nimport React from \"react\";\n// import CustomTabs from \"../../../../genericComponents/tabs\";\nimport Shortlisted from \"./shortlisted\";\n\nconst Universities = () => {\n  // const tabs = [\n  //   {\n  //     label: \"Shortlisted programs\",\n  //     Component: (\n  //       <div>\n  //         <Shortlisted />\n  //       </div>\n  //     ),\n  //   },\n  //   {\n  //     label: \"Recommended programs\",\n  //     Component: (\n  //       <div>\n  //         <Typography>Recommendations</Typography>\n  //         {/* <AppliedUniversities /> */}\n  //       </div>\n  //     ),\n  //   },\n  // ];\n  return (\n    <Box\n      sx={{\n        // background: \"#fff\",\n        // borderRadius: \"10px\",\n        p: 2,\n      }}\n    >\n      {/* <CustomTabs tabs={tabs} /> */}\n      <Shortlisted />\n    </Box>\n  );\n};\n\nexport default Universities;\n","import { Avatar, Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { getAdvisorTitle,setWordCase } from \"../../../../assets/library\";\nimport { modifyBooking } from \"../../../../services\";\nimport { updatemeetings } from \"../../../../store/Slices/meetings\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UpcomingSessions = () => {\n  const meetings = useAppSelector((state) => state.meetings);\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [deleteItem,setDeleteItem] = useState();\n  const navigate=useNavigate()\n\n  const joinNowClick = (link: string) => {\n    window.open(link, \"_blank\");\n  };\n\n  const cancelCall = async (id: string) => {\n    try {\n      const response = await modifyBooking({\n        meetingId: deleteItem,\n        option: \"cancelEvent\",\n      });\n      if (response) {\n        dispatch(updatemeetings(response.data));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: response.data.message,\n                dimensions: {\n                  width: \"30%\",\n                height:\"40%\",\n                  show:\"none\"\n    \n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n      console.error(\"Error cancelling the event:\", error);\n    }\n    setOpen(false)\n  };\n\n  const handleDeleteOpen = (item:any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const filteredEvents = meetings.data?.filter((event) => {\n    const startTime = new Date(event?.data?.start.dateTime);\n    const currentTime = new Date();\n    return event.status === \"upcoming\" && startTime > currentTime;\n  });\n\n  const rescheduledEvents = meetings.data?.filter((event) => {\n    const startTime = new Date(event?.data?.start.dateTime);\n    const currentTime = new Date();\n    return event.status === \"rescheduled\" && startTime > currentTime;\n  });\n\n  const hasEvents = filteredEvents?.length > 0 || rescheduledEvents?.length > 0;\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        sx={{\n          mt: 1,\n          p: 1,\n          height: { xs: \"150px\", md: \"150px\",lg:\"170px\" },\n          overflowY: \"auto\",\n        }}\n      >\n        {hasEvents ? (\n          <>\n            {filteredEvents?.map((data, i) => {\n              console.log(\"data\",data)\n              const startTime = new Date(data?.data?.start.dateTime);\n              const endTime = new Date(data?.data?.end.dateTime);\n              const currentTime = new Date();\n              const isEventInProgress =\n                currentTime >= startTime && currentTime <= endTime;\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  key={i}\n                  sx={{\n                    mb: { xs: 2, md: 3 },\n                    display: \"flex\",\n                    background: \"#F8F8FC\",\n                    borderRadius: \"10px\",\n                    height: \"100px\",\n                    position: \"relative\",\n                    alignItems: \"center\",\n                    px: { xs: 1, md: 2 },\n                    py: { xs: 2, md: 0 }\n                  }}\n                >\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={12} md={4}>\n                      <Box sx={{ \n                        display: \"flex\", \n                        flexDirection: \"column\", \n                        gap: { xs: 0.5, md: 1,lg:0.5 },\n                        mb: { xs: 2, md: 0,lg:5 }\n                      }}>\n                        <Typography\n                          fontWeight=\"500\"\n                          sx={{\n                            fontSize: { xs: \"12px\", md: \"14px\" },\n                            color: \"#8E9091\",\n                          }}\n                        >\n                          {data?.member?.role}\n                        </Typography>\n                        <Typography sx={{ \n                          color: \"#495052\", \n                          fontWeight: 500,\n                          fontSize: { xs: \"12px\", md: \"14px\" }\n                        }}>\n                          {setWordCase(data?.data?.description)}\n                        </Typography>\n                        <Typography\n                          fontSize={{ xs: \"9px\", md: \"10px\" }}\n                          sx={{ color: '#8E9091' }}\n                        >\n                          {new Date(data?.data?.start.dateTime).toLocaleString(\"en-GB\", {\n                            month: \"long\",\n                            year: \"numeric\",\n                            day: \"numeric\",\n                            hour: \"numeric\",\n                            minute: \"numeric\",\n                            hour12: true,\n                          })}\n                        </Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={8} sx={{ position: \"relative\" }}>\n                      <Box sx={{ \n                        display: \"flex\", \n                        flexDirection: { xs: \"column\", md: \"row\" },\n                        alignItems: { xs: \"flex-start\", md: \"center\",lg:\"center\" },\n                        gap: 0,\n                        position: { xs: \"relative\", md: \"absolute\" },\n                        right: { xs: 0, md: 0 },\n                        top: { xs: \"auto\", md: \"50%\" },\n                        transform: { xs: \"none\", md: \"translateY(-50%)\" },\n                        width: { xs: \"100%\", md: \"auto\" }\n                      }}>\n                        <Box sx={{ \n                          display: \"flex\", \n                          flexDirection: \"column\", \n                          alignItems: { xs: \"flex-start\", md: \"center\" }, \n                          gap: 1,\n                          width: { xs: \"100%\", md: \"auto\" }\n                        }}>\n                          {/* <Avatar\n                            src={data?.member.displayPicSrc}\n                            alt=\"advisor\"\n                            sx={{\n                              width: { xs: \"2rem\", md: \"2.5rem\" },\n                              height: { xs: \"2rem\", md: \"2.5rem\" },\n                              border: \"2px solid #3B3F76\",\n                              ml:{xs:'150px'}\n                            }}\n                          /> */}\n                          <Button\n                            onClick={() => joinNowClick(data?.data.hangoutLink)}\n                            disabled={!isEventInProgress}\n                            sx={{\n                              background:\"#70A6B2\",\n                              textTransform: \"none\",\n                              color: \"#FFFFFF !important\",\n                              fontSize: { xs: \"10px\", md: \"11px\" },\n                              p: 1,\n                              height: { xs: \"25px\", md: \"30px\" },\n                              borderRadius: \"25px\",\n                              width: { xs: \"50%\", md: \"auto\",lg:'auto' },\n                              mb:{xs:3,md:0,lg:0.5},\n                            }}\n                          >\n                            Join now\n                          </Button>\n                        </Box>\n                        <Typography\n                          sx={{\n                            background: \"#ffff\",\n                            p: 1,\n                            borderRadius: \"25px\",\n                            border:\"2px solid #70A6B2\",\n                            fontSize: { xs: \"10px\", md: \"10px\",lg:'10px' },\n                            color: \"#3B3F76\",\n                            width: \"fit-content\",\n                            fontWeight: 'bold',\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            position: { xs: \"relative\", md: \"absolute\",lg:'absolute' },\n                            bottom: { xs: \"auto\", md: \"-5px\",lg:'1px' },\n                            right: { xs: \"-100px\", md: \"70px\",lg:\"70px\" },\n                            // mt: { xs: 1, md: 0,lg:7}\n                            \n                          }}\n                        >\n                          <span\n                            onClick={() =>\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"reschedule\",\n                                      data: data,\n                                      dimensions: {\n                                        width: \"800px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                            }\n                            style={{ cursor: \"pointer\",color:\"#495052\" }}\n                          >\n                            Reschedule\n                          </span>\n                          <span style={{ color: \"#3B3F76\" }}>|</span>\n                          <span\n                            onClick={() => handleDeleteOpen(data?._id)}\n                            style={{ cursor: \"pointer\",color:\"#495052\" }}\n                          >\n                            Cancel\n                          </span>\n                        </Typography>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            })}\n            {rescheduledEvents?.map((data, i) => {\n              const startTime = new Date(data?.data?.start.dateTime);\n              const endTime = new Date(data?.data?.end.dateTime);\n              const currentTime = new Date();\n              const isEventInProgress =\n                currentTime >= startTime && currentTime <= endTime;\n              return (\n                <Grid\n                item\n                xs={12}\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  position: \"relative\",\n                  background: \"#F8F8FC\",\n                  my: 1,\n                  borderRadius: \"10px\",\n                  height:\"100px\"\n                }}\n              >\n                <Grid container spacing={2}>\n                  <Grid\n                    item\n                    xs={4}\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        position: \"absolute\",\n                        top: \"-15px\",\n                        display: \"flex\",\n                        gap: \"1rem\",\n                        left:0\n                      }}\n                    >\n                      <Avatar\n                        src={data?.member.displayPicSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"2rem\",\n                          height: \"2rem\",\n                          borderRadius: \"50%\",\n                          marginLeft: \"0.8rem\",\n                        }}\n                      />\n                      <Typography\n                        fontWeight=\"500\"\n                        sx={{\n                          background: \"#fff\",\n                          p: 1,\n                          borderRadius: \"10px\",\n                          fontSize: \"14px\",\n                          color: \"#3B3F76\",\n                        }}\n                      >\n                        {data?.member?.role\n                          ? getAdvisorTitle(data?.member?.role)\n                          : getAdvisorTitle(data?.member?.role)}\n                      </Typography>\n                    </Box>\n                    <Typography sx={{mt:-2}}>{setWordCase(data?.member.firstName)}</Typography>\n                  </Grid>\n                  <Grid item xs={8} sx={{ mt: 1, position: \"relative\" }}>\n                    <Button\n                      onClick={() => joinNowClick(data?.data.hangoutLink)}\n                      disabled={!isEventInProgress}\n                      sx={{\n                        border: \"1px solid #027A48\",\n                        textTransform: \"none\",\n                        color: \"#000\",\n                        fontSize: \"11px\",\n                        p: 0,\n                        position: \"absolute\",\n                        top: \"0\",\n                        right: \"10px\",\n                      }}\n                    >\n                      Join now\n                    </Button>\n                    {/* <Typography sx={{ mt: 0.5 }}>\n                      {data?.data?.description ? data?.data?.description : \"N/A\"}\n                    </Typography> */}\n                    <Box sx={{display:\"flex\",mt:2}}>\n                    <Typography\n                      // color=\"#C3C3C5\"\n                      fontSize=\"14px\"\n                      gutterBottom\n                      sx={{ mb: 1 }}\n                    >\n                      {new Date(data?.data?.start.dateTime).toLocaleString(\"en-GB\", {\n                        month: \"long\",\n                        year: \"numeric\",\n                        day: \"numeric\",\n                        hour: \"numeric\",\n                        minute: \"numeric\",\n                        hour12: true,\n                      })}\n                    </Typography>\n                    <Tooltip\n              slotProps={{\n                tooltip: {\n                  sx: {\n                    color: \"#514E6A\",\n                    backgroundColor: \"#ffff\",\n                    boxShadow: 2,\n                    cursor: \"pointer\",\n                  },\n                },\n              }}\n              title={data?.data?.description ? data?.data?.description : \"N/A\"}\n              placement=\"top-start\"\n            >\n              <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\",fontSize:\"1rem\",float:\"right\" }} />\n            </Tooltip>\n            </Box>\n                    <Typography\n                      fontWeight=\"500\"\n                      sx={{\n                        background: \"#fff\",\n                        p: 0.5,\n                        borderRadius: \"10px\",\n                        fontSize: \"14px\",\n                        color: \"#3B3F76\",\n                        width: \"fit-content\",\n                        position: \"absolute\",\n                        bottom: \"15px\",\n                        right: \"10px\",\n                      }}\n                    >\n                      <span\n                        onClick={() =>\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"reschedule\",\n                                  data: data,\n                                  dimensions: {\n                                    width: \"800px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        Reschedule\n                      </span>{\" \"}\n                      /\n                      <span\n                        // onClick={() => cancelCall(data?._id)}\n                        onClick={() => handleDeleteOpen(data?._id)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        Cancel\n                      </span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              );\n            })}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              height:\"80px\"\n            }}\n          >\n            <Typography color=\"#3B3F76\" fontSize=\"1.2rem\" fontWeight=\"500\" sx={{color: \"#F87171\",fontWeight:'bold'}}>\n              No Meetings\n            </Typography>\n            <img\n              src={Images.Calender}\n              alt=\"noData\"\n              style={{ width: \"200px\", marginTop: \"0.5rem\" }}\n            />\n             <Typography color=\"black\" fontSize=\"1rem\" fontWeight=\"500\">\n           No Meetings found\n         </Typography>\n          {/* <Button \n          sx={[globalButton, { fontSize: { lg: \"14px\", xs: \"12px\" },  padding: { lg: \"8px\", xs: \"6px\" },my: { lg: \"12px\", xs: \"6px\" },mx: { lg: \"12px\", xs: \"6px\" }  }]}\n           onClick={() =>\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"advisor\",\n                                      // data: advisor,\n                                      dimensions: {\n                                        width: \"900px\",\n                                        height: \"85%\"\n          \n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                            }>\n          Book Slots\n          </Button> */}\n          </Grid>\n          \n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit:cancelCall, \n          title: \"Are you sure you want to cancel this meeting?\",\n          content:\"\"\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UpcomingSessions;\n","import { Box, Typography } from '@mui/material';\nimport UpcomingSessions from './upcomingSessions';\n\nconst BookedSlots = () => {\n  return (\n    <Box sx={{\n      background: \"#F4F4FF\",\n      borderRadius: \"16px\",\n      boxShadow: 0,\n      p: 1,\n      mb: 2,\n    }}>\n      <Typography fontWeight={600} fontSize=\"1.1rem\" color=\"#3B3F76\" mb={0.5}>\n        Upcoming Meetings\n      </Typography>\n      <UpcomingSessions/>\n    </Box>\n  )\n}\n\nexport default BookedSlots","import { Box, Button, Grid, Stack, Tooltip, Typography } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport Images from \"../../../../assets\";\n// import CircularWithValueLabel from \"./circularprogress\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { uploadApplicationDocs } from \"../../../../services\";\nimport { updateApplication } from \"../../../../store/Slices/applicationsSlice\";\nimport { setWordCase } from \"../../../../assets/library\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { commonStackStyles, commonTypographyStyles, globalButton } from \"../../../../components/styles/customStyles\";\n// import EastIcon from \"@mui/icons-material/East\";\nimport { Recommendation } from \"src/types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport '../../../../App.css'\n\nconst CardPage = () => {\n  const navigate = useNavigate();\n  const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n  const applied = useAppSelector((state) => state.applications);\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const ambitious = recommendations?.data && recommendations?.data?.data?.filter(\n    (item: Recommendation) => item?.possibilityOfAdmit === \"Ambitious\"\n  );\n  const safe: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Safe\"\n  );\n  const moderate: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Moderate\");\n\n  const sections = [\n    {\n      title: \"Activity\",\n      items: [\n        {\n          count: `${shortlisted.data?.length}`,\n          background: \"#FFF7E9\",\n          link: \"/profile/shortlisted\",\n          label: \"Wishlisted Courses\", icon: <img src={Images.BookDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${applied.data?.length}`,\n          background: \"#FFA89C4D\",\n          link: \"/profile/applications\",\n          label: \"Applied Universities\", icon: <img src={Images.UniDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n      ],\n    },\n    {\n      title: \"Recommendation\",\n      items: [\n        {\n          count: `${safe?.length}`,\n          link: `/profile/recommendedCourses/Safe`,\n          background: \"#FFA89C4D\",\n\n          label: \"Safe\", icon: <img src={Images.SafeDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${moderate?.length}`,\n          link: `/profile/recommendedCourses/Moderate`,\n          background: \"#C9F9F6\",\n\n          label: \"Moderate\", icon: <img src={Images.ModerateDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${ambitious?.length}`,\n          link: `/profile/recommendedCourses/Ambitious`,\n          background: \"#F4F4FF\",\n\n          label: \"Ambitious\",  icon: <img src={Images.AmbitiousDashboard} alt=\"ambitious\" style={{ width: \"1.2rem\" }} />\n        },\n      ],\n    },\n  ];\n  return (\n    <div>\n      <Box sx={{ borderRadius: \"10px\", pl: 2, height: { xs: \"100%\" } }}>\n        {/* Activity Section */}\n        <Box sx={{ mb: 2}}>\n          <Typography fontWeight={600} fontSize=\"1.1rem\" mb={1} color=\"#3b3f76\">\n                Activity\n              </Typography>\n          <Grid container spacing={2} justifyContent=\"flex-start\">\n            {sections[0].items.map((item, idx) => (\n              <Grid item xs={12} sm={6} md={6} key={idx}>\n                <Box\n                  sx={{\n                    bgcolor: \"#E6F4FF\",\n                    borderRadius: 2,\n                    p: 2,\n                    display: \"flex\",\n                    flexDirection:\"column\",\n                    // alignItems: \"center\",\n                    gap: 0.5,\n                    cursor: \"pointer\",\n                    boxShadow: 0,\n                    transition: \"box-shadow 0.2s\",\n                    '&:hover': { boxShadow: 3 },\n                  }}\n                  onClick={() => navigate(item.link)}\n                >\n                  <Box sx={{ fontSize: 18, fontWeight: 700, color: \"#3b3f76\", minWidth: 40 }}>{item.count}</Box>\n                  <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1}}>\n                          {item.icon}\n                    <Typography color=\"#3b3f76\">{item.label}</Typography>\n                  </Box>\n              </Box>\n            </Grid>\n            ))}\n          </Grid>\n        </Box>\n        {/* Recommendations Section */}\n        <Box>\n          <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", mb: 1 }}>\n            <Typography fontWeight={600} fontSize=\"1.1rem\" color=\"#3b3f76\">\n                Recommendations\n            </Typography>\n            {recommendations.data && recommendations.data?.data?.length > 0 ? (\n              <Button\n                variant=\"text\"\n                sx={{ color: \"#F87171\", fontWeight: 600, textTransform: \"none\", fontSize: \"1rem\" }}\n                onClick={() => navigate(`/profile/recommendedCourses/Safe`)}\n              >\n                Show Recommendations\n              </Button>\n            ) : (\n                       <Button \n                variant=\"text\"\n                sx={{ color: \"#F87171\", fontWeight: 600, textTransform: \"none\", fontSize: \"1rem\" }}\n                onClick={() => navigate(\"/profile/recommendedCourses/generate\")}\n              >\n                         Generate Recommendations\n                         </Button>\n            )}\n          </Box>\n          {recommendations.data && recommendations.data?.data?.length > 0 ? (\n            <Grid container spacing={2} justifyContent=\"flex-start\">\n              {sections[1].items.map((item, idx) => (\n                <Grid item xs={12} sm={4} key={idx}>\n                  <Box\n                    sx={{\n                      bgcolor: \"#E6F4FF\",\n                      borderRadius: 2,\n                      p: 2,\n                      // textAlign: \"center\",\n                      cursor: \"pointer\",\n                      boxShadow: 0,\n                      transition: \"box-shadow 0.2s\",\n                      '&:hover': { boxShadow: 3 },\n                    }}\n                    onClick={() => navigate(item.link)}\n                  >\n                    <Box sx={{ fontSize: 16, fontWeight: 700, color: \"#3b3f76\", minWidth: 40 }}>{item.count}</Box>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mt: 1 }}>\n                      {item.icon}\n                      <Typography fontWeight={500} color=\"#3b3f76\">{item.label}</Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Box sx={{ bgcolor: \"#E6F4FF\", borderRadius: 2, p: 4, textAlign: \"center\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n              <Box>\n                <Typography color=\"#3B3F76\" fontWeight={600} fontSize=\"1.2rem\">Oh <span style={{ color: \"#F87171\" }}>nooo!</span></Typography>\n                <Typography sx={{ mt: 1, mb: 2 }}>Recommendations not generated yet!</Typography>\n              </Box>\n              <Box>\n                <img src={Images.noRecommend} alt=\"No Recommendations\" style={{ width: 120, height: 120 }} />\n              </Box>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nconst Checklist = () => {\n  const [loading, setLoading] = useState(false);\n  const inputFile = useRef<HTMLInputElement>(null);\n  const dispatch = useAppDispatch();\n  const applications = useAppSelector((state) => state.applications);\n\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    item: any,\n    docItem: any\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    try {\n      if (file !== null && file !== undefined) {\n        const formData = new FormData();\n        formData.append(\"uploaded_file\", file || null);\n        formData.append(\"applicationId\", item._id);\n        formData.append(\"checklistItemId\", docItem._id);\n        // setLoading(true)\n        const response = await uploadApplicationDocs(formData);\n        if (response) {\n          dispatch(setDocuments(response.data.data.docs));\n          dispatch(\n            updateApplication(response.data.data)\n          );\n          setLoading(false);\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (err) {\n      setLoading(false);\n    }\n  };\n\n  const imageClick = () => {\n    inputFile?.current?.click();\n  };\n  const filteredApplications = applications?.data?.filter((item) => {\n    return item?.docChecklist?.some((docItem) => !docItem?.isChecked);\n  })\n    .map((item) => ({\n      ...item,\n      docChecklist: item?.docChecklist?.filter((docItem) => !docItem?.isChecked),\n    }));\n\n  return (\n    <Box>\n      <div>\n        <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\"}}>\n          <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n            Pending Task\n          </Typography>\n        </Typography>\n      </div>\n      <Box\n        sx={{\n          height: \"140px\",\n          background: \"#F4F4FF\",\n          overflowY: \"scroll\",\n          borderRadius: \"10px\",\n          mt: 1\n        }}\n\n      >\n        {filteredApplications?.length > 0 ? (\n          filteredApplications?.map((item) => {\n            return item?.docChecklist?.map((docItem) => (\n              <>\n                <Grid\n                  container\n                  sx={{\n                    px: 2,\n                    py: 1,\n                    borderRadius: \"10px\",\n                    cursor: \"pointer\",\n                    margin: \"10px\",\n                    width: \"auto\",\n                    background: \"transparent\",\n                    borderBottom: \"3px solid #fff\"\n                  }}\n                  key={item._id}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    onClick={() =>\n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"applicationPopup\",\n                              data: item._id,\n                              dimensions: {\n                                width: \"800px\",\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      )\n                    }\n                  >\n                    <Typography\n                      fontSize=\"14px\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        src={item?.course?.university?.logoSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"2rem\",\n                          height: \"2rem\",\n                          marginRight: \"10px\",\n                          borderRadius: \"50%\",\n                        }}\n                      />\n                      {item?.course?.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography fontWeight=\"500\" fontSize=\"14px\">\n                      {setWordCase(docItem.name)}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={6}\n                    sx={{\n                      display: \"flex\",\n                      height: \"20px\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    {docItem?.doc ? (\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        {/* <Link\n                          to={`/pdfPreview?type=${docItem?.doc?.contentType}&id=${docItem?.doc?._id}`}\n                          // to=\"/pdfPreview\"\n                          target=\"_blank\"\n                          // onClick={() => {\n                          //   localStorage.setItem(\n                          //     \"docId\",\n                          //     docItem?.doc?._id\n                          //   );\n                          // }}\n                          style={{ textDecoration: \"none\" }}\n                        > */}\n                        <VisibilityOutlinedIcon\n                          sx={{ fontSize: \"large\" }}\n                          onClick={() => {\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"fileViewer\",\n                                    data: docItem?.doc?.data?.preview_url,\n                                    dimensions: {\n                                      width: \"500px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                }\n                              })\n                            );\n                          }}\n                        />\n                        <h4\n                          style={{\n                            color: \"#000\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            fontSize: \"12px\",\n                            // width: \"120px\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                            fontWeight:400,marginLeft:\"5px\"\n                          }}\n                        >\n                          {docItem?.doc?.data?.FileName}\n                        </h4>\n                        {/* </Link> */}\n                      </Box>\n                    ) : (\n                      <>\n                        <input\n                          style={{ display: \"none\" }}\n                          type=\"file\"\n                          className=\"\"\n                          name=\"image\"\n                          onChange={(event) =>\n                            handleSubmit(event, item, docItem)\n                          }\n                          ref={inputFile}\n                          accept=\".pdf\"\n                        />\n                        <Button\n                          sx={{\n                            color: \"#000\",\n                            textTransform: \"none\",\n                            p: 0.25,\n                            fontSize: \"0.7rem\",\n                            ml: 1,\n                          }}\n                          onClick={imageClick}\n                        >\n                          {loading ? (\n                            <Box\n                              component=\"img\"\n                              src={Images.standardLoader}\n                              alt=\"standardLoader\"\n                              sx={{ width: \"1rem\", height: \"1rem\" }}\n                            />\n                          ) : (\n                            <FileUploadOutlinedIcon />\n                          )}\n                        </Button>\n                      </>\n                    )}\n                    <Typography\n                      sx={{\n                        fontSize: \"11px\",\n                        margin: \"2px 2px 0 0\",\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        \"&:hover .cancel-icon\": {\n                          display: \"block !important\",\n                        },\n                      }}\n                    >\n                      <InfoOutlinedIcon\n                        sx={{ color: \"#FF751A\", fontSize: \"1rem\" }}\n                      />\n                      {docItem?.desc && (\n                        <span\n                          className=\"cancel-icon\"\n                          style={{\n                            display: \"none\",\n                            color: \"#000\",\n                            position: \"absolute\",\n                            // border: \"1px solid #7d7d7d\",\n                            padding: \"2px\",\n                            maxWidth: \"200px\",\n                            zIndex: 1,\n                            // background: \"#fff\",\n                            textAlign: \"center\",\n                            right: 0,\n                            border: \"1px solid #000\",\n                            borderRadius: \"5px\"\n                          }}\n                        >\n                          {docItem.desc}\n                        </span>\n                      )}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </>\n            ));\n          })\n        ) : (\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"80%\",\n              \n            }}\n          >\n            {/* <img className=\"responsive-img\" src={Images.Explore7} alt=\"nodata\" /> */}\n            <Typography sx={{fontSize:20,color: \"#F87171\",fontWeight:'bold' }}> Pending Task?</Typography>\n            <Typography sx={{ display: \"flex\",width:'330px' }}>\n              The checklist has yet to be added by the student counsellor\n              {/* <Tooltip\n                slotProps={{\n                  tooltip: {\n                    sx: {\n                      color: \"#514E6A\",\n                      backgroundColor: \"#ffff\",\n                      boxShadow: 2,\n                      cursor: \"pointer\",\n                    },\n                  },\n                }}\n                title=\"A checklist is a list of items or tasks added by the Student Advisor which need's \nto be completed or verified. It serves as a tool for ensuring that all necessary \nsteps or items are addressed in a particular process or activity. Checklists \nare commonly used in various contexts, such as in planning, organizing, quality \nassurance, and everyday tasks, to help individuals or teams stay organized \nand ensure that nothing is overlooked.\"\n                placement=\"top-start\"\n              >\n                <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\" }} />\n              </Tooltip> */}\n            </Typography>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport { CardPage, Checklist };\n","import { Avatar, Box, Button, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { User } from \"../../../../types/types\";\n\nconst Events = () => {\n  const advisor = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n\n  // Placeholder: Replace with your real events data source\n  const events = advisor?.data && Array.isArray(advisor?.data)\n    ? advisor.data.map((item, idx) => ({\n        date: \"Tomorrow\",\n        day: \"16, April\",\n        name: \"Event name\",\n        organizer: \"Organizer name\",\n        time: \"9am - 10am\",\n        id: idx,\n      }))\n    : [];\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"16px\",\n        background: \"#fff\",\n        p: 2,\n        boxShadow: 1,\n        minHeight: 290,\n      }}\n    >\n      <Typography fontWeight={600} fontSize=\"1.2rem\" color=\"#3B3F76\" mb={2}>\n        Upcoming Events\n      </Typography>\n      <Stack spacing={2} sx={{ maxHeight: 320, overflowY: 'auto', pr: 1 }}>\n        {events.length < 0 ? (\n          events.map((event) => (\n            <Box\n              key={event.id}\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                background: \"#fff\",\n                borderRadius: \"12px\",\n                boxShadow: 0,\n                p: 2,\n                border: '1px solid #E6E6E6',\n                minHeight: 60,\n                gap: 2,\n              }}\n            >\n              {/* Date */}\n              <Box sx={{ minWidth: 80, textAlign: 'left' }}>\n                <Typography fontWeight={600} color=\"#3B3F76\" fontSize=\"1rem\">\n                  {event.date}\n                </Typography>\n                <Typography color=\"#A6A6A6\" fontSize=\"0.95rem\">\n                  {event.day}\n                </Typography>\n              </Box>\n              {/* Event Info */}\n              <Box sx={{ flex: 1, pl: 2 }}>\n                <Typography fontWeight={600} color=\"#3B3F76\" fontSize=\"1rem\">\n                  {event.name}\n                </Typography>\n                <Typography color=\"#A6A6A6\" fontSize=\"0.95rem\">\n                  Organized by : {event.organizer}\n                </Typography>\n                <Box sx={{ mt: 1 }}>\n                  <Typography\n                    sx={{\n                      display: 'inline-block',\n                      background: '#E0F7FA',\n                      color: '#0097A7',\n                      borderRadius: '8px',\n                      px: 1.5,\n                      py: 0.5,\n                      fontSize: '0.9rem',\n                      fontWeight: 600,\n                    }}\n                  >\n                    {event.time}\n                  </Typography>\n                </Box>\n              </Box>\n              {/* Book Now Button */}\n              <Button\n                variant=\"outlined\"\n                sx={{\n                  height:\"30px\",\n                  width:\"60px\",\n                  borderRadius: '25px',\n                  borderColor: '#F2994A',\n                  color: '#F2994A',\n                  fontWeight: 300,\n                  px: 3,\n                  py: 1,\n                  textTransform: 'none',\n                  fontSize: '1rem',\n                  boxShadow: 0,\n                  '&:hover': {\n                    borderColor: '#F2994A',\n                    background: '#FFF7E6',\n                  },\n                }}\n                onClick={() => dispatch(setPopup({ show: true, data: { container: { name: \"event\", data: event, dimensions: { width: \"600px\", height: \"60%\" } }, type: \"custom\" } }))}\n              >\n                Book Now\n              </Button>\n            </Box>\n          ))\n        ) : (\n          <Box sx={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\n           <Typography color=\"#3B3F76\" fontWeight={500} fontSize=\"1rem\" style={{alignItems:\"center\"}}>\n            No <span style={{ color: \"#F87171\" }}>Upcoming</span> Events right now.\n          </Typography>\n          </Box>   \n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Events;\n","import { Avatar, Box, Grid, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { getAdvisorTitle, normalizeType } from \"../../../../assets/library\";\nimport { commonStackStyles, commonTypographyStyles } from \"../../../../components/styles/customStyles\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { User } from \"../../../../types/types\";\n\nconst Advisors = () => {\n  const advisor = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n\n  interface Advisor {\n    _id: string;\n    info: User;\n    assignedCountries: string[],\n  }\n  return (\n    <Box\n      sx={{\n        borderRadius: \"20px\",\n        background: \"#F4F4FF\",\n        p: 2.5,\n        mb: 3,\n        boxShadow: 0,\n        minHeight: 180,\n        maxWidth: 250,\n      }}\n    >\n      <Typography fontWeight={600} fontSize=\"1.25rem\" color=\"#3B3F76\" mb={2}>\n        Advisors\n      </Typography>\n      <Stack spacing={2.2} sx={{ maxHeight: 320, overflowY: 'auto', pr: 0.5 }}>\n        {advisor?.data && Array.isArray(advisor?.data) && advisor?.data?.length > 0 ? (\n          advisor?.data?.map((advisor: Advisor, idx: number) => (\n            <Box\n              key={advisor._id}\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                background: '#fff',\n                borderRadius: '16px',\n                p: 2,\n                boxShadow: '0px 2px 8px 0px #E0E0F6',\n                cursor: 'pointer',\n                minHeight: 80,\n              }}\n              onClick={() =>\n                dispatch(\n                  setPopup({\n                    show: true,\n                    data: {\n                      container: {\n                        name: \"advisor\",\n                        data: advisor,\n                        dimensions: {\n                          width: \"1200px\",\n                          height: \"85%\"\n                        },\n                      },\n                      type: \"custom\",\n                    },\n                  })\n                )\n              }\n            >\n              <Avatar\n                src={advisor?.info?.displayPicSrc}\n                alt=\"pic\"\n                sx={{ width: 28, height: 28, mr: 2, boxShadow: '0 1px 4px #E0E0F6' }}\n              />\n              <Box>\n                <Typography fontWeight={700} color=\"#3B3F76\" fontSize=\"1.05rem\" lineHeight={1.3}>\n                  {normalizeType(advisor?.info?.firstName)}\n                </Typography>\n                <Typography color=\"#3B3F76\" fontSize=\"0.85rem\" fontWeight={400} lineHeight={1.3}>\n                  {getAdvisorTitle(advisor?.info?.role)}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'inline-block',\n                    mt: 1,\n                    px: 1.5,\n                    py: 0.3,\n                    borderRadius: '12px',\n                    background: '#E6E6FA',\n                  }}\n                >\n                  <Typography fontSize=\"0.65rem\" color=\"#3B3F76\" fontWeight={600}>\n                    6+ Years experience\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          ))\n        ) : (\n          <Typography color=\"#3B3F76\" fontWeight={500} fontSize=\"1rem\">\n            Advisors not assigned\n          </Typography>\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Advisors; ","import { Box, Grid, Card, Typography, Button } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport BookedSlots from \"./dashboard/bookedSlots\";\nimport { CardPage, Checklist } from \"./dashboard/cardPage\";\nimport Events from \"./dashboard/events\";\nimport Advisors from \"./dashboard/advisors\";\nimport Images from \"src/assets\";\n\nconst carouselData = [\n  {\n    title: \"Exclusive Scholarships\",\n    subtitle: \"Limited-Time Scholarship Finder\",\n    description: \"Explore scholarships tailored to your profile, limited-time access available now!\",\n    button: \"Unlock now\",\n    image: Images.MoneyBag,\n    bg: \"#B7A9F9\"\n  },\n  {\n    title: \"Free SOP review\",\n    subtitle: \"Get expert feedback on your SOP.\",\n    description: \"Improve its clarity, structure, and overall impact before you submit.\",\n    button: \"Improve my sop\",\n    image: Images.SopDashboard, \n    bg: \"#6DB1B3\"\n  },\n  {\n    title: \"Free test prep access\",\n    subtitle: \"Test smarter-practice for free.\",\n    description: \"practice with mock tests, tips, and guides to ace your exams.\",\n    button: \"Try for free\",\n    image: Images.TestDashboard,\n    bg: \"#EE6F57 \"\n  },\n  {\n    title: \"Profile review\",\n    subtitle: \"Get a free expert review.\",\n    description: \"Boost your chances of admission with a free expert.\",\n    button: \"Get free review\",\n    image: Images.ProfileDashboard,\n    bg: \"#F2A05E\"\n  }\n];\n\nconst ScholarshipCarousel = () => {\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIndex((prev) => (prev + 1) % carouselData.length);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [index]);\n\n  const card = carouselData[index];\n\n  return (\n    <>\n      <Card\n        sx={{\n          background: card.bg,\n          borderRadius: '32px',\n          mt: 4,\n          p: 4,\n          color: '#fff',\n          display: 'flex',\n          alignItems: 'flex-start',\n          minHeight: 160,\n          boxShadow: 0,\n          position: 'relative',\n          overflow: 'visible',\n        }}\n      >\n        <Box sx={{ flex: 1, pr: 2 }}>\n          <Typography fontWeight={500} fontSize=\"1.1rem\" mb={1} sx={{ color: '#fff', textAlign: 'left' }}>\n            {card.title}\n          </Typography>\n          <Typography fontWeight={300} fontSize=\"1.0rem\" mb={1} sx={{ color: '#fff', textAlign: 'left' }}>\n            {card.subtitle}\n          </Typography>\n          <Typography fontSize=\"0.8rem\" mb={2} sx={{ color: '#fff', textAlign: 'left' }}>\n            {card.description}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            sx={{\n              background: '#fff',\n              color: '#222',\n              borderRadius: '24px',\n              fontWeight: 700,\n              px: 3,\n              py: 1,\n              textTransform: 'none',\n              boxShadow: '0 2px 8px 0 rgba(0,0,0,0.10)',\n              minWidth: 120,\n              '&:hover': { background: '#f5f5f5', color: '#222' },\n            }}\n          >\n            {card.button}\n          </Button>\n        </Box>\n        <Box sx={{ position: 'absolute', right: 32, bottom: 0 }}>\n          <img\n            src={card.image}\n            alt={card.title}\n            style={{ width: 120, height: 'auto', borderRadius: 0 }}\n          />\n        </Box>\n      </Card>\n      {/* Carousel dots */}\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 1, mb: 2 }}>\n        {carouselData.map((_, i) => (\n          <Box\n            key={i}\n            sx={{\n              width: 10,\n              height: 10,\n              borderRadius: '50%',\n              background: i === index ? '#A993FF' : '#F2EFFF',\n              mx: 0.5\n            }}\n          />\n        ))}\n      </Box>\n    </>\n  );\n};\n\nconst Dashboard = () => {\n  return (\n    <Box>\n      {/* Activity and Recommendations sections (CardPage) at the top */}\n      <Grid container spacing={1.5}>\n        <Grid item xs={12} md={7}>\n          <CardPage />\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <ScholarshipCarousel/>\n        </Grid>\n      </Grid>\n      {/* Advisors, Upcoming Meetings, Pending Task row below Recommendations */}\n      <Grid container spacing={1.5}>\n        <Grid item xs={12} md={7} mt={2}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={5}>\n              <Advisors />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <BookedSlots />\n              <Checklist />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Events />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useMemo } from \"react\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  InputAdornment,\n  ListSubheader,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ReusableDropdownProps {\n  label: string;\n  name: string;\n  options: string[];\n  value: any;\n  onChange: any;\n  placeholder?: string;\n  searchEnabled?: boolean;  // Toggle to enable or disable the search box\n}\n\nconst ReusableDropdown: React.FC<ReusableDropdownProps> = ({\n  label,\n  name,\n  options,\n  value,\n  onChange,\n  placeholder = `Select `,\n  searchEnabled = true,\n}) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n// console.log(value)\n  const filteredOptions = useMemo(\n    () =>\n      options.filter((option) =>\n        option.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [options, searchQuery]\n  );\n\n  return (\n    <FormControl fullWidth>\n      <Select\n        labelId={`${name}-label`}\n        size=\"small\"\n        id={name}\n        name={name}\n        displayEmpty\n        onClose={()=>setSearchQuery(\"\")}\n        value={value}\n        onChange={onChange}\n        fullWidth\n        IconComponent={ExpandMoreIcon}\n        renderValue={(selected) => {\n          if (!selected) {\n            return (\n              <Typography sx={{ color: \"#757575\", fontSize: \"14px\" }}>\n                {placeholder}\n              </Typography>\n            );\n          }\n          return selected;\n        }}\n        MenuProps={{\n          PaperProps: {\n            sx: {\n              maxHeight: 300,\n              maxWidth: 300,\n              \"&.MuiPaper-root\": {\n                boxShadow: 3,\n                borderRadius: \"15px !important\",\n              },\n            },\n          },\n          autoFocus: false,\n        }}\n        sx={{\n        }}\n      >\n        {searchEnabled && (\n          <ListSubheader>\n            <TextField\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n        <MenuItem\n          disabled\n          value=\"\"\n          sx={{\n            \"& .MuiTypography-root\": {\n              fontSize: \"14px !important\",\n            },\n          }}\n        >\n          {placeholder} \n        </MenuItem>\n        {filteredOptions.length > 0 ? (\n          filteredOptions.map((name, i) => (\n            <MenuItem\n              key={i}\n              value={name}\n              sx={{\n                \"& .MuiTypography-root\": {\n                  fontSize: \"14px !important\",\n                },\n                \"& .MuiSvgIcon-root \": {\n                  fontSize: \"1rem\",\n                },\n                whiteSpace: \"normal\",\n              }}\n            >\n              {name}\n            </MenuItem>\n          ))\n        ) : (\n          <MenuItem disabled>No options available</MenuItem>\n        )}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default ReusableDropdown;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { bachelorCourses } from \"../../../../assets/menu\";\nimport { editProfile, getSearchUniversityDetails } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setUnderGraduation } from \"../../../../store/Slices/educationHistorySlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { Close, Star } from \"@mui/icons-material\";\nimport * as Yup from \"yup\";\n// import { fetchAllMsgsEndPoint } from \"src/services/endpoints\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Images from \"src/assets\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\n\ntype Gradingsystem=\"percentage\"|\"cgpa1\"|\"cgpa2\"|\"cgpa3\"|\"gpa\"|\"grade\";\nconst Bachelors = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [institutions, setInstitutions] = useState([])\n  const [institutionName, setInstitutionName] = useState<string>(data?.instituteName || \"\");\n  const [universities, setUniversities] = useState<string[]>(data?.affiliatedUniversity ? [data.affiliatedUniversity] : []);\n  const [affiliatedUniversity, setAffiliatedUniversity] = useState<string>(data?.affiliatedUniversity || \"\");\n  const [programMajor, setProgramMAjor] = useState<string>(data?.programMajor || \"\");\n  const [degreeName, setDegreeName] = useState<string>(data?.degreeProgram ? data?.degreeProgram : \"\");\n\n  const [ieh, setIeh] = useState<boolean>(false);\n  const [institutionId, setInstitutionId] = useState<string>(\"\");\n  const [gradingSystem, setGradingSystem] = useState<Gradingsystem>(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  //const [maxScore, setMaxScore] = useState(data?.maxScore);\n  const profile = useAppSelector((store) => store.profile);\n  const [iehStatus, setIEHStatus] = useState<any>(profile?.data?.IEH);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const gradingSystemData=useRef({\n    percentage:100,\n    cgpa1:10,\n    cgpa2:7,\n    cgpa3:5,\n    gpa:4,\n    grade:undefined\n  }).current;\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    console.log('grading system',event.target.value)\n    setGradingSystem(event.target.value as Gradingsystem);\n    setTotalScore('');\n  };\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  // console.log(\"city\",selectedCity)\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  const profileSchema = Yup.object().shape({\n    underGraduation: Yup.object().shape({\n      // degreeProgram: Yup.string().required(\"Degree Program is required\"),\n      // programMajor: Yup.string().required(\"Specialization is required\"),\n      // instituteName: Yup.string().required(\"Institution Name is required\"),\n      // affiliatedUniversity: Yup.string().required(\"Affiliated University is required\"),\n      // gradingSystem: Yup.string().required(\"Grading System is required\"),\n      // totalScore: Yup.mixed() \n      //   .required('Score is required')\n      //   .test('valid-score', 'Invalid score', function (value) {\n      //     const { gradingSystem } = this.parent;\n      //     if (gradingSystem === 'percentage') {\n      //       return typeof value === 'number' && value >= 1 && value <= 100;\n      //     }\n      //     if (gradingSystem === 'GPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 10;\n      //     }\n      //     if (gradingSystem === 'CGPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 6;\n      //     }\n\n      //     if (gradingSystem === 'grade') {\n      //       return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n      //     }\n\n      //     return true; \n      //   })\n      // ,\n      startDate: Yup.date().required(\"Start Date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable()\n        .test('not-same-date', 'Start date and end date cannot be the same.', function (endDate) {\n          const { startDate } = this.parent;\n          if (!startDate || !endDate) return true;\n          const start = new Date(startDate);\n          const end = new Date(endDate);\n          return start.getFullYear() !== end.getFullYear() || start.getMonth() !== end.getMonth() || start.getDate() !== end.getDate();\n        }),\n      // backlogs: Yup.number()\n      //   .when(\"backlogs\", {\n      //     is: (value: string) => value === \"yes\",\n      //     then: schema => schema.required(\"Number of Backlogs is required\").min(1),\n      //   })\n      //   .nullable(),\n      // country: Yup.string().required(\"Country is required\"),\n      // state: Yup.string().required(\"State/Province is required\"),\n      // city: Yup.string().required(\"City/Town is required\"),\n    }),\n  });\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    setInstitutionName(value);\n  };\n\n  // Handle institution selection\n\n  useEffect(() => {\n    console.log(\"Called\")\n    if (searchTerm.length > 3) {\n      setLoading(true);\n      setHasSearched(true); // Mark as searched when making an API call\n      getSearchUniversityDetails(replaceSpecialChars(searchTerm), 1, 10, 1, 0, 0, 0, 0)\n        .then((response) => {\n          setInstitutions(response.data?.institutions || []);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching institutions:\", error);\n          setLoading(false);\n        });\n    } else {\n      setInstitutions([]);\n      setHasSearched(false); // Reset search state if searchTerm is not long enough\n    }\n  }, [searchTerm]);\n\n  const replaceSpecialChars=(str:String)=>{\n    let filteredString=str.replaceAll(/[^a-zA-Z0-9\\s]/g,\"\").trim();\n    console.log(\"Filtered\",filteredString);\n    return filteredString;\n  }\n\n  const [customField, setCustomField] = useState<boolean>(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n  const initialValues = {\n    underGraduation: {\n      instituteName: institutionName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      programMajor: programMajor, // enum  eee,ese,ece\n      degreeProgram: degreeName, // enum btech,bedu,bsc....\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      affiliatedUniversity: affiliatedUniversity,\n      totalScore: totalScore,\n      maxScore:gradingSystemData[gradingSystem], // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const [specializations, setSpecializations] = useState<any>([]);\n\n  const handleDegreeChange = (event: React.ChangeEvent<{ value: unknown }>, setFieldValue: Function) => {\n    const selectedDegree = event.target.value as string;\n    // setFieldValue('underGraduation.degreeProgram', selectedDegree);\n    const degreeCourses = bachelorCourses[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[selectedDegree] || [];\n    setSpecializations(selectedSpecializations);\n    setFieldValue('underGraduation.programMajor', '');\n  };\n\n  useEffect(() => {\n    const degreeCourses = bachelorCourses[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[data?.degreeProgram] || [];\n    setSpecializations(selectedSpecializations);\n  }, [data?.degreeProgram])\n\n  // const [showCustomInput, setShowCustomInput] = useState(false);\n  // const [showUniversity, setShowUniversity] = useState(false);\n  // const [showSpecialization, setShowSpecialization] = useState(false);\n  // const [showDegree, setShowDegree] = useState(false);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n  const handleOptionClick = (option: any) => {\n    if (option === \"Other\") {\n      // setShowCustomInput(true);\n      setInstitutionName(\"\");\n      setIeh(false);\n      setSearchTerm(\"\");\n      setCustomField(true)\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"customfield\",\n              data: {\n                name: \"underGraduation.institutionName\",\n                fieldName: institutionName,\n                setFieldName: setInstitutionName,\n                placeholder: \"Enter your institution name\"\n              },\n              dimensions: {\n                width: \"450px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      )\n    } else {\n      setInstitutionName(option?.InstitutionName);\n      setUniversities(option?.university || []);\n      setIeh(option?.IEH?.exists)\n      setInstitutionId(option?._id)\n      setAffiliatedUniversity(\"\");\n      setSearchTerm(\"\");\n    }\n  };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n\n  const submitHandler = async (values: any) => {\n    try {\n      console.log(\"form value\",values)\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setUnderGraduation(response.data.data.education.underGraduation));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"UnderGraduate Details are Added Succesfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoader(false)\n\n    } catch (error) {\n      setLoader(false)\n\n    }\n  };\n\n  const [formEdit, setFormEdit] = useState(false);\n\n  return (\n    <>\n      {formEdit ? (\n        <div>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={profileSchema}\n            enableReinitialize\n            onSubmit={(values: any) => submitHandler(values)}\n          >\n            {({ touched, errors, values, handleChange, setFieldValue }) => {\n              // console.log(errors)\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={3} sx={{ px: 2 }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Degree Name\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"underGraduation.degreeProgram\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={degreeName}\n                        onChange={(e: any) => {\n                          handleDegreeChange(e, setFieldValue);\n                          setDegreeName(e.target.value);\n                        }}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.underGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {Object.keys(bachelorCourses[0]).map((degree) => (\n                          <MenuItem key={degree} value={degree} sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}>\n                            {degree}\n                          </MenuItem>\n                        ))}\n                        {!Object.keys(bachelorCourses[0]).includes(degreeName) && degreeName !== \"\" && (\n                          <MenuItem key={degreeName} value={degreeName}>\n                            {degreeName}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            // setShowDegree(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"underGraduation.degreeProgram\",\n                                      fieldName: degreeName,\n                                      setFieldName: setDegreeName,\n                                      placeholder: \"Enter your degree name\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your degree\n                        </MenuItem>\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Specialization\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"underGraduation.programMajor\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={programMajor}\n                        onChange={(e) => setProgramMAjor(e.target.value)}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.underGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {specializations?.map((name: string) => (\n                          <MenuItem\n                            key={name}\n                            value={name}\n                            sx={{\n                              \"& .MuiTypography-root\": {\n                                fontSize: \"14px !important\",\n                              },\n                              \"& .MuiSvgIcon-root \": {\n                                fontSize: \"1rem\",\n                              },\n                              whiteSpace: \"normal\",\n                            }}\n                          >\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!specializations.includes(programMajor) && programMajor !== \"\" && (\n                          <MenuItem key={programMajor} value={programMajor}>\n                            {programMajor}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"underGraduation.programMajor\",\n                                      fieldName: programMajor,\n                                      setFieldName: setProgramMAjor,\n                                      placeholder: \"Enter your specialization\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your specialization\n                        </MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"underGraduation.programMajor\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"instituteName\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Name of Institution\n                      </InputLabel>\n                      <Box sx={{ width: \"100%\", position: \"relative\" }}>\n                        <TextField\n                          value={institutionName}\n                          onChange={handleInputChange}\n                          placeholder=\"Search for an institution\"\n                          variant=\"outlined\"\n                          name=\"underGraduation.instituteName\"\n                          size=\"small\"\n                          autoComplete=\"off\"\n                          fullWidth\n                          InputProps={{\n                            endAdornment: (\n                              <>\n                                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                                {institutionName && (\n                                  <Close\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => {\n                                      setInstitutionName(\"\");\n                                      setInstitutions([]);\n                                      setSearchTerm(\"\");\n                                      // setShowCustomInput(false);\n                                      setHasSearched(false);\n                                    }}\n                                  />\n                                )}\n                              </>\n                            ),\n                          }}\n                        />\n                        {loading || institutions.length > 0 || (hasSearched && institutions.length === 0) ? (\n                          <Box\n                            sx={{\n                              position: \"absolute\",\n                              zIndex: 1,\n                              backgroundColor: \"#fff\",\n                              boxShadow: 1,\n                              maxHeight: \"200px\",\n                              overflowY: \"auto\",\n                              width: \"100%\",\n                            }}\n                          >\n                            {institutions.map((option: any, index) => (\n                              <MenuItem\n                                key={index}\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                }}\n                                onClick={() => handleOptionClick(option)}\n                              >\n                                {option?.InstitutionName}\n                                {option?.IEH?.exists && <Star sx={{ fontSize: \"1.1rem\", color: \"orange\" }} />}\n                                {option?.District && `, ${option?.District}`}\n                              </MenuItem>\n                            ))}\n                            {!loading && hasSearched && (\n                              <MenuItem\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  // alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                  color: \"#1cbeb5  !important\"\n\n                                  // justifyContent: \"center\",\n                                }}\n                                onClick={() => handleOptionClick(\"Other\")}\n\n                              >\n                                Can't find institution\n                              </MenuItem>\n                            )}\n                          </Box>\n                        ) : null}\n                      </Box>\n\n                      <ErrorMessage\n                        name=\"underGraduation.instituteName\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"affiliatedUniversity\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Affiliated University\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"affiliatedUniversity\"\n                        name=\"underGraduation.affiliatedUniversity\"\n                        displayEmpty\n                        value={affiliatedUniversity}\n                        onChange={(e) => setAffiliatedUniversity(e.target.value)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem disabled value=\"\">\n                          Select University\n                        </MenuItem>\n                        {universities.map((name: string) => (\n                          <MenuItem key={name} value={name}>\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!universities.includes(affiliatedUniversity) && programMajor !== \"\" && (\n                          <MenuItem key={affiliatedUniversity} value={affiliatedUniversity}>\n                            {affiliatedUniversity}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"underGraduation.affiliatedUniversity\",\n                                      fieldName: affiliatedUniversity,\n                                      setFieldName: setAffiliatedUniversity,\n                                      placeholder: \"Enter your university\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n\n                          }}\n                        >\n                          Can't find university\n                        </MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"underGraduation.affiliatedUniversity\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    {ieh ?\n                      <Grid item xs={12} sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n                        <Typography>This college is a member of <b style={{ color: \"#3b3f76\" }}>IEH</b> . You need to verify to get benefits.</Typography>\n                        {iehStatus?.verificationStatus === \"Verification Request Initiated\" ? \"\" :\n                          <Button sx={globalButton} onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"ieh\",\n                                    data: {\n                                      id: institutionId,\n                                      setIEHStatus: setIEHStatus\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }>Verify</Button>}\n                      </Grid>\n                      : \"\"}\n\n                    {iehStatus?.verificationStatus === \"Verification Request Initiated\" ?\n                      <Grid item xs={12}>\n                        <Typography>Your IEH verification request is initiated</Typography>\n                      </Grid> : \"\"}\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Grading System\n                      </InputLabel>\n\n                      <Select\n                        id=\"grading-system\"\n                        size=\"small\"\n                        name=\"gradingSystem\"\n                        displayEmpty\n                        defaultValue=\"\"\n\n                        value={gradingSystem}\n                        onChange={(e: any) => handleGradingSystemChange(e)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                        <MenuItem value=\"percentage\">Percentage out of 100</MenuItem>\n                        <MenuItem value=\"cgpa1\">CGPA out of 10</MenuItem>\n                        <MenuItem value=\"cgpa2\">CGPA out of 7</MenuItem>\n                        <MenuItem value=\"cgpa3\">CGPA out of 5</MenuItem>\n                        <MenuItem value=\"gpa\">GPA out of 4</MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"underGraduation.gradingSystem\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Score{\" \"}\n                      </InputLabel>\n                      {gradingSystem === \"grade\" ?\n                        <Select\n                          size=\"small\"\n                          id=\"totalScore\"\n                          name=\"underGraduation.totalScore\"\n                          displayEmpty\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          MenuProps={MenuProps}\n                        >\n                          <MenuItem disabled value=\"\">\n                            Select Grade\n                          </MenuItem>\n                          {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                        :\n                        <TextField\n                          // type=\"number\"\n                          name=\"underGraduation.totalScore\"\n                          size=\"small\"\n                          fullWidth\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          placeholder={\n                            gradingSystem === \"percentage\"\n                              ? \"Enter percentage\"\n                                : \"Enter score\"\n                          }\n                          inputProps={{\n                            step: \"0.1\",\n\n                            min:1,\n                            max:gradingSystemData[gradingSystem],\n                            list: undefined,\n                            onInput: (e) => {\n                              const target = e.target as HTMLInputElement;\n                              const value = parseFloat(target.value);\n                              const min=1\n                                const max=gradingSystemData[gradingSystem]\n\n                                if (value < (min || 0) || value > (max || Infinity)) {\n                                  target.value = value.toString(); // Remove the last character\n                                }\n                            },\n                          }}\n                        />}\n\n                      <ErrorMessage\n                        name=\"underGraduation.totalScore\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                        Education status\n                      </InputLabel>\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          aria-labelledby=\"education-status\"\n                          name=\"underGraduation.isCompleted\"\n                          value={values.underGraduation.isCompleted}\n                          onChange={(event) => {\n                            handleChange({\n                              target: {\n                                name: \"underGraduation.isCompleted\",\n                                value: event.target.value === \"true\",\n                              },\n                            });\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"true\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Completed\"\n                          />\n                          <FormControlLabel\n                            value=\"false\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Pursuing\"\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Start Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.underGraduation?.startDate}\n                        onChange={(date) => handleChange({ target: { name: `underGraduation.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      <ErrorMessage\n                        name=\"underGraduation.startDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {(values.underGraduation.isCompleted === \"true\" || values.underGraduation.isCompleted === true)  && (\n                        <>\n                          <InputLabel sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                            End Date\n                          </InputLabel>\n                          \n                          <DatePickerComponent\n                            selectedDate={values?.underGraduation?.endDate}\n                            onChange={(date) =>\n                              handleChange({\n                                target: {\n                                  name: `underGraduation.endDate`,\n                                  value: date?.toISOString().slice(0, 10),\n                                },\n                              })\n                            }\n                            minDate={\n                              values.underGraduation.startDate\n                                ? new Date(\n                                  new Date(values.underGraduation.startDate).setFullYear(\n                                    new Date(values.underGraduation.startDate).getFullYear() + 1\n                                  )\n                                )\n                                : undefined\n                            }\n                            maxDate={\n                              values.underGraduation.startDate\n                                ? (() => {\n                                    const twelveYearsFromStartDate = new Date(\n                                      new Date(values.underGraduation.startDate).setFullYear(\n                                        new Date(values.underGraduation.startDate).getFullYear() + 12\n                                      )\n                                    );\n                                    return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                                  })()\n                                : new Date()\n                            }\n                            placeholderText=\"End Date\"\n                          />\n\n                          <ErrorMessage name=\"underGraduation.endDate\" component=\"div\" className=\"error\" />\n                        </>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Backlogs\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n                      <CustomField\n                            id=\"name\"\n                            type=\"number\"\n                            placeholder=\"Number of backlogs(if any)\"\n                            name=\"underGraduation.backlogs\"\n                            value={values.underGraduation.backlogs}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"underGraduation.country\"\n                        options={countries.map(country => country.name)}\n                        value={selectedCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"Country\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"underGraduation.state\"\n                        options={states.map(state => state.name)}\n                        value={selectedState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"State\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"underGraduation.city\"\n                          value={selectedCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setSelectedCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              autoComplete=\"off\"\n                              // autoFocus=\"true\"\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            {!selectedState ? \"Please select state\" :\n                              \"Select city\"}\n                          </MenuItem>\n\n                          {filteredCities.length > 0 ? (\n                            filteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            selectedState && <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!cities.some((city) => city.name === selectedCity) &&\n                            selectedCity !== undefined &&\n                            selectedCity !== \"\" && (\n                              <MenuItem key={selectedCity} value={selectedCity}>\n                                {selectedCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            // value=\"\"\n                            onClick={() => {\n                              // setSelectedCity(\"\")\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"underGraduation.city\",\n                                        fieldName: selectedCity,\n                                        setFieldName: cityHandle,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                    // eventHandler:cityHandle\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n\n                    </Grid>\n\n\n                    <Grid\n                      item\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                    >\n                      <CustomButton\n                        handleSubmit={() => submitHandler}\n                        width=\"100px\"\n                      >\n                        {loader ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\", height: \"1rem\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600 ,color:\"#495052\"}}>\n                Undergraduate Details\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#3B3F76' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]}onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Degree Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{degreeName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Specialization</Typography>\n              <Typography sx={{color:\"#495052\"}}>{programMajor || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{institutionName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Affiliated University</Typography>\n              <Typography sx={{color:\"#495052\"}}>{affiliatedUniversity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Backlogs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.backlogs || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Education Status</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.isCompleted === true || data?.isCompleted === 'true' ? 'Completed' : data?.isCompleted === false || data?.isCompleted === 'false' ? 'Pursuing' : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Bachelors;\n","import {\n  // Box,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Box,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { editProfile } from \"../../../../services\";\nimport { setPlus2 } from \"../../../../store/Slices/educationHistorySlice\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { boards, languages } from \"../../../../assets/menu\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from 'yup';\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport Images from \"src/assets\";\n\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst Plus2 = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const [gradingSystem, setGradingSystem] = useState<string>(data?.gradingSystem || \"\");\n  const [totalScore, setTotalScore] = useState<string>(data?.totalScore || \"\");\n  const [stream, setStream] = useState<string>(data?.stream || \"\");\n  const [customField, setCustomField] = useState<boolean>(false);\n  const [board, setBoard] = useState<string>(data?.board || \"\");\n  const [loader, setLoader] = useState(false);\n  const [formEdit, setFormEdit] = useState(false);\n\n  console.log('[DEBUG] Initial data prop:', data);\n\n  useEffect(() => {\n    console.log('[DEBUG] useEffect data change:', data);\n    if (data) {\n      setGradingSystem(data.gradingSystem || \"\");\n      setTotalScore(data.totalScore || \"\");\n      setStream(data.stream || \"\");\n      setBoard(data.board || \"\");\n      setSelectedCountry(data.country || \"India\");\n      setSelectedState(data.state || \"\");\n      setSelectedCity(data.city || \"\");\n    }\n  }, [data]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n\n  const initialValues = {\n    plus2: {\n      instituteName: data?.instituteName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      languageOfInstruction: data?.languageOfInstruction,\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      board: board,\n      stream: stream,\n      totalScore: totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n  const submit = async (values: any) => {\n    console.log(\"Submitting\",values);\n    try {\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        const updatedData = response.data.data.education.plus2;\n        console.log('[DEBUG] After save, updatedData:', updatedData);\n        dispatch(setPlus2(updatedData));\n        // Update local state with the response data\n        setGradingSystem(updatedData.gradingSystem || \"\");\n        setTotalScore(updatedData.totalScore || \"\");\n        setStream(updatedData.stream || \"\");\n        setBoard(updatedData.board || \"\");\n        setSelectedCountry(updatedData.country || \"India\");\n        setSelectedState(updatedData.state || \"\");\n        setSelectedCity(updatedData.city || \"\");\n        console.log(\"DDD\",data)\n        // Update data prop fields for read-only view\n        data={...updatedData}\n        // data.startDate = updatedData.startDate;\n        // data.endDate = updatedData.endDate;\n        // data.isCompleted = updatedData.isCompleted;\n        // data.languageOfInstruction = updatedData.languageOfInstruction;\n        // data.backlogs = updatedData.backlogs;\n        // data.instituteName = updatedData.instituteName;\n        console.log(\"Reached\")\n        setLoader(false);\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Diploma/Grade 12 details added successfully \",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) { }\n  };\n  // eslint-disable-next-line\n  const validationSchema = Yup.object().shape({\n    plus2: Yup.object().shape({\n      instituteName: Yup.string().required(\"Institution name is required\"),\n      // city: Yup.string().required(\"City is required\"),\n      state: Yup.string().required(\"State is required\"),\n      country: Yup.string().required(\"Country is required\"),\n      // languageOfInstruction: Yup.string().required(\n      //   \"Language of instruction is required\"\n      // ),\n      gradingSystem: Yup.string().required(\"Grading system is required\"),\n      totalScore: Yup.mixed()\n        .required('Score is required')\n        .test('valid-score', 'Invalid score', function (value) {\n          const { gradingSystem } = this.parent;\n          if (gradingSystem === 'percentage') {\n            return typeof value === 'number' && value >= 1 && value <= 100;\n          }\n          if (gradingSystem === 'GPA') {\n            return typeof value === 'number' && value >= 1 && value <= 10;\n          }\n          if (gradingSystem === 'CGPA') {\n            return typeof value === 'number' && value >= 1 && value <= 6;\n          }\n\n          if (gradingSystem === 'grade') {\n            return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n          }\n\n          return true;\n        })\n      ,\n      startDate: Yup.date().required(\"Start date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable()\n        .test('not-same-date', 'Start date and end date cannot be the same.', function (endDate) {\n          const { startDate } = this.parent;\n          if (!startDate || !endDate) return true;\n          const start = new Date(startDate);\n          const end = new Date(endDate);\n          return start.getFullYear() !== end.getFullYear() || start.getMonth() !== end.getMonth() || start.getDate() !== end.getDate();\n        }),\n      // backlogs: Yup.number()\n      //   .when(\"isCompleted\", {\n      //     is: \"false\",\n      //     then: Yup.number().notRequired(),\n      //     otherwise: Yup.number().required(\"Backlog count is required\"),\n      //   })\n      //   .nullable(),\n    }),\n  });\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n  };\n\n  useEffect(() => {\n    console.log('[DEBUG] gradingSystem:', gradingSystem, 'totalScore:', totalScore);\n  }, [gradingSystem, totalScore]);\n\n  console.log(\"loader\",loader)\n\n  return (\n    <>\n      {formEdit ? (\n        <div>\n          <Formik\n            initialValues={initialValues}\n            // validationSchema={validationSchema}\n            enableReinitialize={true}\n            onSubmit={(values: any) => submit(values)}\n          >\n            {({ touched, errors, values, handleChange, resetForm, handleSubmit }) => {\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={3} sx={{ px: 2 }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Specialization/Subjects\n                      </InputLabel>\n                      <TextField\n                        value={stream}\n                        onChange={(e) => setStream(e.target.value)}\n                        placeholder=\"Enter your stream name\"\n                        variant=\"outlined\"\n                        name=\"plus2.stream\"\n                        size=\"small\"\n                        autoComplete=\"off\"\n                        fullWidth\n                      // sx={{ mt: 2 }}\n                      />\n\n                      <ErrorMessage\n                        name=\"plus2.stream\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb:1 }}>\n                        Education status\n                      </InputLabel>\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                          name=\"plus2.isCompleted\"\n                          value={values.plus2.isCompleted}\n                          onChange={(event) => {\n                            handleChange({\n                              target: {\n                                name: \"plus2.isCompleted\",\n                                value: event.target.value === \"true\",\n                              },\n                            });\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"true\"\n                            control={\n                              <Radio\n                                size=\"small\"\n                                sx={{\n                                  \"&.MuiRadio-root.Mui-checked\": {\n                                    color: \"#3B3F76 !important\",\n                                  },\n                                }}\n                              />\n                            }\n                            label=\"Completed\"\n                          />\n                          <FormControlLabel\n                            value=\"false\"\n                            control={\n                              <Radio\n                                size=\"small\"\n                                sx={{\n                                  \"&.MuiRadio-root.Mui-checked\": {\n                                    color: \"#3B3F76 !important\",\n                                  },\n                                }}\n                              />\n                            }\n                            label=\"Pursuing\"\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Name of Institution{\" \"}\n                      </InputLabel>\n                      <CustomField\n                        id=\"name\"\n                        type=\"text\"\n                        placeholder=\"Name of Institution\"\n                        name=\"plus2.instituteName\"\n                        value={values.plus2.instituteName}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                      <ErrorMessage\n                        name=\"plus2.instituteName\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Board\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"A board in education is a governing body that manages an educational system or part of it\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n\n                      <Select\n                        size=\"small\"\n                        id=\"board\"\n                        name=\"plus2.board\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={board}\n                        onChange={(e) => setBoard(e.target.value)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                        MenuProps={MenuProps}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {boards.map(\n                          (name: any) => (\n                            <MenuItem\n                              key={name}\n                              value={name}\n                              sx={{\n                                \"& .MuiTypography-root\": {\n                                  fontSize: \"14px !important\",\n                                },\n                                \"& .MuiSvgIcon-root \": {\n                                  fontSize: \"1rem\",\n                                },\n                                whiteSpace: \"normal\",\n                              }}\n                            >\n                              {name}\n                            </MenuItem>\n                          )\n                        )}\n                        {!boards.includes(board) && board !== \"\" && (\n                          <MenuItem key={board} value={board}>\n                            {board}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            // setShowBoard(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"plus2.board\",\n                                      fieldName: board,\n                                      setFieldName: setBoard,\n                                      placeholder: \"Enter your board\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your board\n                        </MenuItem>\n                      </Select>\n\n                      <ErrorMessage\n                        name=\"plus2.board\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Grading System\n                      </InputLabel>\n                      <Select\n                        id=\"gradingSystem\"\n                        size=\"small\"\n                        name=\"plus2.gradingSystem\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={gradingSystem}\n                        onChange={(e: any) => handleGradingSystemChange(e)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                        <MenuItem value=\"percentage\">Percentage</MenuItem>\n                        <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                        <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                        <MenuItem value=\"grade\">Grade</MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"plus2.gradingSystem\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Score{\" \"}\n                      </InputLabel>\n                      {gradingSystem === \"grade\" ?\n                        <Select\n                          size=\"small\"\n                          id=\"totalScore\"\n                          name=\"plus2.totalScore\"\n                          displayEmpty\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          MenuProps={MenuProps}\n                        >\n                          <MenuItem disabled value=\"\">\n                            Select Grade\n                          </MenuItem>\n                          {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                        :\n                        <TextField\n                          // type=\"number\"\n                          id=\"totalScore\"\n                          name=\"plus2.totalScore\"\n                          size=\"small\"\n                          fullWidth\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          placeholder={\n                            gradingSystem === \"percentage\"\n                              ? \"Enter percentage\"\n                              : gradingSystem === \"grade\"\n                                ? \"Enter grade\"\n                                : \"Enter score\"\n                          }\n                          inputProps={{\n                            step: \"0.1\",\n\n                            min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                            max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                            list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                            onInput: (e) => {\n                              const target = e.target as HTMLInputElement;\n                              const value = parseFloat(target.value);\n                              if (gradingSystem !== \"Grade\") {\n                                const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                                const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                                if (value < (min || 0) || value > (max || Infinity)) {\n                                  target.value = value.toString().slice(0, -1); // Remove the last character\n                                }\n                              }\n                            },\n                          }}\n                        />}\n\n                      <ErrorMessage\n                        name=\"plus2.totalScore\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"startDate\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Start Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.plus2?.startDate}\n                        onChange={(date) => handleChange({ target: { name: `plus2.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      <ErrorMessage\n                        name=\"plus2.startDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {(values.plus2.isCompleted === \"true\" || values.plus2.isCompleted === true) && (\n                        <>\n                          <InputLabel\n                            id=\"endDate\"\n                            sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                          >\n                            End Date\n                          </InputLabel>\n                          <DatePickerComponent\n                            selectedDate={values?.plus2?.endDate}\n                            onChange={(date) =>\n                              handleChange({\n                                target: {\n                                  name: `plus2.endDate`,\n                                  value: date?.toISOString().slice(0, 10),\n                                },\n                              })\n                            }\n                            minDate={\n                              values.plus2.startDate\n                                ? new Date(\n                                  new Date(values.plus2.startDate).setFullYear(\n                                    new Date(values.plus2.startDate).getFullYear() + 1\n                                  )\n                                )\n                                : undefined\n                            }\n                            maxDate={\n                              values.plus2.startDate\n                                ? (() => {\n                                    const twelveYearsFromStartDate = new Date(\n                                      new Date(values.plus2.startDate).setFullYear(\n                                        new Date(values.plus2.startDate).getFullYear() + 12\n                                      )\n                                    );\n                                    return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                                  })()\n                                : new Date()\n                            }\n                            placeholderText=\"End Date\"\n                          />\n                        </>\n                      )}\n                      <ErrorMessage\n                        name=\"plus2.endDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"languageOfInstruction\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Language of instruction\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Language of Instruction\"\n                        name=\"plus2.languageOfInstruction\"\n                        options={languages}\n                        value={values.plus2.languageOfInstruction}\n                        onChange={handleChange}\n                        placeholder=\"Select\"\n                        searchEnabled={true}  // Enables the search box\n                      />\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Backlogs\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n                      <CustomField\n                        id=\"backlogs\"\n                        type=\"number\"\n                        placeholder=\"Number of backlogs(if any)\"\n                        name=\"plus2.backlogs\"\n                        value={values.plus2.backlogs}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"country\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"plus2.country\"\n                        options={countries.map(country => country.name)}\n                        value={selectedCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"Country\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"state\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"plus2.state\"\n                        options={states.map(state => state.name)}\n                        value={selectedState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"State\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"city\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"plus2.city\"\n                          value={selectedCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setSelectedCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              autoComplete=\"off\"\n                              // autoFocus=\"true\"\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            {!selectedState ? \"Please select state\" :\n                              \"Select city\"}\n                          </MenuItem>\n\n                          {filteredCities.length > 0 ? (\n                            filteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            selectedState && <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!cities.some((city) => city.name === selectedCity) &&\n                            selectedCity !== undefined &&\n                            selectedCity !== \"\" && (\n                              <MenuItem key={selectedCity} value={selectedCity}>\n                                {selectedCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            // value=\"\"\n                            onClick={() => {\n                              // setSelectedCity(\"\")\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"plus2.city\",\n                                        fieldName: selectedCity,\n                                        setFieldName: cityHandle,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                    // eventHandler:cityHandle\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                    >\n                      <CustomButton\n                        handleSubmit={()=>submit}\n                        width=\"100px\"\n                      >\n                        {loader ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\", height: \"1rem\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#495052\" }}>\n                Diploma/Grade 12 Details\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#3B3F76' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Specialization/Subjects</Typography>\n              <Typography sx={{color:\"#495052\"}}>{stream || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.instituteName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Board</Typography>\n              <Typography sx={{color:\"#495052\"}}>{board || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Language of Instruction</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.languageOfInstruction || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Backlogs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.backlogs || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Education Status</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.isCompleted === true || data?.isCompleted === 'true' ? 'Completed' : data?.isCompleted === false || data?.isCompleted === 'false' ? 'Pursuing' : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Plus2;\n","import {\n  // Box,\n  FormControl,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n  Box,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { editProfile } from \"../../../../services\";\nimport { setSchool } from \"../../../../store/Slices/educationHistorySlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\n// import { grading } from \"../../../../assets/menu\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { boards, languages } from \"src/assets/menu\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\n// import { Close } from \"@mui/icons-material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport Images from \"src/assets\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\n\nconst School = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const [gradingSystem, setGradingSystem] = useState<string>(data?.gradingSystem || \"\");\n  const [totalScore, setTotalScore] = useState<string>(data?.totalScore || \"\");\n  const [customField, setCustomField] = useState<boolean>(false);\n  const [board, setBoard] = useState<string>(data?.board || \"\");\n  const [formEdit, setFormEdit] = useState(false);\n   const [loader, setLoader] = useState(false);\n\n  // Add useEffect to update state when data changes\n  useEffect(() => {\n    if (data) {\n      setGradingSystem(data.gradingSystem || \"\");\n      setTotalScore(data.totalScore || \"\");\n      setBoard(data.board || \"\");\n      setSelectedCountry(data.country || \"India\");\n      setSelectedState(data.state || \"\");\n      setSelectedCity(data.city || \"\");\n    }\n  }, [data]);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n  };\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n  const initialValues = {\n    school: {\n      instituteName: data?.instituteName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      languageOfInstruction: data?.languageOfInstruction,\n      gradingSystem:gradingSystem, // enum % grade gpa cgpa\n      board: board,\n      totalScore:totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      custom: customField\n\n    },\n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n\n  const submit = async (values: any) => {\n    try {\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        const updatedData = response.data.data.education.school;\n        dispatch(setSchool(updatedData));\n        // Update local state with the response data\n        setGradingSystem(updatedData.gradingSystem || \"\");\n        setTotalScore(updatedData.totalScore || \"\");\n        setBoard(updatedData.board || \"\");\n        setSelectedCountry(updatedData.country || \"India\");\n        setSelectedState(updatedData.state || \"\");\n        setSelectedCity(updatedData.city || \"\");\n        // Update data prop fields for read-only view\n        data={...updatedData}\n        // data.startDate = updatedData.startDate;\n        // data.endDate = updatedData.endDate;\n        // data.languageOfInstruction = updatedData.languageOfInstruction;\n        // data.instituteName = updatedData.instituteName;\n        setLoader(false)\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Grade 10 details added successfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n    }\n  };\n  return (\n    <>\n      {formEdit ? (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        // validationSchema={profileSchema}\n        enableReinitialize\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, resetForm, handleSubmit }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Name of Institution{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name of Institution\"\n                    name=\"school.instituteName\"\n                    value={values.school.instituteName}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                    Board\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"A board in education is a governing body that manages an educational system or part of it\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"school.board\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={board}\n                    onChange={(e)=>setBoard(e.target.value)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {boards.map(\n                      (name: any) => (\n                        <MenuItem\n                          key={name}\n                          value={name}\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}\n                        >\n                          {name}\n                        </MenuItem>\n                      )\n                    )}\n                     {!boards.includes(board) && board !== \"\" && (\n        <MenuItem key={board} value={board}>\n          {board}\n        </MenuItem>\n      )}\n        <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color:\"#1cbeb5  !important\"\n                        }}\n                        onClick={() => {\n                          setCustomField(true)\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name:\"school.board\",\n                                    fieldName:board,\n                                    setFieldName:setBoard,\n                                    placeholder:\"Enter your board\"\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }}\n                      >\n                        Can't find your board\n                      </MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Grading System\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"school.gradingSystem\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={gradingSystem}\n                    onChange={(e: any) => handleGradingSystemChange(e)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                    <MenuItem value=\"percentage\">Percentage</MenuItem>\n                    <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                    <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                    <MenuItem value=\"grade\">Grade</MenuItem>\n                  </Select>\n                  {/* <ErrorMessage\n                      name=\"school.gradingSystem\"\n                      component=\"div\"\n                      className=\"error\"\n                    /> */}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Score{\" \"}\n                  </InputLabel>\n                  {gradingSystem === \"grade\" ?\n                    <Select\n                      size=\"small\"\n                      id=\"totalScore\"\n                      name=\"school.totalScore\"\n                      displayEmpty\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem disabled value=\"\">\n                        Select Grade\n                      </MenuItem>\n                      {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                        <MenuItem key={name} value={name}>\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    :\n                    <TextField\n                      // type=\"number\"\n                      name=\"school.totalScore\"\n                      size=\"small\"\n                      fullWidth\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      placeholder={\n                        gradingSystem === \"percentage\"\n                          ? \"Enter percentage\"\n                          : gradingSystem === \"grade\"\n                            ? \"Enter grade\"\n                            : \"Enter score\"\n                      }\n                      inputProps={{\n                        step: \"0.1\",\n\n                        min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                        max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                        list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                        onInput: (e) => {\n                          const target = e.target as HTMLInputElement;\n                          const value = parseFloat(target.value);\n                          if (gradingSystem !== \"Grade\") {\n                            const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                            const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                            if (value < (min || 0) || value > (max || Infinity)) {\n                              target.value = value.toString().slice(0, -1); // Remove the last character\n                            }\n                          }\n                        },\n                      }}\n                    />}\n\n                  {/* <ErrorMessage\n                    name=\"school.totalScore\"\n                    component=\"div\"\n                    className=\"error\"\n                  /> */}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Language of instruction\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Language of Instruction\"\n                    name=\"school.languageOfInstruction\"\n                    options={languages}\n                    value={values.school.languageOfInstruction}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}  // Enables the search box\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}></Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values?.school?.startDate}\n                    onChange={(date) => handleChange({ target: { name: `school.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        End Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.school?.endDate}\n                        onChange={(date) =>\n                          handleChange({\n                            target: {\n                              name: `school.endDate`,\n                              value: date?.toISOString().slice(0, 10),\n                            },\n                          })\n                        }\n                        minDate={\n                          values.school.startDate\n                            ? new Date(\n                              new Date(values.school.startDate).setFullYear(\n                                new Date(values.school.startDate).getFullYear() + 1\n                              )\n                            )\n                            : undefined\n                        }\n                        maxDate={\n                          values.school.startDate\n                            ? (() => {\n                                const twelveYearsFromStartDate = new Date(\n                                  new Date(values.school.startDate).setFullYear(\n                                    new Date(values.school.startDate).getFullYear() + 12\n                                  )\n                                );\n                                return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                              })()\n                            : new Date()\n                        }\n                        placeholderText=\"End Date\"\n                      />\n                    </>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"school.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"Country\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"school.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"State\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"school.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          autoComplete=\"off\"\n                          // autoFocus=\"true\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        {!selectedState ? \"Please select state\" :\n                          \"Select city\"}\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        selectedState && <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined &&\n                        selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        // value=\"\"\n                        onClick={() => {\n                          // setSelectedCity(\"\")\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"school.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: cityHandle,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                                // eventHandler:cityHandle\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                >\n                  <CustomButton\n                    handleSubmit={handleSubmit}\n                    width=\"100px\"\n                  >\n                  {loader ? (\n                  <img \n                  src={Images.standardLoader}\n                  alt=\"load\"\n                  style={{ width: \"1rem\", height: \"1rem\" }}\n                   />\n                   ) : (\n                  \"Save\"\n                   )}\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#495052\" }}>\n                Grade 10 / School Details\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#3B3F76' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.instituteName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Board</Typography>\n              <Typography sx={{color:\"#495052\"}}>{board || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Language of Instruction</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.languageOfInstruction || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default School;\n","import {\n  Box,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n  Button,\n  ListSubheader,\n  InputAdornment\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { pgCourseList } from \"../../../../assets/menu\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPostGraduation } from \"../../../../store/Slices/educationHistorySlice\";\nimport { editProfile, getSearchUniversityDetails } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from \"yup\";\nimport { Close, Star } from \"@mui/icons-material\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport Images from \"src/assets\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\n\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst PostGrad = ({ data,profileData }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [institutions, setInstitutions] = useState([])\n  const [institutionName, setInstitutionName] = useState<string>(data?.instituteName || \"\");\n  const [postGradData] = useState(profileData?.postGraduation || {});\n  console.log(postGradData)\n  const [universities, setUniversities] = useState<string[]>(data?.affiliatedUniversity ? [data.affiliatedUniversity] : []);\n  const [affiliatedUniversity, setAffiliatedUniversity] = useState<string>(data?.affiliatedUniversity || \"\");\n  const [programMajor, setProgramMAjor] = useState<string>(data?.specialization || \"\");\n  const [degreeName, setDegreeName] = useState<string>(data?.degreeProgram ? data?.degreeProgram : \"\");\n\n\n  const [ieh, setIeh] = useState<boolean>(false);\n  const [institutionId, setInstitutionId] = useState<string>(\"\");\n  const [gradingSystem, setGradingSystem] = useState(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  const profile = useAppSelector((store) => store.profile);\n  const [iehStatus, setIEHStatus] = useState<any>(profile?.data?.IEH);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    // const { name, value } = event.target;\n    // const updatedData = { ...postGradData, [name]: value };\n    // setPostGradData(updatedData);\n    setGradingSystem(event.target.value as string);\n    setTotalScore('');\n  };\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city\n  );\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  const profileSchema = Yup.object().shape({\n    postGraduation: Yup.object().shape({\n      // degreeProgram: Yup.string().required(\"Degree Program is required\"),\n      // programMajor: Yup.string().required(\"Specialization is required\"),\n      // instituteName: Yup.string().required(\"Institution Name is required\"),\n      // affiliatedUniversity: Yup.string().required(\"Affiliated University is required\"),\n      // gradingSystem: Yup.string().required(\"Grading System is required\"),\n      // totalScore: Yup.mixed() \n      //   .required('Score is required')\n      //   .test('valid-score', 'Invalid score', function (value) {\n      //     const { gradingSystem } = this.parent;\n      //     if (gradingSystem === 'percentage') {\n      //       return typeof value === 'number' && value >= 1 && value <= 100;\n      //     }\n      //     if (gradingSystem === 'GPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 10;\n      //     }\n      //     if (gradingSystem === 'CGPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 6;\n      //     }\n\n      //     if (gradingSystem === 'grade') {\n      //       return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n      //     }\n\n      //     return true; \n      //   })\n      // ,\n      startDate: Yup.date().required(\"Start Date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable()\n        .test('not-same-date', 'Start date and end date cannot be the same.', function (endDate) {\n          const { startDate } = this.parent;\n          if (!startDate || !endDate) return true;\n          const start = new Date(startDate);\n          const end = new Date(endDate);\n          return start.getFullYear() !== end.getFullYear() || start.getMonth() !== end.getMonth() || start.getDate() !== end.getDate();\n        }),\n      // backlogs: Yup.number()\n      //   .when(\"backlogs\", {\n      //     is: (value: string) => value === \"yes\",\n      //     then: schema => schema.required(\"Number of Backlogs is required\").min(1),\n      //   })\n      //   .nullable(),\n      // country: Yup.string().required(\"Country is required\"),\n      // state: Yup.string().required(\"State/Province is required\"),\n      // city: Yup.string().required(\"City/Town is required\"),\n    }),\n  });\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    setInstitutionName(value);\n  };\n\n  // Handle institution selection\n\n  useEffect(() => {\n    if (searchTerm.length > 3) {\n      setLoading(true);\n      setHasSearched(true); // Mark as searched when making an API call\n      getSearchUniversityDetails(searchTerm,1,10, 1, 0, 0, 0,0)\n        .then((response:any) => {\n          setInstitutions(response.data?.institutions || []);\n          setLoading(false);\n        })\n        .catch((error:any) => {\n          console.error(\"Error fetching institutions:\", error);\n          setLoading(false);\n        });\n    } else {\n      setInstitutions([]);\n      setHasSearched(false); // Reset search state if searchTerm is not long enough\n    }\n  }, [searchTerm]);\n\n  const [customField, setCustomField] = useState<boolean>(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n  const initialValues = {\n    postGraduation: {\n      instituteName: institutionName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      specialization: programMajor, // enum  eee,ese,ece\n      degreeProgram: degreeName, // enum btech,bedu,bsc....\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      affiliatedUniversity: affiliatedUniversity,\n      totalScore: totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate?data?.startDate:new Date().toISOString(),\n      endDate: data?.endDate?data.endDate:new Date().toISOString(),\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  console.log(\"post\",initialValues);\n  const [specializations, setSpecializations] = useState<any>([]);\n\n  const handleDegreeChange = (event: React.ChangeEvent<{ value: unknown }>, setFieldValue: Function) => {\n    const selectedDegree = event.target.value as string;\n    // setFieldValue('postGraduation.degreeProgram', selectedDegree);\n    const degreeCourses = pgCourseList[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[selectedDegree] || [];\n    setSpecializations(selectedSpecializations);\n    setFieldValue('postGraduation.programMajor', '');\n  };\n\n  useEffect(() => {\n    const degreeCourses = pgCourseList[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[data?.degreeProgram] || [];\n    setSpecializations(selectedSpecializations);\n  }, [data?.degreeProgram])\n\n  const handleOptionClick = (option: any) => {\n    if (option === \"Other\") {\n      // setShowCustomInput(true);\n      setInstitutionName(\"\");\n      setIeh(false);\n      setSearchTerm(\"\");\n      setCustomField(true)\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"customfield\",\n              data: {\n                name: \"postGraduation.institutionName\",\n                fieldName: institutionName,\n                setFieldName: setInstitutionName,\n                placeholder: \"Enter your institution name\"\n              },\n              dimensions: {\n                width: \"450px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      )\n    } else {\n      setInstitutionName(option?.InstitutionName);\n      setUniversities(option?.university || []);\n      setIeh(option?.IEH?.exists)\n      setInstitutionId(option?._id)\n      setAffiliatedUniversity(\"\");\n      setSearchTerm(\"\");\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n\n  const submitHandler = async (values: any) => {\n    try {\n\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setPostGraduation(response.data.data.education.postGraduation));\n        const updatedData = response.data.data.education.postGraduation;\n        // Update local state if needed (already handled by useState hooks)\n        // Update data prop fields for read-only view\n        data.startDate = updatedData.startDate;\n        data.endDate = updatedData.endDate;\n        data.isCompleted = updatedData.isCompleted;\n        data.affiliatedUniversity = updatedData.affiliatedUniversity;\n        data.specialization = updatedData.specialization;\n        data.degreeProgram = updatedData.degreeProgram;\n        data.gradingSystem = updatedData.gradingSystem;\n        data.totalScore = updatedData.totalScore;\n        data.backlogs = updatedData.backlogs;\n        data.country = updatedData.country;\n        data.state = updatedData.state;\n        data.city = updatedData.city;\n        data.instituteName = updatedData.instituteName;\n        setLoader(false)\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Post graduate Details are added succesfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n      setLoader(false)\n    }\n  };\n\n  console.log(\"Masters\",data);\n\n  const [formEdit, setFormEdit] = useState(false);\n\n  return (\n    <>\n      {formEdit ? (\n        <div>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={profileSchema}\n            enableReinitialize\n            onSubmit={(values: any) => submitHandler(values)}\n          >\n            {({ touched, errors, values, handleChange, setFieldValue }) => {\n              // console.log(errors)\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={3} sx={{ px: 2 }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Degree Name\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"postGraduation.degreeProgram\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={degreeName}\n                        onChange={(e: any) => {\n                          handleDegreeChange(e, setFieldValue);\n                          setDegreeName(e.target.value);\n                        }}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.postGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {Object.keys(pgCourseList[0]).map((degree) => (\n                          <MenuItem key={degree} value={degree} sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}>\n                            {degree}\n                          </MenuItem>\n                        ))}\n                        {!Object.keys(pgCourseList[0]).includes(degreeName) && degreeName !== \"\" && (\n                          <MenuItem key={degreeName} value={degreeName}>\n                            {degreeName}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            // setShowDegree(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"postGraduation.degreeProgram\",\n                                      fieldName: degreeName,\n                                      setFieldName: setDegreeName,\n                                      placeholder: \"Enter your degree name\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your degree\n                        </MenuItem>\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Specialization\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"postGraduation.specialization\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={programMajor}\n                        onChange={(e) => setProgramMAjor(e.target.value)}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.postGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {specializations?.map((name: string) => (\n                          <MenuItem\n                            key={name}\n                            value={name}\n                            sx={{\n                              \"& .MuiTypography-root\": {\n                                fontSize: \"14px !important\",\n                              },\n                              \"& .MuiSvgIcon-root \": {\n                                fontSize: \"1rem\",\n                              },\n                              whiteSpace: \"normal\",\n                            }}\n                          >\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!specializations.includes(programMajor) && programMajor !== \"\" && (\n                          <MenuItem key={programMajor} value={programMajor}>\n                            {programMajor}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"postGraduation.specialization\",\n                                      fieldName: programMajor,\n                                      setFieldName: setProgramMAjor,\n                                      placeholder: \"Enter your specialization\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your specialization\n                        </MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"postGraduation.specialization\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"instituteName\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Name of Institution\n                      </InputLabel>\n                      <Box sx={{ width: \"100%\", position: \"relative\" }}>\n                        <TextField\n                          value={institutionName}\n                          onChange={handleInputChange}\n                          placeholder=\"Search for an institution\"\n                          variant=\"outlined\"\n                          name=\"postGraduation.instituteName\"\n                          size=\"small\"\n                          autoComplete=\"off\"\n                          fullWidth\n                          InputProps={{\n                            endAdornment: (\n                              <>\n                                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                                {institutionName && (\n                                  <Close\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => {\n                                      setInstitutionName(\"\");\n                                      setInstitutions([]);\n                                      setSearchTerm(\"\");\n                                      // setShowCustomInput(false);\n                                      setHasSearched(false);\n                                    }}\n                                  />\n                                )}\n                              </>\n                            ),\n                          }}\n                        />\n\n                        {loading || institutions.length > 0 || (hasSearched && institutions.length === 0) ? (\n                          <Box\n                            sx={{\n                              position: \"absolute\",\n                              zIndex: 1,\n                              backgroundColor: \"#fff\",\n                              boxShadow: 1,\n                              maxHeight: \"200px\",\n                              overflowY: \"auto\",\n                              width: \"100%\",\n                            }}\n                          >\n                            {institutions.map((option: any, index) => (\n                              <MenuItem\n                                key={index}\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                }}\n                                onClick={() => handleOptionClick(option)}\n                              >\n                                {option?.InstitutionName}\n                                {option?.IEH?.exists && <Star sx={{ fontSize: \"1.1rem\", color: \"orange\" }} />}\n                                {option?.District && `, ${option?.District}`}\n                              </MenuItem>\n                            ))}\n                            {!loading && hasSearched && (\n                              <MenuItem\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  // alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                  color: \"#1cbeb5  !important\"\n\n                                  // justifyContent: \"center\",\n                                }}\n                                onClick={() => handleOptionClick(\"Other\")}\n\n                              >\n                                Can't find institution\n                              </MenuItem>\n                            )}\n                          </Box>\n                        ) : null}\n                      </Box>\n\n                      <ErrorMessage\n                        name=\"postGraduation.instituteName\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"affiliatedUniversity\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Affiliated University\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"affiliatedUniversity\"\n                        name=\"postGraduation.affiliatedUniversity\"\n                        displayEmpty\n                        value={affiliatedUniversity}\n                        onChange={(e) => setAffiliatedUniversity(e.target.value)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem disabled value=\"\">\n                          Select University\n                        </MenuItem>\n                        {universities.map((name: string) => (\n                          <MenuItem key={name} value={name}>\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!universities.includes(affiliatedUniversity) && programMajor !== \"\" && (\n                          <MenuItem key={affiliatedUniversity} value={affiliatedUniversity}>\n                            {affiliatedUniversity}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"postGraduation.affiliatedUniversity\",\n                                      fieldName: affiliatedUniversity,\n                                      setFieldName: setAffiliatedUniversity,\n                                      placeholder: \"Enter your university\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find university\n                        </MenuItem>\n                      </Select>\n\n                      <ErrorMessage\n                        name=\"postGraduation.affiliatedUniversity\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    {ieh ?\n                      <Grid item xs={12} sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n                        <Typography>This college is a member of <b style={{ color: \"#3b3f76\" }}>IEH</b> . You need to verify to get benefits.</Typography>\n                        {iehStatus?.verificationStatus === \"Verification Request Initiated\" ? \"\" :\n                          <Button sx={globalButton} onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"ieh\",\n                                    data: {\n                                      id: institutionId,\n                                      setIEHStatus: setIEHStatus\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }>Verify</Button>}\n                      </Grid>\n                      : \"\"}\n\n                    {iehStatus?.verificationStatus === \"Verification Request Initiated\" ?\n                      <Grid item xs={12}>\n                        <Typography>Your IEH verification request is initiated</Typography>\n                      </Grid> : \"\"}\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Grading System\n                      </InputLabel>\n\n                      <Select\n                        id=\"grading-system\"\n                        size=\"small\"\n                        name=\"gradingSystem\"\n                        displayEmpty\n                        defaultValue=\"\"\n\n                        value={gradingSystem}\n                        onChange={(e: any) => handleGradingSystemChange(e)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                        <MenuItem value=\"percentage\">Percentage</MenuItem>\n                        <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                        <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                        <MenuItem value=\"grade\">Grade</MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"postGraduation.gradingSystem\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Score{\" \"}\n                      </InputLabel>\n                      {gradingSystem === \"grade\" ?\n                        <Select\n                          size=\"small\"\n                          id=\"totalScore\"\n                          name=\"postGraduation.totalScore\"\n                          displayEmpty\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          MenuProps={MenuProps}\n                        >\n                          <MenuItem disabled value=\"\">\n                            Select Grade\n                          </MenuItem>\n                          {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                        :\n                        <TextField\n                          // type=\"number\"\n                          name=\"postGraduation.totalScore\"\n                          size=\"small\"\n                          fullWidth\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          placeholder={\n                            gradingSystem === \"percentage\"\n                              ? \"Enter percentage\"\n                              : gradingSystem === \"grade\"\n                                ? \"Enter grade\"\n                                : \"Enter score\"\n                          }\n                          inputProps={{\n                            step: \"0.1\",\n\n                            min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                            max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                            list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                            onInput: (e) => {\n                              const target = e.target as HTMLInputElement;\n                              const value = parseFloat(target.value);\n                              if (gradingSystem !== \"Grade\") {\n                                const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                                const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                                if (value < (min || 0) || value > (max || Infinity)) {\n                                  target.value = value.toString().slice(0, -1); // Remove the last character\n                                }\n                              }\n                            },\n                          }}\n                        />}\n\n                      <ErrorMessage\n                        name=\"postGraduation.totalScore\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                        Education status\n                      </InputLabel>\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          aria-labelledby=\"education-status\"\n                          name=\"postGraduation.isCompleted\"\n                          value={values.postGraduation.isCompleted}\n                          onChange={(event) => {\n                            handleChange({\n                              target: {\n                                name: \"postGraduation.isCompleted\",\n                                value: event.target.value === \"true\",\n                              },\n                            });\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"true\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Completed\"\n                          />\n                          <FormControlLabel\n                            value=\"false\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Pursuing\"\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Start Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.postGraduation?.startDate}\n                        onChange={(date) => handleChange({ target: { name: `postGraduation.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      <ErrorMessage\n                        name=\"postGraduation.startDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {(values.postGraduation.isCompleted === \"true\" || values.postGraduation.isCompleted === true ) && (\n                        <>\n                          <InputLabel sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                            End Date\n                          </InputLabel>\n                            <DatePickerComponent\n                            selectedDate={values?.postGraduation?.endDate}\n                            onChange={(date) =>\n                              handleChange({\n                                target: {\n                                  name: `postGraduation.endDate`,\n                                  value: date?.toISOString().slice(0, 10),\n                                },\n                              })\n                            }\n                            minDate={\n                              values.postGraduation.startDate\n                                ? new Date(\n                                    new Date(values.postGraduation.startDate).setFullYear(\n                                      new Date(values.postGraduation.startDate).getFullYear() + 1\n                                    )\n                                  )\n                                : undefined\n                            }\n                            maxDate={\n                              values.postGraduation.startDate\n                                ? (() => {\n                                    const twelveYearsFromStartDate = new Date(\n                                      new Date(values.postGraduation.startDate).setFullYear(\n                                        new Date(values.postGraduation.startDate).getFullYear() + 12\n                                      )\n                                    );\n                                    return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                                  })()\n                                : new Date()\n                            }\n                            placeholderText=\"End Date\"\n                          />\n                          {touched.postGraduation?.endDate && typeof errors.postGraduation?.endDate === 'string' && (\n                            <p style={{ color: \"red\", marginTop: \"5px\" }}>\n                              {errors.postGraduation?.endDate}\n                            </p>\n                          )}\n                        </>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Backlogs\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n                      <CustomField\n                            id=\"name\"\n                            type=\"number\"\n                            placeholder=\"Number of backlogs(if any)\"\n                            name=\"postGraduation.backlogs\"\n                            value={values.postGraduation.backlogs}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"postGraduation.country\"\n                        options={countries.map(country => country.name)}\n                        value={selectedCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"Country\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"postGraduation.state\"\n                        options={states.map(state => state.name)}\n                        value={selectedState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"State\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"postGraduation.city\"\n                          value={selectedCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setSelectedCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              autoComplete=\"off\"\n                              // autoFocus=\"true\"\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            {!selectedState ? \"Please select state\" :\n                              \"Select city\"}\n                          </MenuItem>\n\n                          {filteredCities.length > 0 ? (\n                            filteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            selectedState && <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!cities.some((city) => city.name === selectedCity) &&\n                            selectedCity !== undefined &&\n                            selectedCity !== \"\" && (\n                              <MenuItem key={selectedCity} value={selectedCity}>\n                                {selectedCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            onClick={() => {\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"postGraduation.city\",\n                                        fieldName: selectedCity,\n                                        setFieldName: setSelectedCity,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                    >\n                      <CustomButton\n                        handleSubmit={() => submitHandler}\n                        width=\"100px\"\n                      >\n                        {loader ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\", height: \"1rem\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#495052\" }}>\n                Post Graduation Details\n              </Typography>\n              <Button variant=\"outlined\"sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Degree Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{degreeName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Specialization</Typography>\n              <Typography sx={{color:\"#495052\"}}>{programMajor || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{institutionName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Affiliated University</Typography>\n              <Typography sx={{color:\"#495052\"}}>{affiliatedUniversity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n              \n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Backlogs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.backlogs || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Education Status</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.isCompleted === true || data?.isCompleted === 'true' ? 'Completed' : data?.isCompleted === false || data?.isCompleted === 'false' ? 'Pursuing' : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\n\nexport default PostGrad;\n","import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Profile } from \"src/types/types\";\n\nconst API_URL = \"https://campusroot.com/api/v1/student/profile\";\n\nexport const useProfileData = () => {\n  const [profileData, setProfileData] = useState<Profile|null>(null);\n\n  const fetchProfileData = useCallback(async () => {\n    try {\n      const response = await axios.get(API_URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n\n      setProfileData(response.data);\n      localStorage.setItem(\"user-profile\", JSON.stringify(response.data));\n    } catch (error) {\n      console.error(\"❌ Error fetching profile data:\", error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchProfileData();\n  }, [fetchProfileData]);\n\n  return { profileData, fetchProfileData };\n};\n","import { Box, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport Bachelors from \"./bachelors\";\nimport Diploma from \"./diploma\";\nimport School from \"./grade10\";\nimport PostGrad from \"./postGrad\";\nimport { useProfileData } from \"src/genericComponents/modalPopup/useProfileData\";\n\nconst Education = () => {\n  const education = useAppSelector((state) => state.educationhistory);\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n  const { profileData } = useProfileData();\n\n  const handleToggle = (index: number) => {\n    setOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n  };\n\n  const profile = [\n    {\n      title: \"Masters\",\n      component: <PostGrad data={education.data.postGraduation} profileData={profileData} />,\n    },\n    {\n      title: \"Under Graduation\",\n      component: <Bachelors data={education.data.underGraduation} profileData={profileData} />,\n    },\n    {\n      title: \"Diploma / Grade 12\",\n      component: <Diploma data={education.data.plus2} profileData={profileData} />,\n    },\n    {\n      title: \"Grade 10\",\n      component: <School data={education.data.school} profileData={profileData} />,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        height: \"75vh\",\n        overflowY: \"scroll\",\n        px: 3,\n      }}\n    >\n      <Typography fontSize=\"1rem\" gutterBottom color=\"#495052\" sx={{ m: 1, fontWeight: \"500\" }}>\n        Enter your current and last education details\n      </Typography>\n      {profile.map((item, index) => (\n        <Accordion\n          key={index}\n          title={item.title}\n          isOpen={openIndex === index} // ✅ Pass open state\n          onToggle={() => handleToggle(index)} // ✅ Toggle accordion\n        >\n          {item.component}\n        </Accordion>\n      ))}\n    </Box>\n  );\n};\n\nexport default Education;\n","/* eslint-disable */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Images from \"../../../../assets/index\";\nimport { Formik, Form, useFormik } from \"formik\";\nimport { editProfile } from \"../../../../services\";\nimport { Box, Button, Grid, InputLabel, Stack, TextField, Typography, FormControl, RadioGroup, FormControlLabel, Radio, Select, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tooltip, Divider } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { settestScores } from \"../../../../store/Slices/testScoresSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { testScores } from \"src/assets/menu\";\nimport { CustomButton } from \"src/genericComponents/customButton\";\nimport { closePopup } from \"src/store/Slices/popupSlice\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport { setSharedInfo } from \"src/store/Slices/sharedInfoSlice\";\nimport { RootState } from \"../../../../store/store\";\nimport { Sharedinfo, Test as TestType } from \"../../../../types/types\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport TestStatus2 from '../../../../genericComponents/modalPopup/testStatus2'\nimport {testOptions as englishTestInfo} from '../../../../genericComponents/modalPopup/TestStatus3'\nimport { languageTests } from \"src/assets/constants/misc\";\n\n// Add type definitions at the top of the file, after imports\ninterface TestScore {\n  description: string;\n  count: string;\n  range?: string;\n}\n\ninterface Test {\n  name: string;\n  scores: TestScore[][];\n  testDate?: string;\n  document?: {\n    name: string;\n    icon: string;\n  };\n}\n\n// Rename the interface to avoid conflict with imported Test type\ninterface TestScoreData {\n  name: string;\n  scores: { label: string; value: string; range?: string }[];\n  testDate?: string;\n  document?: {\n    name: string;\n    icon: string;\n  };\n}\n\nconst TestScores = (props: any) => {\n  const { setQaTab, qaTab } = props;\n  const safeMissingFields = Array.isArray(props.missingFields) ? props.missingFields : [];\n  const currentIndex = safeMissingFields.indexOf(qaTab);\n\n  const navigate = useNavigate();\n  const [error, setError] = useState<string | undefined>();\n  const dispatch = useAppDispatch();\n  // const { profileDetails, setProfileDetails } = useContext(Context);\n  const [loading, setLoading] = useState(false);\n  const testscoresData = useAppSelector((state: RootState) => state.testscores);\n\n  const sharedInfo = useAppSelector((state: RootState) => state.sharedInfo);\n\n  //   function date(date) {\n  //     const month = date.toLocaleString(\"default\", { month: \"short\" });\n  //     const year = date.getFullYear();\n  //     return month + \" \" + year;\n  //   }\n\n  const handleBack = () => {\n    if (currentIndex > 0) {\n      setQaTab(safeMissingFields[currentIndex - 1]);\n    }\n  };\n  const handleSkip = () => {\n    if (currentIndex !== -1 && currentIndex < safeMissingFields.length - 1) {\n      setQaTab(safeMissingFields[currentIndex + 1]);\n    } else {\n      dispatch(closePopup());\n    }\n  }\n  const [fieldName, setFieldName] = useState(\"\");\n  // let tests = profileDetails?.tests;\n\n  const handleSubmit = (field: string) => {\n    setFieldName(field);\n  };\n  const submit = async () => {\n    if (fieldName === \"Not planning to take\") {\n      // const response = await editProfile({\n      // ,\n      // });\n      setQaTab(\"englishTest\")\n    } else {\n      const selectedTestScores = testScores.find(\n        (test) => test.name === fieldName\n      );\n\n      if (!selectedTestScores) {\n        console.error(\"Selected test not found.\");\n        return;\n      }\n      const payload = {\n        name: selectedTestScores.name,\n        scores: selectedTestScores.scores[0].map((score) => ({\n          description: score.description,\n          count: scoreCounts[score.description] || \"\",\n        })),\n        testDate: \"\",\n        docId: null,\n      };\n      const response = await editProfile({\n        tests: [...testscoresData?.data, payload],\n      });\n      if (response) {\n        dispatch(settestScores(response.data.data.tests));\n        // setFieldName(\"\");\n        setScoreCounts({});\n        if (currentIndex !== -1 && currentIndex < safeMissingFields.length - 1) {\n          setQaTab(safeMissingFields[currentIndex + 1]);\n        } else {\n          // closePopup();\n        }\n      }\n    }\n\n  };\n  const [scoreCounts, setScoreCounts] = useState<{\n    [description: string]: string;\n  }>({});\n\n  const handleCountChange = (description: string, value: string) => {\n    setScoreCounts((prevCounts) => ({\n      ...prevCounts,\n      [description]: value,\n    }));\n  };\n  interface Score {\n    description: string;\n    count: string;\n    range: string;\n  }\n\n  interface TestScore {\n    name: string;\n    scores: Score[][];\n    tookTest: string;\n  }\n\n\n  const parseRange = (range: string) => {\n    const [min, max] = range.split('-').map(Number);\n    return { min, max };\n  };\n\n  const validateScore = (count: number, range: string): string | undefined => {\n    const { min, max } = parseRange(range);\n    const numberValue = Number(count);\n\n    if (numberValue < min || numberValue > max) {\n      return `Score must be between ${min} and ${max}`;\n    }\n\n    return undefined;\n  };\n\n  interface TestScoreFormProps {\n    selectedTest: string;\n    validateScore: (count: number, range: string) => string | undefined;\n  }\n\n  const TestScoreForm: React.FC<TestScoreFormProps> = ({ selectedTest, validateScore }) => {\n    const selectedTestScores = testScores?.find((test) => test.name === selectedTest);\n    const sharedInfo = useAppSelector((state: RootState) => state.sharedInfo);\n\n    const parseRange = (range: string) => {\n      const [min, max] = range.split('-').map(Number);\n      return { min, max };\n    };\n\n    const requiredFields = selectedTestScores?.requiredFields || [];\n\n    const computeTotal = (scores: Score[]): string => {\n      const totalField = scores.find((score) => score.description === \"Total\");\n      if (!totalField) return \"\";\n\n      const relevantScores = scores.filter((score) =>\n        requiredFields.includes(score.description) && score.count !== \"\"\n      );\n\n      if (relevantScores.length === 0) return \"Invalid Total\";\n\n      let total = 0;\n      if (selectedTestScores?.method === \"add\") {\n        total = relevantScores.reduce(\n          (acc, score) => acc + (parseInt(score.count) || 0),\n          0\n        );\n      } else if (selectedTestScores?.method === \"average\") {\n        total = relevantScores.reduce(\n          (acc, score) => acc + (parseInt(score.count) || 0),\n          0\n        );\n        total = relevantScores.length > 0 ? total / relevantScores.length : 0;\n      }\n\n      const { min, max } = parseRange(totalField.range);\n      return total >= min && total <= max ? total.toString() : \"Invalid Total\";\n    };\n\n    const formik = useFormik({\n      initialValues: {\n        name: selectedTest,\n        scores: selectedTestScores ? selectedTestScores.scores : [],\n        testDate: \"\",\n        docId: null,\n      },\n      onSubmit: async (values) => {\n        let data = {\n          name: values.name,\n          scores: selectedTestScores ? values.scores[0] : [],\n          testDate: values.testDate,\n          docId: values.docId,\n        }\n\n        if (selectedTest === \"Not planning to take\" || selectedTest === \"\") {\n          // setQaTab(\"englishTest\")\n            try {\n              console.log(\"Final tests payload:\", [...testscoresData?.data, data]);\n              const response = await editProfile({ isPlanningToTakeAcademicTest:\"No\" });\n              dispatch(\n                setSharedInfo({\n                  ...sharedInfo.data,\n                  isPlanningToTakeAcademicTest: response.data.data.isPlanningToTakeAcademicTest,\n                })\n              );\n              setQaTab(\"englishTest\")\n            } catch (error) {\n              console.error(\"Error in API Call:\", error);\n            }\n\n        } else {\n          const response = await editProfile({\n            tests: [...testscoresData?.data, data],\n          });\n          if (response) {\n            dispatch(settestScores(response.data.data.tests));\n            setScoreCounts({});\n            if (currentIndex !== -1 && currentIndex < safeMissingFields.length - 1) {\n              setQaTab(safeMissingFields[currentIndex + 1]);\n            } else {\n              dispatch(closePopup())\n            }\n            setQaTab(\"englishTest\")\n          }\n        }\n\n      },\n      validate: (values) => {\n        const errors: any = {};\n        values.scores.forEach((scoreArray, scoreArrayIndex) => {\n          scoreArray.forEach((score, scoreIndex) => {\n            if (score.description === \"Total\") return;\n\n            const { min, max } = parseRange(score.range);\n            const count = Number(score.count);\n\n            if (count < min || count > max) {\n              if (!errors.scores) errors.scores = [];\n              if (!errors.scores[scoreArrayIndex]) errors.scores[scoreArrayIndex] = [];\n              errors.scores[scoreArrayIndex][scoreIndex] = `Score must be between ${min} and ${max}`;\n            }\n          });\n        });\n        return errors;\n      },\n    });\n\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <Box sx={{ height: \"350px\" }}>\n          <Grid container spacing={3} >\n            {formik.values.scores.map((scoreArray, scoreArrayIndex) =>\n              scoreArray.map((score, scoreIndex) => {\n                if (score.description === \"Total\") return null;\n\n                return (\n                  <Grid item xs={12} sm={4} key={`${scoreArrayIndex}-${scoreIndex}`}>\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                      <InputLabel sx={{ fontWeight: 500, color: \"#8E9091\" }}>\n                        {score.description}\n                      </InputLabel>\n                      <TextField\n                        type=\"number\"\n                        name={`scores[${scoreArrayIndex}][${scoreIndex}].count`}\n                        value={score.count}\n                        onChange={(e) => {\n                          formik.handleChange(e);\n                          const updatedScores = [...formik.values.scores[scoreArrayIndex]];\n                          updatedScores[scoreIndex].count = e.target.value;\n\n                          const allFieldsFilled = updatedScores\n                            .filter((score) => score.description !== \"Total\")\n                            .every((score) => score.count !== \"\");\n\n                          if (allFieldsFilled) {\n                            const totalIndex = updatedScores.findIndex((s) => s.description === \"Total\");\n                            if (totalIndex !== -1) {\n                              updatedScores[totalIndex].count = String(computeTotal(updatedScores));\n                            }\n                          }\n\n                          formik.setFieldValue(`scores[${scoreArrayIndex}]`, updatedScores);\n                        }}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder={`${score.range}`}\n                      />\n                      {formik.errors.scores &&\n                        formik.errors.scores[scoreArrayIndex] &&\n                        formik.errors.scores[scoreArrayIndex][scoreIndex] && (\n                          <div style={{ color: \"red\", fontSize: \"12px\" }}>\n                            {String(formik.errors.scores[scoreArrayIndex][scoreIndex])}\n                          </div>\n                        )}\n                    </div>\n                  </Grid>\n                );\n              })\n            )}\n          </Grid>\n        </Box>\n        <Stack\n          direction=\"row\"\n          spacing={3}\n          sx={{\n            justifyContent: \"center\", alignItems: \"center\"\n          }}\n        >\n          {currentIndex > 0 && (\n            <Button sx={secondaryButton} onClick={handleBack}>\n              Back\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            // variant=\"contained\"\n            sx={secondaryButton}\n          >\n            Continue\n          </Button>\n          <Button sx={secondaryButton} onClick={handleSkip}>\n            {loading ? (\n              <img\n                src={Images.standardLoader}\n                alt=\"load\"\n                style={{\n                  width: \"20px\",\n                  height: \"20px\",\n                  padding: \"5px\",\n                }}\n              />\n            ) : (\n              \"Skip\"\n            )}\n          </Button>\n        </Stack>\n      </form>\n    );\n  };\n  const testOptions = [\n    { label: \"IELTS\", value: \"IELTS\" },\n    { label: \"TOEFL\", value: \"TOEFL\" },\n    { label: \"Duolingo\", value: \"Duolingo\" },\n    { label: \"PET\", value: \"PET\" },\n  ];\n  \n  const testOptions1 = [\n    { label: \"GRE\", value: \"GRE\" },\n    { label: \"GMAT\", value: \"GMAT\" },\n    { label: \"SAT\", value: \"SAT\" },\n    { label: \"ACT\", value: \"ACT\" },\n  ];\n\n  // Helper to get test by name\n  const getTestByName = (name: string) =>\n    testscoresData?.data?.find((test: any) => test.name?.toLowerCase().includes(name.toLowerCase()));\n\n  // English Proficiency Test\n  const englishTest = testscoresData?.data?.find((test) =>\n    [\n      'english',\n      'ielts',\n      'toefl',\n      'international english language testing system',\n      'test of english as a foreign language',\n      'pearson test of english',\n      'duolingo',\n      'pte',\n      'det'\n    ].some((key) => test.name?.toLowerCase().includes(key))\n  );\n\n  // const englishTestData = englishTest\n  //   ? {\n  //       name: englishTest.name,\n  //       scores: englishTest.scores[0].map((s: any) => ({\n  //         label: s.description,\n  //         value: s.count\n  //       })),\n  //       testDate: englishTest.testDate || \"\",\n  //       document: englishTest.document || { name: \"\", icon: Images.pdfIcon }\n  //     }\n  //   : null;\n  //\n  // GRE/GMAT Test\n  // const greTest = getTestByName(\"gre\");\n  // const greTestData = greTest\n  //   ? {\n  //       name: greTest.name,\n  //       scores: greTest.scores[0].map((s: any) => ({\n  //         label: s.description,\n  //         value: s.count\n  //       })),\n  //       testDate: greTest.testDate || \"\",\n  //       document: greTest.document || { name: \"\", icon: Images.pdfIcon }\n  //     }\n  //   : null;\n\n  const [editMode, setEditMode] = useState(false);\n  const [greEditMode, setGreEditMode] = useState(false);\n  // Placeholder demo state for edit UI\n  const [isGRESelected, setIsGRESelected] = useState(\"yes\");\n  const [selectedGRETest, setSelectedGRETest] = useState(\"\");\n  const academicTests: any[] = [];\n  const academicTestNames: any[] = [];\n  const AcademicTestNamesEnum = {};\n  const eventHandler = ({ name, data }: { name: string; data: any }) => {\n    if (name === \"academicTestSelection\") setIsGRESelected(data);\n    if (name === \"academicTest\") setSelectedGRETest(data);\n  };\n\n  // Add separate state/handlers for English test edit section\n  const [isEnglishSelected, setIsEnglishSelected] = useState(\"\");\n  const [selectedEnglishTest, setSelectedEnglishTest] = useState(\"\");\n  const englishTests: any[] = [];\n  const englishTestNames: any[] = [];\n  const englishEventHandler = ({ name, data }: { name: string; data: any }) => {\n    if (name === \"englishTestSelection\") setIsEnglishSelected(data);\n    if (name === \"englishTest\") setSelectedEnglishTest(data);\n  };\n\n  // Example static data for demonstration (replace with your dynamic data as needed)\n  const initialEnglishTestData: TestScoreData | null = null; // or an object if data exists\n  const initialGreTestData: TestScoreData | null = {\n    name: 'GRE',\n    scores: [\n      { label: 'Verbal Reasoning', value: '130-170' },\n      { label: 'Quantitative Reasoning', value: '130-170' },\n      { label: 'Analytical Writing Assessment', value: '1-6' },\n    ],\n    testDate: '06-03-2024',\n    document: { name: 'GRE.pdf', icon: Images.pdfIcon },\n  };\n\n  const [englishEditMode, setEnglishEditMode] = useState(false);\n  const [greTestData, setGreTestData] = useState<TestScoreData | null>(null);\n  const [englishTestData, setEnglishTestData] = useState<TestScoreData | null>(null);\n  const [englishForm, setEnglishForm] = useState<TestScoreData | null>(null);\n  const [greForm, setGreForm] = useState<TestScoreData | null>(null);\n\n  const [showEnglishTestForm, setShowEnglishTestForm] = useState(false);\n  const [showGRETestForm, setShowGRETestForm] = useState(false);\n\n  const [isAddingEnglishTest, setIsAddingEnglishTest] = useState(false);\n  const [isAddingGRETest, setIsAddingGRETest] = useState(false);\n\n  // Add validation state for English and GRE/GMAT modals\n  const [englishErrors, setEnglishErrors] = useState<any>({});\n  const [greErrors, setGreErrors] = useState<any>({});\n\n  // Validation helper for English\n  const validateEnglish = () => {\n    const errors: any = {};\n    if (!isEnglishSelected) errors.radio = 'Please select Yes or No.';\n    if (isEnglishSelected === 'yes') {\n      if (!englishForm?.name) errors.name = 'Please select a test.';\n      englishForm?.scores.forEach((s, i) => {\n        if (!s.value) errors[`score${i}`] = 'Required.';\n        else if (s.label === 'Reading' || s.label === 'Writing' || s.label === 'Listening' || s.label === 'Speaking') {\n          const val = Number(s.value);\n          if (isNaN(val) || val < 1 || val > 30) errors[`score${i}`] = 'Must be 1–30.';\n        }\n      });\n      if (!englishForm?.testDate) errors.testDate = 'Test date required.';\n    }\n    setEnglishErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Validation helper for GRE/GMAT\n  const validateGRE = () => {\n    const errors: any = {};\n    if (!isGRESelected) errors.radio = 'Please select Yes or No.';\n    if (isGRESelected === 'yes') {\n      if (!greForm?.name) errors.name = 'Please select a test.';\n      greForm?.scores.forEach((s, i) => {\n        if (!s.value) errors[`score${i}`] = 'Required.';\n        else if (s.label === 'Verbal Reasoning' || s.label === 'Quantitative Reasoning') {\n          const val = Number(s.value);\n          if (isNaN(val) || val < 130 || val > 170) errors[`score${i}`] = 'Must be 130–170.';\n        } else if (s.label === 'Analytical Writing') {\n          const val = Number(s.value);\n          if (isNaN(val) || val < 1 || val > 6) errors[`score${i}`] = 'Must be 1–6.';\n        }\n      });\n      if (!greForm?.testDate) errors.testDate = 'Test date required.';\n    }\n    setGreErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Add logging and robust matching for English and GRE tests\n  useEffect(() => {\n    // Log the raw Redux data\n    console.log('testscoresData.data', testscoresData?.data);\n\n    // More robust English test matching\n    const englishTest = testscoresData?.data?.find((item)=>languageTests.find((item2)=>item2.fullForm==item.name))\n\n    // Log the raw English test data\n    console.log('Raw English Test Data:', englishTest);\n\n    if (englishTest && englishTest.scores && Array.isArray(englishTest.scores[0])) {\n      const testData = englishTest as any;\n      const mappedScores = testData.scores[0].map((s: any) => ({\n        label: s.description || '',\n        value: s.count || '',\n        range: s.range\n      }));\n      \n      if (\n        mappedScores.length === 1 &&\n        mappedScores[0].label.toLowerCase() === 'total'\n      ) {\n        setEnglishTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else if (!mappedScores.find((s: any) => s.label.toLowerCase() === 'total')) {\n        const total = mappedScores\n          .filter((s: any) => s.value && !isNaN(Number(s.value)))\n          .reduce((acc: number, s: any) => acc + Number(s.value), 0);\n        mappedScores.push({ label: 'Total', value: String(total) });\n        setEnglishTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else {\n        setEnglishTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      }\n    } else {\n      setEnglishTestData(null);\n    }\n\n    // More robust GRE/GMAT test matching\n    const greTest = testscoresData?.data?.find((test) =>\n      [\n        'gre',\n        'graduate record examination',\n        'gmat',\n        'graduate management admission test'\n      ].some((key) => test.name?.toLowerCase().includes(key))\n    );\n\n    // Log the raw GRE test data\n    console.log('Raw GRE Test Data:', greTest);\n\n    if (greTest && greTest.scores && Array.isArray(greTest.scores[0])) {\n      const testData = greTest as any;\n      const mappedScores = testData.scores[0].map((s: any) => ({\n        label: s.description || '',\n        value: s.count || '',\n        range: s.range\n      }));\n      if (\n        mappedScores.length === 1 &&\n        mappedScores[0].label.toLowerCase() === 'total'\n      ) {\n        setGreTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else if (!mappedScores.find((s: any) => s.label.toLowerCase() === 'total')) {\n        const total = mappedScores\n          .filter((s: any) => s.value && !isNaN(Number(s.value)))\n          .reduce((acc: number, s: any) => acc + Number(s.value), 0);\n        mappedScores.push({ label: 'Total', value: String(total) });\n        setGreTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else {\n        setGreTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      }\n    } else {\n      setGreTestData(null);\n    }\n\n    // Log the mapped state\n    console.log('englishTestData', englishTestData);\n    console.log('greTestData', greTestData);\n  }, [testscoresData?.data]);\n\n  // Build the fallback English score box from englishTest\n  let englishTotalScoreBox = null;\n  if (\n    englishTest &&\n    Array.isArray(englishTest.scores) &&\n    englishTest.scores.length > 0\n  ) {\n    let totalScore = null;\n    if (Array.isArray(englishTest.scores[0])) {\n      if (englishTest.scores[0].length > 0) {\n        totalScore = englishTest.scores[0][0];\n      }\n    } else {\n      totalScore = englishTest.scores[0];\n    }\n    if (totalScore) {\n      englishTotalScoreBox = (\n        <Box>\n          <Typography color=\"#8E9091\" fontWeight={600} sx={{ mb: 1,color:\"#8E9091\" }}>{englishTestInfo.find((item)=>item.fullform==englishTest.name)?.text}</Typography>\n          <Box sx={{ display: 'flex', gap: 3 }}>\n            <Box sx={{ minWidth: 90 }}>\n              <Typography fontWeight={700} color=\"#495052\">{totalScore.count}</Typography>\n              <Typography color=\"#8E9091\" fontSize={14}>{totalScore.description}</Typography>\n            </Box>\n          </Box>\n        </Box>\n      );\n    }\n  }\n\n  // Place this just before the return statement\n  const greTest = testscoresData?.data?.find((test) =>\n    [\n      'gre',\n      'graduate record examination',\n      'gmat',\n      'graduate management admission test'\n    ].some((key) => test.name?.toLowerCase().includes(key))\n  );\n\n  let greTotalScoreBox = null;\n  if (\n    greTest &&\n    Array.isArray(greTest.scores) &&\n    greTest.scores.length > 0\n  ) {\n    let totalScore = null;\n    if (Array.isArray(greTest.scores[0])) {\n      if (greTest.scores[0].length > 0) {\n        totalScore = greTest.scores[0][0];\n      }\n    } else {\n      totalScore = greTest.scores[0];\n    }\n    if (totalScore) {\n      greTotalScoreBox = (\n        <Box>\n          <Typography fontWeight={600} sx={{ mb: 1, color:\"#8E9091\"  }}>{greTest.name}</Typography>\n          <Box sx={{ display: 'flex', gap: 3 }}>\n            <Box sx={{ minWidth: 90 }}>\n              <Typography fontWeight={700} color=\"#495052\">{totalScore.count}</Typography>\n              <Typography color=\"#8E9091\" fontSize={14}>{totalScore.description}</Typography>\n            </Box>\n          </Box>\n        </Box>\n      );\n    }\n  }\n\n  return (\n    <>\n      {/* English Proficiency Test Card */}\n      <Box\n        sx={{\n          background: \"#fff\",\n          borderRadius: \"20px\",\n          boxShadow: 1,\n          p: 3,\n          mb: 3,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n        }}\n      >\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <Typography sx={{color:\"#8E9091\"}} variant=\"h6\" fontWeight={700}>\n            English Proficiency Test\n          </Typography>\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <Button variant=\"outlined\" size=\"small\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"4px\", xs: \"2px\" } }]} onClick={() => {\n              setShowEnglishTestForm(true);\n              setIsAddingEnglishTest(false);\n              setEnglishForm(englishTestData || {\n                name: '',\n                scores: [\n                  { label: 'Reading', value: '' },\n                  { label: 'Writing', value: '' },\n                  { label: 'Speaking', value: '' },\n                  { label: 'Listening', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>Edit</Button>\n            <Button variant=\"outlined\" size=\"small\" sx={{ borderRadius: \"50%\",border:'2px solid #F48438 ', minWidth: 32, width: 36, height: 36,color:\"#495052\" }} onClick={() => {\n              setIsAddingEnglishTest(true);\n              setShowEnglishTestForm(true);\n              setEnglishForm({\n                name: '',\n                scores: [\n                  { label: 'Reading', value: '' },\n                  { label: 'Writing', value: '' },\n                  { label: 'Speaking', value: '' },\n                  { label: 'Listening', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>+</Button>\n          </Box>\n        </Box>\n        <Box sx={{ mt: 2, borderRadius: \"10px\", p: 1 }}>\n          <Typography sx={{ color: '#495052', fontSize: 15, mb: 1 }}>\n            Have you taken any English Proficiency test\n          </Typography>\n          {englishTestData && englishTotalScoreBox ? (\n            <>\n              <Box>\n                {/* <Typography variant=\"subtitle2\" sx={{ color: '#3b3f76', mb: 1 }}>Mapped Scores</Typography> */}\n                <Typography fontWeight={600} sx={{ mb: 1 }}>{englishTestInfo.find((item)=>item.fullform==englishTestData.name)?.text}</Typography>\n                <Box sx={{ display: 'flex', gap: 3 }}>\n                  {englishTestData.scores.map((score, idx) => (\n                    <Box key={idx} sx={{ minWidth: 90 }}>\n                      <Typography fontWeight={700} color=\"#495052\">{score.value}</Typography>\n                      <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n              <Divider sx={{ my: 2 }} />\n              <Box>\n     \n                {englishTotalScoreBox}\n              </Box>\n            </>\n          ) : englishTestData ? (\n            <Box>\n              <Typography fontWeight={600} sx={{ mb: 1 }}>{englishTestData.name}</Typography>\n              <Box sx={{ display: 'flex', gap: 3 }}>\n                {englishTestData.scores.map((score, idx) => (\n                  <Box key={idx} sx={{ minWidth: 90 }}>\n                    <Typography fontWeight={700} color=\"#1C1F40\">{score.value}</Typography>\n                    <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          ) : englishTotalScoreBox ? (\n            <Box>\n            \n              {englishTotalScoreBox}\n            </Box>\n          ) : <Typography fontWeight={700}>NA</Typography>}\n        </Box>\n      </Box>\n\n      {/* GRE/GMAT Test Card */}\n      <Box\n        sx={{\n          background: \"#fff\",\n          borderRadius: \"20px\",\n          boxShadow: 1,\n          p: 3,\n          mb: 3,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n        }}\n      >\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <Typography sx={{color:\"#8E9091\"}} variant=\"h6\" fontWeight={700}>\n            Graduate Record Examination/Graduate Management Admission Test\n          </Typography>\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <Button variant=\"outlined\" size=\"small\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"4px\", xs: \"2px\" } }]} onClick={() => {\n              setShowGRETestForm(true);\n              setIsAddingGRETest(false);\n              setGreForm(greTestData || {\n                name: '',\n                scores: [\n                  { label: 'Verbal Reasoning', value: '' },\n                  { label: 'Quantitative Reasoning', value: '' },\n                  { label: 'Analytical Writing', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>Edit</Button>\n            <Button variant=\"outlined\" size=\"small\" sx={{ borderRadius: \"50%\",border:'2px solid #F48438 ', minWidth: 36, width: 36, height: 36,color:\"#495052\" }} onClick={() => {\n              setIsAddingGRETest(true);\n              setShowGRETestForm(true);\n              setGreForm({\n                name: '',\n                scores: [\n                  { label: 'Verbal Reasoning', value: '' },\n                  { label: 'Quantitative Reasoning', value: '' },\n                  { label: 'Analytical Writing', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>+</Button>\n          </Box>\n        </Box>\n        <Box sx={{ mt: 2, borderRadius: \"10px\", p: 1 }}>\n          {greTestData && greTotalScoreBox ? (\n            <>\n              <Box>\n                {/* <Typography variant=\"subtitle2\" sx={{ color: '#3b3f76', mb: 1 }}>Mapped Scores</Typography> */}\n                <Typography fontWeight={600} sx={{ mb: 1 }}>{greTestData.name}</Typography>\n                <Box sx={{ display: 'flex', gap: 3 }}>\n                  {greTestData.scores.map((score, idx) => (\n                    <Box key={idx} sx={{ minWidth: 90 }}>\n                      <Typography fontWeight={700} color=\"#1C1F40\">{score.value}</Typography>\n                      <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n              <Divider sx={{ my: 2 }} />\n              <Box>\n                {greTotalScoreBox}\n              </Box>\n            </>\n          ) : greTestData ? (\n            <Box>\n              <Typography fontWeight={600} sx={{ mb: 1 }}>{greTestData.name}</Typography>\n              <Box sx={{ display: 'flex', gap: 3 }}>\n                {greTestData.scores.map((score, idx) => (\n                  <Box key={idx} sx={{ minWidth: 90 }}>\n                    <Typography fontWeight={700} color=\"#1C1F40\">{score.value}</Typography>\n                    <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          ) : greTotalScoreBox ? (\n            <Box>\n              {greTotalScoreBox}\n            </Box>\n          ) : <Typography fontWeight={700}>NA</Typography>}\n        </Box>\n      </Box>\n\n      {/* English Test Form Modal */}\n      <Dialog\n        open={showEnglishTestForm}\n        onClose={() => {\n          setShowEnglishTestForm(false);\n          setIsAddingEnglishTest(false);\n        }}\n        maxWidth=\"md\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            borderRadius: '20px',\n            background: '#fff',\n            boxShadow: 4,\n            p: 0,\n          }\n        }}\n      >\n        <Box sx={{ p: 4, position: 'relative' }}>\n          <Typography variant=\"h6\" fontWeight={700} sx={{ mb: 3,color:\"#8E9091\" }}>\n            English Proficiency Test\n          </Typography>\n          <IconButton\n            onClick={() => {\n              setShowEnglishTestForm(false);\n              setIsAddingEnglishTest(false);\n            }}\n            sx={{ position: \"absolute\", top: 20, right: 20 }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 2 }}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography fontWeight={500} sx={{ mb: 1 ,color:\"#8E9091\"}}>Have you taken any English Proficiency Test?</Typography>\n              <RadioGroup\n                row\n                value={isEnglishSelected}\n                onChange={e => {\n                  setIsEnglishSelected(e.target.value);\n                  if (e.target.value === 'no') {\n                    setEnglishForm({\n                      name: '',\n                      scores: [\n                        { label: 'Reading', value: '' },\n                        { label: 'Writing', value: '' },\n                        { label: 'Listening', value: '' },\n                        { label: 'Speaking', value: '' },\n                      ],\n                      testDate: '',\n                      document: { name: '', icon: Images.pdfIcon }\n                    });\n                  }\n                }}\n              >\n                <FormControlLabel value=\"yes\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"Yes\" />\n                <FormControlLabel value=\"no\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"No\" />\n              </RadioGroup>\n              {englishErrors.radio && <Typography color=\"error\" fontSize={13}>{englishErrors.radio}</Typography>}\n            </Grid>\n            {isEnglishSelected === 'yes' && (\n              <Grid item xs={12} sm={6} md={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Select a Test</InputLabel>\n                  <Select\n                    label=\"Select a Test\"\n                    value={englishForm?.name || ''}\n                    onChange={e => setEnglishForm(f => f ? { ...f, name: e.target.value } : null)}\n                  >\n                    {testOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>{option.label}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {englishErrors.name && <Typography color=\"error\" fontSize={13}>{englishErrors.name}</Typography>}\n              </Grid>\n            )}\n          </Grid>\n          {isEnglishSelected === 'yes' && englishForm?.name && (\n            <>\n              <Box sx={{ background: '#f6f7ff', borderRadius: 2, p: 2, mb: 3, fontWeight: 600, fontSize: 18 }}>\n                {englishForm.name.toUpperCase()}\n              </Box>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Reading\" fullWidth value={englishForm?.scores[0]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 0 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score0`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score0`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Writing\" fullWidth value={englishForm?.scores[1]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 1 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score1`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score1`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Listening\" fullWidth value={englishForm?.scores[2]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 2 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score2`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score2`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Speaking\" fullWidth value={englishForm?.scores[3]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 3 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score3`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score3`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField\n                    label=\"Test Date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    value={englishForm?.testDate || ''}\n                    onChange={e => setEnglishForm(f => f ? { ...f, testDate: e.target.value } : null)}\n                  />\n                  {englishErrors.testDate && <Typography color=\"error\" fontSize={13}>{englishErrors.testDate}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={6}>\n                  \n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2,marginTop:'6px' }}>\n                    <Button\n                      component=\"label\"\n                      sx={{\n                        border: '1px dashed #aaa',\n                        borderRadius: 2,\n                        minWidth: 40,\n                        minHeight: 40,\n                        color: '#3B3F76',\n                        background: '#fafaff',\n                        '&:hover': { background: '#f4f4ff' },\n                      }}\n                    >\n                      <ArrowUpwardIcon />\n                      <input type=\"file\" hidden onChange={e => {\n                        const file = e.target.files?.[0];\n                        if (file) {\n                          setEnglishForm(f => f ? {\n                            ...f,\n                            document: { name: file.name, icon: Images.pdfIcon }\n                          } : null);\n                        }\n                      }} />\n                   \n                    </Button>\n                       <Typography fontWeight={600} >Upload File</Typography>\n                    {englishForm?.document?.name && (\n                      <TextField value={englishForm.document.name} size=\"small\" InputProps={{ readOnly: true }} sx={{ width: 180 }} />\n                    )}\n                    {/* Add icons for view/delete if needed */}\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 4 }}>\n            <Button\n              onClick={() => {\n                setShowEnglishTestForm(false);\n                setIsAddingEnglishTest(false);\n              }}\n              variant=\"outlined\"\n              sx={{\n                border:\"2px solid #F48438\",\n                borderRadius: '20px',\n                px: 4,\n                py: 1,\n                fontWeight: 700,\n                fontSize: 18,\n                color: '#495052',\n                background: '#f8f8ff',\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              sx={{\n                borderRadius: '20px',\n                px: 4,\n                py: 1,\n                fontWeight: 700,\n                fontSize: 18,\n                color: '#fff',\n                background: '#F48438',\n              }}\n              onClick={async () => {\n                if (!validateEnglish()) return;\n                // Prepare payload for English test\n                const updatedTest = {\n                  name:englishTestInfo?.find((item)=>item.text==englishForm?.name)?.fullform || '',\n                  scores: \n                    (englishForm?.scores || []).map(s => ({\n                      description: s.label,\n                      count: s.value,\n                      range: s.range\n                    })),\n                  testDate: englishForm?.testDate || '',\n                  document: englishForm?.document || { name: '', icon: Images.pdfIcon },\n                };\n                // Merge or add, preserving all Test fields\n                let found = false;\n                const newTests = (testscoresData?.data || []).map((t: any) => {\n                  if (t.name === updatedTest.name) {\n                    found = true;\n                    return {\n                      ...t,\n                      ...updatedTest,\n                      docId: t.docId ?? undefined,\n                      _id: t._id ?? undefined,\n                    };\n                  }\n                  return t;\n                });\n                if (!found) {\n                  newTests.push({ ...updatedTest, docId: undefined, _id: undefined });\n                }\n                // Dispatch to Redux\n                dispatch(settestScores(newTests));\n                // Persist to backend\n                await editProfile({ tests: newTests });\n                setEnglishTestData(englishForm);\n                setShowEnglishTestForm(false);\n                setIsAddingEnglishTest(false);\n              }}\n            >\n              Save\n            </Button>\n            <Button variant=\"outlined\" sx={{marginTop:'4px', borderRadius: \"50%\", minWidth: 44, width: 42, height: 42, color: \"#495052\", borderColor: \"#F48438\", fontSize: 28, ml: 2,border:\"2px solid #F48438\" }}>+</Button>\n          </Box>\n        </Box>\n      </Dialog>\n\n      {/* GRE Test Form Modal */}\n      <Dialog\n        open={showGRETestForm}\n        onClose={() => {\n          setShowGRETestForm(false);\n          setIsAddingGRETest(false);\n        }}\n        maxWidth=\"md\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            borderRadius: '20px',\n            background: '#fff',\n            boxShadow: 4,\n            p: 0,\n          }\n        }}\n      >\n        <Box sx={{ p: 4, position: 'relative' }}>\n          <Typography variant=\"h6\" fontWeight={700} sx={{ mb: 3,color:\"#8E9091\" }}>\n            Graduate Record Examination/Graduate Management Admission Test\n          </Typography>\n          <IconButton\n            onClick={() => {\n              setShowGRETestForm(false);\n              setIsAddingGRETest(false);\n            }}\n            sx={{ position: \"absolute\", top: 20, right: 20 }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 2 }}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography fontWeight={500} sx={{ mb: 1 ,color:\"#8E9091\"}}>Have you taken GRE/GMAT Test?</Typography>\n              <RadioGroup\n                row\n                value={isGRESelected}\n                onChange={e => {\n                  setIsGRESelected(e.target.value);\n                  if (e.target.value === 'no') {\n                    setGreForm({\n                      name: '',\n                      scores: [\n                        { label: 'Verbal Reasoning', value: '' },\n                        { label: 'Quantitative Reasoning', value: '' },\n                        { label: 'Analytical Writing', value: '' },\n                      ],\n                      testDate: '',\n                      document: { name: '', icon: Images.pdfIcon }\n                    });\n                  }\n                }}\n              >\n                <FormControlLabel value=\"yes\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"Yes\" />\n                <FormControlLabel value=\"no\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"No\" />\n              </RadioGroup>\n              {greErrors.radio && <Typography color=\"error\" fontSize={13}>{greErrors.radio}</Typography>}\n            </Grid>\n            {isGRESelected === 'yes' && (\n              <Grid item xs={12} sm={6} md={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Select a Test</InputLabel>\n                  <Select\n                    label=\"Select a Test\"\n                    value={greForm?.name || ''}\n                    onChange={e => setGreForm(f => f ? { ...f, name: e.target.value } : null)}\n                  >\n                    {testOptions1.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>{option.label}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {greErrors.name && <Typography color=\"error\" fontSize={13}>{greErrors.name}</Typography>}\n              </Grid>\n            )}\n          </Grid>\n          {isGRESelected === 'yes' && greForm?.name && (\n            <>\n              <Box sx={{ background: '#f6f7ff', borderRadius: 2, p: 2, mb: 3, fontWeight: 600, fontSize: 18 }}>\n                {greForm.name.toUpperCase()}\n              </Box>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Verbal Reasoning\" fullWidth value={greForm?.scores[0]?.value || ''} onChange={e => setGreForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 0 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {greErrors[`score0`] && <Typography color=\"error\" fontSize={13}>{greErrors[`score0`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Quantitative Reasoning\" fullWidth value={greForm?.scores[1]?.value || ''} onChange={e => setGreForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 1 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {greErrors[`score1`] && <Typography color=\"error\" fontSize={13}>{greErrors[`score1`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Analytical Writing\" fullWidth value={greForm?.scores[2]?.value || ''} onChange={e => setGreForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 2 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {greErrors[`score2`] && <Typography color=\"error\" fontSize={13}>{greErrors[`score2`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField\n                    label=\"Test Date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    value={greForm?.testDate || ''}\n                    onChange={e => setGreForm(f => f ? { ...f, testDate: e.target.value } : null)}\n                  />\n                  {greErrors.testDate && <Typography color=\"error\" fontSize={13}>{greErrors.testDate}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={6}>\n                 \n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Button\n                      component=\"label\"\n                      sx={{\n                        border: '1px dashed #aaa',\n                        borderRadius: 2,\n                        minWidth: 30,\n                        minHeight: 30,\n                        color: '#3B3F76',\n                        background: '#fafaff',\n                        '&:hover': { background: '#f4f4ff' },\n                      }}\n                    >\n                      <ArrowUpwardIcon />\n                      <input type=\"file\" hidden onChange={e => {\n                        const file = e.target.files?.[0];\n                        if (file) {\n                          setGreForm(f => f ? {\n                            ...f,\n                            document: { name: file.name, icon: Images.pdfIcon }\n                          } : null);\n                        }\n                      }} />\n                    </Button>\n                     <Typography fontWeight={600} sx={{ mb: 1 }}>Upload File</Typography>\n                    {greForm?.document?.name && (\n                      <TextField value={greForm.document.name} size=\"small\" InputProps={{ readOnly: true }} sx={{ width: 180 }} />\n                    )}\n                    {/* Add icons for view/delete if needed */}\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 4 }}>\n            <Button\n              onClick={() => {\n                setShowGRETestForm(false);\n                setIsAddingGRETest(false);\n              }}\n              variant=\"outlined\"\n              sx={{\n                border:\"2px solid #F48438\",\n                borderRadius: '20px',\n                px: 4,\n                fontWeight: 700,\n                fontSize: 16,\n                color: '#495052',\n                background: '#f8f8ff',\n                '&:hover': { background: '#e6e6fa' },\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              sx={{\n                borderRadius: '20px',\n                px: 4,\n                py: 1,\n                fontWeight: 700,\n                fontSize: 18,\n                color: '#fff',\n                background: '#F48438',\n                '&:hover': { background: '#23245a' },\n              }}\n              onClick={async () => {\n                if (!validateGRE()) return;\n                // Prepare payload for GRE/GMAT test\n                const updatedTest = {\n                  name: greForm?.name || '',\n                  scores: [\n                    (greForm?.scores || []).map(s => ({\n                      description: s.label,\n                      count: s.value,\n                      range: s.range\n                    }))\n                  ],\n                  testDate: greForm?.testDate || '',\n                  document: greForm?.document || { name: '', icon: Images.pdfIcon },\n                };\n                // Merge or add, preserving all Test fields\n                let found = false;\n                const newTests = (testscoresData?.data || []).map((t: any) => {\n                  if (t.name === updatedTest.name) {\n                    found = true;\n                    return {\n                      ...t,\n                      ...updatedTest,\n                      docId: t.docId ?? undefined,\n                      _id: t._id ?? undefined,\n                    };\n                  }\n                  return t;\n                });\n                if (!found) {\n                  newTests.push({ ...updatedTest, docId: undefined, _id: undefined });\n                }\n                // Dispatch to Redux\n                dispatch(settestScores(newTests));\n                // Persist to backend\n                await editProfile({ tests: newTests });\n                setGreTestData(greForm);\n                setShowGRETestForm(false);\n                setIsAddingGRETest(false);\n              }}\n            >\n              Save\n            </Button>\n            <Button variant=\"outlined\" sx={{marginTop:'4px', borderRadius: \"50%\", minWidth: 40, width: 42, height: 42, color: \"#495052\", borderColor: \"#3B3F76\", fontSize: 28, ml: 2 ,border:\"2px solid #F48438\" }}>+</Button>\n          </Box>\n        </Box>\n      </Dialog>\n    </>\n  );\n};\n\nexport default TestScores;","// import { Cancel } from \"@mui/icons-material\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  // Button,\n  FormControl,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport {\n  budgetType,\n  countryList,\n  currencySymbols,\n  degreeType,\n  monthNames,\n  skillsList,\n  subDisciplines,\n} from \"../../../../assets/menu\";\nimport { editProfile, requestAdvisor } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { setpreferences } from \"../../../../store/Slices/preferencesSlice\";\nimport { setskills } from \"../../../../store/Slices/skillsSlice\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { Advisor, Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from \"yup\";\n// import { useNavigate } from \"react-router-dom\";\nimport { addAdvisorInfo, updateAdvisorInfo } from \"src/store/Slices/advisorsSlice\";\nimport { addChats } from \"src/store/Slices/chatsSlice\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport { budgets } from \"src/assets/constants/misc\";\nimport { globalButton } from \"src/components/styles/customStyles\";\n\n// interface CurrencyOption {\n//   label: string;\n//   value: string;\n// }\nconst Preferences = () => {\n  const Preferences = useAppSelector((state) => state.preferences);\n  const educationDetails=useAppSelector((state)=>state.educationhistory)\n  console.log(\"educationDetails\",educationDetails)\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const [intake, setIntake] = useState<string>(Preferences.data?.intake ? Preferences.data?.intake :\"\")\n  const date = new Date(intake)\n  // const monthDate = date.getMonth()\n  const [year, setYear] = useState(Preferences.data?.intake ? date.getFullYear() : \"\")\n  const [month, setMonth] = useState<any>(Preferences.data?.intake ? date.getMonth() : \"\")\n  const [intakeError, setIntakeError] = useState(\"\");\n  const [courseData, setCourseData] = useState(\n    Preferences?.data?.subCategory || []\n  );\n  const [countryData, setCountryData] = useState(\n    Preferences?.data?.country || []\n  );\n  // const [minBudget, setMinBudget] = useState<number>(\n  //   Preferences?.data?.budget?.lower || 0\n  // );\n  // const [maxBudget, setMaxBudget] = useState<number>(\n  //   Preferences?.data?.budget?.upper || 5000000\n  // );\n  const [selectedCurrency, setSelectedCurrency] = useState<any>(\n    Preferences?.data?.currency\n  );\n\n  const advisors = useAppSelector((state) => state.advisor);\n  // const navigate = useNavigate();\n  const assignedCountries =\n    advisors?.data?.flatMap((advisor: Advisor) => advisor.assignedCountries) ||\n    [];\n  const unassignedCountries = Preferences?.data?.country?.filter(\n    (country: string) => !assignedCountries.includes(country)\n  );\n  // eslint-disable-next-line\n  const validationSchema = Yup.object().shape({\n    preference: Yup.object().shape({\n      intake: Yup.string()\n        .required(\"Intake is required\")\n        .matches(/^(January|February|March|April|May|June|July|August|September|October|November|December)-\\d{4}$/, \"Month & Year required\"),\n      budget: Yup.object().shape({\n        lower: Yup.number()\n          .required(\"Lower budget is required\")\n          .min(0, \"Lower budget must be greater than or equal to 0\"),\n        upper: Yup.number()\n          .required(\"Upper budget is required\")\n          .moreThan(Yup.ref(\"lower\"), \"Upper budget must be greater than lower budget\"),\n      }),\n      degree: Yup.string()\n        .required(\"Degree is required\")\n        .oneOf(degreeType, \"Invalid degree program selected\"),\n      country: Yup.array()\n        .of(Yup.string())\n        .min(1, \"At least one country is required\")\n        .required(\"Countries are required\"),\n        subCategory: Yup.array()\n        .of(Yup.string())\n        .min(1, \"At least one course is required\")\n        .required(\"Courses are required\"),\n        currency: Yup.string().required(\"Currency is required\"),\n    }),\n  });\n  \n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n  const currencies = currencySymbols.map((symbol) => {\n    const [label, value] = symbol.split(\"-\");\n    return { label: symbol, value };\n  });\n\n  // const handleOptionChange = (\n  //   event: React.ChangeEvent<{}>,\n  //   newValue: string[]\n  // ) => {\n  //   setSkillsData(newValue);\n  // };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"OptionChange\":\n        setSelectedCurrency(event.data.newValue?.value);\n        break;\n      // case \"sliderChange\":\n      //   if (Array.isArray(event.data.newValue)) {\n      //     setMinBudget(event.data.newValue[0]);\n      //     setMaxBudget(event.data.newValue[1]);\n      //   }\n      //   break;\n      case \"countryChange\":\n        setCountryData(event.data.newValue);\n        break;\n      case \"courseChange\":\n        setCourseData(event.data.newValue);\n        break;\n    }\n  };\n  useEffect(() => {\n    if (month !== \"\" && year !== \"\") {\n      setIntake(`${monthNames[month]}-${year}`);\n    } else {\n      setIntake(\"\");\n    }\n  }, [month, year]);\n\n  useEffect(() => {\n    if (year !== \"\" && month !== \"\") {\n      setIntakeError(\"\");\n    }\n  }, [year, month]);\n\n  const initialValues = {\n    preference: {\n      intake: intake,\n      budget:budgets.find((item)=>item.lower===Preferences.data?.budget?.lower && item.upper===Preferences.data?.budget.upper)?.name,\n      degree: Preferences?.data?.degree,\n      country: countryData,\n      subCategory: courseData,\n      currency: selectedCurrency,\n    },\n  };\n\n  const submit = async (values: any) => {\n    // Intake validation: year and month must be selected\n    if (year === \"\" || month === \"\") {\n      setIntakeError(\"Both year and month are required.\");\n      setLoading(false);\n      return;\n    } else {\n      setIntakeError(\"\");\n    }\n    let budget=budgets.find((item)=>item.name===values.preference.budget)\n    setLoading(true);\n    console.log(\"Submit\",{...values,preference:{...values.preference,budget:{upper:budget?.upper,lower:budget?.lower}}})\n    try {\n      const response = await editProfile({...values,preference:{...values.preference,budget:{upper:budget?.upper,lower:budget?.lower}}});\n      if (response) {\n        dispatch(setpreferences(response.data.data.preference));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Preferences updated \",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const addAdvisors = async (item: string) => {\n    try {\n      const response = await requestAdvisor({\n        country: item,\n      });\n\n      const newAdvisor = response.data.data.advisor;\n      const existingAdvisor = advisors?.data?.find((advisor) => advisor._id === newAdvisor._id);\n\n      if (existingAdvisor) {\n        dispatch(updateAdvisorInfo(newAdvisor));\n      } else {\n        dispatch(addAdvisorInfo(newAdvisor));\n      }\n      if (response.data.data.chat !== null) {\n        dispatch(addChats(response.data.data.chat));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const [formEdit, setFormEdit] = useState(false);\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ px: { lg: 3 } }}>\n      <Formik\n        initialValues={initialValues}\n        enableReinitialize={true}\n        // validationSchema={validationSchema}\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => (\n          <Form className=\"mt-5\">\n            <Grid container spacing={4} sx={{ width:\"100% !important\" }}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  What program would you like to pursue?\n                </Typography>\n                <Autocomplete\n                  multiple\n                  id=\"subdisciplines\"\n                  sx={{\n                    \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n                      padding: \"5px\",\n                    },\n                    width: \"100%\",\n                  }}\n                  limitTags={2}\n                  size=\"small\"\n                  options={subDisciplines}\n                  getOptionLabel={(option) => option}\n                  value={courseData}\n                  filterSelectedOptions\n                  ListboxProps={{\n                    style: { maxHeight: \"180px\", overflowY: \"auto\" },\n                  }}\n                  onChange={(event, newValue) =>\n                    eventHandler({\n                      name: \"courseChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search programs\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        ...params.InputProps,\n                      }}\n                    />\n                  )}\n                />\n                    {((touched.preference as any)?.subCategory && (errors.preference as any)?.subCategory) ? (\n                      <div className=\"error\">{(errors.preference as any)['subCategory']}</div>\n                ) : null}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  What are your preferred study destinations?\n                </Typography>\n                <Autocomplete\n                  multiple\n                  id=\"autocomplete\"\n                  sx={{\n                    \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n                      padding: \"5px\",\n                    },\n                    width: \"100%\",\n                  }}\n                  limitTags={2}\n                  size=\"small\"\n                  options={countryList}\n                  getOptionLabel={(option) => option}\n                  value={countryData}\n                  filterSelectedOptions\n                  ListboxProps={{\n                    style: { maxHeight: \"180px\", overflowY: \"auto\" },\n                  }}\n                  onChange={(event, newValue) =>\n                    eventHandler({\n                      name: \"countryChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search country\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        ...params.InputProps,\n                      }}\n                    />\n                  )}\n                />\n                    {((touched.preference as any)?.country && (errors.preference as any)?.country) ? (\n                      <div className=\"error\">{(errors.preference as any)['country']}</div>\n                ) : null}\n                {unassignedCountries?.map((item, i) => (\n                  <Grid item xs={12} key={i}>\n                    <Box\n                      sx={{\n                        py: 1,\n                        display: \"flex\",\n                        gap: \"1rem\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Button\n                        onClick={() => addAdvisors(item)}\n                        sx={{\n                          border: \"1px solid #3B3F76CC\",\n                          borderRadius: \"15px\",\n                          p: 0.5,\n                          textTransform: \"none\",\n                          color: \"#3B3F76CC\",\n                        }}\n                      >\n                        Request advisor for {item}\n                      </Button>\n                    </Box>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  Which degree program do you prefer?\n                </Typography>\n                <FormControl size=\"small\">\n                  <InputLabel sx={{color:\"#8E9091\"}} id=\"degree\">Select Degree</InputLabel>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={values.preference.degree}\n                    label=\"Select Degree\"\n                    onChange={handleChange}\n                  >\n                    {degreeType.map((item, i) => (\n                      <MenuItem value={item} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                      {((touched.preference as any)?.degree && (errors.preference as any)?.degree) ? (\n                        <div className=\"error\">{(errors.preference as any)['degree']}</div>\n                  ) : null}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6} >\n                <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  When would you like to begin your studies?\n                </Typography>\n                <div style={{ display: \"flex\", gap: \"1rem\" }}>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    // name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={year}\n                    // label=\"Select Year\"\n                    onChange={(e: any) => setYear(e.target.value)}\n                    defaultValue=\"\"\n                    displayEmpty\n                  >\n                    <MenuItem sx={{color:\"#8E9091\"}} value=\"\" disabled>Select Year</MenuItem>\n                    {[\"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\"].map((item, i) => (\n                      <MenuItem value={item} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    // name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={month}\n                    // label=\"Select Year\"\n                    onChange={(e: any) => setMonth(e.target.value)}\n                    defaultValue=\"\"\n                    displayEmpty\n                  >\n                    <MenuItem sx={{color:\"#8E9091\"}} value=\"\" disabled>Select Month</MenuItem>\n                    {monthNames.map((item, i) => (\n                      <MenuItem value={i} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </div>\n                {intakeError && (\n                  <div className=\"error\" style={{ color: 'red', marginTop: 4 }}>{intakeError}</div>\n                )}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography sx={{color:\"#8E9091\"}} fontWeight=\"500\" gutterBottom \n                >\n                  What is your estimated budget range for your studies?\n                </Typography>\n                <FormControl size=\"small\">\n                  <InputLabel sx={{color:\"#8E9091\"}} id=\"budget\">Select Budget</InputLabel>\n                  <Select\n                    labelId=\"budget\"\n                    id=\"budget\"\n                    size=\"small\"\n                    name=\"preference.budget\"\n                    MenuProps={MenuProps}\n                    value={values.preference.budget}\n                    label=\"Select budget\"\n                    onChange={handleChange}\n                  >\n                    {budgets.map((item, i) => (\n                      <MenuItem value={item.name} key={item.id}>\n                        {item.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                      {((touched.preference as any)?.budget && (errors.preference as any)?.budget) ? (\n                        <div className=\"error\">{(errors.preference as any)['budget']}</div>\n                  ) : null}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <InputLabel\n                  id=\"degree\"\n                  sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 0.5 }}\n                >\n                  Preferred currency?\n                </InputLabel>\n                <Autocomplete\n                  sx={{\n                    marginTop: \"9px\",\n                    width: \"100%\",\n                    \"& .MuiInputBase-input\": {\n                      fontSize: \"14px !important\",\n                    },\n                    \"&.MuiAutocomplete-listbox\": {\n                      width: \"400px\",\n                    },\n                    \"&.MuiAutocomplete-listbox .MuiAutocomplete-option \": {\n                      fontSize: \"14px !important\",\n                    },\n                    \"& .MuiOutlinedInput-root\": {\n                      paddingRight: \"0 !important\",\n                    },\n                  }}\n                  options={currencies}\n                  getOptionLabel={(option) => option?.label}\n                  value={\n                    currencies.find(\n                      (option) => option.value === selectedCurrency\n                    ) || null\n                  }\n                  onChange={(\n                    event: any,\n                    newValue: { label: string; value: string } | null\n                  ) =>\n                    eventHandler({\n                      name: \"OptionChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search currency\"\n                      size=\"small\"\n                      InputProps={{\n                        ...params.InputProps,\n                        type: \"search\",\n                        endAdornment: (\n                          <ExpandMoreIcon\n                            sx={{ color: \"gray\", marginRight: \"5px\" }}\n                          />\n                        ),\n                        style: {\n                          fontSize: \"14px !important\",\n                          color: \"#000 !important\",\n                        },\n                      }}\n                    />\n                  )}\n                />\n                    {((touched.preference as any)?.currency && (errors.preference as any)?.currency) ? (\n                      <div className=\"error\">{String((errors.preference as any)['currency'])}</div>\n                ) : null}\n              </Grid>\n\n\n              <Grid\n                item\n                xs={12}\n                sx={{ justifyContent: \"end\", display: \"flex\" }}\n              >\n                <CustomButton\n                  width=\"100px\"\n                  handleSubmit={() => console.log(\"first\")}\n                >\n                  {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Save\"\n                  )}\n                </CustomButton>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#8E9091\" }}>\n                Preferences\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Preferred Programs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{courseData && courseData.length > 0 ? courseData.join(', ') : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Preferred Study Destinations</Typography>\n              <Typography sx={{color:\"#495052\"}}>{countryData && countryData.length > 0 ? countryData.join(', ') : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Degree Program</Typography>\n              <Typography sx={{color:\"#495052\"}}>{Preferences?.data?.degree || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Intake</Typography>\n              <Typography sx={{color:\"#495052\"}}>{intake || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Budget</Typography>\n              <Typography sx={{color:\"#495052\"}}>{Preferences?.data?.budget ? budgets.find((item) => item.lower === Preferences?.data?.budget?.lower && item.upper === Preferences?.data?.budget?.upper)?.name || 'NA' : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Currency</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCurrency || 'NA'}</Typography>\n            </Grid>\n          </Grid>\n    </Box>\n      )}\n    </>\n  );\n};\n\nconst Skills: React.FC = () => {\n  const skills = useAppSelector((state) => state.skills);\n  const dispatch = useAppDispatch();\n  const [skilldata, setSkillsData] = useState<string[]>(skills.data);\n  const [loading,setLoading] = useState(false)\n  const handleOptionChange = (\n    event: React.ChangeEvent<{}>,\n    newValue: string[]\n  ) => {\n    setSkillsData(newValue);\n  };\n  // const handleSkillsDelete = async (item: any) => {\n  //   const updated = skilldata.filter((value, i) => value !== item);\n  //   const response = await editProfile({ skills: updated });\n  //   if (response) {\n  //     dispatch(setskills(response.data.data.skills));\n  //     setSkillsData(response.data.data.skills);\n  //     dispatch(\n  //       setPopup({\n  //         show: true,\n  //         data: {\n  //           container: {\n  //             name: \"success\",\n  //             data: \"Deleted successfully\",\n  //             dimensions: {\n  //               width: \"30%\",\n  //               height:\"40%\",\n  //               show:\"none\"\n\n  //             },\n  //           },\n  //           type: \"custom\",\n  //         },\n  //       })\n  //     );\n  //   } else {\n  //   }\n  // };\n\n  const submit = async () => {\n    setLoading(true)\n    const response = await editProfile({ skills: skilldata });\n    if (response) {\n      dispatch(setskills(response.data.data.skills));\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"success\",\n              data: \"Skills added successfully\",\n              dimensions: {\n                width: \"30%\",\n                height: \"40%\",\n                show: \"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n      setLoading(false)\n    }else{\n      setLoading(false)\n    }\n  };\n  return (\n    <div>\n      <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", color: \"rgba(48, 51, 99, 0.5)\" }}>Skills</Typography>\n      <Autocomplete\n        multiple\n        id=\"autocomplete\"\n        sx={{\n          \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n            padding: \"5px\",\n          },\n          width: {lg:\"50%\"},\n          \"& .MuiTextField-root\": {\n            marginTop: \"8px\",\n          },\n          mb:1\n        }}\n        disableClearable\n        size=\"small\"\n        fullWidth\n        options={skillsList}\n        getOptionLabel={(option) => option}\n        value={skilldata}\n        filterSelectedOptions\n        ListboxProps={{\n          style: { maxHeight: \"180px\", overflowY: \"auto\" },\n        }}\n        // renderTags={() => null}\n        onChange={handleOptionChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            placeholder=\"Ex: Problem-Solving\"\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              type: \"search\",\n              endAdornment: null,\n            }}\n          />\n        )}\n      />\n      {/* {skilldata?.length > 0 ? (\n        <Box\n          sx={{\n            background: \"#EDF2F6\",\n            p: 2,\n            width: \"fit-content\",\n            mt: 2,\n            borderRadius: \"10px\",\n            display: \"flex\",\n          }}\n        >\n          {skilldata?.map((item) => (\n            <Typography\n              sx={{\n                p: 1.5,\n                background: \"#fff\",\n                width: \"fit-content\",\n                borderRadius: \"10px\",\n                fontSize: \"13px\",\n                mr: 1,\n                position: \"relative\",\n                \"&:hover .cancel-icon\": {\n                  display: \"block\",\n                },\n              }}\n            >\n              {item}\n              <Cancel\n                className=\"cancel-icon\"\n                sx={{\n                  display: \"none\",\n                  color: \"red\",\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0,\n                  fontSize: \"1rem\",\n                }}\n                onClick={() => handleSkillsDelete(item)}\n              />\n            </Typography>\n          ))}\n        </Box>\n      ) : null} */}\n      <Box sx={{ justifyContent: \"end\", display: \"flex\", mr: {lg:10} }}>\n        <Button type=\"submit\" onClick={submit} sx={[secondaryButton, { width: \"100px\" }]}>\n        {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Save\"\n                  )}        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default Skills;\n\nexport { Preferences, Skills };\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  InputLabel,\n  Stack,\n  MenuItem,\n  Select,\n  FormControlLabel,\n  Radio,\n  // FormControl,\n  RadioGroup,\n  Typography,\n  FormControl,\n} from \"@mui/material\";\nimport Images from \"../../../../assets\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { editProfile, getProfile } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setExtraCurriculum } from \"../../../../store/Slices/extraCurricular\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Formik, Field, FieldArray, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport Skills from \"./preferences\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n// import { useState } from \"react\";\n// import { Grid, RadioGroup, FormControlLabel, Radio, Typography } from \"@mui/material\";\n\n\ninterface ExtraCurricularMember {\n  activity: string;\n  description: string;\n  startDate: any;\n  endDate: any;\n  designation: string;\n  status: string;\n  participatedPublication?: string;\n  participationLevel?: string;\n}\n\ninterface ResearchPaper {\n  title: string;\n  journal: string;\n  year: string;\n  authors: string;\n  description: string;\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst validationSchema = Yup.object().shape({\n  activity: Yup.string().required(\"Activity is required\"),\n  description: Yup.string().required(\"Description is required\"),\n  startDate: Yup.date().required(\"Start Date is required\"),\n  endDate: Yup.date()\n    .nullable() \n    .when(\"status\", {\n      is: \"completed\", \n      then: (schema) =>\n        schema.required(\"End Date is required\").min(\n          Yup.ref(\"startDate\"),\n          \"End Date cannot be earlier than Start Date\"\n        ),\n      otherwise: (schema) => schema.nullable(), \n    }),\n  status: Yup.string().required(\"Status is required\"),\n});\n\nconst validationSchemaArray = Yup.array().of(validationSchema);\n\nconst ExtraCurricular = () => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const extracurricular = useAppSelector((state) => state.extracurriculum);\n  const [formEdit, setFormEdit] = useState(false);\n  const initialValues = {\n    extraCurriculumActivities: (extracurricular.data?.length\n      ? extracurricular.data\n      : [\n        {\n          activity: \"\",\n          description: \"\",\n          designation: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          status: \"\",\n        },\n      ]\n    ).map((item: any) => ({\n      ...item,\n      participatedPublication: item.participatedPublication ?? \"No\",\n      participationLevel: item.participationLevel ?? \"\",\n    })),\n  };\n\n  const activities = [\n    \"Dance\",\n    \"Online Certification\",\n    \"Paper Publication\",\n    \"Project\",\n    \"Research\",\n    \"Student Government\",\n    \"Academic Teams and Clubs\",\n    \"The Debate Team Students\",\n    \"Internships\",\n  ];\n\n  const [researchPapers] = useState<ResearchPaper[]>([]);\n  const skills = useAppSelector((state) => state.skills.data);\n\n  useEffect(() => {\n    async function fetchExtraCurricular() {\n      try {\n        const profile = await getProfile();\n        console.log('Fetched profile for extraCurricular:', profile);\n        if (profile && profile.data && profile.data.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(profile.data.extraCurriculumActivities));\n        } else if (profile && profile.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(profile.extraCurriculumActivities));\n        }\n      } catch (error) {\n        // Optionally handle error\n      }\n    }\n    fetchExtraCurricular();\n  }, [dispatch]);\n\n  const submitForm = async (values: any) => {\n    if (!loading) {\n      try {\n        setLoading(true);\n        // Ensure all activities have the new fields\n        const activitiesWithPublication = values.extraCurriculumActivities.map((item: any) => ({\n          ...item,\n          participatedPublication: item.participatedPublication ?? \"No\",\n          participationLevel: item.participationLevel ?? \"\",\n        }));\n        console.log('Submitting activities:', activitiesWithPublication);\n        const response = await editProfile({\n          extraCurriculumActivities: activitiesWithPublication,\n          researchPapers: researchPapers,\n        });\n        console.log('Submit response:', response);\n        if (response && response.data && response.data.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(response.data.extraCurriculumActivities));\n        } else if (response && response.data && response.data.data && response.data.data.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(response.data.data.extraCurriculumActivities));\n        }\n        if (response) {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Extra curricular activities and research papers added successfully\",\n                  dimensions: {\n                    width: \"40%\",\n                    height: \"40%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n  };\n\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ overflowY: \"scroll\", px: 3, height: \"75vh\" }}>\n          <Box sx={{ px: 2 }}>\n            <Skills />\n          </Box>\n          <Box >\n            <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", mb: 1, color: \"rgba(48, 51, 99, 0.5)\", px: 2 }}>Activities</Typography>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={Yup.object().shape({\n                extraCurriculumActivities: validationSchemaArray,\n              })}\n              onSubmit={(values, { setSubmitting }) => {\n                submitForm(values);\n                setSubmitting(false);\n              }}\n            >\n              {({ values, handleChange, handleBlur, isValid, dirty }) => (\n                <Form >\n                  <FieldArray name=\"extraCurriculumActivities\">\n                    {({ push, remove }) => (\n                      <>\n                        {values.extraCurriculumActivities.map((activity: ExtraCurricularMember, index) => (\n                          <div className=\"mb-5\" key={index}>\n                            <Grid container spacing={4} sx={{ px: 2 }}>\n                              {/* Activity Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                                  Activity\n                                </InputLabel>\n                                <FormControl fullWidth variant=\"outlined\" size=\"small\" sx={{ mt: 1,color:\"#8E9091\" }}>\n                                  <Field\n                                    as={Select}\n                                    size=\"small\"\n                                    name={`extraCurriculumActivities.${index}.activity`}\n                                    value={activity.activity}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    displayEmpty\n                                    IconComponent={ExpandMoreIcon}\n                                    MenuProps={MenuProps}\n                                  >\n                                    <MenuItem sx={{color:\"#8E9091\"}} disabled value=\"\">\n                                      Select activity\n                                    </MenuItem >\n                                    {activities.map((value) => (\n                                      <MenuItem sx={{color:\"#495052\"}} key={value} value={value}>\n                                        {value}\n                                      </MenuItem>\n                                    ))}\n                                  </Field>\n                                  <ErrorMessage\n                                    name={`extraCurriculumActivities.${index}.activity`}\n                                    component=\"div\"\n                                    className=\"error\"\n                                  />\n                                </FormControl>\n                              </Grid>\n\n                              {/* Designation Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb: 1}}>\n                                  Designation\n                                </InputLabel>\n                                <Field\n                                  as={TextField}\n                                  size=\"small\"\n                                  name={`extraCurriculumActivities.${index}.designation`}\n                                  placeholder=\"Designation\"\n                                  value={activity.designation}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  fullWidth\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.designation`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                              {/* Status Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                                  Active status\n                                </InputLabel>\n                                <Field\n                                  as={RadioGroup}\n                                  row\n                                  name={`extraCurriculumActivities.${index}.status`}\n                                  value={activity.status}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                >\n                                  <FormControlLabel\n                                    value=\"completed\"\n                                    control={<Radio size=\"small\" />}\n                                    label=\"Completed\"\n                                  />\n                                  <FormControlLabel\n                                    value=\"ongoing\"\n                                    control={<Radio size=\"small\" />}\n                                    label=\"Ongoing\"\n                                  />\n                                </Field>\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.status`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                              {/* Description Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb: 1 }}>\n                                  Description\n                                </InputLabel>\n                                <Field\n                                  as={TextField}\n                                  size=\"small\"\n                                  name={`extraCurriculumActivities.${index}.description`}\n                                  placeholder=\"Description\"\n                                  value={activity.description}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  fullWidth\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.description`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                              {/* Start Date Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb: 1 }}>\n                                  Attended from\n                                </InputLabel>\n\n                              \n                                <DatePickerComponent\n                                  selectedDate={activity?.startDate}\n                                  onChange={(date) => handleChange({ target: { name: `extraCurriculumActivities.${index}.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                                  maxDate={new Date()}\n                                  placeholderText=\"Start Date\"\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.startDate`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                                <Grid item xs={12} sm={6}>\n        <Typography sx={{ fontWeight: 500, color: \"#8E9091\", mb: 1 }}>\n          Did you participate any publication?\n        </Typography>\n        <Field\n          as={RadioGroup}\n          row\n          name={`extraCurriculumActivities.${index}.participatedPublication`}\n          value={activity.participatedPublication || \"No\"}\n          onChange={handleChange}\n        >\n          <FormControlLabel value=\"Yes\" control={<Radio size=\"small\" />} label=\"Yes\" />\n          <FormControlLabel value=\"No\" control={<Radio size=\"small\" />} label=\"No\" />\n        </Field>\n      </Grid>\n\n     \n\n\n                              {/* End Date Field */}\n                              <Grid item xs={12} sm={6}>\n                                {activity.status === \"completed\" && (\n                                  <>\n                                    <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                                      Attended till\n                                    </InputLabel>\n                                    <DatePickerComponent\n                                      selectedDate={activity?.endDate}\n                                      onChange={(date) => handleChange({ target: { name: `extraCurriculumActivities.${index}.endDate`, value: date?.toISOString().slice(0, 10) } })}\n                                      minDate={\n                                        activity.startDate\n                                          ? new Date(\n                                            new Date(activity?.startDate).getTime() + 10 * 24 * 60 * 60 * 1000\n                                          )\n                                          : undefined\n                                      }\n                                      maxDate={new Date()}\n                                      placeholderText=\"End Date\"\n                                    />\n                                    <ErrorMessage\n                                      name={`extraCurriculumActivities.${index}.endDate`}\n                                      component=\"div\"\n                                      className=\"error\"\n                                    />\n                                  </>\n                                )}\n                              </Grid>\n\n                              {activity.participatedPublication === \"Yes\" && (\n                                <Grid item xs={12} sm={6}>\n                                  <Typography sx={{ fontWeight: 500, color: \"#8E9091\", mb: 1 }}>\n                                    Participation Level\n                                  </Typography>\n                                  <Field\n                                    as={RadioGroup}\n                                    row\n                                    name={`extraCurriculumActivities.${index}.participationLevel`}\n                                    value={activity.participationLevel || \"\"}\n                                    onChange={handleChange}\n                                  >\n                                    <FormControlLabel value=\"National\" control={<Radio size=\"small\" />} label=\"National\" />\n                                    <FormControlLabel value=\"International\" control={<Radio size=\"small\" />} label=\"International\" />\n                                  </Field>\n                                </Grid>\n                              )}\n\n                              {/* Remove Activity Button */}\n                              {values.extraCurriculumActivities.length > 1 && (\n                                <Grid item xs={12}>\n                                  <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                                    <img\n                                      src={Images.deleteIcon}\n                                      alt=\"delete\"\n                                      style={{ width: \"1.5rem\" }}\n                                      onClick={() => remove(index)}\n                                    />\n                                  </Box>\n                                </Grid>\n                              )}\n                            </Grid>\n                          </div>\n                        ))}\n\n                        <Stack\n                          direction=\"row\"\n                          sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n                          spacing={2}\n                        >\n                          <Button\n                            onClick={() =>\n                              push({\n                                activity: \"\",\n                                description: \"\",\n                                designation: \"\",\n                                startDate: \"\",\n                                endDate: \"\",\n                                status: \"\",\n                                participatedPublication: \"No\",\n                                participationLevel: \"\",\n                              })\n                            }\n                            sx={secondaryButton}\n                          >\n                            Add new\n                          </Button>\n                          <CustomButton width=\"100px\" handleSubmit={()=>submitForm}>\n                            {loading ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n                          </CustomButton>\n                        </Stack>\n                      </>\n                    )}\n                  </FieldArray>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n          {/* <Box sx={{ mt: 4, px: 2 }}>\n            <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", mb: 1, color: \"rgba(48, 51, 99, 0.5)\" }}>\n              Research Papers\n            </Typography>\n            {researchPapers.map((paper, idx) => (\n              <Box key={idx} sx={{ mb: 2, border: '1px solid #eee', borderRadius: 2, p: 2 }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Title\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.title}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].title = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Journal\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.journal}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].journal = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Year\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.year}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].year = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Authors\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.authors}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].authors = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      label=\"Description\"\n                      size=\"small\"\n                      fullWidth\n                      multiline\n                      minRows={2}\n                      value={paper.description}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].description = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      onClick={() => {\n                        setResearchPapers(researchPapers.filter((_, i) => i !== idx));\n                      }}\n                      disabled={researchPapers.length === 1}\n                    >\n                      Remove\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            ))}\n            <Button\n              variant=\"outlined\"\n              onClick={() => setResearchPapers([...researchPapers, { title: \"\", journal: \"\", year: \"\", authors: \"\", description: \"\" }])}\n            >\n              Add Research Paper\n            </Button>\n          </Box> */}\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', pl: 3, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <span style={{ fontWeight: 600, fontSize: '1.25rem',color:\"#8E9091\" }}>Extra Curricular Details</span>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]}onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            {extracurricular.data && extracurricular.data.length > 0 ? (\n              extracurricular.data.map((item: any, idx: number) => (\n                <Grid item xs={12} key={idx} sx={{ mb: 2 }}>\n                  <Box sx={{ mb: 2 }}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        \n                        <span style={{ color: \"#8E9091\", fontWeight: 500,display:'block' }}>Activity</span>\n                        <div style={{color:\"#495052\"}}>{item.activity || 'NA'}</div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Skills</span>\n                        <div style={{color:\"#495052\"}}>{skills && skills.length > 0 ? skills.join(', ') : 'NA'}\n                        </div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Description</span>\n                        <div style={{color:\"#495052\"}}>{item.description || 'NA'}</div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Publication Participation</span>\n                        <div style={{color:\"#495052\"}}>{item.participatedPublication || 'NA'}</div>\n                        {item.participatedPublication === 'Yes' && (\n                          <>\n                            <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Participation Level</span>\n                            <div style={{color:\"#495052\"}}>{item.participationLevel || 'NA'}</div>\n                          </>\n                        )}\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, display: 'block' }}>Start Date</span>\n                        <div style={{color:\"#495052\"}}>\n                          {item.startDate && item.endDate\n                            ? `${item.startDate.split('T')[0]}`\n                            : item.startDate\n                              ? item.startDate.split('T')[0]\n                              : item.endDate\n                                ? item.endDate.split('T')[0]\n                                : ''}\n                        </div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500,marginTop:16,display:'block' }}>End Date</span>\n                        <div style={{color:\"#495052\"}}>\n                          {item.startDate && item.endDate\n                            ? `${item.endDate.split('T')[0]}`\n                            : item.startDate\n                              ? item.startDate.split('T')[0]\n                              : item.endDate\n                                ? item.endDate.split('T')[0]\n                                : ''}\n                        </div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Designation</span>\n                        <div style={{color:\"#495052\"}}>{item.designation || 'NA'}</div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Status</span>\n                        <div style={{color:\"#495052\"}}>{item.status || 'NA'}</div>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n              ))\n            ) : (\n              <Grid item xs={12}><div>No extra curricular details available.</div></Grid>\n            )}\n          </Grid>\n        </Box>\n      )}\n      {/* Research Papers Section (Read-Only Mode) */}\n      {!formEdit && researchPapers && researchPapers.length > 0 && (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3, mb: 3, mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\n            Research Papers\n          </Typography>\n          {researchPapers.map((paper: ResearchPaper, idx: number) => (\n            <Box key={idx} sx={{ border: '1px solid #eee', borderRadius: 2, p: 2, mb: 2 }}>\n              <div><strong>Title:</strong> {paper.title || 'NA'}</div>\n              <div><strong>Journal:</strong> {paper.journal || 'NA'}</div>\n              <div><strong>Year:</strong> {paper.year || 'NA'}</div>\n              <div><strong>Authors:</strong> {paper.authors || 'NA'}</div>\n              <div><strong>Description:</strong> {paper.description || 'NA'}</div>\n            </Box>\n          ))}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default ExtraCurricular;\n","import React, { useState } from \"react\";\nimport { Button, Grid, TextField, Box, InputLabel, Stack, MenuItem, Select, FormControl } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { editProfile } from \"../../../../services\";\nimport { setfamilyInfo } from \"../../../../store/Slices/familyInfoSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport { Formik, Field, FieldArray, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Images from \"src/assets\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\n\nconst validationSchema = Yup.object({\n  familyDetails: Yup.array()\n    .of(\n      Yup.object({\n        GuardianFirstName: Yup.string()\n        .max(50, \"First name cannot exceed 50 characters\")\n        .required('First name is required'),\n        GuardianLastName: Yup.string()\n        .max(50, \"Last name cannot exceed 50 characters\")\n        .required('Last name is required'),\n        GuardianOccupation: Yup.string().required(\"Occupation is required\"),\n        RelationshipWithStudent: Yup.string().required(\"Relationship is required\"),\n        GuardianContactNumber: Yup.object({\n          number:Yup.string()\n          .required(\"Phone number is required\")\n          .test(\"is-valid-phone\", \"Invalid phone number\", function (value) {\n            const { countryCode } = this.parent;\n            if (!countryCode || !value) return false; // Ensure both countryCode and number are provided\n  \n            try {\n              const phoneNumber = parsePhoneNumberFromString(`${countryCode}${value}`, countryCode);\n              return phoneNumber?.isValid();\n            } catch (error) {\n              return false;\n            }\n          }),\n          countryCode: Yup.string().required(\"Country code is required\"),\n        }).required(\"Phone number is required\"),\n      })\n    )\n    .required(\"Must have family members\")\n    .min(1, \"Minimum of 1 family member is required\"),\n});\n\n// Helper: always keep at least one entry, but allow deleting any index\nconst getNewFamilyArrayAfterDelete = (arr: any[], idx: number) => {\n  if (arr.length === 1) {\n    return [{\n      GuardianFirstName: \"\",\n      GuardianLastName: \"\",\n      GuardianEmail: \"\",\n      GuardianOccupation: \"\",\n      GuardianQualification: \"\",\n      RelationshipWithStudent: \"\",\n      GuardianContactNumber: { number: \"\", countryCode: \"\" },\n    }];\n  }\n  const newArr = arr.slice();\n  newArr.splice(idx, 1);\n  return newArr;\n};\n\nconst Family = () => {\n  const familyData = useAppSelector((state) => state.familyInfo);\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const [formEdit, setFormEdit] = useState(false);\n\n  const initialValues = {\n    familyDetails:\n      familyData.data?.length > 0\n        ? familyData.data\n        : [\n          {\n            GuardianFirstName: \"\",\n            GuardianLastName: \"\",\n            GuardianEmail: \"\",\n            GuardianOccupation: \"\",\n            GuardianQualification: \"\",\n            RelationshipWithStudent: \"\",\n            GuardianContactNumber: {\n              number: \"\",\n              countryCode: \"\"\n            },\n          },\n        ],\n  };\n\n  const submitForm = async (values: any) => {\n    let family = {\n      familyDetails: values.familyDetails,\n    };\n    try {\n      setLoading(true)\n      const response = await editProfile(family);\n      if (response) {\n        dispatch(setfamilyInfo(response.data.data.familyDetails));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Family details added successfully\",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoading(false)\n    } catch (error) { \n      setLoading(false)\n    }\n  };\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ overflowY: \"scroll\", px: 3, height: \"75vh\" }}>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={submitForm}\n          >\n            {({ values, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\n              <form onSubmit={handleSubmit}>\n                <FieldArray name=\"familyDetails\">\n                  {({ push, remove }) => (\n                    <div>\n                      {values.familyDetails.map((familyMember, index) => (\n                        <div className=\"mb-5\" key={index}>\n                          <Grid container spacing={4} sx={{ px: 2 }}>\n                            {/* RelationshipWithStudent */}\n                            <Grid item xs={12} sm={6}>\n                              <FormControl fullWidth variant=\"outlined\" size=\"small\" sx={{ mt: 1,color:\"#8E9091\"}}>\n                                <InputLabel id=\"family\">\n                                  Select Relation\n                                </InputLabel>\n                                <Select\n                                  size=\"small\"\n                                  id=\"family\"\n                                  name={`familyDetails.${index}.RelationshipWithStudent`}\n                                  value={familyMember.RelationshipWithStudent}\n                                  onChange={handleChange}\n                                  // onBlur={handleBlur}\n                                  fullWidth\n                                  IconComponent={ExpandMoreIcon}\n                                  // displayEmpty\n                                  label=\"Select Relation\"\n                                >\n                                  <MenuItem sx={{color:\"#8E9091\"}} disabled value=\"\">\n                                    Select\n                                  </MenuItem>\n                                  {[\n                                    { name: \"Father\", value: \"father\" },\n                                    { name: \"Mother\", value: \"mother\" },\n                                    { name: \"Spouse\", value: \"spouse\" },\n                                    { name: \"Guardian\", value: \"guardian\" },\n                                  ].map((option) => (\n                                    <MenuItem sx={{color:\"#495052\"}} key={option.value} value={option.value}>\n                                      {option.name}\n                                    </MenuItem>\n                                  ))}\n                                </Select>\n                              </FormControl>\n                              <ErrorMessage\n                                name={`familyDetails.${index}.RelationshipWithStudent`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n                            <Grid xs={12} sm={6}></Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianFirstName`}\n                                placeholder=\"First Name\"\n                                value={familyMember.GuardianFirstName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"First Name\"\n                                onkeydown={(e:any) => {\n                                  if (familyMember.GuardianFirstName && familyMember.GuardianFirstName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                                    e.preventDefault();\n                                  }\n                                }}\n                                inputProps={{\n                                  maxLength: 50,\n                                }}\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianFirstName`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianLastName`}\n                                placeholder=\"Last Name\"\n                                value={familyMember.GuardianLastName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Last Name\"\n                                inputProps={{\n                                  maxLength: 50,\n                                }}\n                                onkeydown={(e:any) => {\n                                  if (familyMember.GuardianLastName && familyMember.GuardianLastName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                                    e.preventDefault();\n                                  }\n                                }}\n\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianLastName`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                type=\"email\"\n                                name={`familyDetails.${index}.GuardianEmail`}\n                                placeholder=\"Email\"\n                                value={familyMember.GuardianEmail}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Email\"\n\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianEmail`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <ReactPhoneInput\n                                value={`${familyMember.GuardianContactNumber.countryCode}${familyMember.GuardianContactNumber.number}`}\n                                onChange={(value, data: any) => {\n                                  const dialCode = data?.dialCode || \"\";\n                                  setFieldValue(`familyDetails.${index}.GuardianContactNumber.countryCode`, \"+\" + dialCode);\n                                  setFieldValue(`familyDetails.${index}.GuardianContactNumber.number`, value.slice(dialCode.length).trim());\n                                }}\n                                country=\"in\"\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianContactNumber.number`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianOccupation`}\n                                placeholder=\"Occupation\"\n                                value={familyMember.GuardianOccupation}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Occupation\"\n\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianOccupation`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianQualification`}\n                                placeholder=\"Educational Qualification\"\n                                value={familyMember.GuardianQualification}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Qualification\"\n                              />\n                            </Grid>\n\n                            {/* Delete Button */}\n                            <Grid item xs={12}>\n                              <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                                <img\n                                  src={Images.deleteIcon}\n                                  alt=\"delete\"\n                                  style={{ width: \"1.5rem\" }}\n                                  onClick={() => {\n                                    setFieldValue('familyDetails', getNewFamilyArrayAfterDelete(values.familyDetails, index));\n                                  }}\n                                />\n                              </Box>\n                            </Grid>\n                          </Grid>\n                        </div>\n                      ))}\n                      <Stack\n                        direction=\"row\"\n                        sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n                        spacing={2}\n                      >\n                        <Button\n                          onClick={() =>\n                            push({\n                              GuardianFirstName: \"\",\n                              GuardianLastName: \"\",\n                              GuardianEmail: \"\",\n                              GuardianOccupation: \"\",\n                              GuardianQualification: \"\",\n                              RelationshipWithStudent: \"\",\n                              GuardianContactNumber: { number: \"\", countryCode: \"\" },\n                            })\n                          }\n                          sx={[secondaryButton, { width: \"100px\" ,color:\"#495052\" }]}\n                        >\n                          Add new\n                        </Button>\n                        <CustomButton\n                          width=\"35%\"\n                          handleSubmit={handleSubmit}\n                        >\n                            {loading ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\",color:\"#495052\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n                        </CustomButton>\n                      </Stack>\n                    </div>\n                  )}\n                </FieldArray>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3}}>\n          <Grid container >\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <span style={{ fontWeight: 600, fontSize: '1.25rem',color:'#8E9091' }}>Family Details</span>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"4px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            {familyData.data && familyData.data.length > 0 ? (\n              familyData.data.map((member: any, idx: number) => (\n                <Grid item xs={12} key={idx} >\n                  <Box sx={{ p: 2}}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>First Name</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianFirstName || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10}}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Last Name</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianLastName || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom:10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Email</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianEmail || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Relationship</span>\n                          <span style={{color:\"#495052\"}}>{member.RelationshipWithStudent || 'NA'}</span>\n                        </div>\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Occupation</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianOccupation || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Qualification</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianQualification || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10}}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Contact Number</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianContactNumber?.countryCode && member.GuardianContactNumber?.number ? `${member.GuardianContactNumber.countryCode} ${member.GuardianContactNumber.number}` : 'NA'}</span>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n              ))\n            ) : (\n              <Grid sx={{color:\"#495052\"}} item xs={12}><div>No family details available.</div></Grid>\n            )}\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Family;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  InputLabel,\n  Stack,\n  MenuItem,\n  Select,\n  FormControlLabel,\n  Radio,\n  FormControl,\n  RadioGroup,\n  Typography,\n  Tooltip,\n} from \"@mui/material\";\nimport Images from \"../../../../assets\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { Event, WorkExperience } from \"../../../../types/types\";\nimport { setWorkExperience } from \"../../../../store/Slices/workexperienceSlice\";\nimport { editProfile, uploadProfile, getProfile } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { allowedFileTypes, industrySector, workTypes } from \"../../../../assets/menu\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport { Info } from \"@mui/icons-material\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport { globalButton } from \"../../../../components/styles/customStyles\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst WorkExperiences = () => {\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const handleDeleteOpen = (item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n  const [document, setdoc] = useState<any>(null);\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [loading, setLoading] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [formEdit, setFormEdit] = useState(false);\n\n  const workExperienceData = useAppSelector((state) => state.workexperience);\n  const [WorkExperienceDetails, setWorkExperienceDetails] = useState<WorkExperience[]>(\n    workExperienceData.data?.length > 0\n      ? workExperienceData.data\n      : [\n        {\n          companyName: \"\",\n          sector: \"\",\n          type: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          designation: \"\",\n          docId: document,\n        },\n      ]\n  );\n  const [workStatus, setWorkStatus] = useState<(\"completed\" | \"ongoing\" | \"\")[]>(\n    WorkExperienceDetails.map((work) =>\n      work.endDate ? \"completed\" : \"\"\n    )\n  );\n  const [errors, setErrors] = useState<Record<number, Record<string, string>>>({});\n\n  useEffect(() => {\n    async function fetchWorkExperience() {\n      try {\n        const profile = await getProfile();\n        console.log('Fetched profile:', profile);\n        if (profile && profile.data && profile.data.workExperience) {\n          dispatch(setWorkExperience(profile.data.workExperience));\n        }\n      } catch (error) {\n        // Optionally handle error\n      }\n    }\n    fetchWorkExperience();\n  }, [dispatch]);\n\n  const validateForm = () => {\n    const newErrors: Record<number, Record<string, string>> = {};\n    WorkExperienceDetails.forEach((detail, index) => {\n      const detailErrors: Record<string, string> = {};\n      if (!detail.companyName) {\n        detailErrors.companyName = \"Company Name is required\";\n      }\n      if (!detail.sector) {\n        detailErrors.sector = \"Sector is required\";\n      }\n      if (!detail.designation) {\n        detailErrors.designation = \"Designation is required\";\n      }\n      if (!detail.startDate) {\n        detailErrors.startDate = \"Start Date is required\";\n      }\n      if (workStatus[index] === \"completed\" && !detail.endDate) {\n        detailErrors.endDate = \"End Date is required\";\n      }\n      if (!detail.type) {\n        detailErrors.type = \"Work Type is required\";\n      }\n      if (!detail.docId && !loading) {\n        detailErrors.docId = \"Document upload is required\";\n      }\n      if (Object.keys(detailErrors).length > 0) {\n        newErrors[index] = detailErrors;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"addWork\":\n        setWorkExperienceDetails([\n          ...WorkExperienceDetails,\n          {\n            companyName: \"\",\n            sector: \"\",\n            type: \"\",\n            designation: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            docId: document,\n          },\n        ]);\n        setErrors({ ...errors, [WorkExperienceDetails.length]: {} });\n        break;\n      case \"removeWorkExperience\":\n        const newWorkExperienceDetails = [...WorkExperienceDetails];\n        newWorkExperienceDetails.splice(event.data, 1);\n        // setWorkExperienceDetails(newWorkExperienceDetails);\n        const newErrors = { ...errors };\n        delete newErrors[event.data];\n        setErrors(newErrors);\n        try {\n          let workexperience = {\n            workExperience: newWorkExperienceDetails,\n          };\n          const response = await editProfile(workexperience);\n          if (response) {\n            dispatch(setWorkExperience(response.data.data.workExperience));\n            setWorkExperienceDetails(response.data.data.workExperience?.length > 0 ? response.data.data.workExperience :[\n              {\n                companyName: \"\",\n                sector: \"\",\n                type: \"\",\n                designation: \"\",\n                startDate: \"\",\n                endDate: \"\",\n                docId: document,\n              },\n            ])\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: \"Work experience removed\",\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) { }\n        break;\n      case \"inputChange\":\n        const { name, value } = event.data.e.target;\n        setWorkExperienceDetails((prevDetails) => {\n          const newDetails = [...prevDetails];\n          newDetails[event.data.index] = {\n            ...newDetails[event.data.index],\n            [name]: value,\n          };\n          return newDetails;\n        });\n        setErrors((prevErrors) => {\n          const newErrors = { ...prevErrors };\n          if (newErrors[event.data.index]) {\n            delete newErrors[event.data.index][name];\n            if (Object.keys(newErrors[event.data.index]).length === 0) {\n              delete newErrors[event.data.index];\n            }\n          }\n          return newErrors;\n        });\n        break;\n      case \"inputClick\":\n        inputFile?.current?.click();\n        break;\n      case \"statusChange\":\n        const newWorkStatus = [...workStatus];\n        newWorkStatus[event.data.index] = event.data.e.target.value;\n        setWorkStatus(newWorkStatus);\n        break;\n      case \"submitForm\":\n        if (validateForm()) {\n          setLoad(true)\n          try {\n            let workexperience = {\n              workExperience: WorkExperienceDetails,\n            };\n            const response = await editProfile(workexperience);\n            if (response) {\n              dispatch(setWorkExperience(response.data.data.workExperience));\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"success\",\n                      data: \"Work experience added\",\n                      dimensions: {\n                        width: \"30%\",\n                        height: \"40%\",\n                        show: \"none\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            }\n            setLoad(false)\n          } catch (error) { \n            setLoad(false)\n          }\n        }\n        break;\n      case \"documentUpload\":\n        const file = event.data.e.target.files && event.data.e.target.files[0];\n        if (file && allowedFileTypes.includes(file.type)) {\n          try {\n            if (file !== null && file !== undefined) {\n              setLoading(true);\n              const formData = new FormData();\n              formData.append(\"uploaded_file\", file);\n              formData.append(\"fieldPath\", \"workExperiences\");\n              formData.append(\"fileIdentifier\", `workExperiences${file.name}`);\n              const response = await uploadProfile(formData);\n              if (response.data.success) {\n                dispatch(setDocuments(response.data.data.docs));\n                const lastDoc = response.data.data.docs.workExperiences[response.data.data.docs.workExperiences.length - 1];\n                setdoc(lastDoc);\n                const updatedWorkExperienceDetails = [...WorkExperienceDetails];\n                updatedWorkExperienceDetails[WorkExperienceDetails.length - 1].docId = lastDoc;\n                setWorkExperienceDetails(updatedWorkExperienceDetails);\n                setLoading(false);\n              } else {\n                setLoading(false);\n              }\n            } else {\n              setLoading(false);\n            }\n          } catch (err) {\n            setLoading(false);\n          }\n        } else {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"error\",\n                  data: \"Only jpeg , png , pdf files are accepted\",\n                  dimensions: {\n                    width: \"250px\",\n                    show: \"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        break;\n    }\n  };\n\n  function getTotalWorkExperienceInMonths() {\n    return WorkExperienceDetails.reduce((total, exp, idx) => {\n      if (exp.startDate && (exp.endDate || workStatus[idx] === \"completed\")) {\n        const start = new Date(exp.startDate);\n        const end = exp.endDate\n          ? new Date(exp.endDate)\n          : new Date(); // If ongoing, use current date\n        const months =\n          (end.getFullYear() - start.getFullYear()) * 12 +\n          (end.getMonth() - start.getMonth());\n        return total + (months > 0 ? months : 0);\n      }\n      return total;\n    }, 0);\n  }\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ overflowY: \"scroll\", px: 3, height: \"75vh\" }}>\n          <Typography fontSize=\"1rem\" gutterBottom color=\"#8E9091\" sx={{ ml: 2, mb: 2, fontWeight: \"500\" }}>Provide details of your most recent or current experience</Typography>\n          {WorkExperienceDetails?.map((WorkExperienceMember, index) => (\n            <div className=\"mb-5\" key={index}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Name of Organization\n                  </InputLabel>\n                  <TextField\n                    size=\"small\"\n                    name={`companyName`}\n                    placeholder=\"Name of Organization\"\n                    value={WorkExperienceMember.companyName}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    required\n                    fullWidth\n                    error={!!errors[index]?.companyName}\n                    helperText={errors[index]?.companyName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Sector\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name={`sector`}\n                    displayEmpty\n                    value={WorkExperienceMember.sector || \"\"}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    IconComponent={ExpandMoreIcon}\n                    required\n                    fullWidth\n                    error={!!errors[index]?.sector}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem sx={{color:\"#495052\"}} disabled value=\"\">\n                      Select a sector\n                    </MenuItem>\n                    {industrySector.map((sector) => (\n                      <MenuItem sx={{color:\"#495052\"}} key={sector.name} value={sector.value}>\n                        {sector.name}\n                      </MenuItem>\n                    ))}\n\n                    {WorkExperienceMember.sector &&\n                      !industrySector.some((sector) => sector.value === WorkExperienceMember.sector) && (\n                        <MenuItem key={WorkExperienceMember.sector} value={WorkExperienceMember.sector}>\n                          {WorkExperienceMember.sector}\n                        </MenuItem>\n                      )\n                    }\n\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\",\n                      }}\n                      onClick={() => {\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: `workExperience[${index}].sector`,\n                                  fieldName: WorkExperienceMember.sector,\n                                  setFieldName: (value: any) => {\n                                    const newWorkExperience = [...WorkExperienceDetails];\n                                    newWorkExperience[index].sector = value;\n                                    setWorkExperienceDetails(newWorkExperience);\n                                  },\n                                  placeholder: \"Enter your sector\",\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        );\n                      }}\n                    >\n                      Can't find your sector\n                    </MenuItem>\n                  </Select>\n\n\n                  {errors[index]?.sector && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].sector}\n                    </Box>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Type of Work\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name={`type`}\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={WorkExperienceMember.type}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    IconComponent={ExpandMoreIcon}\n                    required\n                    fullWidth\n                    error={!!errors[index]?.type}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem  sx={{color:\"#495052\"}} disabled value=\"\">\n                      Select\n                    </MenuItem>\n                    {workTypes.map((type) => (\n                      <MenuItem  sx={{color:\"#495052\"}} key={type.name} value={type.value}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {errors[index]?.type && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].type}\n                    </Box>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Designation\n                  </InputLabel>\n                  <TextField\n                    size=\"small\"\n                    name={`designation`}\n                    placeholder=\"Designation\"\n                    value={WorkExperienceMember.designation}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    required\n                    fullWidth\n                    error={!!errors[index]?.designation}\n                    helperText={errors[index]?.designation}\n                  />\n                  \n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Status\n                  </InputLabel>\n                  <FormControl sx={{}}>\n                    <RadioGroup\n                      row\n                      name={`workStatus`}\n                      value={workStatus[index]}\n                      onChange={(e: any) =>\n                        eventHandler({\n                          name: \"statusChange\",\n                          data: { index, e },\n                        })\n                      }\n                    >\n                      <FormControlLabel\n                       sx={{color:\"#495052\"}}\n                        value=\"completed\"\n                        control={<Radio />}\n                        label=\"Completed\"\n                      />\n                      <FormControlLabel\n                       sx={{color:\"#495052\"}}\n                        value=\"ongoing\"\n                        control={<Radio />}\n                        label=\"Ongoing\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Upload Document\n                  </InputLabel>\n                  <Stack\n                    direction=\"row\"\n                    spacing={1}\n                    alignItems=\"center\"\n                    onClick={() =>\n                      inputFile?.current?.click()\n                    }\n                  >\n                    {WorkExperienceMember.docId ? \"\" :\n                      <>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          component=\"label\"\n                          startIcon={<FileUploadOutlinedIcon />}\n                          sx={{\n                            ...secondaryButton,\n                            fontSize: \"12px\",\n                            textTransform: \"capitalize\",\n                            color:\"#495052\"\n                          }}\n                        >\n                          Upload\n                          <input\n                            type=\"file\"\n                            hidden\n                            onChange={(e: any) =>\n                              eventHandler({\n                                name: \"documentUpload\",\n                                data: { index, e },\n                              })\n                            }\n                          />\n                        </Button>\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#000\",\n                                backgroundColor: \"#fff\",\n                                fontSize: \"14px\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\":\n                                {\n                                  marginTop: \"3px !important\",\n                                },\n                              },\n                            },\n                          }}\n                          title=\"Only jpeg , png , pdf files are accepted\"\n                          placement=\"bottom\"\n                        >\n                          <Info sx={{ color: \"#7d7d7d\", fontSize: \"1rem\", cursor: \"pointer\" }} />\n                        </Tooltip>\n                      </>}\n                    {loading ? (\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Uploading...\n                      </Typography>\n                    ) : (\n                      WorkExperienceMember.docId ?\n                        <Typography variant=\"body2\" color=\"textSecondary\" sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }} >\n                          {WorkExperienceMember?.docId?.data?.originalname}\n                          <VisibilityOutlinedIcon sx={{ fontSize: \"large\" }} onClick={() => {\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"fileViewer\",\n                                    data: WorkExperienceMember.docId?.data?.preview_url,\n                                    dimensions: {\n                                      width: \"500px\",\n                                      // height: \"35%\",\n                                      // close: \"none\",\n                                      // show: \"none\"\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }} />\n                        </Typography>\n                        : \"\"\n                    )}\n                  </Stack>\n                  {errors[index]?.docId && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].docId}\n                    </Box>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                        selectedDate={WorkExperienceMember?.startDate}\n                        onChange={(date: Date | null) =>\n                          eventHandler({\n                            name: \"inputChange\",\n                            data: {\n                              index,\n                              e: {\n                                target: {\n                                  name: \"startDate\",\n                                  value: date ? date.toISOString().slice(0, 10) : \"\",\n                                },\n                              },\n                            },\n                          })\n                        }\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      {errors[index]?.startDate && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].startDate}\n                    </Box>\n                  )}\n                </Grid>\n                {workStatus[index] === \"completed\" && (\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                      End Date\n                    </InputLabel>\n                    <DatePickerComponent\n                        selectedDate={WorkExperienceMember?.endDate}\n                        onChange={(date: Date | null) =>\n                          eventHandler({\n                            name: \"inputChange\",\n                            data: {\n                              index,\n                              e: {\n                                target: {\n                                  name: \"endDate\",\n                                  value: date ? date.toISOString().slice(0, 10) : \"\",\n                                },\n                              },\n                            },\n                          })\n                        }\n                        minDate={\n                          WorkExperienceMember?.startDate\n                            ? new Date(\n                              new Date(WorkExperienceMember?.startDate).getTime() + 10 * 24 * 60 * 60 * 1000\n                            )\n                            : undefined\n                        } \n                        maxDate={new Date()}\n                        placeholderText=\"End Date\"\n                      />\n                      {errors[index]?.endDate && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].endDate}\n                    </Box>\n                  )}\n                  </Grid>\n                )}\n\n                {workExperienceData?.data?.length  > 0 && (\n                  <Grid item xs={12} sx={{ mt: 3 }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                      <img\n                        src={Images.deleteIcon}\n                        alt=\"delete\"\n                        style={{ width: \"1.5rem\",cursor:\"pointer\" }}\n                        onClick={()=>handleDeleteOpen(index)}\n                      />\n                    </Box>\n                  </Grid>\n                )}\n              </Grid>\n            </div>\n          ))}\n          <Box sx={{ mt: 4 }}>\n            <Stack\n              direction=\"row\"\n              sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n              spacing={2}\n            >\n              {workExperienceData?.data?.length  > 0 && \n              <Button\n                variant=\"outlined\"\n                sx={{\n                  ...secondaryButton,\n                  textTransform: \"capitalize\",\n                  // fontSize: \"12px\",\n                }}\n                onClick={() =>\n                  eventHandler({\n                    name: \"addWork\",\n                    data: {},\n                  })\n                }\n              >\n                Add Previous\n              </Button>}\n            \n              <CustomButton\n                // label=\"Submit\"\n                // variant=\"contained\"\n                width=\"100px\"\n                handleSubmit={() =>\n                  eventHandler({\n                    name: \"submitForm\",\n                    data: {},\n                  })\n                }\n              >\n                  {load ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n              </CustomButton>\n            </Stack>\n          </Box>\n          <ConfirmDialog\n            open={open}\n            handleClose={() => setOpen(false)}\n            additionalData={{\n              onSubmit: () => eventHandler({\n                  name: \"removeWorkExperience\",\n                  data: deleteItem,\n                }),\n              title: \"Are you sure you want to delete ?\",\n              content:\n                \"\",\n            }}\n          />\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#8E9091\" }}>\n                Work Experience\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            {WorkExperienceDetails && WorkExperienceDetails.length > 0 ? (\n              <>\n                <Grid item xs={12}>\n                  <Typography sx={{ color: 'grey', fontWeight: 500 }}>\n                    Total Work Experience in months: {getTotalWorkExperienceInMonths() > 0 ? getTotalWorkExperienceInMonths() : 'NA'}\n                  </Typography>\n                </Grid>\n                {/* Table Header */}\n                <Grid item xs={12}>\n                  <Grid container sx={{ fontWeight: 600, background: '#f5f5f5', borderRadius: 1, py: 1 }}>\n                    <Grid item xs={12} sm={3} md={2}><Typography sx={{color:\"#8E9091\"}}>Name of Organization</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Sector</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Type of Work</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Designation</Typography></Grid>\n                    <Grid item xs={12} sm={1} md={1}><Typography sx={{color:\"#8E9091\"}}>Status</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Start Date</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>End Date</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Document</Typography></Grid>\n                  </Grid>\n                </Grid>\n                {/* Table Rows */}\n                {WorkExperienceDetails.map((exp, idx) => (\n                  <Grid item xs={12} key={idx}>\n                    <Grid container sx={{ py: 1, borderBottom: idx < WorkExperienceDetails.length - 1 ? '1px solid #eee' : 'none' }}>\n                      <Grid item xs={12} sm={3} md={2}><Typography sx={{color:\"#495052\"}}>{exp.companyName || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.sector || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.type || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.designation || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={1} md={1}><Typography sx={{color:\"#495052\"}}>{exp.endDate ? 'Completed' : 'Ongoing'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.startDate ? exp.startDate.split('T')[0] : 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.endDate ? exp.endDate.split('T')[0] : 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.docId?.data?.originalname || 'NA'}</Typography></Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </>\n            ) : (\n              <Grid item xs={12}><Typography>No work experience added.</Typography></Grid>\n            )}\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default WorkExperiences;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\n// import { DestinationTypeEnum } from \"../../../../assets/enums\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { editProfile, sendSms, verifyEmailPhone } from \"../../../../services\";\nimport { setSharedInfo } from \"../../../../store/Slices/sharedInfoSlice\";\nimport { setPersonalInfo } from \"../../../../store/Slices/personalInfoSlice\";\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport Images from \"../../../../assets/index\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from 'yup';\nimport { nationalities } from \"../../../../assets/menu\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\nconst PersonalDetails = () => {\n  const dispatch = useAppDispatch();\n  const verification = useAppSelector((state) => state.verification);\n  const phoneStatus = verification.data?.phoneLoginOtp.verified;\n  const emailStatus = verification.data?.emailLoginOtp?.verified;\n  const personalInfo = useAppSelector((state) => state.personalInfo);\n  const sharedInfo = useAppSelector((state) => state.sharedInfo);\n  const [refused, setRefused] = useState(personalInfo?.data?.visaRejectedDetails !== undefined ? \"yes\" : \"no\");\n  const [loading, setLoading] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [formEdit,setFormEdit]=useState(false)\n  \n  \n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n    fetchCountries();\n  }, []);\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"verifyPhone\":\n        setLoad(true);\n        const response = await sendSms({});\n        if (response) {\n          setLoad(false);\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"phoneverification\",\n                  data: response.data.message,\n                  dimensions: {\n                    width: \"400px\",\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        } else {\n          setLoad(false);\n        }\n        break;\n      case \"verifyemail\":\n        setLoading(true);\n        if (event.data) {\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailRegex.test(event.data)) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: \"Please enter a valid email address.\",\n                    dimensions: {\n                      width: \"400px\",\n                      show:\"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n            setLoading(false);\n            return; \n          }\n          try {\n            const response = await verifyEmailPhone({ email: event.data });\n            if (response) {\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"verifyEmail\",\n                      data: event.data,\n                      dimensions: {\n                        width: \"500px\",\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n              setLoading(false);\n            } else {\n              console.log(\"Verification failed:\", response);\n            }\n          } catch (err:any) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: err.response.data.message,\n                    dimensions: {\n                      width: \"500px\",\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          } finally {\n            setLoading(false);\n          }\n        }else{\n          setLoading(false);\n        }\n        break;\n        default:\n          break;\n    }\n \n\n  };\n\n  // eslint-disable-next-line \n  const validationSchema = Yup.object({\n    firstName: Yup.string()\n      .max(50, \"First name cannot exceed 50 characters\")\n      .required('First name is required'),\n    lastName: Yup.string()\n      .max(50, \"Last name cannot exceed 50 characters\")\n      .required('Last name is required'),\n    email: Yup.string()\n      .matches(\n        /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n        \"Enter a valid Email Id\"\n      )\n      .required(\"Enter Email ID\")\n      .max(40, \"Email ID must be at most 40 characters\"),\n    personalDetails: Yup.object({\n      DOB: Yup.date().required('Date of birth is required'),\n      Gender: Yup.string().required('Gender is required'),\n      nationality: Yup.string().required('Nationality is required'),\n      countyOfBirth: Yup.string().required('County of birth is required'),\n      maritalStatus: Yup.string().required('Marital status is required'),\n\n    }),\n  });\n\n  const initialValues = {\n    firstName: sharedInfo?.data?.firstName,\n    lastName: sharedInfo?.data?.lastName,\n    email: sharedInfo?.data?.email,\n    personalDetails: {\n      DOB: personalInfo?.data?.DOB,\n      Gender: personalInfo?.data?.Gender,\n      nationality: personalInfo?.data?.nationality,\n      countyOfBirth: personalInfo?.data?.countyOfBirth,\n      maritalStatus: personalInfo?.data?.maritalStatus,\n      validPassport: personalInfo?.data?.validPassport,\n      validPermit: personalInfo?.data?.validPermit,\n      visaRejectedDetails: personalInfo?.data?.visaRejectedDetails,\n    },\n  };\n\n\n  const submit = async (values: any) => {\n    try {\n      setLoader(true);\n      const response = await editProfile({\n        ...values,\n        personalDetails: {\n          ...values.personalDetails,\n          temporaryAddress: personalInfo?.data?.temporaryAddress,\n          permanentAddress: personalInfo?.data?.permanentAddress,\n        },\n      });\n      if (response.data.success) {\n        const sharedProfile = {\n          _id: response.data?.data?._id,\n          firstName: response.data?.data?.firstName,\n          lastName: response.data?.data?.lastName,\n          displayPicSrc: response.data?.data?.displayPicSrc,\n          email: response.data?.data?.email,\n          phone: response.data?.data?.phone,\n          LeadSource: response.data?.data?.LeadSource,\n          isPlanningToTakeAcademicTest:\n            response.data?.data?.isPlanningToTakeAcademicTest,\n          isPlanningToTakeLanguageTest:\n            response.data?.data?.isPlanningToTakeLanguageTest,\n        };\n        const personalInfo = {\n          DOB: response.data?.data?.personalDetails.DOB,\n          Gender: response.data?.data?.personalDetails.Gender, // enum\n          temporaryAddress:\n            response.data?.data?.personalDetails.temporaryAddress,\n          permanentAddress:\n            response.data?.data?.personalDetails.permanentAddress,\n          nationality: response.data?.data?.personalDetails.nationality, // enum\n          countyOfBirth: response.data?.data?.personalDetails.countyOfBirth, // enum\n          maritalStatus: response.data?.data?.personalDetails.maritalStatus, // enum\n          validPassport: response.data?.data?.personalDetails.validPassport, // enum yes no and processing\n          validPermit: response.data?.data?.personalDetails.validPermit, // enum yes no and processing,\n          visaRejectedDetails:\n            response.data?.data?.personalDetails.visaRejectedDetails,\n        };\n        dispatch(\n          setSharedInfo({\n            ...sharedProfile,\n          })\n        );\n        dispatch(\n          setPersonalInfo({\n            ...personalInfo,\n          })\n        );\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Profile updated successfully\",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setLoader(false);\n        setFormEdit(false);\n      } else {\n        setLoader(false);\n      }\n    } catch (error) { }\n  };\n  const getMaxDate = () => {\n    const today = new Date();\n    return new Date(\n      today.getFullYear() - 12,\n      today.getMonth(),\n      today.getDate()\n    ); \n  };\n  const editHandler=()=>{\n    setFormEdit(true)\n  }\n\n  return (\n    <>\n      {formEdit ? (\n        <div >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        enableReinitialize={true}\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\" }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    First Name{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    fullWidth\n                    maxLength={50}\n                    onkeydown={(e:any) => {\n                      if (values?.firstName && values?.firstName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    error={touched.firstName && Boolean(errors.firstName)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"firstName\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Last Name{\" \"}\n                  </InputLabel>\n\n                  <CustomField\n                    id=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    fullWidth\n                    maxLength={50}\n                    onkeydown={(e:any) => {\n                      if (values?.lastName && values?.lastName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    error={touched.lastName && Boolean(errors.lastName)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"lastName\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Email{\" \"}\n                  </InputLabel>\n\n                  <Box sx={{ display: \"flex\" }}>\n                    {emailStatus ? (\n                      <Typography\n                        sx={{\n                          border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                          p: 1,\n                          borderRadius: \"5px\",\n                          width: \"100%\",\n                        }}\n                      >\n                        {sharedInfo?.data?.email}\n                      </Typography>\n                    ) : (\n                      <>\n                        <CustomField\n                          id=\"lastName\"\n                          type=\"email\"\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          value={values.email}\n                          onChange={handleChange}\n                          fullWidth\n                          // disabled\n                          error={touched.email && Boolean(errors.email)}\n                        />\n                       \n                      </>\n                    )}\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"20%\",\n                      }}\n                    >\n                      {emailStatus && sharedInfo?.data?.email ? (\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Verified\"}\n                          placement=\"right\"\n                        >\n                          <VerifiedIcon\n                            sx={{\n                              fontSize: { xs: \"1.2rem\" },\n                              color: \"green\",\n                              marginLeft: \"-8px\",\n                              cursor: \"pointer\"\n                            }}\n                          />\n                        </Tooltip>\n                      ) : values.email && !emailStatus  ? (\n                        <Button\n                          sx={[secondaryButton, { width: \"75px\" }]}\n                          onClick={() =>\n                            eventHandler({\n                              name: \"verifyemail\",\n                              data: values.email,\n                            })\n                          }\n                        >\n                          {loading ? (\n                            <img\n                              src={Images.standardLoader}\n                              alt=\"load\"\n                              style={{ width: \"1rem\" }}\n                            />\n                          ) : (\n                            \"Verify\"\n                          )}\n                        </Button>\n                      ):\"\"}\n                    </Box>\n                  </Box>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                          <ErrorMessage name=\"email\" component=\"div\" />\n                        </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {sharedInfo?.data?.phone &&\n                    (sharedInfo.data.phone.number || Object.keys(sharedInfo.data.phone).length > 0) ? (\n                    <>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                      >\n                        Contact number\n                      </InputLabel>\n                      <Box sx={{ display: \"flex\" }}>\n                        <Typography\n                          sx={{\n                            border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                            p: 1,\n                            borderRadius: \"5px\",\n                            width: \"100%\",\n                          }}\n                          onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"phonenumber\",\n                                    dimensions: {\n                                      width: \"400px\",\n                                      // height: \"35%\",\n                                      // close: \"none\",\n                                      show: \"none\"\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }\n                        >\n                          {sharedInfo?.data?.phone?.countryCode}{\" \"}\n                          {sharedInfo?.data?.phone?.number}\n                        </Typography>\n                        <Box\n                          sx={{\n                            width: \"20%\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          {phoneStatus ? (\n                            <Tooltip\n                              slotProps={{\n                                tooltip: {\n                                  sx: {\n                                    color: \"#514E6A\",\n                                    backgroundColor: \"#ffff\",\n                                    boxShadow: 2,\n                                    cursor: \"pointer\",\n                                  },\n                                },\n                              }}\n                              title={\"Verified\"}\n                              placement=\"right\"\n                            >\n                              <VerifiedIcon\n                                sx={{\n                                  fontSize: { xs: \"1.2rem\" },\n                                  color: \"green\",\n                                  marginLeft: \"-8px\",\n                                  cursor: \"pointer\"\n                                }}\n                              />\n                            </Tooltip>\n                          ) : (\n                            <Button\n                              sx={[secondaryButton, { width: \"75px\" }]}\n                              onClick={() =>\n                                dispatch(\n                                  setPopup({\n                                    show: true,\n                                    data: {\n                                      container: {\n                                        name: \"phonenumber\",\n                                        dimensions: {\n                                          width: \"400px\",\n                                          // height: \"35%\",\n                                          // close: \"none\",\n                                          show: \"none\"\n                                        },\n                                      },\n                                      type: \"custom\",\n                                    },\n                                  })\n                                )\n                              }\n                            >\n                              {load ? (\n                                <img\n                                  src={Images.standardLoader}\n                                  alt=\"load\"\n                                  style={{ width: \"1rem\" }}\n                                />\n                              ) : (\n                                \"Verify\"\n                              )}\n                            </Button>\n                          )}\n                        </Box>\n                      </Box>\n                    </>\n                  ) : (\n                    <Button\n                      sx={{ textTransform: \"none\", fontSize: \"1rem\" }}\n                      onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"phonenumber\",\n                                dimensions: {\n                                  width: \"400px\",\n                                  // height: \"35%\",\n                                  // close: \"none\",\n                                  show: \"none\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }\n                    >\n                      + Add contact number\n                    </Button>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Gender\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"personalDetails.Gender\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={values.personalDetails.Gender}\n                    onChange={handleChange}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                        error={Boolean((touched.personalDetails as any)?.Gender && (errors.personalDetails as any)?.Gender)}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Gender\n                    </MenuItem>\n\n                    {[\"Male\",\"Female\",\"Non-Binary\",\"Prefer Not to Say\"].map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.Gender\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Date of Birth\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values.personalDetails.DOB}\n                    onChange={(date) =>\n                      setFieldValue(\"personalDetails.DOB\", date?.toISOString().slice(0, 10))\n                    }\n                    maxDate={getMaxDate()}\n                    placeholderText=\"Date of Birth\"\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.DOB\" component=\"div\" />\n                  </div>\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Nationality\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Nationality\"\n                    name=\"personalDetails.nationality\"\n                    options={nationalities}\n                    value={values.personalDetails.nationality}\n                    // onChange={handleChange}\n                    onChange={(e:any) =>\n                      setFieldValue(\"personalDetails.nationality\", e.target.value)\n                    }\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.nationality\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Country of Birth\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"personalDetails.countyOfBirth\"\n                    options={countries.map(country => country.name)}\n                    value={values.personalDetails.countyOfBirth}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.countyOfBirth\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Marital status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      aria-label=\"radio-group\"\n                      name=\"personalDetails.maritalStatus\"\n                      value={values.personalDetails.maritalStatus}\n                      sx={{ display: \"flex\", flexDirection: \"row\" }}\n                      onChange={(e:any) =>\n                        setFieldValue(\"personalDetails.maritalStatus\", e.target.value)\n                      }\n                    >\n                      {[\"Married\", \"Single\", \"Widowed\", \"Seperated\"].map(\n                        (option) => (\n                          <FormControlLabel\n                            key={option}\n                            value={option}\n                            control={\n                              <Radio\n                                sx={{\n                                  \"&.Mui-checked.Mui-disabled\": {\n                                    color: \"#14C6A4\",\n                                  },\n                                }}\n                              />\n                            }\n                            label={option}\n                          />\n                        )\n                      )}\n                    </RadioGroup>\n                  </FormControl>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.maritalStatus\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Do you have valid passport ?\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"personalDetails.validPassport\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={values.personalDetails.validPassport}\n                    onChange={handleChange}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                        error={Boolean((touched.personalDetails as any)?.validPassport && (errors.personalDetails as any)?.validPassport)}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Do you have a valid passport\n                    </MenuItem>\n\n                    {[\n                      { name: \"Yes\", value: \"yes\" },\n                      { name: \"No\", value: \"no\" },\n                      { name: \"Processing\", value: \"processing\" },\n                    ].map((name: any) => (\n                      <MenuItem\n                        key={name}\n                        value={name.value}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.validPassport\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"refusedLabel\"\n                    sx={{\n                      fontWeight: \"500\",\n                      color: \"#000\",\n                      mb: 1,\n                      whiteSpace: \"normal\",\n                    }}\n                  >\n                    Have you ever been refused a visa from any country?\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"refusal\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={\n                      refused === \"no\" && values.personalDetails.visaRejectedDetails\n                        ? \"yes\" // Force \"Yes\" if visaRejectedDetails is present\n                        : refused\n                    }\n                    onChange={(e) => {\n                      const newValue = e.target.value;\n                      console.log('newValue',newValue)\n                      setRefused(newValue);\n\n                      // If 'No' is selected, clear the visaRejectedDetails\n                      if (newValue === \"no\") {\n                        handleChange({ target: { name: \"personalDetails.visaRejectedDetails\", value: \"\" } });\n                      }\n                    }}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {[\n                      { name: \"Yes\", value: \"yes\" },\n                      { name: \"No\", value: \"no\" },\n                    ].map((option) => (\n                      <MenuItem\n                        key={option.value}\n                        value={option.value}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {option.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n\n                {(refused === \"yes\" || values.personalDetails.visaRejectedDetails) && (\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel\n                      id=\"visaRejectedDetailsLabel\"\n                      sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                    >\n                      Reason for visa rejection\n                    </InputLabel>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"text\"\n                      id=\"visaRejectedDetails\"\n                      multiline\n                      fullWidth\n                      rows={3}\n                      placeholder=\"Reason for visa rejection\"\n                      onChange={handleChange}\n                      name=\"personalDetails.visaRejectedDetails\"\n                      value={values.personalDetails.visaRejectedDetails}\n                    />\n                  </Grid>\n                )}\n              </Grid>\n              <Box\n                      sx={{ display: \"flex\", justifyContent: \"end\", pb:2, mr: 10,mt:3 }}\n                >\n                  <CustomButton\n                    width=\"100px\"\n                    handleSubmit={() => submit}\n                  >\n                    {loader ? (\n                      <img\n                        src={Images.standardLoader}\n                        alt=\"load\"\n                        style={{ width: \"1rem\",height:\"1rem\",padding:\"6px\" }}\n                      />\n                    ) : (\n                      \"Save\"\n                    )}\n                  </CustomButton>\n                </Box>\n            </Form>\n          );\n        }}\n      </Formik>\n              </div>\n      ) : (\n        <Card sx={{ boxShadow: 2, borderRadius: 3 }}>\n          <CardContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  {/* Avatar if available */}\n                  {sharedInfo?.data?.displayPicSrc && (\n                    <img\n                      src={sharedInfo.data.displayPicSrc}\n                      alt=\"profile\"\n                      style={{ width: 48, height: 48, borderRadius: '50%', marginRight: 16 }}\n                    />\n                  )}\n                  <Box>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                      {sharedInfo?.data?.firstName || 'NA'} {sharedInfo?.data?.lastName || 'NA'}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {sharedInfo?.data?.email || 'NA'}\n                    </Typography>\n                </Box>\n              </Box>\n                <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={editHandler}>\n                  Edit\n                </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>First name</Typography>\n                <Typography sx={{color:\"#495052\"}}>{sharedInfo?.data?.firstName || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Email ID</Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Typography sx={{color:\"#495052\"}}>{sharedInfo?.data?.email || 'NA'}</Typography>\n                  {emailStatus && sharedInfo?.data?.email && (\n                    <>\n                      <VerifiedIcon sx={{ color: 'green', fontSize: 18, ml: 1 }} />\n                      <Typography sx={{ color: 'green', fontSize: 13, ml: 0.5 }}>Verified</Typography>\n                    </>\n                  )}\n                </Box>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Gender</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.Gender || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Nationality</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.nationality || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Marital status</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.maritalStatus || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Have you ever been refused a visa from any country</Typography>\n                <Typography sx={{color:\"#495052\"}}>\n                  {personalInfo?.data?.visaRejectedDetails === undefined\n                    ? 'NA'\n                    : personalInfo?.data?.visaRejectedDetails === ''\n                      ? 'No'\n                      : 'Yes'}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>Last name</Typography>\n                <Typography sx={{color:\"#495052\"}}>{sharedInfo?.data?.lastName || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Contact number</Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Typography sx={{color:\"#495052\"}}>\n                    {sharedInfo?.data?.phone?.countryCode ? `${sharedInfo.data.phone.countryCode} ` : ''}\n                    {sharedInfo?.data?.phone?.number || 'NA'}\n              </Typography >\n                  {phoneStatus && sharedInfo?.data?.phone && (\n                    <>\n                      <VerifiedIcon sx={{ color: 'green', fontSize: 18, ml: 1 }} />\n                      <Typography sx={{ color: 'green', fontSize: 13, ml: 0.5 }}>Verified</Typography>\n                    </>\n                  )}\n                </Box>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Date of birth</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.DOB ? personalInfo.data.DOB.split('T')[0] : 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country of birth</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.countyOfBirth || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Do you have valid passport</Typography>\n                <Typography sx={{color:\"#495052\"}}>{\n                  personalInfo?.data?.validPassport === \"yes\"\n                    ? \"Yes\"\n                    : personalInfo?.data?.validPassport === \"no\"\n                    ? \"No\"\n                    : personalInfo?.data?.validPassport === \"processing\"\n                    ? \"Processing\"\n                    : 'NA'\n                }</Typography>\n            </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default PersonalDetails;\n","import {\n    Box,\n    Button,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    ListSubheader,\n    MenuItem,\n    Radio,\n    RadioGroup,\n    Select,\n    TextField,\n    Typography,\n  } from \"@mui/material\";\n  import { ErrorMessage, Form, Formik } from \"formik\";\n  import React, { useEffect, useMemo, useState } from \"react\";\n  // import { DestinationTypeEnum } from \"../../../../assets/enums\";\n  import CustomField from \"../../../../genericComponents/customTextfield\";\n  import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n  import { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\n  import { setPopup } from \"../../../../store/Slices/popupSlice\";\n  import { Country, State, City } from \"country-state-city\";\n  import type { Event } from \"../../../../types/types\";\n  import { editProfile } from \"../../../../services\";\n  import { setPersonalInfo } from \"../../../../store/Slices/personalInfoSlice\";\n  import Images from \"../../../../assets/index\";\n  import * as Yup from 'yup';\n  import ReusableDropdown from \"src/genericComponents/reusableSelect\";\n  // import CityDropdown from \"./reuseDropdowns\";\n  import SearchIcon from \"@mui/icons-material/Search\";\nimport { CustomButton } from \"src/genericComponents/customButton\";\nimport { globalButton } from \"../../../../components/styles/customStyles\";\n\n  \n  interface ICountry {\n    name: string;\n    isoCode: string;\n  }\n  interface IState {\n    name: string;\n    isoCode: string;\n    countryCode: string;\n  }\n  interface ICity {\n    name: string;\n    stateCode: string;\n    countryCode: string;\n  }\n  const Address = () => {\n    const dispatch = useAppDispatch();\n    const personalInfo = useAppSelector((state) => state.personalInfo);\n    const [permanent, setPermanent] = useState(\"\");\n    const [loader, setLoader] = useState(false);\n    const [countries, setCountries] = useState<ICountry[]>([]);\n    const [states, setStates] = useState<IState[]>([]);\n    const [cities, setCities] = useState<ICity[]>([]);\n    const [permanentstates, setpermanentstates] = useState<IState[]>([]);\n    const [permanentcities, setpermanentCities] = useState<ICity[]>([]);\n    const [selectedCountry, setSelectedCountry] = useState<any>(\n      personalInfo?.data?.temporaryAddress?.country\n    );\n    const [selectedState, setSelectedState] = useState<any>(\n      personalInfo?.data?.temporaryAddress?.state\n    );\n    const [selectedCity, setSelectedCity] = useState<any>(\n      personalInfo?.data?.temporaryAddress?.city\n    );\n    const [permanentCountry, setPermanentCountry] = useState<any>(\n      personalInfo?.data?.permanentAddress?.country\n    );\n    const [permanentState, setpermanentState] = useState<any>(\n      personalInfo?.data?.permanentAddress?.state\n    );\n    const [permanentCity, setpermanentCity] = useState<any>(\n      personalInfo?.data?.permanentAddress?.city\n    );\n    const ITEM_HEIGHT = 78;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n          width: 220,\n        },\n      },\n    };\n    const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n    const stateInfo = states.find((s: any) => s.name === selectedState);\n    const countryPInfo = countries.find((c: any) => c.name === permanentCountry);\n    const stateInPfo = states.find((s: any) => s.name === permanentState);\n    useEffect(() => {\n      const fetchCountries = async () => {\n        const allCountries = await Country.getAllCountries();\n        setCountries(allCountries);\n      };\n  \n      fetchCountries();\n    }, []);\n  \n    useEffect(() => {\n      const fetchStateAndCities = async () => {\n        const statesOfCountry = await State.getStatesOfCountry(\n          countryInfo?.isoCode\n        );\n        setStates(statesOfCountry);\n  \n        const citiesOfState = await City.getCitiesOfState(\n          stateInfo?.countryCode ?? \"\",\n          stateInfo?.isoCode ?? \"\"\n        );\n        setCities(citiesOfState);\n      };\n      fetchStateAndCities();\n    }, [countryInfo, stateInfo]);\n  \n    useEffect(() => {\n      const fetchStateAndCities = async () => {\n        const statesOfCountry = await State.getStatesOfCountry(\n          countryPInfo?.isoCode\n        );\n        setpermanentstates(statesOfCountry);\n  \n        const citiesOfState = await City.getCitiesOfState(\n          stateInPfo?.countryCode ?? \"\",\n          stateInPfo?.isoCode ?? \"\"\n        );\n        setpermanentCities(citiesOfState);\n      };\n      fetchStateAndCities();\n    }, [countryPInfo, stateInPfo]);\n  \n    useEffect(() => {\n      if (personalInfo?.data) {\n        setSelectedCountry(personalInfo?.data?.temporaryAddress?.country);\n        setSelectedState(personalInfo?.data?.temporaryAddress?.state);\n        setSelectedCity(personalInfo?.data?.temporaryAddress?.city);\n  \n        setPermanentCountry(personalInfo?.data?.permanentAddress?.country);\n        setpermanentState(personalInfo?.data?.permanentAddress?.state);\n        setpermanentCity(personalInfo?.data?.permanentAddress?.city);\n      }\n    }, [personalInfo]);\n  \n    const eventHandler = async (event: Event) => {\n      switch (event.name) {\n        case \"temporaryCountry\":\n          setSelectedCountry(event.data);\n          setSelectedState('');\n          setSelectedCity('');\n          setCities([]);\n  \n          const countryInfo = countries.find((c: any) => c.name === event.data);\n          if (countryInfo) {\n            const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n            setStates(statesOfCountry);\n          }\n          break;\n  \n        case \"temporaryState\":\n          setSelectedCity('');\n          setSelectedState(event.data);\n          const stateInfo = states.find((s: any) => s.name === event.data);\n          if (stateInfo) {\n            const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n            setCities(citiesOfState);\n          }\n          break;\n  \n        case \"temporaryCity\":\n          setSelectedCity(event.data);\n          break;\n        case \"permanentCountry\":\n          setPermanentCountry(event.data);\n          setpermanentState(\"\");\n          setpermanentCity('');\n          setpermanentCities([]);\n          const countryPInfo = countries.find((c: any) => c.name === event.data);\n          if (countryPInfo) {\n            const statesOfCountry = await State.getStatesOfCountry(\n              countryPInfo.isoCode\n            );\n            setpermanentstates(statesOfCountry);\n          }\n          break;\n        case \"permanentState\":\n          setpermanentCity('');\n          setpermanentState(event.data);\n          const statePInfo = permanentstates.find((s: any) => s.name === event.data);\n          if (statePInfo) {\n            const citiesOfState = await City.getCitiesOfState(\n              statePInfo?.countryCode,\n              statePInfo?.isoCode\n            );\n            setpermanentCities(citiesOfState);\n          }\n          break;\n        case \"permanentCity\":\n          setpermanentCity(event.data);\n          break;\n          default:\n            break;\n      }\n   \n  \n    };\n  \n    // eslint-disable-next-line \n    const validationSchema = Yup.object({\n      personalDetails: Yup.object({\n        temporaryAddress: Yup.object({\n          city: Yup.string().required('City is required'),\n          state: Yup.string().required('State is required'),\n          pinCode: Yup.string().required('Pincode is required'),\n          country: Yup.string().required('Country is required'),\n          addressLine1: Yup.string().required('Address Line1 is required'),\n        }),\n        permanentAddress: Yup.object().when('permanent', {\n          is: 'no',\n          then: schema => schema.shape({\n            city: Yup.string().required('City is required'),\n            state: Yup.string().required('State is required'),\n            pinCode: Yup.string().required('Pincode is required'), // Changed to string\n            country: Yup.string().required('Country is required'),\n            addressLine1: Yup.string().required('Address Line1 is required'),\n          }),\n        }),\n      }),\n    });\n  \n    const initialValues = {\n      personalDetails: {\n        temporaryAddress: {\n          city: selectedCity,\n          state: selectedState,\n          pinCode: personalInfo?.data?.temporaryAddress?.pinCode,\n          country: selectedCountry,\n          addressLine1: personalInfo?.data?.temporaryAddress?.addressLine1,\n          addressLine2: personalInfo?.data?.temporaryAddress?.addressLine2,\n          addressLine3: personalInfo?.data?.temporaryAddress?.addressLine3,\n        },\n        permanentAddress: {\n          city: permanentCity,\n          state: permanentState,\n          pinCode: personalInfo?.data?.permanentAddress?.pinCode,\n          country: permanentCountry,\n          addressLine1: personalInfo?.data?.permanentAddress?.addressLine1,\n          addressLine2: personalInfo?.data?.permanentAddress?.addressLine2,\n          addressLine3: personalInfo?.data?.permanentAddress?.addressLine3,\n        },\n      },\n    };\n  \n    function isEmpty(obj: any): boolean {\n      if (obj == null) return true;\n      return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n  \n    useEffect(() => {\n      const tempAddress = initialValues.personalDetails.temporaryAddress;\n      const permAddress = initialValues.personalDetails.permanentAddress;\n      if (isEmpty(personalInfo?.data?.permanentAddress)) {\n        setPermanent(\"\");\n      } else if (\n        tempAddress.city === permAddress.city &&\n        tempAddress.state === permAddress.state &&\n        tempAddress.pinCode === permAddress.pinCode &&\n        tempAddress.country === permAddress.country &&\n        tempAddress.addressLine1 === permAddress.addressLine1 &&\n        tempAddress.addressLine2 === permAddress.addressLine2 &&\n        tempAddress.addressLine3 === permAddress.addressLine3\n      ) {\n        setPermanent(\"yes\");\n      } else {\n        setPermanent(\"no\");\n      }\n      // eslint-disable-next-line\n    }, []);\n  \n    const submit = async (values: any) => {\n      try {\n        setLoader(true);\n        if (permanent === \"yes\") {\n          values.personalDetails.permanentAddress = {\n            ...values.personalDetails.temporaryAddress,\n          };\n        }\n        const response = await editProfile({\n          personalDetails: {\n          ...personalInfo.data,\n          temporaryAddress:\n          values?.personalDetails.temporaryAddress,\n        permanentAddress:\n          values?.personalDetails.permanentAddress,\n        }\n        });\n        if (response.data.success) {\n          dispatch(\n            setPersonalInfo({\n              ...personalInfo.data,\n              temporaryAddress:\n              response.data?.data?.personalDetails.temporaryAddress,\n            permanentAddress:\n              response.data?.data?.personalDetails.permanentAddress,\n            })\n          );\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Address added successfully\",\n                  dimensions: {\n                    width: \"30%\",\n                    height: \"40%\",\n                    show: \"none\"\n  \n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n          setLoader(false);\n        } else {\n          setLoader(false);\n        }\n      } catch (error) { }\n      \n    };\n    const editHandler=()=>{\n      setFormEdit(true)\n    }\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [formEdit,setFormEdit]=useState(false)\n    const [permFormEdit, setPermFormEdit] = useState(false);\n\n    const handleTempEdit = () => {\n      setFormEdit(true);\n    };\n    const handlePermEdit = () => {\n      setPermFormEdit(true);\n    };\n    const handleCancelTemp = () => {\n      setFormEdit(false);\n    };\n    const handleCancelPerm = () => {\n      setPermFormEdit(false);\n    };\n  \n    const filteredCities = useMemo(\n      () =>\n        cities.filter((city) =>\n          city.name.toLowerCase().includes(searchQuery.toLowerCase())\n        ),\n      [cities, searchQuery]\n    );\n    const permfilteredCities = useMemo(\n      () =>\n        permanentcities.filter((city) =>\n          city.name.toLowerCase().includes(searchQuery.toLowerCase())\n        ),\n      [permanentcities, searchQuery]\n    );\n  \n  \n    return (   \n      <>\n        {permFormEdit ? (\n          // Only show permanent address edit form\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            enableReinitialize={true}\n            onSubmit={(values: any) => submit(values)}\n          >\n            {({ touched, errors, values, handleChange, setFieldValue }) => {\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\"  }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permAddressLine1\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Address Line 1\n                      </InputLabel>\n                      <CustomField\n                        id=\"permAddressLine1\"\n                        type=\"text\"\n                        placeholder=\"Address Line 1\"\n                        name=\"personalDetails.permanentAddress.addressLine1\"\n                        value={values.personalDetails.permanentAddress.addressLine1}\n                        onChange={(e:any) => setFieldValue(\"personalDetails.permanentAddress.addressLine1\", e.target.value)}\n                        fullWidth\n                        error={Boolean((touched.personalDetails as any)?.permanentAddress?.addressLine1 && (errors.personalDetails as any)?.permanentAddress?.addressLine1)}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.addressLine1\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permAddressLine2\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Address Line 2\n                      </InputLabel>\n                      <CustomField\n                        id=\"permAddressLine2\"\n                        type=\"text\"\n                        placeholder=\"Address Line 2\"\n                        name=\"personalDetails.permanentAddress.addressLine2\"\n                        value={values.personalDetails.permanentAddress.addressLine2}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permAddressLine3\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Address Line 3\n                      </InputLabel>\n                      <CustomField\n                        id=\"permAddressLine3\"\n                        type=\"text\"\n                        placeholder=\"Address Line 3\"\n                        name=\"personalDetails.permanentAddress.addressLine3\"\n                        value={values.personalDetails.permanentAddress.addressLine3}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permCountry\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"personalDetails.permanentAddress.country\"\n                        options={countries.map(country => country.name)}\n                        value={permanentCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"permanentCountry\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.country\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permState\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"personalDetails.permanentAddress.state\"\n                        options={permanentstates.map(state => state.name)}\n                        value={permanentState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"permanentState\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.state\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permCity\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"permCity\"\n                          name=\"personalDetails.permanentAddress.city\"\n                          value={permanentCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setpermanentCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")}\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n                          <MenuItem value=\"\" disabled>\n                            Select City\n                          </MenuItem>\n                          {permfilteredCities.length > 0 ? (\n                            permfilteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem disabled>No cities available</MenuItem>\n                          )}\n                          {!permanentcities.some((city) => city.name === permanentCity) &&\n                            permanentCity !== undefined && permanentCity !== \"\" && (\n                              <MenuItem key={permanentCity} value={permanentCity}>\n                                {permanentCity}\n                              </MenuItem>\n                            )}\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            onClick={() => {\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"personalDetails.permanentAddress.city\",\n                                        fieldName: permanentCity,\n                                        setFieldName: setpermanentCity,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.city\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permPinCode\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Zipcode\n                      </InputLabel>\n                      <CustomField\n                        id=\"permPinCode\"\n                        type=\"number\"\n                        placeholder=\"Pincode\"\n                        name=\"personalDetails.permanentAddress.pinCode\"\n                        value={values.personalDetails.permanentAddress.pinCode}\n                        onChange={handleChange}\n                        fullWidth\n                        error={Boolean((touched.personalDetails as any)?.permanentAddress?.pinCode && (errors.personalDetails as any)?.permanentAddress?.pinCode)}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.pinCode\" component=\"div\" />\n                      </div>\n                    </Grid>\n                  </Grid>\n                  <Box\n                    sx={{ display: \"flex\", justifyContent: \"end\", pb:2, mr: 10, gap: 2 }}\n                  >\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancelPerm}>Cancel</Button>\n                    <CustomButton\n                      width=\"100px\"\n                      handleSubmit={() => submit}\n                    >\n                      {loader ? (\n                        <img\n                          src={Images.standardLoader}\n                          alt=\"load\"\n                          style={{ width: \"1rem\",height:\"1rem\",padding:\"6px\" }}\n                        />\n                      ) : (\n                        \"Save\"\n                      )}\n                    </CustomButton>\n                  </Box>\n                </Form>\n              );\n            }}\n          </Formik>\n        ) : (\n          <>\n            {/* Temporary address edit or view */}\n            {formEdit ? (\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                enableReinitialize={true}\n                onSubmit={(values: any) => submit(values)}\n              >\n                {({ touched, errors, values, handleChange, setFieldValue }) => {\n                  return (\n                    <Form style={{}}>\n                      <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\"  }}>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Address Line 1\n                          </InputLabel>\n                          <CustomField\n                            id=\"addressLine1\"\n                            type=\"text\"\n                            placeholder=\"Address Line 1\"\n                            name=\"personalDetails.temporaryAddress.addressLine1\"\n                            value={values.personalDetails.temporaryAddress.addressLine1}\n                            onChange={(e:any) =>\n                              setFieldValue(\"personalDetails.temporaryAddress.addressLine1\", e.target.value)\n                            }\n                            fullWidth\n                            error={Boolean((touched.personalDetails as any)?.temporaryAddress?.addressLine1 && (errors.personalDetails as any)?.temporaryAddress?.addressLine1)}\n                          />\n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.addressLine1\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Address Line 2\n                          </InputLabel>\n                          <CustomField\n                            id=\"addressLine2\"\n                            type=\"text\"\n                            placeholder=\"Address Line 2\"\n                            name=\"personalDetails.temporaryAddress.addressLine2\"\n                            value={values.personalDetails.temporaryAddress.addressLine2}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Address Line 3\n                          </InputLabel>\n                          <CustomField\n                            id=\"addressLine3\"\n                            type=\"text\"\n                            placeholder=\"Address Line 3\"\n                            name=\"personalDetails.temporaryAddress.addressLine3\"\n                            value={values.personalDetails.temporaryAddress.addressLine3}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Country\n                          </InputLabel>\n                          <ReusableDropdown\n                            label=\"Country\"\n                            name=\"personalDetails.temporaryAddress.country\"\n                            options={countries.map(country => country.name)}\n                            value={selectedCountry}\n                            onChange={(e: any) => eventHandler({\n                              name: \"temporaryCountry\",\n                              data: e?.target.value,\n                            })}\n                            placeholder=\"Select\"\n                            searchEnabled={true}\n                          />\n  \n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.country\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            State/Province\n                          </InputLabel>\n                          <ReusableDropdown\n                            label=\"State\"\n                            name=\"personalDetails.temporaryAddress.state\"\n                            options={states.map(state => state.name)}\n                            value={selectedState}\n                            onChange={(e: any) => eventHandler({\n                              name: \"temporaryState\",\n                              data: e?.target.value,\n                            })}\n                            placeholder=\"Select\"\n                            searchEnabled={true}\n                          />\n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.state\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            City/Town\n                          </InputLabel>\n                          <FormControl fullWidth>\n                            <Select\n                              id=\"city\"\n                              name=\"personalDetails.temporaryAddress.city\"\n                              value={selectedCity}\n                              displayEmpty\n                              size=\"small\"\n                              defaultValue=\"\"\n                              onChange={(e) => setSelectedCity(e.target.value)}\n                              fullWidth\n                              IconComponent={ExpandMoreIcon}\n                              onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                              MenuProps={{\n                                PaperProps: {\n                                  sx: {\n                                    maxHeight: 300,\n                                    \"&.MuiPaper-root\": {\n                                      boxShadow: 3,\n                                      borderRadius: \"15px !important\",\n                                    },\n                                  },\n                                },\n                              }}\n                            >\n                              <ListSubheader>\n                                <TextField\n                                  size=\"small\"\n                                  autoFocus\n                                  placeholder=\"Search City...\"\n                                  fullWidth\n                                  value={searchQuery}\n                                  onChange={(e) => setSearchQuery(e.target.value)}\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  onKeyDown={(e) => {\n                                    if (e.key !== \"Escape\") {\n                                      e.stopPropagation();\n                                    }\n                                  }}\n                                />\n                              </ListSubheader>\n  \n                              <MenuItem value=\"\" disabled>\n                                Select City\n                              </MenuItem>\n  \n                              {filteredCities.length > 0 ? (\n                                filteredCities.map((city: any) => (\n                                  <MenuItem key={city.name} value={city.name}>\n                                    {city.name}\n                                  </MenuItem>\n                                ))\n                              ) : (\n                                <MenuItem disabled>No cities available</MenuItem>\n                              )}\n  \n                              {!cities.some((city) => city.name === selectedCity) &&\n                                selectedCity !== undefined && selectedCity !== \"\" && (\n                                  <MenuItem key={selectedCity} value={selectedCity}>\n                                    {selectedCity}\n                                  </MenuItem>\n                                )}\n  \n                              <MenuItem\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                  color: \"#1cbeb5 !important\",\n                                }}\n                                onClick={() => {\n                                  dispatch(\n                                    setPopup({\n                                      show: true,\n                                      data: {\n                                        container: {\n                                          name: \"customfield\",\n                                          data: {\n                                            name: \"personalDetails.temporaryAddress.city\",\n                                            fieldName: selectedCity,\n                                            setFieldName: setSelectedCity,\n                                            placeholder: \"Enter your city\",\n                                          },\n                                          dimensions: {\n                                            width: \"450px\",\n                                          },\n                                        },\n                                        type: \"custom\",\n                                      },\n                                    })\n                                  );\n                                }}\n                              >\n                                Can't find city\n                              </MenuItem>\n                            </Select>\n                          </FormControl>\n  \n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.city\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Zipcode\n                          </InputLabel>\n                          <CustomField\n                            id=\"pinCode\"\n                            type=\"number\"\n                            placeholder=\"Pincode\"\n                            name=\"personalDetails.temporaryAddress.pinCode\"\n                            value={values.personalDetails.temporaryAddress.pinCode}\n                            onChange={handleChange}\n                            fullWidth\n                            error={Boolean((touched.personalDetails as any)?.temporaryAddress?.pinCode && (errors.personalDetails as any)?.temporaryAddress?.pinCode)}\n  \n                          />\n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.pinCode\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}></Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel id=\"\" sx={{ color: \"#495052\" }}>\n                            Is your Home address same as Contact address?\n                          </InputLabel>\n                          <FormControl>\n                            <RadioGroup\n                              row\n                              aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                              name=\"row-radio-buttons-group\"\n                              value={permanent}\n                              onChange={(e: any) => setPermanent(e.target.value)}\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={\n                                  <Radio\n                                    size=\"small\"\n                                    sx={{\n                                      \"&.MuiRadio-root.Mui-checked\": {\n                                        color: \"#3B3F76 !important\",\n                                      },\n                                    }}\n                                  />\n                                }\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={\n                                  <Radio\n                                    size=\"small\"\n                                    sx={{\n                                      \"&.MuiRadio-root.Mui-checked\": {\n                                        color: \"#3B3F76 !important\",\n                                      },\n                                    }}\n                                  />\n                                }\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}></Grid>\n                        {permanent === \"no\" ? (\n                          <>\n                            <Grid item xs={12} sm={6}>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 1</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine1 || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Address Line 2</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine2 || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.country || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>State/Province</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.state || 'NA'}</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 3</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine3 || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>City/Town</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.city || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Zipcode</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.pinCode || 'NA'}</Typography>\n                            </Grid>\n                          </>\n                        ) : null}\n                        \n                      </Grid>\n                      <Box\n                          sx={{ display: \"flex\", justifyContent: \"end\", pb:2, mr: 10, gap: 2 }}\n                        >\n                          <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancelTemp}>Cancel</Button>\n                          <CustomButton\n                            width=\"100px\"\n                            handleSubmit={() => submit}\n                          >\n                            {loader ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"6px\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n                          </CustomButton>\n                        </Box>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            ) : (\n              <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, color:\"#495052\" }}>\n                      Address Details\n                       </Typography>\n                    <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={handleTempEdit}>\n                                 Edit\n                               </Button>\n                     </Grid>\n                     <Grid item xs={12} sm={6}>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>Address Line 1</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.addressLine1 || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Address Line 2</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.addressLine2 || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>State/Province</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n                     </Grid>\n                     <Grid item xs={12} sm={6}>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>Address Line 3</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.addressLine3 || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>City/Town</Typography>\n                    <Typography>{selectedCity || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Zipcode</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.pinCode || 'NA'}</Typography>\n                     </Grid>\n                     {/* Show permanent address if not same as contact address */}\n                     {permanent === 'no' && !permFormEdit && (\n                       <>\n                         <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 4 }}>\n                           <Typography variant=\"h6\" sx={{ fontWeight: 600, color:\"#495052\" }}>\n                             Permanent Address\n                           </Typography>\n                           <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={handlePermEdit}>\n                             Edit\n                           </Button>\n                         </Grid>\n                         <Grid item xs={12} sm={6}>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 1</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine1 || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Address Line 2</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine2 || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.country || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>State/Province</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.state || 'NA'}</Typography>\n                         </Grid>\n                         <Grid item xs={12} sm={6}>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 3</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine3 || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>City/Town</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.city || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Zipcode</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.pinCode || 'NA'}</Typography>\n                         </Grid>\n                       </>\n                     )}\n                     </Grid>\n              </Box>\n            )}\n          </>\n        )}\n      </>\n    );\n  };\n  \n  export default Address;\n  ","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport PersonalDetails from \"./personalDetails\";\nimport Address from \"./address\";\nimport { useProfileData } from \"src/genericComponents/modalPopup/useProfileData\";\n\nconst Profile = () => {\n  // State to track which accordion is open\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n  \n\n  // Function to handle accordion toggling\n  const handleToggle = (index: number) => {\n    setOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n  };\n\n  const profile = [\n    {\n      title: \"My Details\",\n      component: <PersonalDetails />,\n    },\n    {\n      title: \"Address\",\n      component: <Address />,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        height: \"75vh\",\n        overflowY: \"scroll\",\n        px: 3,\n      }}\n    >\n      {profile.map((item, index) => (\n        <Accordion\n          key={index}\n          title={item.title}\n          isOpen={openIndex === index} // Pass state-controlled open status\n          onToggle={() => handleToggle(index)} // Toggle function\n        >\n          {item.component}\n        </Accordion>\n      ))}\n    </Box>\n  );\n};\n\nexport default Profile;\n","import { Box} from \"@mui/material\";\nimport Education from \"../education\";\nimport TestScoreForm from \"../testScores/testScores\";\nimport ExtraCurricular from \"./extraCurricular\";\nimport Family from \"./family\";\nimport { Preferences } from \"./preferences\";\nimport WorkExperience from \"./workExperience\";\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\nimport PermIdentityOutlinedIcon from '@mui/icons-material/PermIdentityOutlined';\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\nimport CustomTabs from \"../../../../genericComponents/tabs\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport Profile from \"./profile\";\n\n\ninterface ProfileSectionProps {\n  initialTab: number;\n}\nconst  ProfileSection: React.FC<ProfileSectionProps>= ({initialTab}) => {\n  const profile = [\n    {\n      label: \"Personal Information\",\n      image: <PermIdentityOutlinedIcon />,\n      Component: <Profile />,\n    },\n    {\n      label: \"Education\",\n      image: <SchoolOutlinedIcon />,\n      Component: <Education />\n    },\n    {\n      label: \"Test Scores\",\n      image: <AssignmentIcon />,\n      Component: <TestScoreForm />,\n    },\n    {\n      label: \"Work experience\",\n      image: <WorkOutlineOutlinedIcon />,\n      Component: <WorkExperience />,\n    },\n    {\n      label: \"Preferences\",\n      image: <StarBorderOutlinedIcon />,\n      Component: <Preferences />,\n    },\n    {\n      label: \"Family\",\n      image: <Diversity3Icon />,\n      Component: <Family />,\n    },\n    {\n      label: \"Extra Curriculum Activities \",\n      image: <AccessibilityIcon />,\n      Component: <ExtraCurricular />,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n      }}\n    >\n      <Box sx={{ display: { xs: \"block\", lg: \"none\" } }}>\n        {profile?.map((item: any) => (\n          <ExpandCard  title={item.label} imageUrl={item.image} key={item}>\n            {item.Component}\n          </ExpandCard>\n        ))}\n      </Box>\n      <Box sx={{ display: { xs: \"none\", lg: \"block\" } }}>\n        <CustomTabs tabs={profile} initialValue={initialTab}/>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfileSection;\n\n","import React from \"react\";\nimport { Card, Box } from \"@mui/material\";\nimport { customCardProps } from \"../types/types\";\n\nconst CustomCard = React.memo(function CustomCard({\n  children,\n  title,\n  titleIcon,\n  badgeColor = \"#ffff\",\n  badgePosition = \"top-right\",\n  sx = {},\n  badgeStyle,\n  ...rest\n}: customCardProps & {\n  badgeColor?: string;\n  badgePosition?: 'top-left' | 'top-right';\n  sx?: any;\n  titleIcon?: React.ReactNode;\n  badgeStyle?: React.CSSProperties;\n\n}) {\n  // Badge position styles\n  const badgeStyles = badgePosition === 'top-left'\n    ? { top: 18, left: 18, right: 'auto' }\n    : { top: -10, right: 22, left: 'auto' };\n\n  return (\n   <Box sx={{ position: \"relative\", mb: 1, width: \"100%\" }}>\n  <Card\n    sx={{\n      background: '#ffff',\n      // border: '4px solid white',\n      borderRadius: \"20px\",\n      // boxShadow: \"0 4px 24px 0 rgba(60,72,128,0.07)\",\n      boxShadow: 'none',\n      minHeight: 220,\n      position: \"relative\",\n      overflow: \"visible\",\n      p: 0,\n      color: 'inherit',\n      ...sx // ✅ THIS will override background and borderRadius\n    }}\n    {...rest}\n  >\n    {/* Badge */}\n    {title && (\n      <Box\n        sx={{\n          position: \"absolute\",\n          ...badgeStyles,\n          ...(badgeStyle || {}),\n          background: badgeStyle?.backgroundColor || badgeColor,\n          color: \"#495052\",\n          px: 2,\n          py: 0.5,\n          borderRadius: \"12px\",\n          fontSize: \"0.85rem\",\n          fontWeight: 500,\n          zIndex: 2,\n          // boxShadow: \"0 2px 8px 0 rgba(78, 86, 125, 0.1)\",\n        }}\n      >\n        {titleIcon}\n        {title}\n      </Box>\n    )}\n\n    {/* Content */}\n    <Box sx={{ width: '100%', p: 2, color: 'inherit' }}>\n      {children}\n    </Box>\n  </Card>\n</Box>\n\n  );\n});\n\nexport default CustomCard;\n\n","/* eslint-disable */\nimport { Box, Button, Grid, Stack, Tooltip, Typography } from \"@mui/material\";\nimport CustomCard from \"../../../../genericComponents/customCard\";\n// import WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { Application } from \"../../../../types/types\";\nimport Images from \"../../../../assets\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AppliedUniversities = () => {\n  const navigate =useNavigate()\n  const applicationsData = useAppSelector((state) => state.applications);\n  const dispatch = useAppDispatch();\n  function date(date: Date) {\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return month + \" \" + year;\n  }\n  return (\n    <div\n      style={{\n        // maxHeight: \"81vh\",\n        overflowY: \"scroll\",\n        paddingTop:\"1rem\"\n      }}\n    >\n      <Grid container spacing={3}>\n        {applicationsData?.data &&\n        applicationsData?.data?.length > 0 ? (\n          <>\n                     {applicationsData?.data?.map(\n              (item: Application, i: number) => (\n                <Grid item xs={12} sm={6} lg={4} sx={{paddingLeft:{xs:0,md:\"1rem\"}}} key={i}>\n                  <CustomCard title={item.stage} i={i} titleIcon={<TimerIcon sx={{ fontSize: \"1.25rem\",marginRight:\"5px\" }} />} >\n                    <Box\n                      onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"applicationPopup\",\n                                data: item._id,\n                                dimensions: {\n                                  width: \"800px\",\n                                  height:\"85%\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }\n                    >\n                        {item?.cancellationRequest === true ? (\n                          <img\n                            src={Images.cancelledIcon}\n                            alt=\"cancelled\"\n                            style={{\n                              position: \"absolute\",\n                              top: \"-28px\",\n                              right: \"-26px\",\n                            }}\n                          />\n                        ) : (\n                          \"\"\n                        )}\n<Box sx={{display:\"flex\",gap:\"10px\",width:\"100%\"}}>\n                        <img\n                          src={item.course?.university?.logoSrc}\n                          alt=\"logo\"\n                          style={{\n                            width: \"1.5rem\",\n                            height: \"1.5rem\",\n                            marginRight: \"5px\",\n                            borderRadius: \"10px\",\n                          }}\n                        />\n                        <div style={{flex: 1 }}>\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#fff\",\n                                backgroundColor: \"#3B3F76\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\":\n                                  {\n                                    marginTop:\"-5px !important\",\n                                  },\n                              },\n                            },\n                          }}\n                          title={item.course.name}\n                          placement=\"bottom\"\n                        >\n                          <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              fontSize: { xs: \"13px\", lg: \"14px\" },\n                                fontWeight: 500,\n                                textOverflow: \"ellipsis \",\n                                lineClamp: 1,\n                                height: \"1.5rem\",\n                                textTransform: \"capitalize\",\n                                overflow: \"hidden\",\n                                display: \"-webkit-box\",\n                                WebkitLineClamp: \"1\",\n                                WebkitBoxOrient: \"vertical\",\n                            }}\n                          >\n                            {item.course.name}\n                          </Typography>\n                        </Tooltip>\n                        <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              // height: \"1.5rem\",\n                              fontSize: { xs: \"12px\", lg: \"12px\" },\n                              // textOverflow: \"ellipsis \",\n                              // lineClamp: 1,\n                              height: \"1.5rem\",\n                              textTransform: \"capitalize\",\n                              // overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              // WebkitLineClamp: \"1\",\n                              WebkitBoxOrient: \"vertical\",\n                              my: 1,\n                              // alignItems: \"center\",\n                            }}\n                          >\n\n                            {item.course?.university?.name} | &nbsp;\n                            {item.course?.university?.location?.country}\n\n                          </Typography>\n                        </div>\n                      </Box>\n                        <Stack direction=\"row\" justifyContent=\"end\"  spacing={1} sx={{mt:10,mr:6}}>\n                          <Typography\n                            component=\"span\"\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"nowrap\",\n                            }} \n                          >\n                            <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                            &nbsp; Start date :\n                            {item?.intake ? date(new Date(item?.intake)) : null}\n                          </Typography>\n                          {/* <Divider\n                            orientation=\"vertical\"\n                            flexItem\n                            sx={{ borderWidth: \"2px\" }}\n                          />\n                          <Typography\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Tooltip\n                              slotProps={{\n                                tooltip: {\n                                  sx: {\n                                    color: \"#fff\",\n                                    backgroundColor: \"#3B3F76\",\n                                    boxShadow: 2,\n                                  },\n                                },\n                              }}\n                              title=\"Status\"\n                              placement=\"bottom\"\n                            >\n                              <WatchLaterIcon\n                                sx={{  fontSize: \"1.25rem\" }}\n                              />\n                            </Tooltip>\n                            &nbsp;{item.status}\n                          </Typography> */}\n                        </Stack>\n                        {/* <p style={{\n        position: 'absolute',\n        left: '10px',\n        bottom: '10%', background: \"#B7B7E7\", width: \"1.1rem\", height: \"1.1rem\", margin: 0, borderBottomLeftRadius: \"20px\", transform: \"rotate(45deg\"\n      }}></p> */}\n                      </Box>\n                  </CustomCard>\n                </Grid>\n              )\n            )}\n          </>\n        )  : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n            }}\n          >\n            <img\n              src={Images.Dull}\n              alt=\"noData\"\n              style={{ width: \"230px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n            />\n            <Typography\n              sx={{\n                mb: 1,\n                fontSize: \"1.6rem\",\n                fontWeight: 600,\n                color: \"#495052\",\n                textAlign: \"center\",\n              }}\n            >\n             No Products Added Yet\n            </Typography>\n            <Typography\n              sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n              }}\n            >\n             You haven't saved any courses yet-start exploring and <br/> discover your next opportunity!\n            </Typography>\n            <Button\n              sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                \"&:hover\": {\n                  background: \"#F48438\",\n                },\n              }}\n              onClick={() => {\n                const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                  1\n                )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              Add products\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default AppliedUniversities;\n","export interface CourseOption {\n  label: string;\n  value: string;\n}\n\nexport const courseList: CourseOption[] = [\n  { label: \"Agribusiness\", value: \"Agribusiness\" },\n  { label: \"Agricultural Science\", value: \"Agricultural Science\" },\n  { label: \"Agronomy\", value: \"Agronomy\" },\n  { label: \"Fisheries\", value: \"Fisheries\" },\n  { label: \"Forestry\", value: \"Forestry\" },\n  { label: \"Horticulture\", value: \"Horticulture\" },\n  { label: \"Mariculture\", value: \"Mariculture\" },\n  { label: \"Poultry, Dairy\", value: \"Poultry, Dairy\" },\n  { label: \"Architecture\", value: \"Architecture\" },\n  { label: \"Construction\", value: \"Construction\" },\n  { label: \"Construction Management\", value: \"Construction Management\" },\n  { label: \"Heating\", value: \"Heating\" },\n  { label: \"Interior Design\", value: \"Interior Design\" },\n  { label: \"Surveying\", value: \"Surveying\" },\n  { label: \"Urban Planning\", value: \"Urban Planning\" },\n  { label: \"Ventilation\", value: \"Ventilation\" },\n  { label: \"Animation\", value: \"Animation\" },\n  { label: \"Applied Arts - Printing, Studio Art\", value: \"Applied Arts - Printing, Studio Art\" },\n  { label: \"Arts\", value: \"Arts\" },\n  { label: \"Bakery and Pastry Arts\", value: \"Bakery and Pastry Arts\" },\n  { label: \"Car Interior Design\", value: \"Car Interior Design\" },\n  { label: \"Carpentry, Woodworking, Blacksmithing, Goldsmithing, Silversmithing, Ceramics\", value: \"Carpentry, Woodworking, Blacksmithing, Goldsmithing, Silversmithing, Ceramics\" },\n  { label: \"Creative Writing\", value: \"Creative Writing\" },\n  { label: \"Dance\", value: \"Dance\" },\n  { label: \"Design - Fashion, Textile, Graphics, Product\", value: \"Design - Fashion, Textile, Graphics, Product\" },\n  { label: \"English\", value: \"English\" },\n  { label: \"Exhibition/Event\", value: \"Exhibition/Event\" },\n  { label: \"Film, Cinematography, Interactive Media, Multimedia\", value: \"Film, Cinematography, Interactive Media, Multimedia\" },\n  { label: \"Fine Arts-Drawing, Painting, Sculpture\", value: \"Fine Arts-Drawing, Painting, Sculpture\" },\n  { label: \"General Studies\", value: \"General Studies\" },\n  { label: \"Interdisciplinary Studies\", value: \"Interdisciplinary Studies\" },\n  { label: \"Liberal Arts and Studies\", value: \"Liberal Arts and Studies\" },\n  { label: \"Library\", value: \"Library\" },\n  { label: \"Music\", value: \"Music\" },\n  { label: \"Photography\", value: \"Photography\" },\n  { label: \"Publishing\", value: \"Publishing\" },\n  { label: \"Theatre,Drama\", value: \"Theatre,Drama\" },\n  { label: \"Visual Arts\", value: \"Visual Arts\" },\n  { label: \"Banking, Insurance, Risk Management, Taxation\", value: \"Banking, Insurance, Risk Management, Taxation\" },\n  { label: \"Business Analytics, Management Consulting\", value: \"Business Analytics, Management Consulting\" },\n  { label: \"Business Management, Business Administration, Entrepreneurship, Innovation, Operations, Project Management, Event Management, Organizational Management, Health Management\", value: \"Business Management, Business Administration, Entrepreneurship, Innovation, Operations, Project Management, Event Management, Organizational Management, Health Management\" },\n  { label: \"Commerce\", value: \"Commerce\" },\n  { label: \"Conflict Analysis and Management\", value: \"Conflict Analysis and Management\" },\n  { label: \"Finance, Accounts, Commerce, Economics\", value: \"Finance, Accounts, Commerce, Economics\" },\n  { label: \"Financial Management, International Management, Marketing Management, Technical Management\", value: \"Financial Management, International Management, Marketing Management, Technical Management\" },\n  { label: \"Hospitality and Tourism Management\", value: \"Hospitality and Tourism Management\" },\n  { label: \"Human Resource Management, Human Resource Development\", value: \"Human Resource Management, Human Resource Development\" },\n  { label: \"Information Systems, Information Technology Management\", value: \"Information Systems, Information Technology Management\" },\n  { label: \"International Business\", value: \"International Business\" },\n  { label: \"Logistics, Supply Chain Management\", value: \"Logistics, Supply Chain Management\" },\n  { label: \"Office Administration\", value: \"Office Administration\" },\n  { label: \"Real Estate, Property Administeration\", value: \"Real Estate, Property Administeration\" },\n  { label: \"Sales, Marketing, Public Relations, Public Services, E-business, Digital Business, Digital Marketing\", value: \"Sales, Marketing, Public Relations, Public Services, E-business, Digital Business, Digital Marketing\" },\n  { label: \"Artificial Intelligence\", value: \"Artificial Intelligence\" },\n  { label: \"Business Analysis, IT Business Analytics\", value: \"Business Analysis, IT Business Analytics\" },\n  { label: \"Computer Information Systems\", value: \"Computer Information Systems\" },\n  { label: \"Computer Science, Software Development\", value: \"Computer Science, Software Development\" },\n  { label: \"Computer Technology\", value: \"Computer Technology\" },\n  { label: \"Computer/ Game Programming\", value: \"Computer/ Game Programming\" },\n  { label: \"Computing\", value: \"Computing\" },\n  { label: \"Customer Intelligence and Analytics\", value: \"Customer Intelligence and Analytics\" },\n  { label: \"Cyber Security, Information Security\", value: \"Cyber Security, Information Security\" },\n  { label: \"Cytotechnology\", value: \"Cytotechnology\" },\n  { label: \"Data Science and Analytics\", value: \"Data Science and Analytics\" },\n  { label: \"Game Design\", value: \"Game Design\" },\n  { label: \"Information Technology\", value: \"Information Technology\" },\n  { label: \"Mobile Application\", value: \"Mobile Application\" },\n  { label: \"Mobile Communication\", value: \"Mobile Communication\" },\n  { label: \"Multimedia\", value: \"Multimedia\" },\n  { label: \"Networking\", value: \"Networking\" },\n  { label: \"Programmer\", value: \"Programmer\" },\n  { label: \"Software Testing\", value: \"Software Testing\" },\n  { label: \"Web Design, Web Applications\", value: \"Web Design, Web Applications\" }\n]; ","import {\n    Box,\n    Button,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    IconButton,\n    Autocomplete,\n    Chip\n  } from \"@mui/material\";\n  import CloseIcon from \"@mui/icons-material/Close\";\n  import React, { useEffect, useState } from \"react\";\n  import { useNavigate } from \"react-router-dom\";\n  import { useAppDispatch, useAppSelector } from \"src/assets/hooks\";\nimport { academicTests, gradeScaleOptions, languageTests } from \"src/assets/constants/misc\";\nimport { editProfile, getRecommendations } from \"src/services\";\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nimport { countryList } from \"src/assets/menu\";\nimport { setRecommendEditData } from 'src/store/Slices/recommendEditSlice';\nimport { courseList } from \"src/assets/constants/courseList\";\nimport { Test } from \"src/types/types\";\nimport { setRecommended } from \"src/store/Slices/recommendations\";\n\n  \n  interface Criterion {\n    label: string;\n    data: {\n      value: any;\n      editLink?: string;\n    };\n  }\n  \n  interface RecommendationEditModalProps {\n    open: boolean;\n    onClose: () => void;\n    data: any[];\n    onSubmit?: (updatedData: Record<string, string>) => void;\n    //courseList: string[]; \n  }\n\n  \n  const testOptions = [\n    { label: \"IELTS\", value: \"IELTS\" },\n    { label: \"TOEFL\", value: \"TOEFL\" },\n    { label: \"Duolingo\", value: \"Duolingo\" },\n    { label: \"PTE\", value: \"PTE\" },\n  ];\n  \n  const testOptions1 = [\n    { label: \"GRE\", value: \"GRE\" },\n    { label: \"GMAT\", value: \"GMAT\" },\n    { label: \"SAT\", value: \"SAT\" },\n    { label: \"ACT\", value: \"ACT\" },\n  ];\n  \n  const outOff=[\n    {label:'Percentage out of 100',value:100},\n    {label:'CGPA out of 10',value:10},\n    {label:\"CGPA out of 7\",value:7},\n    {label:\"CGPA out of 5\",value:5},\n    {label:\"CGPA out of 4\",value:4}\n  ]\n  \n  const RecommendationEditModal = ({\n    open,\n    onClose,\n    data,\n    onSubmit,\n  }: RecommendationEditModalProps) => {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const recommendations = useAppSelector((state) => state.recommendations);\n    const recommendEditData = useAppSelector((state) => state.recommendEdit);\n    const criteria: Criterion[] = recommendations?.data?.criteria || [];\n    const profile = useAppSelector((state) => state.profile);\n    const [formData, setFormData] = useState<Record<string, any>>({});\n    \n\n   useEffect(() => {\n    if (criteria.length) {\n      const gpaData = criteria.find((item) => item.label === \"GPA\")?.data.value;\n      const [score, maxScore] = gpaData ? gpaData.split(\"/\").map((s: string) => s.trim()) : ['', ''];\n      let temp = {\n        studyLevel: criteria.find((item) => item.label === \"StudyLevel\")?.data.value || 'Bachelors',\n        bachelorsScore: score,\n        gradeScale: gradeScaleOptions.find((item) => item.maxScore.toString() === maxScore)?.label || '',\n        backlogs: criteria.find((item) => item.label === \"Backlogs\")?.data.value || '',\n        englishTestType: languageTests.find((item) => criteria.find((item2) => item2.label === item.fullForm))?.shortForm || '',\n        englishTestScore: criteria.find((item) => languageTests.find((item2) => item2.fullForm === item.label))?.data.value || '',\n        academicTestType: academicTests.find((item) => criteria.find((item2) => item2.label === item.fullForm))?.shortForm || '',\n        academicTestScore: criteria.find((item) => academicTests.find((item2) => item2.fullForm === item.label))?.data.value || '',\n        country: criteria.find((item) => item.label === \"Country\")?.data.value || [],\n        subCategory: criteria.find((item) => item.label === \"SubCategory\")?.data.value?.map((item: string) => ({ label: item, value: item })) || []\n      };\n      setFormData(temp);\n      // Store in Redux\n      dispatch(setRecommendEditData(temp));\n    }\n  }, [criteria, dispatch]);\n\n  \n    const handleChange = (field: string, value: any) => {\n      const newData = {\n        ...formData,\n        [field]: value,\n      };\n      setFormData(newData);\n      // Update Redux store with the entire form data to maintain consistency\n      dispatch(setRecommendEditData(newData));\n    };\n\n    const validateScores = () => {\n      let error = '';\n      // Academic Test Validation\n      const selectedTest = testOptions1.find(opt => opt.label === formData[\"academicTestType\"]);\n      const academicScore = Number(formData[\"academicTestScore\"]);\n      if (selectedTest?.label === \"GRE\") {\n        if (academicScore < 260 || academicScore > 340 || academicScore % 1 !== 0) {\n          error = \"GRE score must be between 260 and 340 \";\n        }\n      } else if (selectedTest?.label === \"GMAT\") {\n        if (academicScore < 200 || academicScore > 800 || academicScore % 5 !== 0) {\n          error = \"GMAT score must be between 200 and 800\";\n        }\n      } else if (selectedTest?.label === \"SAT\") {\n        if (academicScore < 200 || academicScore > 1600 || academicScore % 1 !== 0) {\n          error = \"SAT score must be between 200 and 1600\";\n        }\n      } else if (selectedTest?.label === \"ACT\") {\n        if (academicScore < 1 || academicScore > 36 || academicScore % 1 !== 0) {\n          error = \"ACT score must be between 1 and 36 \";\n        }\n      }\n      // English Test Validation\n      const selectedEngTest = testOptions.find(opt => opt.label === formData[\"englishTestType\"]);\n      const englishScore = Number(formData[\"englishTestScore\"]);\n      if (selectedEngTest?.label === \"IELTS\") {\n        const isHalfStep = Math.abs(englishScore * 10) % 5 === 0;\n        if (englishScore < 0 || englishScore > 9 || !isHalfStep) {\n          error = \"IELTS score must be between 0 and 9 \";\n        }\n      } else if (selectedEngTest?.label === \"TOEFL\") {\n        if (englishScore < 0 || englishScore > 120 || englishScore % 1 !== 0) {\n          error = \"TOEFL score must be between 0 and 120\";\n        }\n      } else if (selectedEngTest?.label === \"Duolingo\") {\n        if (englishScore < 0 || englishScore > 160 || englishScore % 1 !== 0) {\n          error = \"Duolingo score must be between 0 and 160\";\n        }\n      } else if (selectedEngTest?.label === \"PTE\") {\n        if (englishScore < 0 || englishScore > 90 || englishScore % 1 !== 0) {\n          error = \"PTE score must be between 0 and 90\";\n        }\n      }\n      // Grade Scale Validation\n      const gradeScale = formData[\"gradeScale\"];\n      const bachelorsScore = Number(formData[\"bachelorsScore\"]);\n      if (gradeScale === \"Percentage out of 100\") {\n        if (bachelorsScore < 0 || bachelorsScore > 100) {\n          error = \"Percentage must be between 0 and 100\";\n        }\n      } else if (gradeScale === \"CGPA out of 10\") {\n        if (bachelorsScore < 0 || bachelorsScore > 10) {\n          error = \"CGPA out of 10 must be between 0 and 10\";\n        }\n      } else if (gradeScale === \"CGPA out of 7\") {\n        if (bachelorsScore < 0 || bachelorsScore > 7) {\n          error = \"CGPA out of 7 must be between 0 and 7\";\n        }\n      } else if (gradeScale === \"CGPA out of 5\") {\n        if (bachelorsScore < 0 || bachelorsScore > 5) {\n          error = \"CGPA out of 5 must be between 0 and 5\";\n        }\n      } else if (gradeScale === \"CGPA out of 4\") {\n        if (bachelorsScore < 0 || bachelorsScore > 4) {\n          error = \"CGPA out of 4 must be between 0 and 4\";\n        }\n      }\n      return error;\n    };\n\n    const submit=async ()=>{\n      const validationError = validateScores();\n      if (validationError) {\n        dispatch(setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"error\",\n              data: validationError,\n              dimensions: { width: \"30%\", height: \"40%\", show: \"none\" },\n            },\n            type: \"custom\",\n          },\n        }));\n        return;\n      }\n      if(profile.data)\n      {\n        let profileTests=[...profile.data?.tests??[]];\n      let newTests=[\n        {\n          name:languageTests.find((item)=>item.shortForm===formData[\"englishTestType\"])?.fullForm,\n          type:\"language\",\n          scores:[\n            {\n              description:\"Total\",\n              count:formData[\"englishTestScore\"]\n            }\n          ]\n        },\n        {\n          name:academicTests.find((item)=>item.shortForm===formData[\"academicTestType\"])?.fullForm,\n          type:'academic',\n          scores:[\n            {\n              description:\"Total\",\n              count:formData[\"academicTestScore\"]\n            }\n          ]\n        }\n      ]\n      newTests.forEach((tst)=>{\n        let current=profileTests.findIndex((item)=>item.name===tst.name)\n        if(current!==-1)\n        {\n          \n          profileTests[current]={...profileTests[current],scores:[...profileTests[current].scores.filter((item)=>item.description!==\"Total\"),...tst.scores]};\n        }\n        else{\n          let clearedProfile=profileTests.filter((item)=>(tst.type===\"language\"?languageTests:academicTests).find((item2)=>item2.fullForm===item.name)!==undefined?false:true);\n          clearedProfile.push({\n            name:tst.name ?? \"\",\n            scores:tst.scores\n          } as any);\n          profileTests=clearedProfile;\n        }\n      })\n        const temp={\n          tests:profileTests,\n          education:{...profile.data.education,\n            underGraduation:{...profile.data.education.underGraduation,\n              totalScore:parseInt(formData[\"bachelorsScore\"]),\n              backlogs:parseInt(formData[\"backlogs\"]),\n              maxScore:gradeScaleOptions.find((item)=>item.label===formData[\"gradeScale\"])?.maxScore,\n              gradingSystem:gradeScaleOptions.find((item)=>item.label===formData[\"gradeScale\"])?.value\n            }},\n          preference:{...profile.data.preference,\n            subCategory:formData[\"subCategory\"].map((item:{label:string,value:string})=>item.value),\n            country:formData[\"country\"]\n          }\n        };\n        // setLoader(true)\n        const response = await editProfile(temp);\n        if (response) {\n          \n          // Regenerate recommendations with updated criteria\n          try {\n            // Send the updated profile data to get fresh recommendations\n            const recommendationsResponse = await getRecommendations(temp);\n            \n            if (recommendationsResponse && recommendationsResponse.data) {\n              dispatch(setRecommended(recommendationsResponse.data));\n              \n              // Close the modal first\n              onClose();\n              \n              // Show success message\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"success\",\n                      data: \"Criteria Updated Successfully! Recommendations have been regenerated with your new preferences.\",\n                      dimensions: {\n                        width: \"35%\",\n                        height: \"40%\",\n                        show: \"none\"\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            } else {\n              console.error(\"No recommendations data received\");\n              throw new Error(\"No recommendations data received\");\n            }\n          } catch (error) {\n            console.error(\"Failed to regenerate recommendations:\", error);\n            \n            // Close the modal first\n            onClose();\n            \n            // Show error message\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: \"Profile updated successfully, but failed to regenerate recommendations. Please try again later.\",\n                    dimensions: {\n                      width: \"35%\",\n                      height: \"40%\",\n                      show: \"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } else {\n          console.error(\"Failed to update profile\");\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"error\",\n                  data: \"Failed to update profile. Please try again.\",\n                  dimensions: {\n                    width: \"35%\",\n                    height: \"40%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        //setLoader(false)\n      }\n    }\n\n  \n    return (\n      <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle sx={{ \n          fontWeight: 600, \n          fontSize: \"1.2rem\", \n          pr: 4,\n          borderBottom: \"1px solid #eee\",\n          pb: 2\n        }}>\n          Your recommendations are based on:\n          <IconButton\n            onClick={onClose}\n            sx={{ position: \"absolute\", top: 12, right: 12 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n  \n        <DialogContent sx={{ mt: 2 }}>\n          <Box display=\"flex\" flexDirection=\"column\" gap={3}>\n            {/* Bachelors Score Section */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                {formData[\"studyLevel\"] || 'Bachelors'}\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <TextField\n                  size=\"small\"\n                  label=\"Enter Score\"\n                  value={formData[\"bachelorsScore\"] || \"\"}\n                  onChange={(e) => handleChange(\"bachelorsScore\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n                <FormControl size=\"small\" sx={{ flex: 1 }}>\n                  <InputLabel>Grade scale</InputLabel>\n                  <Select\n                    label=\"Grade scale\"\n                    value={formData[\"gradeScale\"] || \"\"}\n                    onChange={(e) => handleChange(\"gradeScale\", e.target.value)}\n                  >\n                    {outOff.map((item) => (\n                      <MenuItem key={item.value} value={item.label}>\n                        {item.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  size=\"small\"\n                  label=\"Backlogs\"\n                  value={formData[\"backlogs\"] || \"\"}\n                  onChange={(e) => handleChange(\"backlogs\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Box>\n\n            {/* English Test Section */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                English proficiency test\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <FormControl size=\"small\" sx={{ flex: 1 }}>\n                  <InputLabel>Select test</InputLabel>\n                  <Select\n                    label=\"Select test type\"\n                    value={formData[\"englishTestType\"] || \"\"}\n                    onChange={(e) => handleChange(\"englishTestType\", e.target.value)}\n                  >\n                    {testOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  size=\"small\"\n                  label=\"Enter score\"\n                  value={formData[\"englishTestScore\"] || \"\"}\n                  onChange={(e) => handleChange(\"englishTestScore\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Box>\n\n            {/* GRE/GMAT Section */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                GRE, GMAT, SAT, ACT\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <FormControl size=\"small\" sx={{ flex: 1 }}>\n                  <InputLabel>Select test type</InputLabel>\n                  <Select\n                    label=\"Select test type\"\n                    value={formData[\"academicTestType\"] || \"\"}\n                    onChange={(e) => handleChange(\"academicTestType\", e.target.value)}\n                  >\n                    {testOptions1.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  size=\"small\"\n                  label=\"Enter score\"\n                  value={formData[\"academicTestScore\"] || \"\"}\n                  onChange={(e) => handleChange(\"academicTestScore\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Box>\n\n            {/* Country Selection */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                Select Country\n              </Typography>\n              <Autocomplete\n                multiple\n                size=\"small\"\n                options={countryList}\n                getOptionLabel={(option) => option}\n                value={formData[\"country\"] || []}\n                onChange={(event, value) => handleChange(\"country\", value)}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    placeholder=\"Search countries\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        padding: '4px 8px'\n                      }\n                    }}\n                  />\n                )}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      {...getTagProps({ index })}\n                      label={option}\n                      size=\"small\"\n                      sx={{\n                        bgcolor: 'primary.light',\n                        color: 'white',\n                        '& .MuiChip-deleteIcon': {\n                          color: 'white'\n                        }\n                      }}\n                    />\n                  ))\n                }\n                ListboxProps={{\n                  style: { maxHeight: 200 }\n                }}\n              />\n            </Box>\n\n            {/* Program Selection */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                What program would you like to pursue?\n              </Typography>\n              <Autocomplete\n                multiple\n                size=\"small\"\n                options={courseList}\n                getOptionLabel={(option) => option.label}\n                value={formData[\"subCategory\"] || []}\n                onChange={(event, value) => handleChange(\"subCategory\", value)}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    placeholder=\"Search programs\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        padding: '4px 8px'\n                      }\n                    }}\n                  />\n                )}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      {...getTagProps({ index })}\n                      label={option.label}\n                      size=\"small\"\n                      sx={{\n                        bgcolor: 'primary.light',\n                        color: 'white',\n                        '& .MuiChip-deleteIcon': {\n                          color: 'white'\n                        }\n                      }}\n                    />\n                  ))\n                }\n                ListboxProps={{\n                  style: { maxHeight: 200 }\n                }}\n              />\n            </Box>\n\n            {/* Action Buttons */}\n            <Box sx={{ \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center',\n              gap: 1,\n              mt: 2 \n            }}>\n              <Button\n                variant=\"contained\"\n                sx={{\n                  width: '30%',\n                  backgroundColor: \"#F48438\",\n                  color: \"#fff\",\n                  borderRadius: \"999px\",\n                  py: 1.2,\n                  fontWeight: 600,\n                  textTransform: \"none\",\n                  \"&:hover\": {\n                    backgroundColor: \"#F48438\",\n                  },\n                }}\n                onClick={() => {\n                  onClose();\n                  submit();\n                }}\n              >\n                Continue\n              </Button>\n\n                                            <Typography variant=\"body2\" sx={{ color: \"#555\", textAlign: \"center\" }}>\n                 Want to edit further?{\" \"}\n                 <Box\n                   component=\"span\"\n                   onClick={() => {\n                     // Clear the user-profile data from localStorage to start fresh\n                     localStorage.removeItem(\"user-profile\");\n                     \n                     // Navigate to the initial step (Start page)\n                     navigate(\"/startpage\");\n                   }}\n                   sx={{\n                     textTransform: \"none\",\n                     fontWeight: 600,\n                     color: 'primary.main',\n                     cursor: 'pointer',\n                     '&:hover': {\n                       color: 'primary.dark',\n                     },\n                   }}\n                 >\n                   Edit\n                 </Box>\n               </Typography>\n            </Box>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    );\n  };\n  \n  export default RecommendationEditModal;\n  ","import React from 'react';\nimport { \n  Box, \n  Grid, \n  Skeleton,\n  Typography\n} from '@mui/material';\n\ninterface SimpleShimmerProps {\n  count?: number;\n}\n\nconst SimpleShimmer: React.FC<SimpleShimmerProps> = ({ count = 6 }) => {\n  return (\n    <Grid container spacing={3}>\n      {Array.from({ length: count }).map((_, index) => (\n        <Grid item xs={12} sm={6} md={4} key={index}>\n          <Box sx={{ p: 2, border: '1px solid #e0e0e0', borderRadius: 2 }}>\n            {/* Header image */}\n            <Skeleton variant=\"rectangular\" width=\"100%\" height={200} sx={{ mb: 2 }} />\n            \n            {/* Title */}\n            <Skeleton variant=\"text\" width=\"90%\" height={24} sx={{ mb: 1 }} />\n            \n            {/* Subtitle */}\n            <Skeleton variant=\"text\" width=\"70%\" height={20} sx={{ mb: 2 }} />\n            \n            {/* Details */}\n            <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n              <Skeleton variant=\"text\" width={80} height={16} />\n              <Skeleton variant=\"text\" width={60} height={16} />\n            </Box>\n            \n            {/* Tags */}\n            <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\n              <Skeleton variant=\"rectangular\" width={60} height={24} sx={{ borderRadius: 1 }} />\n              <Skeleton variant=\"rectangular\" width={80} height={24} sx={{ borderRadius: 1 }} />\n            </Box>\n            \n            {/* Action buttons */}\n            <Box sx={{ display: 'flex', gap: 1 }}>\n              <Skeleton variant=\"rectangular\" width={100} height={36} sx={{ borderRadius: 1 }} />\n              <Skeleton variant=\"rectangular\" width={80} height={36} sx={{ borderRadius: 1 }} />\n            </Box>\n          </Box>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\n// Simple loading tabs\nexport const SimpleTabShimmer: React.FC = () => (\n  <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n    {Array.from({ length: 3 }).map((_, index) => (\n      <Skeleton key={index} variant=\"rectangular\" width={100} height={40} />\n    ))}\n  </Box>\n);\n\n// Enhanced stats shimmer to match the new design\nexport const SimpleStatsShimmer: React.FC = () => (\n  <Box sx={{ \n    mb: 4, \n    p: 3, \n    bgcolor: 'linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%)', \n    borderRadius: 3,\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    border: '1px solid #e0e0e0'\n  }}>\n    <Skeleton \n      variant=\"text\" \n      width=\"300px\" \n      height={40} \n      sx={{ mx: 'auto', mb: 3 }} \n      animation=\"wave\" \n    />\n    <Grid container spacing={3}>\n      {Array.from({ length: 4 }).map((_, index) => (\n        <Grid item xs={6} sm={3} key={index}>\n          <Box sx={{ \n            textAlign: 'center',\n            py: 3,\n            px: 2,\n            bgcolor: 'white',\n            borderRadius: 2,\n            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n          }}>\n            <Skeleton \n              variant=\"text\" \n              width=\"80%\" \n              height={60} \n              sx={{ \n                mx: 'auto',\n                fontSize: '3rem',\n                transform: 'scale(1, 0.8)'\n              }} \n              animation=\"wave\" \n            />\n            <Skeleton \n              variant=\"text\" \n              width=\"70%\" \n              height={28} \n              sx={{ mx: 'auto', mt: 1 }} \n              animation=\"wave\" \n            />\n            <Skeleton \n              variant=\"text\" \n              width=\"60%\" \n              height={16} \n              sx={{ mx: 'auto', mt: 0.5 }} \n              animation=\"wave\" \n            />\n          </Box>\n        </Grid>\n      ))}\n    </Grid>\n  </Box>\n);\n\n// Updating statistics shimmer overlay\nexport const UpdatingStatsOverlay: React.FC = () => (\n  <Box sx={{ \n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    bgcolor: 'rgba(248, 249, 250, 0.9)',\n    borderRadius: 3,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 10\n  }}>\n    <Box sx={{ textAlign: 'center' }}>\n      <Box\n        sx={{\n          width: 60,\n          height: 60,\n          border: '4px solid #e3f2fd',\n          borderTop: '4px solid #2196f3',\n          borderRadius: '50%',\n          animation: 'spin 1s linear infinite',\n          mx: 'auto',\n          mb: 2,\n          '@keyframes spin': {\n            '0%': { transform: 'rotate(0deg)' },\n            '100%': { transform: 'rotate(360deg)' },\n          },\n        }}\n      />\n      <Typography variant=\"h6\" color=\"primary\" sx={{ fontWeight: 600 }}>\n        Updating Statistics...\n      </Typography>\n    </Box>\n  </Box>\n);\n\nexport default SimpleShimmer;\n\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Grid,\n  MenuItem,\n  Switch,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState, useCallback, useMemo } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport CustomCard from \"../../../genericComponents/customCard\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\nimport { Event, Recommendation } from \"../../../types/types\";\nimport { monthNames } from \"../../../assets/menu\";\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteOutlinedIcon from '@mui/icons-material/FavoriteOutlined';\nimport NotInterestedOutlinedIcon from \"@mui/icons-material/NotInterestedOutlined\";\nimport {\n  addToShortList,\n  getRecommendations,\n  hideRecommendation,\n} from \"../../../services\";\nimport {\n  setShortlisted,\n} from \"../../../store/Slices/shortlistedCoursesSlice\";\nimport Images from \"../../../assets\";\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { setRecommended } from \"../../../store/Slices/recommendations\";\nimport RecommendationEditModal from \"./RecommendEdit\";\nimport { DestinationTypeEnum } from \"src/assets/enums\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport SimpleShimmer, { \n  SimpleTabShimmer\n} from \"../../../genericComponents/shimmer/SimpleShimmer\";\nimport { useSimplePerformance } from \"../../../hooks/useSimplePerformance\";\n\nconst labelToRoute: Record<string, string> = {\n  StudyLevel: 'education',\n  Country: 'preference',\n  Courses: \"preference\",\n  \"Graduate Record Examination\": 'test',\n  GPA: 'education'\n};\n\nconst filterNames = [\n  { id: 1, name: \"All\" },\n  { id: 2, name: \"Recommended by AI\" },\n  { id: 3, name: \"Recommended by Student Advisor\" },\n];\n\nconst fullToShort: Record<string, string> = Object.fromEntries(\n  Object.entries(DestinationTypeEnum).map(([key, value]) => [value, key])\n);\n\nconst Recommended = () => {\n  const { id }: any = useParams();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  // State management\n  const [activeTab, setActiveTab] = useState<string>('Safe');\n  const [selectedFilter, setSelectedFilter] = useState(filterNames[0].name);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [alignment, setAlignment] = useState(\"interested\");\n  const [removedIds, setRemovedIds] = useState<string[]>([]);\n  const [duration,setDuration]=useState(false)\n\n  // Redux state with optimized selectors\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const criteria = recommendations?.data?.criteria;\n  const preferences = useAppSelector((state) => state.preferences);\n  const educationhistory = useAppSelector((state) => state.educationhistory);\n  const testscores = useAppSelector(state => state.testscores);\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n  const gre = testscores.data.find((item) => item.name === \"Graduate Record Examination\");\n\n  // Memoized computed values for performance optimization\n  const isCriteriaMet = useMemo(() => {\n    const subCategoryItem = criteria?.find((item) => item.label === \"SubCategory\");\n    return subCategoryItem?.data.value === JSON.stringify(preferences?.data?.courses) &&\n      subCategoryItem?.data.value === JSON.stringify(educationhistory?.data?.underGraduation) &&\n      subCategoryItem?.data.value === JSON.stringify(gre?.scores);\n  }, [criteria, preferences?.data?.courses, educationhistory?.data?.underGraduation, gre?.scores]);\n\n  // Memoized filtered recommendations to prevent unnecessary re-computations\n  const { ambitious, safe, moderate } = useMemo(() => {\n    const recommendationsData = recommendations?.data?.data;\n    if (!recommendationsData || !Array.isArray(recommendationsData)) {\n      return { ambitious: [], safe: [], moderate: [] };\n    }\n\n    return {\n      ambitious: recommendationsData.filter(\n        (item: Recommendation) => item?.possibilityOfAdmit === \"Ambitious\"\n      ),\n      safe: recommendationsData.filter(\n        (item: Recommendation) => item?.possibilityOfAdmit === \"Safe\"\n      ),\n      moderate: recommendationsData.filter(\n        (item: Recommendation) => item?.possibilityOfAdmit === \"Moderate\"\n      )\n    };\n  }, [recommendations?.data?.data]);\n  const courseChecked = preferences.data?.subCategory && preferences.data?.subCategory?.length > 0;\n\n  // Event handlers\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setAlignment(event.target.checked ? \"interested\" : \"notInterested\");\n  }, []);\n\n  const handleFilterChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedFilter(event.target.value);\n  }, []);\n\n  const filterCourses = useCallback((courses: Recommendation[]) => {\n    if (!courses || !Array.isArray(courses)) return [];\n    \n    const filteredByType = selectedFilter === 'Recommended by AI' \n      ? courses.filter(course => !('counsellorRecommended' in course) || course.counsellorRecommended !== true)\n      : selectedFilter === 'Recommended by Student Advisor'\n        ? courses.filter(course => 'counsellorRecommended' in course && course.counsellorRecommended === true)\n        : courses;\n\n    // Filter for Full-time courses only\n    const filteredByDuration = filteredByType.filter(course => {\n      if (!course.course?.duration) return false;\n      \n      if (Array.isArray(course.course.duration)) {\n        return course.course.duration.some((d: any) => d.durationType === \"Full-time\");\n      }\n      \n      return false;\n    });\n\n    return filteredByDuration.filter(course =>\n      alignment === \"interested\" ? !course.notInterested : course.notInterested\n    );\n  }, [selectedFilter, alignment]);\n\n  // Memoized filtered courses for each category\n  const filteredCourses = useMemo(() => ({\n    ambitious: filterCourses(ambitious),\n    safe: filterCourses(safe),\n    moderate: filterCourses(moderate)\n  }), [ambitious, safe, moderate, filterCourses]);\n\n  // Removed statistics as requested\n\n  // Performance monitoring\n  useSimplePerformance('RecommendationsComponent', [\n    recommendations?.data?.data?.length,\n    selectedFilter,\n    alignment,\n    activeTab,\n    loading\n  ]);\n\n  const regenerateForm = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await getRecommendations({});\n      if (response) {\n        dispatch(setRecommended(response.data));\n      }\n    } catch (error) {\n      setError(\"Failed to regenerate recommendations\");\n    } finally {\n      setLoading(false);\n    }\n  }, [dispatch]);\n\n  const submit = useCallback(async () => {\n    const education = educationhistory.data.underGraduation?.totalScore ? \n      educationhistory.data.underGraduation : \n      educationhistory.data.postGraduation?.totalScore ? \n        educationhistory.data.postGraduation : \n        undefined;\n\n    if (courseChecked && education && gre) {\n      await regenerateForm();\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"qasection\",\n              dimensions: {\n                width: \"70%\",\n                height: \"90%\"\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  }, [courseChecked, educationhistory, gre, dispatch, regenerateForm]);\n\n  const eventHandler = useCallback(async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        if (userAuthStatus?.data?.isAuthorized) {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"applynow\",\n                  data: event?.data?.course,\n                  dimensions: {\n                    width: \"450px\",\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        } else {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"login\",\n                  dimensions: {\n                    width: \"800px\",\n                    height: \"70%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        break;\n      case \"shortlist\":\n        try {\n          if (userAuthStatus?.data?.isAuthorized) {\n            const values = {\n              action: \"push\",\n              courseId: event.data?.course?._id,\n            };\n            const response = await addToShortList(values);\n            if (response.data.success) {\n              dispatch(setShortlisted(response.data.data));\n            }\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                      height: \"70%\",\n                      show: \"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) {\n          console.error(\"An error occurred while shortlisting:\", error);\n        }\n        break;\n      case \"delete\":\n        try {\n          const values = {\n            action: \"pull\",\n            courseId: event.data?.course?._id,\n          };\n          const response = await addToShortList(values);\n          if (response.data.success) {\n            dispatch(setShortlisted(response.data.data));\n          }\n        } catch (error) {\n          console.error(\"An error occurred while unshortlisting:\", error);\n        }\n        break;\n      case \"hideRecommendation\":\n        try {\n          const response = await hideRecommendation({\n            recommendationId: event.data,\n          });\n          dispatch(setRecommended(response.data.data));\n        } catch (err) {\n          console.error(\"An error occurred while hiding recommendation:\", err);\n        }\n        break;\n      default:\n        break;\n    }\n  }, [dispatch, userAuthStatus]);\n\n  const handleDeleteCard = useCallback((id: string) => {\n    setRemovedIds(prev => [...prev, id]);\n  }, []);\n\n  // Effects\n  useEffect(() => {\n    if (id) {\n      const matchedTab = tabs.find((tab) => tab.value.toLowerCase() === id.toLowerCase());\n      if (matchedTab) {\n        setActiveTab(matchedTab.value);\n      }\n    }\n  }, [id]);\n\n  // Styles object for better maintainability\n  const styles = {\n    cardContainer: {\n      display: \"flex\",\n      gap: \"10px\",\n      width: \"100%\"\n    },\n    logo: {\n      width: \"1.5rem\",\n      height: \"1.5rem\",\n      marginRight: \"5px\",\n      borderRadius: \"10px\"\n    },\n    courseName: {\n      fontSize: { xs: \"13px\", lg: \"14px\" },\n      fontWeight: 500,\n      textOverflow: \"ellipsis\",\n      lineClamp: 1,\n      height: \"1.5rem\",\n      textTransform: \"capitalize\",\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      WebkitLineClamp: \"1\",\n      WebkitBoxOrient: \"vertical\"\n    },\n    universityName: {\n      fontSize: \"0.8rem\",\n      color: \"#8D8B8B\"\n    },\n    startDate: {\n      display: \"flex\",\n      alignItems: \"center\",\n      whiteSpace: \"nowrap\"\n    },\n    buttonContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"end\",\n      gap: \"1rem\"\n    },\n    actionButton: {\n      border: \"1px solid #1C1F40\",\n      borderRadius: \"50%\",\n      width: \"2rem\",\n      height: \"2rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minWidth: 0\n    }\n  };\n\n  // Memoized Card component\n  const Card = React.memo((props: any) => {\n    const item = props?.data;\n    const isShortlisted = shortlisted.data.some(\n      (shortlistedCourse: any) => shortlistedCourse._id === item.course?._id\n    );\n    // Determine badge color and text\n    const badgeColor = item?.counsellorRecommended ? \"#6C7AE0\" : \"#3B3F76\";\n    const badgeText = item?.counsellorRecommended ? \"Student Advisor Recommended\" : \"AI Recommended\";\n    // Popup handlers\n    const handleUniversityClick = (e: React.MouseEvent) => {\n      e.stopPropagation();\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"universityPopup\",\n              data: item.course?.university?._id,\n              dimensions: {\n                width: \"80%\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    };\n    const handleCourseClick = (e: React.MouseEvent) => {\n      e.stopPropagation();\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"mainPopup\",\n              data: item.course,\n              dimensions: {\n                width: \"95%\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    };\n    return (\n      \n      <CustomCard\n        title={badgeText}\n        badgeColor=\"#fff\"\n        badgePosition=\"top-right\"\n        sx={{ \n          height: '80%',\n          minHeight: 320,\n          maxWidth: 600, \n          width: '100%', \n          p: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          backgroundColor:\"#EFF4F7\",\n          \n          \n        }}\n      >\n        <Box  sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 1, px: [1, 2], pl: 1 }}>\n          {/* University Logo */}\n          <Box\n            sx={{\n              width: 48,\n              height: 48,\n              borderRadius: '50%',\n              overflow: 'hidden',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              flexShrink: 0,\n              cursor: 'pointer',\n            }}\n            onClick={handleUniversityClick}\n          >\n            <img\n              src={item.course?.university?.logoSrc}\n              alt=\"logo\"\n              style={{ width: 48, height: 48, objectFit: 'cover', borderRadius: '50%' }}\n            />\n          </Box>\n          <Box sx={{ flex: 1, minWidth: 0 }}>\n            <Typography \n              sx={{ \n                fontWeight: 450, \n                fontSize: '1.05rem', \n                color: '#495052', \n                mb: 0.2, \n                lineHeight: 1.2,\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                display: '-webkit-box',\n                WebkitLineClamp: 2,\n                WebkitBoxOrient: 'vertical',\n                cursor: 'pointer',\n              }}\n              onClick={handleUniversityClick}\n            >\n              {item.course?.university?.name}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              {/* Country flag (if available) */}\n              {/* {item.course?.university?.location?.country && (\n                <img\n                  src={`https://flagcdn.com/24x18/${(item.course.university.location.country || '').toLowerCase().replace(/ /g, '-')}.png`}\n                  alt={item.course.university.location.country}\n                  style={{ width: 24, height: 18, borderRadius: 3, objectFit: 'cover' }}\n                  onError={e => (e.currentTarget.style.display = 'none')}\n                />\n              )} */}\n              <Typography sx={{ fontSize: '0.95rem', color: '#8E9091' }}>\n                {item.course?.university?.location?.country}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        {/* Course Name */}\n        <Typography \n          sx={{ \n            fontWeight: 700, \n            fontSize: '1.13rem', \n            color: '#222', \n            mt: 2, \n            mb: 1, \n            lineHeight: 1.3,\n            px: [1, 2], pl: 1,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            display: '-webkit-box',\n            WebkitLineClamp: 2,\n            WebkitBoxOrient: 'vertical',\n            cursor: 'pointer',\n          }}\n          onClick={handleCourseClick}\n        >\n          {item?.course?.name}\n        </Typography>\n        {/* Details Row */}\n        <Box sx={{ \n          mb: 1, \n          px: [1, 2], pl: 1,\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 0.5,\n          alignItems: 'center'\n        }}>\n          {/* Intakes */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0 }}>\n            <img src={Images.Calender1} alt=\"calendar\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ fontSize: '0.95rem', color: '#495052' }}>\n              {item?.course?.startDate?.map((d: any) => monthNames[d.courseStartingMonth].substring(0, 3)).join(', ')}\n            </Typography>\n          </Box>\n          <Typography sx={{ fontSize: '0.95rem', color: '#495052', flexShrink: 0 }}>|</Typography>\n          {/* Degree */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0 }}>\n            <img src={Images.GraduateHat} alt=\"degree\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ fontSize: '0.95rem', color: '#495052' }}>\n              {item.course.studyLevel}\n            </Typography>\n          </Box>\n          <Typography sx={{ fontSize: '0.95rem', color: '#495052', flexShrink: 0 }}>|</Typography>\n          {/* Fee */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0 }}>\n            <img src={Images.Dollar1} alt=\"fee\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ fontSize: '0.95rem', color: '#495052' }}>\n              {item.course.tuitionFee?.tuitionFee?.toLocaleString() || 'N/A'}\n              <Box component=\"span\" sx={{ fontSize: '0.65em', lineHeight: 1, fontWeight: 600, color: '#495052', ml: 0.2, verticalAlign: 'super', position: 'relative', top: '-0.3em' }}>\n                {item.course.currency?.code}\n              </Box>\n              <span style={{ color: '#8D8B8B', fontWeight: 400, fontSize: '0.8em', marginLeft: '2px' }}>/ year</span>\n            </Typography>\n          </Box>\n          <Typography sx={{ fontSize: '0.95rem', color: '#495052', flexShrink: 0 }}>|</Typography>\n          {/* Duration */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0, minWidth: 0 }}>\n            <img src={Images.Timmer} alt=\"duration\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ \n              fontSize: '0.95rem', \n              color: '#495052',\n              wordBreak: 'break-word',\n              overflowWrap: 'break-word',\n              hyphens: 'auto'\n            }}>\n              {Array.isArray(item.course.duration)\n                ? (() => {\n                    const fullTimeDurations = item.course.duration.filter((d: any) => d.durationType === \"Full-time\");\n                    return fullTimeDurations.length > 0 \n                      ? fullTimeDurations.map((d: any) => `${d.duration} ${d.durationType}`).join(', ')\n                      : 'N/A';\n                  })()\n                : item.course.duration || 'N/A'}\n            </Typography>\n          </Box>\n        </Box>\n        {/* Badges Row */}\n        <Box sx={{ display: 'flex', gap: 1, mb: 1, px: [1, 2], pl: 1 }}>\n          <Box sx={{ background: '#F87171', color: '#fff', borderRadius: '8px', px: 1.5, py: 0.2, fontSize: '0.85rem', fontWeight: 600 }}>\n            Apply Soon\n          </Box>\n          <Box sx={{ background: '#9ADBFF', color: '#3B3F76', borderRadius: '8px', px: 1.5, py: 0.2, fontSize: '0.85rem', fontWeight: 600 }}>\n            Sponsored\n          </Box>\n        </Box>\n        {/* Action Buttons */}\n        <Box sx={{ \n          mr: 3.5,\n          mt: 6,\n          display: 'flex', \n          gap: 1.5, \n          justifyContent: 'flex-end',\n          px: 5,\n          pb: 2\n        }}>\n          {/* Cart Button */}\n          <Button\n            sx={{\n              minWidth: 0,\n              width: 36,\n              height: 36,\n              borderRadius: '50%',\n              border: '1px solid #1C1F40',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              boxShadow: 'none',\n              p: 0,\n              // '&:hover': { background: '#f9f9fc' },\n            }}\n            onClick={() => eventHandler({ name: 'cart', data: item })}\n          >\n            <ShoppingCartOutlinedIcon sx={{ fontSize: '1.2rem', color: '#495052' }} />\n          </Button>\n          {/* Shortlist Button */}\n          <Button\n            sx={{\n              minWidth: 0,\n              width: 36,\n              height: 36,\n              borderRadius: '50%',\n              border: '1px solid #495052',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              boxShadow: 'none',\n              p: 0,\n              // '&:hover': { background: '#495052' },\n            }}\n            onClick={() =>\n              isShortlisted\n                ? eventHandler({ name: 'delete', data: item })\n                : eventHandler({ name: 'shortlist', data: item })\n            }\n          >\n            {isShortlisted ? (\n              <FavoriteOutlinedIcon sx={{ color: '#495052', fontSize: '1.2rem' }} />\n            ) : (\n              <FavoriteBorderIcon sx={{ color: '#495052', fontSize: '1.2rem' }} />\n            )}\n          </Button>\n          {/* Not Interested Button */}\n          {\n            alignment !== \"notInterested\" ?\n             <Button\n            sx={{\n              minWidth: 0,\n              width: 36,\n              height: 36,\n              borderRadius: '50%',\n              border: '1px solid #495052',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              boxShadow: 'none',\n              p: 0,\n              // '&:hover': { background: '#495052' },\n            }}\n            onClick={() => eventHandler({ name: 'hideRecommendation', data: item._id })}\n          >\n            <NotInterestedOutlinedIcon sx={{ color: '#495052', fontSize: '1.2rem' }} />\n          </Button>:null\n          }\n         \n          {/* Delete Button for Not Interested */}\n          {alignment === \"notInterested\" && (\n            <Tooltip title=\"Delete\" placement=\"bottom\">\n              <Box\n                component=\"img\"\n                src={Images.deleteIcon}\n                alt=\"delete\"\n                sx={{ width: '2rem', height: '2rem', cursor: 'pointer' }}\n                onClick={() => handleDeleteCard(item._id)}\n              />\n            </Tooltip>\n          )}\n        </Box>\n      </CustomCard>\n    );\n  });\n\n  // Tabs configuration\n  const tabs = [\n    {\n      label: `Safe (${safe && filterCourses(safe).filter(item => !removedIds.includes(item._id)).length})`,\n      Component: (\n        <Box\n          sx={{\n            width: '100%',\n            px: { xs: 1, sm: 2, md: 4 },\n            py: { xs: 2, md: 4 },\n            boxSizing: 'border-box',\n          }}\n        >\n          {alignment === 'notInterested' && filteredCourses.safe.filter(item => !removedIds.includes(item._id)).length === 0 ? (\n             <Grid\n               item\n               xs={8}\n               sx={{\n               display: \"flex\",\n               flexDirection: \"column\",\n               justifyContent: \"center\",\n               alignItems: \"center\",\n               height: \"60vh\",\n               minHeight: \"350px\",\n               }}\n                >\n              <img\n              src={Images.Dull}\n                   alt=\"noData\"\n                   style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n              />\n               <Typography\n                 sx={{\n                  mb: 1,\n                  fontSize: \"1.6rem\",\n                  fontWeight: 600,\n                  color: \"#495052\",\n                  textAlign: \"center\",\n                  }}\n                   >\n                  Your Not Interested List is empty\n                </Typography>\n                <Typography\n                sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n                }}\n                 >\n                       Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                        </Typography>\n                        <Button\n                          sx={{\n                            background: \"#F48438\",\n                            color: \"#fff\",\n                            borderRadius: \"20px\",\n                            px: 4,\n                            py: 1,\n                            fontWeight: 500,\n                            fontSize: \"1rem\",\n                            textTransform: \"none\",\n                            boxShadow: \"none\",\n                            \"&:hover\": {\n                              background: \"#F48438\",\n                            },\n                          }}\n                          onClick={() => navigate('/connect')}\n                        >\n                          Connect\n                        </Button>\n                      </Grid>\n          ) : safe && filterCourses(safe).length > 0 ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              {safe && filterCourses(safe).filter(item => !removedIds.includes(item._id)).map((item, i: number) => (\n                <Grid item xs={12} sm={6} md={6} key={i} sx={{ minWidth: 0 }}>\n                  <Card data={item} i={i} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Grid\n              item\n              xs={8}\n              sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n              }}\n              >\n              <img\n               src={Images.Dull}\n               alt=\"noData\"\n               style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n               />\n               <Typography\n                sx={{\n                 mb: 1,\n                 fontSize: \"1.6rem\",\n                 fontWeight: 600,\n                 color: \"#495052\",\n                 textAlign: \"center\",\n                 }}\n                 >\n                 No safe courses found at the moment\n                 </Typography>\n                 <Typography\n                  sx={{\n                   mb: 3,\n                   fontSize: \"1rem\",\n                   color: \"#8E9091\",\n                   textAlign: \"center\",\n                   }}\n                    >\n                   Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                   </Typography>\n                  <Button\n                    sx={{\n                    background: \"#F48438\",\n                    color: \"#fff\",\n                    borderRadius: \"20px\",\n                     px: 4,\n                     py: 1,\n                     fontWeight: 500,\n                     fontSize: \"1rem\",\n                     textTransform: \"none\",\n                     boxShadow: \"none\",\n                      \"&:hover\": {\n                     background: \"#F48438\",\n                      },\n                    }}\n                    onClick={() => navigate('/connect')}\n                     >\n                      Connect\n                     </Button>\n                     </Grid>\n          )}\n        </Box>\n      ),\n      value: 'Safe',\n    },\n    {\n      label: `Moderate (${moderate && filterCourses(moderate).filter(item => !removedIds.includes(item._id)).length})`,\n      Component: (\n        <Box\n          sx={{\n            width: '100%',\n            px: { xs: 1, sm: 2, md: 4 },\n            py: { xs: 2, md: 4 },\n            boxSizing: 'border-box',\n          }}\n        >\n          {alignment === 'notInterested' && moderate && filterCourses(moderate).filter(item => !removedIds.includes(item._id)).length === 0 ? (\n             <Grid\n                        item\n                        xs={8}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          height: \"60vh\",\n                          minHeight: \"350px\",\n                        }}\n                      >\n                        <img\n                          src={Images.Dull}\n                          alt=\"noData\"\n                          style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n                        />\n                        <Typography\n                          sx={{\n                            mb: 1,\n                            fontSize: \"1.6rem\",\n                            fontWeight: 600,\n                            color: \"#495052\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                         Your Not Interested List is empty\n                        </Typography>\n                        <Typography\n                          sx={{\n                            mb: 3,\n                            fontSize: \"1rem\",\n                            color: \"#8E9091\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                       Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                        </Typography>\n                        <Button\n                          sx={{\n                            background: \"# F48438\",\n                            color: \"#fff\",\n                            borderRadius: \"20px\",\n                            px: 4,\n                            py: 1,\n                            fontWeight: 500,\n                            fontSize: \"1rem\",\n                            textTransform: \"none\",\n                            boxShadow: \"none\",\n                            \"&:hover\": {\n                              background: \"# F48438\",\n                            },\n                          }}\n                          onClick={() => navigate('/connect')}\n                        >\n                          Connect\n                        </Button>\n                      </Grid>\n          ) : filteredCourses.moderate.length > 0 ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              {filteredCourses.moderate.filter(item => !removedIds.includes(item._id)).map((item, i) => (\n                <Grid item xs={12} sm={6} md={6} key={i} sx={{ minWidth: 0 }}>\n                  <Card data={item} key={item._id} i={i} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Grid\n             item\n             xs={8}\n             sx={{\n             display: \"flex\",\n             flexDirection: \"column\",\n             justifyContent: \"center\",\n             alignItems: \"center\",\n             height: \"60vh\",\n             minHeight: \"350px\",\n             }}\n             >\n                        <img\n                          src={Images.Dull}\n                          alt=\"noData\"\n                          style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n                        />\n                        <Typography\n                          sx={{\n                            mb: 1,\n                            fontSize: \"1.6rem\",\n                            fontWeight: 600,\n                            color: \"#495052\",\n                            textAlign: \"center\",\n                          }}\n                 >\n               Looks like there aren't any moderate matches right now\n               </Typography>\n               <Typography\n               sx={{\n               mb: 3,\n              fontSize: \"1rem\",\n              color: \"#8E9091\",\n              textAlign: \"center\",\n               }}\n              >\n              Don't worry - connect with our advisors to find the best-fit courses for you!\n             </Typography>\n             <Button\n              sx={{\n               background: \"#F48438\",\n               color: \"#fff\",\n               borderRadius: \"20px\",\n               px: 4,\n               py: 1,\n               fontWeight: 500,\n               fontSize: \"1rem\",\n               textTransform: \"none\",\n               boxShadow: \"none\",\n              \"&:hover\": {\n              background: \"#F48438\",\n             },\n           }}\n           onClick={() => navigate('/connect')}\n            >\n          Connect\n         </Button>\n         </Grid>\n          )}\n        </Box>\n      ),\n      value: 'Moderate',\n    },\n    {\n      label: `Ambitious (${ambitious && filterCourses(ambitious).filter(item => !removedIds.includes(item._id)).length})`,\n      Component: (\n        <Box\n          sx={{\n            width: '100%',\n            px: { xs: 1, sm: 2, md: 4 },\n            py: { xs: 2, md: 4 },\n            boxSizing: 'border-box',\n          }}\n        >\n          {alignment === 'notInterested' && ambitious && filterCourses(ambitious).filter(item => !removedIds.includes(item._id)).length === 0 ? (\n            <Grid\n                        item\n                        xs={8}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          height: \"60vh\",\n                          minHeight: \"350px\",\n                        }}\n                      >\n                        <img\n                          src={Images.Dull}\n                          alt=\"noData\"\n                          style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n                        />\n                        <Typography\n                          sx={{\n                            mb: 1,\n                            fontSize: \"1.6rem\",\n                            fontWeight: 600,\n                            color: \"#495052\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                         Your Not Interested List is empty\n                        </Typography>\n                        <Typography\n                          sx={{\n                            mb: 3,\n                            fontSize: \"1rem\",\n                            color: \"#8E9091\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                       Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                        </Typography>\n                        <Button\n                          sx={{\n                            background: \"#F48438\",\n                            color: \"#fff\",\n                            borderRadius: \"20px\",\n                            px: 4,\n                            py: 1,\n                            fontWeight: 500,\n                            fontSize: \"1rem\",\n                            textTransform: \"none\",\n                            boxShadow: \"none\",\n                            \"&:hover\": {\n                              background: \"#F48438\",\n                            },\n                          }}\n                          onClick={() => navigate('/connect')}\n                        >\n                          Connect\n                        </Button>\n                      </Grid>\n          ) : filteredCourses.ambitious.length > 0 ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              {filteredCourses.ambitious.filter(item => !removedIds.includes(item._id)).map((item, i) => (\n                <Grid item xs={12} sm={6} md={6} key={i} sx={{ minWidth: 0 }}>\n                  <Card data={item} key={item._id} i={i} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Grid\n              item\n              xs={8}\n              sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n             }}\n             >\n              <img\n               src={Images.Dull}\n               alt=\"noData\"\n               style={{ width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n               />\n              <Typography\n               sx={{\n               mb: 1,\n               fontSize: \"1.6rem\",\n               fontWeight: 600,\n               color: \"#495052\",\n               textAlign: \"center\",\n               }}\n              >\n               No ambitious courses in sight yet\n              </Typography>\n               <Typography\n                sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n                }}\n               >\n               Don't worry - our counsellors can guide you towards bold and exciting opportunities!\n               </Typography>\n              <Button\n                sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                 \"&:hover\": {\n                  background: \"#F48438\",\n                   },\n                  }}\n                   onClick={() => navigate('/connect')}\n                   >\n                  Connect\n                </Button>\n             </Grid>\n          )}\n        </Box>\n      ),\n      value: 'Ambitious',\n    },\n  ]\n\n  // Loading and error states with enhanced shimmer\n  if (loading) {\n    return (\n      <Box sx={{ p: { xs: 1, sm: 2, md: 4 } }}>\n        {/* Tab navigation shimmer */}\n        <SimpleTabShimmer />\n        \n        {/* Main content shimmer */}\n        <SimpleShimmer count={6} />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"500px\" }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  // Debug logging for performance monitoring\n  console.log(\"Recommendations data:\", {\n    total: (ambitious?.length || 0) + (safe?.length || 0) + (moderate?.length || 0),\n    loading,\n    error\n  });\n\n  return (\n    <>\n      <Box>\n        {recommendations?.data && recommendations?.data?.data?.length > 0 ? (\n          <>\n            {recommendations?.data?.criteria && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 2,\n                  mb: 2,\n                }}\n              >\n                {/* Header with message and Edit button */}\n                <Box\n                  sx={{\n                    p: 2,\n                    borderRadius: 3,\n                    backgroundColor: '#EFF4F7',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    boxShadow: '0px 1px 4px rgba(0, 0, 0, 0.05)',\n                    border: '1px solid #e0e0e0',\n                    mt: 2,\n                    mb: 2,\n                  }}\n                >\n                  <Typography\n                    sx={{\n                      fontSize: '1rem',\n                      color: '#495052',\n                      fontWeight: 500,\n                    }}\n                  >\n                    If you wish to revise the recommendations, please make the necessary edits now to ensure their accuracy.\n                  </Typography>\n                  <Button\n                    variant=\"outlined\"\n                    onClick={() => setShowEditModal(true)}\n                    sx={{\n                      px: 3,\n                      py: 0.75,\n                      border:\"2px solid #F48438 \",\n                      borderRadius: '20px',\n                      borderColor: '#F48438',\n                      color: '#495052',\n                      fontWeight: 500,\n                      textTransform: 'none',\n                      boxShadow: 'none',\n                    }}\n                  >\n                    Edit\n                  </Button>\n                </Box>\n\n                {/* Tabs, Switch, and Dropdown */}\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection:{xs:\"column\",md:\"column\",lg:\"row\"},\n                    alignItems: 'center',\n                    justifyContent:{xs:'flex-start',md:'space-between',lg:'space-between'},\n                    gap: 2,\n                    px: { xs: 0, sm: 1 },\n                    width: '100%',\n                  }}\n                >\n                  {/* Tabs */}\n                  <Box sx={{ display: 'flex',flexDirection:{xs:\"column\",md:\"column\",lg:\"row\"},flex:1 }}>\n                     <Box sx={{ display: 'flex',flex:1, gap: 2 }}>\n                    {tabs.map((item: any) => (\n                      <Button\n                        key={item.label}\n                        onClick={() => setActiveTab(item.value)}\n                        sx={{\n                          borderBottom: item.value === activeTab ? '2px solid #3b3f76' : 'none',\n                          textTransform: 'none',\n                          borderRadius: 0,\n                          color: item.value === activeTab ? '#495052' : '#8E9091',\n                          fontWeight: item.value === activeTab ? 600 : 400,\n                          fontSize: { xs: '1rem', md: '1.1rem' },\n                          minWidth: 0,\n                          px: 2,\n                          pb: 1,\n                          '&:hover': {\n                            color: '#8E9091',\n                          },\n                        }}\n                      >\n                        {item.label}\n                      </Button>\n                    ))}\n                  </Box>\n                \n                  {/* Switch and Dropdown */}\n                  <Box sx={{ display: 'flex',flex:1,justifyContent:{xs:\"center\",md:\"center\",lg:\"flex-end\"}, alignItems: 'center', gap: 2 }} >\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={alignment === 'interested'}\n                          onChange={handleChange}\n                          size=\"small\"\n                          sx={{\n                            m: 0,\n                            p: 0,\n                            height: 18,\n                            '& .MuiSwitch-switchBase': {\n                              color: '#495052',\n                              p: 0,\n                              '&.Mui-checked': {\n                                color: '#495052',\n                              },\n                              '&.Mui-checked + .MuiSwitch-track': {\n                                backgroundColor: '#495052',\n                                width: 34,\n                              },\n                            },\n                            '& .MuiSwitch-track': {\n                              backgroundColor: '#e0e0e0',\n                              height: 18,\n                            },\n                          }}\n                        />\n                      }\n                      label={alignment === 'interested' ? 'Interested' : 'Not Interested'}\n                      sx={{\n                        m: 0,\n                        '.MuiFormControlLabel-label': {\n                          fontSize: { xs: '0.95rem', md: '1rem' },\n                          color: '#495052',\n                          fontWeight: 400,\n                          textTransform: 'capitalize',\n                          borderRadius: '8px',\n                          padding: '2px 6px',\n                          lineHeight: 1.5,\n                        },\n                      }}\n                    />\n                    <TextField\n                      select\n                      name=\"All\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={selectedFilter}\n                      onChange={handleFilterChange}\n                      sx={{\n                        width: { xs: 120, sm: 180, md: 220 },\n                        '& .MuiOutlinedInput-root': {\n                          borderRadius: '10px',\n                          height: 36,\n                          fontSize: { xs: '0.95rem', md: '1rem' },\n                          padding: '0 8px',\n                        },\n                        '& .MuiSelect-select': {\n                          color: '#495052',\n                          padding: '6px 10px',\n                          minHeight: 'unset',\n                          fontSize: { xs: '0.95rem', md: '1rem' },\n                        },\n                      }}\n                    >\n                      {filterNames.map((item) => (\n                        <MenuItem value={item.name} key={item.id} sx={{ fontSize: { xs: '0.95rem', md: '1rem' }, py: 0.5,color:\"#495052\" }}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Box>\n                  </Box>\n                 \n                </Box>\n                {tabs.find((item) => item.value === activeTab)?.Component}\n              </Box>\n            )}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={8}\n            sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"60vh\",\n            minHeight: \"350px\",\n            }}\n             >\n           <img\n           src={Images.Dull}\n           alt=\"noData\"\n           style={{ width: \"220px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n           />\n          <Typography\n           sx={{\n           mb: 1,\n           fontSize: \"1.6rem\",\n           fontWeight: 600,\n           color: \"#495052\",\n           textAlign: \"center\",\n           }}\n           >\n            AI Recommended Course Finder\n          </Typography>\n          <Typography\n            sx={{\n            mb: 3,\n            fontSize: \"1rem\",\n            color: \"#8E9091\",\n            textAlign: \"center\",\n            }}\n            >\n            Try our AI-powered Course Finder just enter your preferences and get smart, personalized recommendations in seconds\n           </Typography>\n           <Button\n             sx={{\n               background: \"#F48438\",\n               color: \"#fff\",\n               borderRadius: \"20px\",\n               px: 4,\n               py: 1,\n               fontWeight: 500,\n               fontSize: \"1rem\",\n               textTransform: \"none\",\n               boxShadow: \"none\",\n               \"&:hover\": {\n                background: \"#F48438\",\n               },\n              }}\n              onClick={() => navigate(\"/studylevel\")}\n               >\n               Generate\n             </Button>\n           </Grid>\n        )}\n      </Box>\n      <RecommendationEditModal\n        open={showEditModal}\n        onClose={() => setShowEditModal(false)}\n        data={recommendations?.data?.criteria || []}\n        onSubmit={(updatedData) => {\n          console.log(\"Updated form data\", updatedData);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Recommended;\n","import { useEffect, useRef } from 'react';\n\nexport const useSimplePerformance = (componentName: string, dependencies: any[] = []) => {\n  const renderCount = useRef(0);\n  const lastRenderTime = useRef(Date.now());\n\n  useEffect(() => {\n    renderCount.current += 1;\n    const currentTime = Date.now();\n    const timeSinceLastRender = currentTime - lastRenderTime.current;\n    \n    if (process.env.NODE_ENV === 'development') {\n      console.log(`🎯 ${componentName} - Render #${renderCount.current} (${timeSinceLastRender}ms since last render)`);\n    }\n    \n    lastRenderTime.current = currentTime;\n  }, dependencies);\n\n  return { renderCount: renderCount.current };\n};\n\n\n\n\n\n\n\n\n","import { Avatar, Box, Typography, Grid, Button } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport { getAdvisorTitle, setWordCase } from \"../../../assets/library\";\nimport { requestAdvisor } from \"../../../services\";\nimport { addAdvisorInfo, updateAdvisorInfo } from \"../../../store/Slices/advisorsSlice\";\nimport { addChats } from \"../../../store/Slices/chatsSlice\";\nimport { Advisor } from \"../../../types/types\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\n// import Images from \"src/assets\";\n// import { globalButton } from \"src/components/styles/customStyles\";\n// import { useNavigate } from \"react-router-dom\";\nimport CustomCard from \"src/genericComponents/customCard\";\n\nconst Advisors = () => {\n  const Preferences = useAppSelector((state) => state.preferences);\n  const advisors = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n  // const navigate = useNavigate();\n  const assignedCountries =\n    advisors?.data?.flatMap((advisor: Advisor) => advisor.assignedCountries) ||\n    [];\n  const unassignedCountries = Preferences?.data?.country?.filter(\n    (country: string) => !assignedCountries.includes(country)\n  );\n\n  const addAdvisors = async (item: string) => {\n    try {\n      const response = await requestAdvisor({\n        country: item,\n      });\n\n      const newAdvisor = response.data.data.advisor;\n      const existingAdvisor = advisors?.data?.find((advisor) => advisor._id === newAdvisor._id);\n\n      if (existingAdvisor) {\n        dispatch(updateAdvisorInfo(newAdvisor));\n      } else {\n        dispatch(addAdvisorInfo(newAdvisor));\n      }\n      if (response.data.data.chat !== null) {\n        dispatch(addChats(response.data.data.chat));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      {/* <Typography color=\"#3B3F76\" gutterBottom fontSize=\"1.2rem\">\n        Advisors\n      </Typography> */}\n      <Box\n        sx={{\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Grid container spacing={3}>\n          {advisors?.data?.map((item: Advisor, i: number) => (\n            <Grid item xs={12} sm={6} lg={4} key={i} sx={{ cursor: \"pointer\" }} onClick={() =>\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"advisor\",\n                      data: item,\n                      dimensions: {\n                        width: \"1200px\",\n                        height:\"85%\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              )\n            }>\n                <Box\n                  sx={{\n                    px: 2,\n                    pt: 1,\n                    pb: 2,\n                    borderRadius: \"1rem\",\n                    display: \"flex\",\n                    gap: \"1rem\",\n                    position: \"relative\",\n                    height: \"160px\",\n                    backgroundColor: '#EFF4F7',\n                    boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                  }}\n                >\n                  <Avatar src={item?.info?.displayPicSrc} alt=\"\" />\n\n                  <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography gutterBottom fontSize=\"1.2rem\" fontWeight=\"600\" color=\"#1C1F40\">\n                        {setWordCase(item?.info?.firstName)}\n                      </Typography>\n                      <Typography sx={{color:'#858585', fontSize: '0.9rem'}}>\n                        {setWordCase(item?.info?.email)}\n                      </Typography>\n                    \n                      <Box sx={{ mt: 1 }}>\n                        <Typography\n                          fontSize=\"0.8rem\"\n                          sx={{ \n                            display: 'inline-block',\n                            px: 1.5,\n                            py: 0.5,\n                            borderRadius: '12px',\n                            border: '1px solid #E0E0E0',\n                            backgroundColor: '#F5F5F5',\n                            color: '#666666',\n                            fontWeight: 500\n                          }}\n                        >\n                          {getAdvisorTitle(item?.info?.role)}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    \n                    {item?.assignedCountries?.length > 0 ?\n                      <Box sx={{ \n                        mt: 'auto', \n                        width: '100%', \n                        display: 'flex', \n                        flexDirection: 'column', \n                        alignItems: 'flex-end' \n                      }}>\n                        <Typography\n                          fontSize=\"0.8rem\"\n                          sx={{ \n                            textAlign: 'right', \n                            fontWeight: 600,\n                            color: '#1C1F40',\n                            lineHeight: 1.2\n                          }}\n                        >\n                          {item?.assignedCountries?.map((country, i) => (\n                            <span key={i}>{country}\n                              {i < item?.assignedCountries?.length - 1 && \", \"}</span>\n                          ))}\n                        </Typography>\n                        <Typography\n                          fontSize=\"0.8rem\"\n                          sx={{ \n                            color: '#858585', \n                            textAlign: 'right',\n                            mt: 0.3\n                          }}\n                        >\n                          Assigned for\n                        </Typography>\n                      </Box> : \"\"}\n                  </div>\n                </Box>\n            </Grid>\n          ))}\n          {unassignedCountries?.map((item, i) => (\n            <Grid item xs={12} sm={6} lg={4} key={i}>\n              <Box\n                sx={{\n                  backgroundColor: \"#EDEDFD\",\n                  px: 2,\n                  py: 4,\n                  borderRadius: \"1rem\",\n                  display: \"flex\",\n                  gap: \"1rem\",\n                  position: \"relative\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100px\"\n                }}\n              >\n                <Typography color=\"#3B3F76CC\" fontSize=\"14px\">\n                  Click below to get the advisor assigned for {item}\n                </Typography>\n                <Button\n                  onClick={() => addAdvisors(item)}\n                  sx={{\n                    border: \"1px solid #3B3F76CC\",\n                    borderRadius: \"15px\",\n                    p: 0.5,\n                    textTransform: \"none\",\n                    color: \"#3B3F76CC\",\n                  }}\n                >\n                  Request for advisor\n                </Button>\n              </Box>\n            </Grid>\n          ))}\n\n        </Grid>\n\n      </Box>\n    </div>\n  );\n};\n\nexport default Advisors;\n","import { Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport Images from \"../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport {\n  globalButton, secondaryButton,\n} from \"../../../components/styles/customStyles\";\nimport CustomCard from \"../../../genericComponents/customCard\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Advisor, Event } from \"../../../types/types\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\nimport { updateCart } from \"../../../services\";\nimport { setCart } from \"../../../store/Slices/cartSlice\";\nimport ConfirmDialog from \"../../../genericComponents/modalPopup/confirmDialog\";\nimport { useNavigate } from \"react-router-dom\";\n\n\ninterface CourseItem {\n  _id: string;\n  course: {\n    _id: string;\n    name: string;\n    featured: boolean;\n    university: {\n      name: string;\n      logoSrc: string;\n      location: {\n        country: string;\n      };\n    };\n  };\n  intake: string;\n}\n\n\nconst Shortlisted: React.FC = () => {\n  const advisors = useAppSelector((state: any) => state.advisor);\n  const cartCourses = useAppSelector((state: any) => state.cart);\n  const orders = useAppSelector((state: any) => state.orders);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  // const preference= useAppSelector(store =>store.preferences)\n  const [deleteItem, setDeleteItem] = useState<CourseItem | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n  const [selectedCourses, setSelectedCourses] = useState<string[]>([]);\n  const [isProceedDisabled, setIsProceedDisabled] = useState<boolean>(true);\n  // const countryPreference = preference?.data?.country?.map((item) => ({\n  //   name: item,\n  //   value: item\n  // }));\n\n  useEffect(() => {\n    const hasSelectedCourses = selectedCourses.length > 0;\n    const hasAlreadyApplied = selectedCourses.some((courseId) => {\n      const course = cartCourses.data.find((item: CourseItem) => item._id === courseId);\n      return course ? isAlreadyApplied(course) : false;\n    });\n    setIsProceedDisabled(!hasSelectedCourses || hasAlreadyApplied);\n    // eslint-disable-next-line\n  }, [selectedCourses, cartCourses]);\n  const isSameMonthAndYear = (date1: string, date2: string) => {\n    const d1 = new Date(date1);\n    const d2 = new Date(date2);\n    return (\n      d1.getUTCFullYear() === d2.getUTCFullYear() &&\n      d1.getUTCMonth() === d2.getUTCMonth()\n    );\n  };\n  const isAlreadyApplied = (course: CourseItem): boolean => {\n    return orders?.data?.some(\n      (order: any) =>\n        order.products?.some(\n          (product: any) =>\n            product?.course?._id === course?.course?._id &&\n          isSameMonthAndYear(product?.intake , course?.intake)\n        )\n    );\n  };\n\n  const premiumApplicationCount = orders.data.reduce((acc: number, order: any) => {\n    const premiumProducts = order.products?.filter((product: any) => product.category === \"premium application\") || [];\n    return acc + premiumProducts.length;\n  }, 0);\n  \n  const handleCardClick = (item: CourseItem) => {\n    if (selectedCourses.includes(item._id)) {\n      setSelectedCourses(selectedCourses.filter((id) => id !== item._id));\n    } else {\n      setSelectedCourses([...selectedCourses, item._id]);\n    }\n  };\n\n  const handleDeleteOpen = (item: CourseItem) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const handleRequestQuote = () => {\n    const counsellors = advisors?.data?.filter(\n      (advisor:Advisor) => advisor.info.role === \"counsellor\"\n    );\n    if (counsellors && counsellors.length > 0) {\n      const selectedId = counsellors[0];\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"advisor\",\n              data:selectedId , \n              dimensions: {\n                width: \"900px\",\n                height: \"85%\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    } else {\n      navigate(\"/profile/advisors\");\n    }\n  };\n  \n  const handleCheckout = () => {\n    const selectedCourseData = cartCourses.data.filter((item: CourseItem) =>\n      selectedCourses.includes(item._id)\n    );\n    dispatch(\n      setPopup({\n        show: true,\n        data: {\n          container: {\n            name: \"checkout\",\n            data: selectedCourseData,\n            dimensions: {\n              width: \"90%\",\n              height: \"90%\",\n            },\n          },\n          type: \"custom\",\n        }\n      }))\n  }\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        try {\n          let values = {\n            action: \"remove\",\n            category: event?.data?.course?.featured ?  \"premium application\" : \"elite application\",\n            courseId: event?.data?.course._id,\n            intake: event?.data?.intake,\n            itemId: event?.data?._id,\n          };\n          const response = await updateCart(values);\n          if (response.data.success) {\n            dispatch(setCart(response.data.data))\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: \"Product deleted successfully\",\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\",\n                      // height:\"20%\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              }))\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: response.data.message,\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\",\n                      // height:\"20%\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) { }\n        setOpen(false);\n        break;\n      // case \"checkout\":\n      //   dispatch(\n      //     setPopup({\n      //       show: true,\n      //       data: {\n      //         container: {\n      //           name: \"checkout\",\n      //           data: courseCards,\n      //           dimensions: {\n      //             width: \"90%\",\n      //             height:\"90%\"\n      //           },\n      //         },\n      //         type: \"custom\",\n      //       },\n      //     })\n      //   );\n      // break;\n      default:\n        break;\n    }\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return `${month} ${year}`;\n  };\n\n\n  return (\n    <Box>\n      <Box sx={{ height: \"65vh\", overflowY: \"scroll\", p: 1 }}>\n        <Grid container spacing={3}>\n          {cartCourses.data && cartCourses.data.length > 0 ? Array.from(\n            new Set(cartCourses.data.map((item: CourseItem, i: number) => {\n              const alreadyApplied = isAlreadyApplied(item);\n              const isSelected = selectedCourses.includes(item._id);\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  lg={5}\n                  key={item._id}\n                  sx={{ paddingLeft: { xs: 0, md: \"1rem\" } }}\n                >\n                  <CustomCard\n                    title={item?.course?.university?.location?.country}\n                    disabled={alreadyApplied}\n                    i={i}\n                  >\n                    <Box sx={{ display: \"flex\", gap: \"10px\" }}\n                     onClick={() => {\n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"mainPopup\",\n                              data: item.course,\n                              dimensions: {\n                                width: \"95%\",\n                                // height:\"80%\"\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      );\n                    }}\n                    >\n                      <img\n                        src={item.course.university.logoSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"1.5rem\",\n                          height: \"1.5rem\",\n                          borderRadius: \"10px\",\n                        }}\n                      />\n                      <Box sx={{ flex: 1 }}>\n                        <Typography\n                          fontSize=\"0.9rem\"\n                          fontWeight=\"500\"\n                          gutterBottom\n                          sx={{\n                            textOverflow: \"ellipsis\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            mb: 1.5,\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          {item.course.university.name}\n                        </Typography>\n                        <Tooltip\n                          title={item.course.name}\n                          placement=\"bottom\"\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#fff\",\n                                backgroundColor: \"#3B3F76\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\": {\n                                  marginTop: \"-5px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              fontSize: { xs: \"13px\", lg: \"14px\" },\n                              fontWeight: 500,\n                              textOverflow: \"ellipsis \",\n                              lineClamp: 1,\n                              height: \"1.5rem\",\n                              textTransform: \"capitalize\",\n                              overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              WebkitLineClamp: \"1\",\n                              WebkitBoxOrient: \"vertical\",\n                            }}\n                          >\n                            {item.course.name}\n                          </Typography>\n                        </Tooltip>\n                        <Typography\n                          component=\"span\"\n                          fontSize=\"0.8rem\"\n                          fontWeight=\"500\"\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"nowrap\",\n                            mt: 1,\n                          }}\n                        >\n                          <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                          &nbsp; Start date:{\" \"}\n                          {item.intake ? formatDate(item.intake) : \"N/A\"}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Grid\n                      container\n                      spacing={2}\n                      sx={{ mt: 1, alignItems: \"center\" }}\n                    >\n                      <Grid\n                        item\n                        xs={6}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {!item.course.featured && !alreadyApplied && premiumApplicationCount < 5 && (\n                          <Button\n                            sx={{\n                              // width: \"100%\",\n                              color: \"#fff\",\n                              background:\n                                \"linear-gradient(90deg, #0252B2 0%, #561D6C 100%)\",\n                              fontWeight: \"500\",\n                              fontSize: \"10px\",\n                              textTransform: \"none\",\n                              borderRadius: \"15px\",\n                              padding: \"3px 0\",\n                              width: \"100px\"\n                            }}\n                          >\n                            Apply for free\n                          </Button>\n                        )}\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\",\n                          alignItems: \"center\",\n                          gap: \"8px\",\n                        }}\n                      >\n                        {alreadyApplied ? (\n                          <>\n                            <img\n                              src={Images.deleteIcon}\n                              alt=\"delete\"\n                              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                              onClick={() => handleDeleteOpen(item)}\n                            />\n                            <CheckCircleIcon\n                              sx={{\n                                fontSize: \"1.25rem\",\n                                color: \"#02b524\",\n                              }}\n                            />\n                            <Typography\n                              sx={{\n                                fontSize: \"12px\",\n                                color: \"#02b524\",\n                                textTransform: \"capitalize\",\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              Already placed\n                            </Typography>\n                          </>\n                        ) : (\n                          <>\n                            <img\n                              src={Images.deleteIcon}\n                              alt=\"delete\"\n                              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                              onClick={() => handleDeleteOpen(item)}\n                            />\n                            {isSelected ? (\n                              <CheckCircleIcon\n                                sx={{\n                                  fontSize: \"1.35rem\",\n                                  color: \"#1C1F40\",\n                                }}\n                                onClick={() => handleCardClick(item)}\n                              />\n                            ) : (\n                              <Box\n                                sx={{\n                                  width: '1.1rem',\n                                  height: '1.1rem',\n                                  borderRadius: '50%',\n                                  border: '1px solid #000',\n                                  marginTop: '3px',\n                                  marginLeft: \"5px\"\n                                }}\n                                onClick={() =>\n                                  handleCardClick(item)\n                                }\n                              ></Box>\n                            )}\n                          </>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </CustomCard>\n                </Grid>\n              );\n            }))\n          ) : (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"60vh\",\n                minHeight: \"350px\",\n              }}\n            >\n              <img\n                src={Images.Confused}\n                alt=\"noData\"\n                style={{ width: \"220px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n              />\n              <Typography\n                sx={{\n                  mb: 1,\n                  fontSize: \"1.6rem\",\n                  fontWeight: 600,\n                  color: \"#495052\",\n                  textAlign: \"center\",\n                }}\n              >\n                Your Cart Is Empty\n              </Typography>\n              <Typography\n                sx={{\n                  mb: 3,\n                  fontSize: \"1rem\",\n                  color: \"#8E9091\",\n                  textAlign: \"center\",\n                }}\n              >\n                Looks like you haven't made your choice yet…\n              </Typography>\n              <Button\n                sx={{\n                  background: \"#F48438\",\n                  color: \"#fff\",\n                  borderRadius: \"20px\",\n                  px: 4,\n                  py: 1,\n                  fontWeight: 500,\n                  fontSize: \"1rem\",\n                  textTransform: \"none\",\n                  boxShadow: \"none\",\n                  \"&:hover\": {\n                    background: \"#F48438\",\n                  },\n                }}\n                onClick={() => {\n                  const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                    1\n                  )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                  const subDisciUrl = window.btoa(subDisUrl);\n                  navigate(`/explore?${subDisciUrl}`);\n                }}\n              >\n                Add products\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      {cartCourses.data && cartCourses.data.length > 0 && (\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: { xs: \"column\", sm: \"row\" },\n            gap: { xs: 2, md: 2 },\n            mb: 2,\n            p: 1,\n          }}\n        >\n          <Button\n            sx={[secondaryButton, { width: \"200px\" }]}\n            onClick={handleRequestQuote}\n          >\n            Request a Quote\n          </Button>\n\n\n          {isProceedDisabled ? (\n            <Tooltip\n              slotProps={{\n                tooltip: {\n                  sx: {\n                    color: \"#fff\",\n                    backgroundColor: \"#3B3F76\",\n                    boxShadow: 1,\n                    \"&.MuiTooltip-tooltip\": {\n                      marginTop: \"-5px !important\",\n                    },\n                  },\n                },\n              }}\n              title=\"Select courses to proceed\"\n              placement=\"top\"\n            >\n              <span style={{cursor:\"pointer\"}}>\n                <Button\n                  sx={[globalButton, { width: \"200px\", background: \"#dfe1e6\" }]}\n                  disabled\n                >\n                  Proceed to Checkout\n                </Button>\n              </span>\n            </Tooltip>\n          ) : (\n            <Button\n              sx={[globalButton, { width: \"200px\", background: \"#3b3f76\" }]}\n              onClick={handleCheckout}\n            >\n              Proceed to Checkout\n            </Button>\n          )}\n\n        </Box>\n      )}\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => eventHandler({ name: \"cart\", data: deleteItem }),\n          title: \"Are you sure you want to delete this from your cart?\",\n          content:\n            \"You're just a few steps away from applying to universities.\",\n        }}\n      />\n\n    </Box>\n  );\n};\n\n\n\nconst Cart = () => {\n  return (\n    <div  >\n      <Box >\n        <Box >\n          <Shortlisted />\n\n        </Box>\n      </Box>\n\n    </div>\n  )\n}\n\nexport default Cart\n\n\n","import { Box, Button, Divider, Grid, Stack, Tooltip, Typography } from '@mui/material'\nimport React from 'react'\nimport Images from 'src/assets'\nimport { useAppSelector } from 'src/assets/hooks'\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport CustomCard from 'src/genericComponents/customCard'\nimport Razor from './checkout/razor';\nimport { setWordCase } from 'src/assets/library';\nimport { useNavigate } from 'react-router-dom';\n\nconst Orders = () => {\n  const navigate=useNavigate()\n  const orders = useAppSelector(store => store.orders)\n  function formatDate(date: Date): string {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); \n    const year = date.getFullYear();\n\n    return `${day}-${month}-${year}`;\n  }\n  function date(date: Date) {\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return month + \" \" + year;\n  }\n  return (\n    <div style={{\n      height: \"80vh\", \n      overflowY: \"scroll\",\n      padding: \"2rem\"\n    }}>\n      <Box>\n      {/* <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#75ECE5\", mb: 2 }}>\n        <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n          Orders\n        </Typography>\n      </Typography> */}\n      <Grid container spacing={3} sx={{}}>\n        {orders?.data?.length > 0 ? (\n          orders?.data?.map((item, i) => (\n            <React.Fragment key={i}>\n              <Grid item xs={12}>\n                <Box sx={{}}>\n                  <Grid container spacing={2}>\n                    {item?.products?.map((product, j) => (\n                      <Grid item xs={12} md={6} lg={4} key={j}>\n                        <CustomCard title={product.course?.university?.location?.country} i={j}>\n                          <Box>\n                            {product?.cancellationRequest === true ? (\n                              <img\n                                src={Images.cancelledIcon}\n                                alt=\"cancelled\"\n                                style={{\n                                  position: \"absolute\",\n                                  top: \"-28px\",\n                                  right: \"-26px\",\n                                }}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                            <Box sx={{ display: \"flex\", gap: \"10px\", width: \"100%\" }}>\n                              <img\n                                src={product.course?.university?.logoSrc || Images.establishedYear}\n                                alt=\"logo\"\n                                style={{\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  marginRight: \"5px\",\n                                  borderRadius: \"10px\",\n                                }}\n                              />\n                              <div style={{ flex: 1 }}>\n                                <Tooltip\n                                  slotProps={{\n                                    tooltip: {\n                                      sx: {\n                                        color: \"#fff\",\n                                        backgroundColor: \"#3B3F76\",\n                                        boxShadow: 1,\n                                        \"&.MuiTooltip-tooltip\": {\n                                          marginTop: \"-5px !important\",\n                                        },\n                                      },\n                                    },\n                                  }}\n                                  title={product?.course?.name}\n                                  placement=\"bottom\"\n                                >\n                                  <Typography\n                                    fontSize=\"0.9rem\"\n                                    sx={{\n                                      fontSize: { xs: \"13px\", lg: \"14px\" },\n                                      fontWeight: 500,\n                                      textOverflow: \"ellipsis \",\n                                      lineClamp: 1,\n                                      height: \"1.5rem\",\n                                      textTransform: \"capitalize\",\n                                      overflow: \"hidden\",\n                                      display: \"-webkit-box\",\n                                      WebkitLineClamp: \"1\",\n                                      WebkitBoxOrient: \"vertical\",\n                                    }}\n                                  >\n                                    {product?.course?.name}\n                                  </Typography>\n                                </Tooltip>\n                                <Typography\n                                  fontSize=\"0.9rem\"\n                                  sx={{\n                                    fontSize: { xs: \"12px\", lg: \"12px\" },\n                                    height: \"1.5rem\",\n                                    textTransform: \"capitalize\",\n                                    display: \"-webkit-box\",\n                                    WebkitBoxOrient: \"vertical\",\n                                    my: 1,\n                                    color:\"#495052\"\n                                  }}\n                                >\n                                  {product.course?.university?.name}\n\n                                </Typography>\n                              </div>\n                            </Box>\n                            <Stack\n                              direction=\"row\"\n                              justifyContent=\"end\"\n                              spacing={1}\n                              sx={{ mt: 1,mr:6 }}\n                            >\n                              <Typography\n                                component=\"span\"\n                                fontSize=\"0.8rem\"\n                                fontWeight=\"500\"\n                                sx={{\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"nowrap\",\n                                  color:\"#8E9091\"\n                                }}\n                              >\n                                <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                                &nbsp; Start date :\n                                {product?.intake ? date(new Date(product?.intake)) : null}\n                              </Typography>\n                            </Stack>\n                            {/* <p\n                        style={{\n                          position: \"absolute\",\n                          left: \"10px\",\n                          bottom: \"10%\",\n                          background: \"#B7B7E7\",\n                          width: \"1.1rem\",\n                          height: \"1.1rem\",\n                          margin: 0,\n                          borderBottomLeftRadius: \"20px\",\n                          transform: \"rotate(45deg)\",\n                        }}\n                      ></p> */}\n                          </Box>\n                        </CustomCard>\n                      </Grid>\n                    ))}\n                  </Grid>\n                  <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <Box>\n                      {item?.paymentDetails?.paymentStatus !== \"paid\" ? <Razor data={item?._id} total={Math.floor(item?.paymentDetails?.amount / 100).toLocaleString(\"en-US\")} type=\"reorder\" /> : \"\"}\n                    </Box>\n                    <Box sx={{ float: 'right' }}>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\">Order total:{item?.paymentDetails?.currency} {Math.floor(item?.paymentDetails?.amount / 100).toLocaleString(\"en-US\")}</Typography>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\" sx={{ color: item?.paymentDetails?.paymentStatus === \"paid\" ? \"green\" : \"red\" }}>Status:{setWordCase(item?.paymentDetails?.paymentStatus)}</Typography>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\">Order placed: {item?.paymentDetails?.created_at ? formatDate(new Date(item?.paymentDetails?.created_at)) : \"N/A\"}</Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              {i < orders.data.length - 1 && (\n                <Grid item xs={12}>\n                  <Divider />\n                </Grid>\n              )}\n            </React.Fragment>\n          ))\n        )  : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n            }}\n          >\n            <img\n              src={Images.Confused}\n              alt=\"noData\"\n              style={{ width: \"220px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n            />\n            <Typography\n              sx={{\n                mb: 1,\n                fontSize: \"1.6rem\",\n                fontWeight: 600,\n                color: \"#495052\",\n                textAlign: \"center\",\n              }}\n            >\n              oops!\n            </Typography>\n            <Typography\n              sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n              }}\n            >\n             You haven't placed any order yet-start exploring and find something you love!\n            </Typography>\n            <Button\n              sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                \"&:hover\": {\n                  background: \"#F48438\",\n                },\n              }}\n              onClick={() => {\n                const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                  1\n                )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              Add products\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n    </div>\n  )\n}\n\nexport default Orders","import { Box } from \"@mui/material\";\nimport ProfileSidebar from \"./profileSidebar\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Documents from \"./section/documents\";\nimport Universities from \"./section/universities/universities\";\nimport Dashboard from \"./section/dashboard\";\nimport ProfileSection from \"./section/profileSection\";\nimport AppliedUniversities from \"./section/universities/appliedUniversities\";\nimport Recommended from \"./section/recommend\";\nimport Advisors from \"./section/advisors\";\nimport Cart from \"./section/cart\";\nimport Orders from \"./section/orders\";\n\nconst ProfileRightSide = () => {\n  return (\n    <Routes>\n      <Route path=\"dashboard\" element={<Dashboard />} />\n      <Route path=\"applications\" element={<AppliedUniversities />} />\n      <Route path=\"shortlisted\" element={<Universities />} />\n      <Route path=\"personal\" element={<ProfileSection initialTab={0} />} />\n      <Route path=\"education\" element={<ProfileSection initialTab={1} />} />\n      <Route path=\"test\" element={<ProfileSection initialTab={2}/>} />\n      <Route path=\"workexperience\" element={<ProfileSection initialTab={3}/>} />\n      <Route path=\"preference\" element={<ProfileSection initialTab={4}/>} />\n      <Route path=\"recommendedCourses/:id\" element={<Recommended />} />\n      <Route path=\"experts\" element={<Advisors />} />\n      <Route path=\"documents\" element={<Documents />} />\n      <Route path=\"cart\" element={<Cart />} />\n      <Route path=\"orders\" element={<Orders />} />\n    </Routes>\n  );\n};\n\nconst ProfileLayout = () => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\", \n        width: \"100%\",\n        minHeight: \"100vh\", // Only minHeight, not height\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          width: \"100%\",\n          maxWidth: \"1440px\",\n          // height: \"100%\", // Remove fixed height\n        }}\n      >\n        {/* Sidebar */}\n        <Box\n          sx={{\n            width: { xs: \"60px\", md: \"220px\" }, \n            position: \"fixed\",\n            left: 16,\n            height: \"100vh\",\n            zIndex: 10,\n            paddingTop: \"3rem\",\n          }}\n        >\n          <ProfileSidebar />\n        </Box>\n\n        {/* Main Content */}\n        <Box\n          sx={{\n            marginLeft: { xs: \"70px\", md: \"230px\" },\n            flexGrow: 1,\n            // overflowY: \"auto\",\n            p: 2, \n            // height: \"100vh\", \n            backgroundColor: \"#fff\",\n            marginTop:\"5rem\"\n\n          }}\n        >\n          <ProfileRightSide />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfileLayout;\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { useLocation, Link, Location } from \"react-router-dom\";\nimport {\n  Avatar,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Images from \"../../assets\";\nimport { useAppSelector } from \"../../assets/hooks\";\n\nconst profileList = [\n  { path: \"/profile/dashboard\", name: \"Dashboard\", icon: <img src={Images.dashboard} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/personal\", name: \"Profile\", icon: <img src={Images.personal} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/documents\", name: \"Documents\", icon: <img src={Images.documents} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/applications\", name: \"My Products\", icon: <img src={Images.products} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/recommendedCourses/Safe\", name: \"Recommendation\", icon: <img src={Images.recommendations} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/shortlisted\", name: \"Favourites\", icon: <img src={Images.wishlist} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/experts\", name: \"Experts\", icon: <img src={Images.experts} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/orders\", name: \"My Orders\", icon: <img src={Images.orders} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/cart\", name: \"Cart\", icon: <img src={Images.cart} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n];\n\ninterface SidebarContentProps {\n  location: Location;\n  profile: any; // Replace 'any' with your profile type if available\n  isRecommendedCoursesActive: boolean;\n  onClose?: () => void;\n}\n\nconst SidebarContent = ({ location, profile, isRecommendedCoursesActive, onClose }: SidebarContentProps) => (\n  <Box\n    sx={{\n      width: 260,\n      minHeight: 600,\n      py: 2,\n      bgcolor: '#fff',\n      borderRadius: '20px',\n      border: '1.5px solid #E6E6E6',\n      px: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      boxShadow: 'none',\n    }}\n  >\n    {/* Profile Section */}\n    <Box sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      mb: 2.5,\n      width: '100%',\n      bgcolor: '#EFF4F7',\n      borderTopLeftRadius: '20px',\n      borderTopRightRadius: '20px',\n      pt: 2.5,\n      pb: 2,\n    }}>\n      <Avatar\n        src={profile.data?.displayPicSrc}\n        alt=\"profile\"\n        sx={{ width: 54, height: 54, mb: 1.2 }}\n      />\n      <Typography\n        color=\"#495052\"\n        sx={{ fontWeight: 700, fontSize: '1.13rem', mb: 0.2, textAlign: 'center', letterSpacing: 0.1 }}\n      >\n        {profile?.data?.firstName} {profile?.data?.lastName}\n      </Typography>\n      <Typography sx={{ color: '#5C6163', fontSize: '0.97rem', textAlign: 'center', fontWeight: 400 }}>\n        {profile?.data?.email}\n      </Typography>\n    </Box>\n    {/* Menu Items */}\n    <Box sx={{ width: '90%', display: 'flex', flexDirection: 'column', gap: 0 }}>\n      {profileList.map((item, idx) => {\n        const isActive = (location.pathname === item.path) || (item.name === 'Recommendation' && isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses'));\n        return (\n          <React.Fragment key={item.name}>\n            <Box\n              component={Link}\n              to={item.path}\n              onClick={onClose}\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1.7,\n                px: 3,\n                py: 1.7,\n                borderRadius: '12px',\n                cursor: 'pointer',\n                bgcolor: isActive ? '#70A6B2' : 'transparent',\n                fontWeight: isActive ? 700 : 500,\n                color: isActive ? '#ffff' : '#495052',\n                transition: 'background 0.2s, color 0.2s',\n                boxSizing: 'border-box',\n                textDecoration: 'none',\n                '&:hover': {\n                  ...(isActive\n                    ? { bgcolor: '#70A6B2', color: '#fff' }\n                    : { bgcolor: '#EFF4F7', color: '#3B3F76' }),\n                },\n                textTransform: 'none',\n                fontSize: '1.01rem',\n                justifyContent: 'flex-start',\n              }}\n            >\n              <Box\n                sx={{\n                  minWidth: 28,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  '& img': {\n                    filter: isActive ? 'brightness(0) invert(1)' : 'none',\n                    transition: 'filter 0.2s',\n                  },\n                }}\n              >\n                {item.icon}\n              </Box>\n              <Typography\n                sx={{\n                  fontWeight: isActive ? 700 : 500,\n                  fontSize: '1.01rem',\n                  color: 'inherit',\n                  textTransform: 'capitalize',\n                  ml: 1,\n                }}\n              >\n                {item.name}\n              </Typography>\n            </Box>\n            {idx !== profileList.length - 1 && (\n              <Box sx={{ width: '80%', mx: 'auto', borderBottom: '1px solid #E6E6E6' }} />\n            )}\n          </React.Fragment>\n        );\n      })}\n    </Box>\n  </Box>\n);\n\nconst ProfileSidebar = ({ mobileOnly = false, forDrawer = false, onClose }: { mobileOnly?: boolean, forDrawer?: boolean, onClose?: () => void }) => {\n  const location = useLocation();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const profile = useAppSelector((state) => state.sharedInfo);\n  const isRecommendedCoursesActive = location.pathname.startsWith('/profile/recommendedCourses');\n\n  // For mobile, return null unless it's for the drawer\n  if (isMobile && !forDrawer) {\n    return null;\n  }\n  \n  // If it's for the drawer (mobile), return the sidebar content\n  if (isMobile && forDrawer) {\n    return <SidebarContent location={location} profile={profile} isRecommendedCoursesActive={isRecommendedCoursesActive} onClose={onClose} />;\n  }\n\n  // Desktop sidebar\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        width: 260,\n        minHeight: 600,\n        py: 2,\n      }}\n    >\n      <SidebarContent location={location} profile={profile} isRecommendedCoursesActive={isRecommendedCoursesActive} />\n    </Box>\n  );\n};\n\nexport default ProfileSidebar;\n"],"names":["ExpandCard","_ref","title","children","imageUrl","open","setOpen","useState","_jsx","_Fragment","_jsxs","Card","sx","expandCardStyles","cardCollapse","boxShadow","CardHeader","onClick","cardTitle","color","avatar","Box","cardImg","ListItemIcon","display","justifyContent","fontWeight","action","IconButton","transform","transition","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","cardContent","CardContent","padding","Container","_testScoresGRE$docId","_testScoresGRE$docId$","_testScoresGMAT$docId","_testScoresSAT$docId$","_testScoresACT$docId$","data","dispatch","useAppDispatch","testscores","useAppSelector","state","findTestScoresByName","name","find","item","testScoresGRE","testScoresGMAT","testScoresACT","testScoresSAT","Grid","container","alignItems","borderRadius","background","mb","xs","Typography","docId","src","Images","pdfIcon","alt","style","width","FileName","Stack","direction","spacing","marginRight","VisibilityOutlinedIcon","fontSize","_testScoresGRE$docId2","_testScoresGRE$docId3","setPopup","show","preview_url","dimensions","type","_testScoresGMAT$docId2","_testScoresGMAT$docId3","_testScoresSAT$docId","_testScoresSAT$docId$2","_testScoresACT$docId","_testScoresACT$docId$2","_testScoresTOEFL$docI","_testScoresIELTS$docI","_testScoresDET$docId$","_testScoresPTE$docId$","testScoresTOEFL","testScoresIELTS","testScoresDET","testScoresPTE","_testScoresTOEFL$docI2","_testScoresTOEFL$docI3","_testScoresIELTS$docI2","_testScoresIELTS$docI3","_testScoresDET$docId","_testScoresDET$docId$2","_testScoresPTE$docId","_testScoresPTE$docId$2","DocumentItem","_ref2","_doc$data","doc","handleDelete","originalname","_doc$data2","length","map","_id","OtherDocs","_documents$data","_documents$data$test","_documents$data2","_documents$data2$test","_documents$data3","documents","profile","image","position","top","left","component","Aptitude","test","general","EnglishTest","languageProf","WorkExperienceDocs","workExperiences","Accordion","isOpen","onToggle","p","overflow","marginBottom","cursor","e","stopPropagation","size","ExpandLessIcon","openIndex","setOpenIndex","deleteItem","setDeleteItem","identifier","setIdentifier","handleDeleteOpen","useRef","key","label","_data$doc$key","_data$doc$key$data","_data$doc$key2","_data$doc$key2$data","DeleteOutlineOutlinedIcon","concat","FileUploadSection","_ref3","docData","docPath","index","prevIndex","handleToggle","textAlign","bachelors","masters","idx","ConfirmDialog","handleClose","additionalData","onSubmit","async","fieldPath","deleteId","response","deleteUploadProfile","documentId","setDocuments","error","console","content","inputFileRef","handleSubmit","loading","setLoading","onChange","event","fieldIdentifier","handleFileSubmit","ref","accept","standardLoader","height","Button","textTransform","_inputFileRef$current","current","click","FileUploadOutlinedIcon","inputFileRefs","resume","passportBD","passportADD","file","target","files","allowedFileTypes","includes","formData","FormData","append","uploadProfile","docs","err","Document","TranscriptDocs","PersonalDocs","personal","AcademicDocs","academic","Documents","flexDirection","variant","React","logoSrc","universityName","courseName","countryName","actions","border","minHeight","right","backgroundColor","px","py","gap","mt","Shortlisted","_shortlistedCourses$d","_shortlistedCourses$d2","navigate","useNavigate","shortlistedCourses","shortlistedcourses","setDeleteId","userAuthStatus","overflowY","i","_item$startDate","sm","lg","paddingLeft","md","CustomCardHOC","university","location","country","_userAuthStatus$data","_userAuthStatus$data2","isAuthorized","isRegistered","eventHandler","ShoppingCartOutlinedIcon","deleteIcon","id","whiteSpace","TimerIcon","startDate","monthNames","courseStartingMonth","join","Confused","subDisUrl","encodeURIComponent","JSON","stringify","subDisciUrl","window","btoa","values","courseId","addToShortList","success","setShortlisted","Universities","UpcomingSessions","_meetings$data","_meetings$data2","meetings","joinNowClick","link","filteredEvents","filter","_event$data","startTime","Date","start","dateTime","currentTime","status","rescheduledEvents","_event$data2","hasEvents","_data$data","_data$data2","_data$member","_data$data3","_data$data4","log","endTime","end","isEventInProgress","member","role","setWordCase","description","toLocaleString","month","year","day","hour","minute","hour12","hangoutLink","disabled","bottom","_data$data5","_data$data6","_data$member2","_data$member3","_data$member4","_data$data7","_data$data8","_data$data9","my","Avatar","displayPicSrc","marginLeft","getAdvisorTitle","firstName","gutterBottom","Tooltip","slotProps","tooltip","placement","InfoIcon","ml","float","Calender","marginTop","modifyBooking","meetingId","option","updatemeetings","message","BookedSlots","CardPage","_recommendations$data","_recommendations$data2","_recommendations$data3","_recommendations$data4","_recommendations$data5","_recommendations$data6","_shortlisted$data","_applied$data","_recommendations$data7","_recommendations$data8","_recommendations$data9","_recommendations$data10","shortlisted","applied","applications","recommendations","ambitious","possibilityOfAdmit","safe","moderate","sections","items","count","icon","BookDashboard","UniDashboard","SafeDashboard","ModerateDashboard","AmbitiousDashboard","pl","bgcolor","minWidth","noRecommend","Checklist","_applications$data","inputFile","imageClick","_inputFile$current","filteredApplications","_item$docChecklist","docChecklist","some","docItem","isChecked","_item$docChecklist2","_item$docChecklist3","_item$course","_item$course$universi","_item$course2","_docItem$doc2","_docItem$doc2$data","margin","borderBottom","course","_docItem$doc","_docItem$doc$data","textOverflow","className","undefined","uploadApplicationDocs","updateApplication","InfoOutlinedIcon","desc","maxWidth","zIndex","Events","advisor","events","Array","isArray","date","organizer","time","maxHeight","pr","flex","borderColor","Advisors","_advisor$data","_advisor$data2","_advisor$info","_advisor$info2","_advisor$info3","info","mr","lineHeight","normalizeType","carouselData","subtitle","button","MoneyBag","bg","SopDashboard","TestDashboard","ProfileDashboard","ScholarshipCarousel","setIndex","useEffect","timer","setTimeout","prev","clearTimeout","card","_","mx","Dashboard","options","value","placeholder","searchEnabled","searchQuery","setSearchQuery","filteredOptions","useMemo","toLowerCase","FormControl","fullWidth","Select","labelId","displayEmpty","onClose","IconComponent","renderValue","selected","MenuProps","PaperProps","autoFocus","ListSubheader","TextField","InputProps","startAdornment","InputAdornment","SearchIcon","onKeyDown","MenuItem","_profile$data","countries","setCountries","states","setStates","cities","setCities","institutions","setInstitutions","institutionName","setInstitutionName","instituteName","universities","setUniversities","affiliatedUniversity","setAffiliatedUniversity","programMajor","setProgramMAjor","degreeName","setDegreeName","degreeProgram","ieh","setIeh","institutionId","setInstitutionId","gradingSystem","setGradingSystem","totalScore","setTotalScore","store","iehStatus","setIEHStatus","IEH","hasSearched","setHasSearched","loader","setLoader","gradingSystemData","percentage","cgpa1","cgpa2","cgpa3","gpa","grade","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","city","searchTerm","setSearchTerm","countryInfo","c","stateInfo","s","allCountries","Country","getAllCountries","fetchCountries","profileSchema","Yup","shape","underGraduation","required","endDate","when","is","then","schema","nullable","this","parent","getFullYear","getMonth","getDate","_stateInfo$countryCod","_stateInfo$isoCode","statesOfCountry","State","isoCode","citiesOfState","City","getCitiesOfState","countryCode","fetchStateAndCities","handleInputChange","getSearchUniversityDetails","replaceSpecialChars","_response$data","catch","str","filteredString","replaceAll","trim","customField","setCustomField","ITEM_HEIGHT","initialValues","maxScore","backlogs","isCompleted","custom","specializations","setSpecializations","selectedSpecializations","bachelorCourses","filteredCities","cityHandle","newCity","handleOptionClick","_option$IEH","fieldName","setFieldName","InstitutionName","exists","submitHandler","editProfile","setUnderGraduation","education","formEdit","setFormEdit","Formik","validationSchema","enableReinitialize","_values$underGraduati","_values$underGraduati2","touched","errors","handleChange","setFieldValue","Form","InputLabel","defaultValue","handleDegreeChange","selectedDegree","Object","keys","degree","ErrorMessage","autoComplete","endAdornment","CircularProgress","Close","_option$IEH2","Star","District","verificationStatus","globalButton","handleGradingSystemChange","inputProps","step","min","max","list","onInput","parseFloat","Infinity","toString","RadioGroup","row","FormControlLabel","control","Radio","DatePickerComponent","selectedDate","toISOString","slice","maxDate","placeholderText","minDate","setFullYear","twelveYearsFromStartDate","CustomField","ReusableDropdown","CustomButton","split","_data","_data2","_data3","_data4","_data5","_data6","_data7","_data8","_data9","_data10","_data11","_data12","_data13","_data14","_data15","_data16","_data17","_data18","_data19","_data20","_data21","_data22","stream","setStream","board","setBoard","plus2","languageOfInstruction","submit","updatedData","setPlus2","_values$plus","_values$plus2","resetForm","boards","languages","school","setSchool","_values$school","_values$school2","profileData","postGradData","postGraduation","specialization","pgCourseList","setPostGraduation","_values$postGraduatio","_values$postGraduatio2","_touched$postGraduati","_errors$postGraduatio","_errors$postGraduatio2","Education","educationhistory","useProfileData","setProfileData","fetchProfileData","useCallback","axios","get","headers","Authorization","localStorage","getItem","setItem","PostGrad","Bachelors","Diploma","School","m","props","_testscoresData$data2","_testscoresData$data5","_englishTestInfo$find2","_englishForm$scores$","_englishForm$scores$2","_englishForm$scores$3","_englishForm$scores$4","_englishForm$document","_greForm$scores$","_greForm$scores$2","_greForm$scores$3","_greForm$document","setQaTab","qaTab","safeMissingFields","missingFields","setError","indexOf","testscoresData","sharedInfo","scoreCounts","setScoreCounts","englishTest","_test$name2","editMode","setEditMode","greEditMode","setGreEditMode","isGRESelected","setIsGRESelected","selectedGRETest","setSelectedGRETest","isEnglishSelected","setIsEnglishSelected","selectedEnglishTest","setSelectedEnglishTest","englishEditMode","setEnglishEditMode","greTestData","setGreTestData","englishTestData","setEnglishTestData","englishForm","setEnglishForm","greForm","setGreForm","showEnglishTestForm","setShowEnglishTestForm","showGRETestForm","setShowGRETestForm","isAddingEnglishTest","setIsAddingEnglishTest","isAddingGRETest","setIsAddingGRETest","englishErrors","setEnglishErrors","greErrors","setGreErrors","_testscoresData$data3","_testscoresData$data4","languageTests","item2","fullForm","scores","testData","mappedScores","range","testDate","document","total","isNaN","Number","reduce","acc","push","String","greTest","_test$name3","englishTotalScoreBox","_englishTestInfo$find","englishTestInfo","fullform","text","_test$name4","greTotalScoreBox","score","Divider","Dialog","CloseIcon","radio","f","toUpperCase","InputLabelProps","shrink","ArrowUpwardIcon","hidden","_e$target$files","readOnly","_englishTestInfo$find3","validateEnglish","forEach","val","updatedTest","found","newTests","t","_t$docId","_t$_id","settestScores","tests","_e$target$files2","validateGRE","_t$docId2","_t$_id2","Preferences","_Preferences$data","_Preferences$data2","_Preferences$data3","_Preferences$data4","_Preferences$data5","_Preferences$data6","_Preferences$data7","_advisors$data","_Preferences$data8","_Preferences$data8$co","_budgets$find","_Preferences$data11","_Preferences$data12","_Preferences$data13","_budgets$find2","preferences","educationDetails","intake","setIntake","setYear","setMonth","intakeError","setIntakeError","courseData","setCourseData","subCategory","countryData","setCountryData","selectedCurrency","setSelectedCurrency","currency","advisors","assignedCountries","flatMap","unassignedCountries","preference","matches","budget","lower","upper","moreThan","oneOf","degreeType","of","currencies","currencySymbols","symbol","_event$data$newValue","newValue","budgets","_Preferences$data9","_Preferences$data9$bu","_Preferences$data10","setpreferences","_touched$preference","_errors$preference","_touched$preference2","_errors$preference2","_touched$preference3","_errors$preference3","_touched$preference4","_errors$preference4","_touched$preference5","_errors$preference5","Autocomplete","multiple","limitTags","subDisciplines","getOptionLabel","filterSelectedOptions","ListboxProps","renderInput","params","countryList","_advisors$data2","requestAdvisor","newAdvisor","existingAdvisor","updateAdvisorInfo","addAdvisorInfo","chat","addChats","addAdvisors","paddingRight","_Preferences$data14","_Preferences$data14$b","_Preferences$data15","_Preferences$data15$b","Skills","skills","skilldata","setSkillsData","disableClearable","skillsList","handleOptionChange","setskills","secondaryButton","activity","otherwise","validationSchemaArray","ExtraCurricular","_extracurricular$data","extracurricular","extracurriculum","extraCurriculumActivities","designation","_item$participatedPub","_item$participationLe","participatedPublication","participationLevel","activities","researchPapers","getProfile","setExtraCurriculum","fetchExtraCurricular","submitForm","activitiesWithPublication","_item$participatedPub2","_item$participationLe2","setSubmitting","handleBlur","isValid","dirty","FieldArray","remove","Field","as","onBlur","getTime","paper","journal","authors","familyDetails","GuardianFirstName","GuardianLastName","GuardianOccupation","RelationshipWithStudent","GuardianContactNumber","number","phoneNumber","parsePhoneNumberFromString","Family","_familyData$data","familyData","familyInfo","GuardianEmail","GuardianQualification","family","setfamilyInfo","familyMember","onkeydown","_familyMember$Guardia","preventDefault","maxLength","_familyMember$Guardia2","ReactPhoneInput","dialCode","getNewFamilyArrayAfterDelete","arr","newArr","splice","_member$GuardianConta","_member$GuardianConta2","WorkExperiences","_workExperienceData$d","_workExperienceData$d3","setdoc","load","setLoad","workExperienceData","workexperience","WorkExperienceDetails","setWorkExperienceDetails","companyName","sector","workStatus","setWorkStatus","work","setErrors","workExperience","setWorkExperience","fetchWorkExperience","newWorkExperienceDetails","newErrors","_response$data$data$w","prevDetails","newDetails","prevErrors","newWorkStatus","validateForm","detail","detailErrors","lastDoc","updatedWorkExperienceDetails","getTotalWorkExperienceInMonths","exp","months","WorkExperienceMember","_errors$index","_errors$index2","_errors$index3","_errors$index4","_errors$index5","_errors$index6","_errors$index7","_errors$index8","_WorkExperienceMember","_WorkExperienceMember2","_errors$index9","_errors$index10","_errors$index11","_workExperienceData$d2","helperText","industrySector","newWorkExperience","workTypes","_inputFile$current2","startIcon","Info","_WorkExperienceMember3","_WorkExperienceMember4","_exp$docId","_exp$docId$data","PersonalDetails","_verification$data","_verification$data2","_verification$data2$e","_personalInfo$data","_sharedInfo$data","_sharedInfo$data2","_sharedInfo$data3","_personalInfo$data2","_personalInfo$data3","_personalInfo$data4","_personalInfo$data5","_personalInfo$data6","_personalInfo$data7","_personalInfo$data8","_personalInfo$data9","_sharedInfo$data9","_sharedInfo$data10","_sharedInfo$data11","_sharedInfo$data12","_sharedInfo$data13","_sharedInfo$data14","_sharedInfo$data15","_personalInfo$data12","_personalInfo$data13","_personalInfo$data14","_personalInfo$data15","_personalInfo$data16","_sharedInfo$data16","_sharedInfo$data17","_sharedInfo$data17$ph","_sharedInfo$data18","_sharedInfo$data18$ph","_sharedInfo$data19","_personalInfo$data17","_personalInfo$data18","_personalInfo$data19","_personalInfo$data20","_personalInfo$data21","verification","phoneStatus","phoneLoginOtp","verified","emailStatus","emailLoginOtp","personalInfo","refused","setRefused","visaRejectedDetails","lastName","email","personalDetails","DOB","Gender","nationality","countyOfBirth","maritalStatus","validPassport","validPermit","_personalInfo$data10","_personalInfo$data11","temporaryAddress","permanentAddress","_response$data$data","_response$data2","_response$data2$data","_response$data3","_response$data3$data","_response$data4","_response$data4$data","_response$data5","_response$data5$data","_response$data6","_response$data6$data","_response$data7","_response$data7$data","_response$data8","_response$data8$data","_response$data9","_response$data9$data","_response$data10","_response$data10$data","_response$data11","_response$data11$data","_response$data12","_response$data12$data","_response$data13","_response$data13$data","_response$data14","_response$data14$data","_response$data15","_response$data15$data","_response$data16","_response$data16$data","_response$data17","_response$data17$data","_response$data18","_response$data18$data","_response$data19","_response$data19$data","sharedProfile","phone","LeadSource","isPlanningToTakeAcademicTest","isPlanningToTakeLanguageTest","setSharedInfo","setPersonalInfo","getMaxDate","today","_sharedInfo$data4","_sharedInfo$data5","_sharedInfo$data6","_sharedInfo$data7","_sharedInfo$data7$pho","_sharedInfo$data8","_sharedInfo$data8$pho","_touched$personalDeta","_errors$personalDetai","_touched$personalDeta2","_errors$personalDetai2","_values$firstName","Boolean","_values$lastName","VerifiedIcon","sendSms","verifyEmailPhone","nationalities","multiline","rows","pb","editHandler","Address","_personalInfo$data$te","_personalInfo$data2$t","_personalInfo$data3$t","_personalInfo$data4$p","_personalInfo$data5$p","_personalInfo$data6$p","_personalInfo$data13$","_personalInfo$data14$","_personalInfo$data15$","_personalInfo$data16$","_personalInfo$data17$","_personalInfo$data18$","_personalInfo$data19$","_personalInfo$data20$","_personalInfo$data29","_personalInfo$data29$","_personalInfo$data30","_personalInfo$data30$","_personalInfo$data31","_personalInfo$data31$","_personalInfo$data32","_personalInfo$data32$","_personalInfo$data33","_personalInfo$data33$","_personalInfo$data34","_personalInfo$data34$","_personalInfo$data35","_personalInfo$data35$","_personalInfo$data36","_personalInfo$data36$","_personalInfo$data37","_personalInfo$data37$","_personalInfo$data38","_personalInfo$data38$","_personalInfo$data39","_personalInfo$data39$","permanent","setPermanent","permanentstates","setpermanentstates","permanentcities","setpermanentCities","permanentCountry","setPermanentCountry","permanentState","setpermanentState","permanentCity","setpermanentCity","countryPInfo","stateInPfo","_stateInPfo$countryCo","_stateInPfo$isoCode","_personalInfo$data7$t","_personalInfo$data8$t","_personalInfo$data9$t","_personalInfo$data10$","_personalInfo$data11$","_personalInfo$data12$","statePInfo","pinCode","addressLine1","addressLine2","addressLine3","tempAddress","permAddress","obj","constructor","permFormEdit","setPermFormEdit","handleCancelTemp","handleCancelPerm","permfilteredCities","_touched$personalDeta3","_touched$personalDeta4","_errors$personalDetai3","_errors$personalDetai4","_touched$personalDeta5","_touched$personalDeta6","_errors$personalDetai5","_errors$personalDetai6","_touched$personalDeta7","_touched$personalDeta8","_errors$personalDetai7","_errors$personalDetai8","_personalInfo$data22","_personalInfo$data22$","_personalInfo$data23","_personalInfo$data23$","_personalInfo$data24","_personalInfo$data24$","_personalInfo$data25","_personalInfo$data25$","_personalInfo$data26","_personalInfo$data26$","_personalInfo$data27","_personalInfo$data27$","_personalInfo$data28","_personalInfo$data28$","handleTempEdit","handlePermEdit","Profile","initialTab","PermIdentityOutlinedIcon","Component","SchoolOutlinedIcon","AssignmentIcon","TestScoreForm","WorkOutlineOutlinedIcon","WorkExperience","StarBorderOutlinedIcon","Diversity3Icon","AccessibilityIcon","CustomTabs","tabs","initialValue","titleIcon","badgeColor","badgePosition","badgeStyle","rest","badgeStyles","AppliedUniversities","_applicationsData$dat","_applicationsData$dat2","applicationsData","paddingTop","_item$course2$univers","_item$course3","_item$course3$univers","_item$course3$univers2","CustomCard","stage","cancellationRequest","cancelledIcon","lineClamp","WebkitLineClamp","WebkitBoxOrient","Dull","courseList","testOptions","testOptions1","outOff","criteria","recommendEdit","setFormData","_criteria$find","_criteria$find2","_gradeScaleOptions$fi","_criteria$find3","_languageTests$find","_criteria$find4","_academicTests$find","_criteria$find5","_criteria$find6","_criteria$find7","_criteria$find7$data$","gpaData","temp","studyLevel","bachelorsScore","gradeScale","gradeScaleOptions","englishTestType","shortForm","englishTestScore","academicTestType","academicTests","academicTestScore","setRecommendEditData","field","newData","validationError","validateScores","selectedTest","opt","academicScore","selectedEngTest","englishScore","isHalfStep","Math","abs","_profile$data$tests","_languageTests$find2","_academicTests$find2","_gradeScaleOptions$fi2","_gradeScaleOptions$fi3","profileTests","tst","findIndex","_tst$name","clearedProfile","parseInt","recommendationsResponse","getRecommendations","Error","setRecommended","DialogTitle","DialogContent","renderTags","getTagProps","Chip","removeItem","SimpleTabShimmer","from","Skeleton","filterNames","fromEntries","entries","DestinationTypeEnum","Recommended","_preferences$data2","_educationhistory$dat2","_preferences$data3","_preferences$data4","_preferences$data4$su","_tabs$find","useParams","activeTab","setActiveTab","selectedFilter","setSelectedFilter","showEditModal","setShowEditModal","alignment","setAlignment","removedIds","setRemovedIds","duration","setDuration","gre","_preferences$data","_educationhistory$dat","subCategoryItem","courses","recommendationsData","courseChecked","checked","handleFilterChange","filterCourses","counsellorRecommended","_course$course","d","durationType","notInterested","filteredCourses","componentName","dependencies","arguments","renderCount","lastRenderTime","now","useSimplePerformance","regenerateForm","_educationhistory$dat3","_educationhistory$dat4","_event$data2$course","_event$data3","_event$data3$course","hideRecommendation","recommendationId","handleDeleteCard","matchedTab","tab","_item$course4","_item$course4$univers","_item$course5","_item$course5$univers","_item$course5$univers2","_item$course6","_item$course7","_item$course7$startDa","_item$course$tuitionF","_item$course$tuitionF2","_item$course$currency","isShortlisted","shortlistedCourse","badgeText","handleUniversityClick","flexShrink","objectFit","flexWrap","Calender1","substring","GraduateHat","Dollar1","tuitionFee","verticalAlign","code","Timmer","wordBreak","overflowWrap","hyphens","fullTimeDurations","FavoriteOutlinedIcon","FavoriteBorderIcon","NotInterestedOutlinedIcon","boxSizing","SimpleShimmer","Switch","select","RecommendationEditModal","_Preferences$data$cou","_advisors$data3","_item$info","_item$info2","_item$info3","_item$info4","_item$assignedCountri","_item$assignedCountri2","pt","_item$assignedCountri3","cartCourses","cart","orders","selectedCourses","setSelectedCourses","isProceedDisabled","setIsProceedDisabled","hasSelectedCourses","hasAlreadyApplied","isAlreadyApplied","_orders$data","order","_order$products","products","product","_product$course","isSameMonthAndYear","date1","date2","d1","d2","getUTCFullYear","getUTCMonth","premiumApplicationCount","_order$products2","category","handleCardClick","formatDate","dateString","Set","_item$course$universi2","alreadyApplied","isSelected","featured","CheckCircleIcon","handleRequestQuote","counsellors","selectedId","handleCheckout","selectedCourseData","_event$data$course","_event$data4","itemId","updateCart","setCart","Cart","Orders","_orders$data2","padStart","_item$products","_item$paymentDetails","_item$paymentDetails2","_item$paymentDetails3","_item$paymentDetails4","_item$paymentDetails5","_item$paymentDetails6","_item$paymentDetails7","_item$paymentDetails8","j","_product$course$unive","_product$course$unive2","_product$course2","_product$course2$univ","_product$course3","_product$course4","_product$course5","_product$course5$univ","establishedYear","paymentDetails","paymentStatus","Razor","floor","amount","created_at","ProfileRightSide","Routes","Route","path","element","ProfileSection","ProfileLayout","ProfileSidebar","flexGrow","profileList","dashboard","wishlist","experts","SidebarContent","_profile$data2","_profile$data3","_profile$data4","isRecommendedCoursesActive","borderTopLeftRadius","borderTopRightRadius","letterSpacing","isActive","pathname","startsWith","Link","to","textDecoration","mobileOnly","forDrawer","useLocation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down"],"sourceRoot":""}