{"version":3,"file":"static/js/761.d0ef1dbe.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Chat.js","../node_modules/@mui/icons-material/Description.js","../node_modules/@mui/icons-material/DoneAll.js","../node_modules/@mui/icons-material/PersonAdd.js","../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","../node_modules/@mui/material/Fab/fabClasses.js","../node_modules/@mui/material/Fab/Fab.js","../node_modules/@mui/material/Zoom/Zoom.js","../node_modules/@mui/material/SpeedDial/speedDialClasses.js","../node_modules/@mui/material/SpeedDial/SpeedDial.js","../node_modules/@mui/material/SpeedDialAction/speedDialActionClasses.js","../node_modules/@mui/material/SpeedDialAction/SpeedDialAction.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/style-to-object/src/index.ts","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/esm/index.mjs","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark/lib/parse.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/remark-parse/lib/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2M6 9h12v2H6zm8 5H6v-2h8zm4-6H6V6h12z\"\n}), 'Chat');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm2 16H8v-2h8zm0-4H8v-2h8zm-3-5V3.5L18.5 9z\"\n}), 'Description');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m18 7-1.41-1.41-6.34 6.34 1.41 1.41zm4.24-1.41L11.66 16.17 7.48 12l-1.41 1.41L11.66 19l12-12zM.41 13.41 6 19l1.41-1.41L1.83 12z\"\n}), 'DoneAll');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m-9-2V7H4v3H1v2h3v3h2v-3h3v-2zm9 4c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'PersonAdd');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme,\n  ownerState\n}) => {\n  const marginValue = ownerState.spacing && SPACINGS[ownerState.spacing] !== undefined ? SPACINGS[ownerState.spacing] : -ownerState.spacing;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: marginValue != null ? marginValue : -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(Avatar, _extends({\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map(child => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFabUtilityClass(slot) {\n  return generateUtilityClass('MuiFab', slot);\n}\nconst fabClasses = generateUtilityClasses('MuiFab', ['root', 'primary', 'secondary', 'extended', 'circular', 'focusVisible', 'disabled', 'colorInherit', 'sizeSmall', 'sizeMedium', 'sizeLarge', 'info', 'error', 'warning', 'success']);\nexport default fabClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableFocusRipple\", \"focusVisibleClassName\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport fabClasses, { getFabUtilityClass } from './fabClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    variant,\n    classes,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `size${capitalize(size)}`, color === 'inherit' ? 'colorInherit' : color]\n  };\n  const composedClasses = composeClasses(slots, getFabUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst FabRoot = styled(ButtonBase, {\n  name: 'MuiFab',\n  slot: 'Root',\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.color === 'inherit' && styles.colorInherit, styles[capitalize(ownerState.size)], styles[ownerState.color]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$palette$getCon, _theme$palette;\n  return _extends({}, theme.typography.button, {\n    minHeight: 36,\n    transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n      duration: theme.transitions.duration.short\n    }),\n    borderRadius: '50%',\n    padding: 0,\n    minWidth: 0,\n    width: 56,\n    height: 56,\n    zIndex: (theme.vars || theme).zIndex.fab,\n    boxShadow: (theme.vars || theme).shadows[6],\n    '&:active': {\n      boxShadow: (theme.vars || theme).shadows[12]\n    },\n    color: theme.vars ? theme.vars.palette.text.primary : (_theme$palette$getCon = (_theme$palette = theme.palette).getContrastText) == null ? void 0 : _theme$palette$getCon.call(_theme$palette, theme.palette.grey[300]),\n    backgroundColor: (theme.vars || theme).palette.grey[300],\n    '&:hover': {\n      backgroundColor: (theme.vars || theme).palette.grey.A100,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: (theme.vars || theme).palette.grey[300]\n      },\n      textDecoration: 'none'\n    },\n    [`&.${fabClasses.focusVisible}`]: {\n      boxShadow: (theme.vars || theme).shadows[6]\n    }\n  }, ownerState.size === 'small' && {\n    width: 40,\n    height: 40\n  }, ownerState.size === 'medium' && {\n    width: 48,\n    height: 48\n  }, ownerState.variant === 'extended' && {\n    borderRadius: 48 / 2,\n    padding: '0 16px',\n    width: 'auto',\n    minHeight: 'auto',\n    minWidth: 48,\n    height: 48\n  }, ownerState.variant === 'extended' && ownerState.size === 'small' && {\n    width: 'auto',\n    padding: '0 8px',\n    borderRadius: 34 / 2,\n    minWidth: 34,\n    height: 34\n  }, ownerState.variant === 'extended' && ownerState.size === 'medium' && {\n    width: 'auto',\n    padding: '0 16px',\n    borderRadius: 40 / 2,\n    minWidth: 40,\n    height: 40\n  }, ownerState.color === 'inherit' && {\n    color: 'inherit'\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && (theme.vars || theme).palette[ownerState.color] != null && {\n  color: (theme.vars || theme).palette[ownerState.color].contrastText,\n  backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n  '&:hover': {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}), ({\n  theme\n}) => ({\n  [`&.${fabClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled,\n    boxShadow: (theme.vars || theme).shadows[0],\n    backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n  }\n}));\nconst Fab = /*#__PURE__*/React.forwardRef(function Fab(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFab'\n  });\n  const {\n      children,\n      className,\n      color = 'default',\n      component = 'button',\n      disabled = false,\n      disableFocusRipple = false,\n      focusVisibleClassName,\n      size = 'large',\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableFocusRipple,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FabRoot, _extends({\n    className: clsx(classes.root, className),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Fab.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'error', 'info', 'inherit', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'large'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'extended']), PropTypes.string])\n} : void 0;\nexport default Fab;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst styles = {\n  entering: {\n    transform: 'none'\n  },\n  entered: {\n    transform: 'none'\n  }\n};\n\n/**\n * The Zoom transition can be used for the floating variant of the\n * [Button](/material-ui/react-button/#floating-action-buttons) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Zoom = /*#__PURE__*/React.forwardRef(function Zoom(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      addEndListener,\n      appear = true,\n      children,\n      easing,\n      in: inProp,\n      onEnter,\n      onEntered,\n      onEntering,\n      onExit,\n      onExited,\n      onExiting,\n      style,\n      timeout = defaultTimeout,\n      // eslint-disable-next-line react/prop-types\n      TransitionComponent = Transition\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node); // So the animation always start from the start.\n\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = next => {\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n    appear: appear,\n    in: inProp,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout: timeout\n  }, other, {\n    children: (state, childProps) => {\n      return /*#__PURE__*/React.cloneElement(children, _extends({\n        style: _extends({\n          transform: 'scale(0)',\n          visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Zoom.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: PropTypes.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Zoom;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSpeedDialUtilityClass(slot) {\n  return generateUtilityClass('MuiSpeedDial', slot);\n}\nconst speedDialClasses = generateUtilityClasses('MuiSpeedDial', ['root', 'fab', 'directionUp', 'directionDown', 'directionLeft', 'directionRight', 'actions', 'actionsClosed']);\nexport default speedDialClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"ref\"],\n  _excluded2 = [\"ariaLabel\", \"FabProps\", \"children\", \"className\", \"direction\", \"hidden\", \"icon\", \"onBlur\", \"onClose\", \"onFocus\", \"onKeyDown\", \"onMouseEnter\", \"onMouseLeave\", \"onOpen\", \"open\", \"openIcon\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"],\n  _excluded3 = [\"ref\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useTimeout from '@mui/utils/useTimeout';\nimport clamp from '@mui/utils/clamp';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport Zoom from '../Zoom';\nimport Fab from '../Fab';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport speedDialClasses, { getSpeedDialUtilityClass } from './speedDialClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open,\n    direction\n  } = ownerState;\n  const slots = {\n    root: ['root', `direction${capitalize(direction)}`],\n    fab: ['fab'],\n    actions: ['actions', !open && 'actionsClosed']\n  };\n  return composeClasses(slots, getSpeedDialUtilityClass, classes);\n};\nfunction getOrientation(direction) {\n  if (direction === 'up' || direction === 'down') {\n    return 'vertical';\n  }\n  if (direction === 'right' || direction === 'left') {\n    return 'horizontal';\n  }\n  return undefined;\n}\nconst dialRadius = 32;\nconst spacingActions = 16;\nconst SpeedDialRoot = styled('div', {\n  name: 'MuiSpeedDial',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`direction${capitalize(ownerState.direction)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.speedDial,\n  display: 'flex',\n  alignItems: 'center',\n  pointerEvents: 'none'\n}, ownerState.direction === 'up' && {\n  flexDirection: 'column-reverse',\n  [`& .${speedDialClasses.actions}`]: {\n    flexDirection: 'column-reverse',\n    marginBottom: -dialRadius,\n    paddingBottom: spacingActions + dialRadius\n  }\n}, ownerState.direction === 'down' && {\n  flexDirection: 'column',\n  [`& .${speedDialClasses.actions}`]: {\n    flexDirection: 'column',\n    marginTop: -dialRadius,\n    paddingTop: spacingActions + dialRadius\n  }\n}, ownerState.direction === 'left' && {\n  flexDirection: 'row-reverse',\n  [`& .${speedDialClasses.actions}`]: {\n    flexDirection: 'row-reverse',\n    marginRight: -dialRadius,\n    paddingRight: spacingActions + dialRadius\n  }\n}, ownerState.direction === 'right' && {\n  flexDirection: 'row',\n  [`& .${speedDialClasses.actions}`]: {\n    flexDirection: 'row',\n    marginLeft: -dialRadius,\n    paddingLeft: spacingActions + dialRadius\n  }\n}));\nconst SpeedDialFab = styled(Fab, {\n  name: 'MuiSpeedDial',\n  slot: 'Fab',\n  overridesResolver: (props, styles) => styles.fab\n})(() => ({\n  pointerEvents: 'auto'\n}));\nconst SpeedDialActions = styled('div', {\n  name: 'MuiSpeedDial',\n  slot: 'Actions',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.actions, !ownerState.open && styles.actionsClosed];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  pointerEvents: 'auto'\n}, !ownerState.open && {\n  transition: 'top 0s linear 0.2s',\n  pointerEvents: 'none'\n}));\nconst SpeedDial = /*#__PURE__*/React.forwardRef(function SpeedDial(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSpeedDial'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      ariaLabel,\n      FabProps: {\n        ref: origDialButtonRef\n      } = {},\n      children: childrenProp,\n      className,\n      direction = 'up',\n      hidden = false,\n      icon,\n      onBlur,\n      onClose,\n      onFocus,\n      onKeyDown,\n      onMouseEnter,\n      onMouseLeave,\n      onOpen,\n      open: openProp,\n      TransitionComponent = Zoom,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps\n    } = props,\n    FabProps = _objectWithoutPropertiesLoose(props.FabProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'SpeedDial',\n    state: 'open'\n  });\n  const ownerState = _extends({}, props, {\n    open,\n    direction\n  });\n  const classes = useUtilityClasses(ownerState);\n  const eventTimer = useTimeout();\n\n  /**\n   * an index in actions.current\n   */\n  const focusedAction = React.useRef(0);\n\n  /**\n   * pressing this key while the focus is on a child SpeedDialAction focuses\n   * the next SpeedDialAction.\n   * It is equal to the first arrow key pressed while focus is on the SpeedDial\n   * that is not orthogonal to the direction.\n   * @type {utils.ArrowKey?}\n   */\n  const nextItemArrowKey = React.useRef();\n\n  /**\n   * refs to the Button that have an action associated to them in this SpeedDial\n   * [Fab, ...(SpeedDialActions > Button)]\n   * @type {HTMLButtonElement[]}\n   */\n  const actions = React.useRef([]);\n  actions.current = [actions.current[0]];\n  const handleOwnFabRef = React.useCallback(fabFef => {\n    actions.current[0] = fabFef;\n  }, []);\n  const handleFabRef = useForkRef(origDialButtonRef, handleOwnFabRef);\n\n  /**\n   * creates a ref callback for the Button in a SpeedDialAction\n   * Is called before the original ref callback for Button that was set in buttonProps\n   *\n   * @param dialActionIndex {number}\n   * @param origButtonRef {React.RefObject?}\n   */\n  const createHandleSpeedDialActionButtonRef = (dialActionIndex, origButtonRef) => {\n    return buttonRef => {\n      actions.current[dialActionIndex + 1] = buttonRef;\n      if (origButtonRef) {\n        origButtonRef(buttonRef);\n      }\n    };\n  };\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n    const key = event.key.replace('Arrow', '').toLowerCase();\n    const {\n      current: nextItemArrowKeyCurrent = key\n    } = nextItemArrowKey;\n    if (event.key === 'Escape') {\n      setOpenState(false);\n      actions.current[0].focus();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n      return;\n    }\n    if (getOrientation(key) === getOrientation(nextItemArrowKeyCurrent) && getOrientation(key) !== undefined) {\n      event.preventDefault();\n      const actionStep = key === nextItemArrowKeyCurrent ? 1 : -1;\n\n      // stay within array indices\n      const nextAction = clamp(focusedAction.current + actionStep, 0, actions.current.length - 1);\n      actions.current[nextAction].focus();\n      focusedAction.current = nextAction;\n      nextItemArrowKey.current = nextItemArrowKeyCurrent;\n    }\n  };\n  React.useEffect(() => {\n    // actions were closed while navigation state was not reset\n    if (!open) {\n      focusedAction.current = 0;\n      nextItemArrowKey.current = undefined;\n    }\n  }, [open]);\n  const handleClose = event => {\n    if (event.type === 'mouseleave' && onMouseLeave) {\n      onMouseLeave(event);\n    }\n    if (event.type === 'blur' && onBlur) {\n      onBlur(event);\n    }\n    eventTimer.clear();\n    if (event.type === 'blur') {\n      eventTimer.start(0, () => {\n        setOpenState(false);\n        if (onClose) {\n          onClose(event, 'blur');\n        }\n      });\n    } else {\n      setOpenState(false);\n      if (onClose) {\n        onClose(event, 'mouseLeave');\n      }\n    }\n  };\n  const handleClick = event => {\n    if (FabProps.onClick) {\n      FabProps.onClick(event);\n    }\n    eventTimer.clear();\n    if (open) {\n      setOpenState(false);\n      if (onClose) {\n        onClose(event, 'toggle');\n      }\n    } else {\n      setOpenState(true);\n      if (onOpen) {\n        onOpen(event, 'toggle');\n      }\n    }\n  };\n  const handleOpen = event => {\n    if (event.type === 'mouseenter' && onMouseEnter) {\n      onMouseEnter(event);\n    }\n    if (event.type === 'focus' && onFocus) {\n      onFocus(event);\n    }\n\n    // When moving the focus between two items,\n    // a chain if blur and focus event is triggered.\n    // We only handle the last event.\n    eventTimer.clear();\n    if (!open) {\n      // Wait for a future focus or click event\n      eventTimer.start(0, () => {\n        setOpenState(true);\n        if (onOpen) {\n          const eventMap = {\n            focus: 'focus',\n            mouseenter: 'mouseEnter'\n          };\n          onOpen(event, eventMap[event.type]);\n        }\n      });\n    }\n  };\n\n  // Filter the label for valid id characters.\n  const id = ariaLabel.replace(/^[^a-z]+|[^\\w:.-]+/gi, '');\n  const allItems = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The SpeedDial component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const children = allItems.map((child, index) => {\n    const _child$props = child.props,\n      {\n        FabProps: {\n          ref: origButtonRef\n        } = {},\n        tooltipPlacement: tooltipPlacementProp\n      } = _child$props,\n      ChildFabProps = _objectWithoutPropertiesLoose(_child$props.FabProps, _excluded3);\n    const tooltipPlacement = tooltipPlacementProp || (getOrientation(direction) === 'vertical' ? 'left' : 'top');\n    return /*#__PURE__*/React.cloneElement(child, {\n      FabProps: _extends({}, ChildFabProps, {\n        ref: createHandleSpeedDialActionButtonRef(index, origButtonRef)\n      }),\n      delay: 30 * (open ? index : allItems.length - index),\n      open,\n      tooltipPlacement,\n      id: `${id}-action-${index}`\n    });\n  });\n  return /*#__PURE__*/_jsxs(SpeedDialRoot, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: \"presentation\",\n    onKeyDown: handleKeyDown,\n    onBlur: handleClose,\n    onFocus: handleOpen,\n    onMouseEnter: handleOpen,\n    onMouseLeave: handleClose,\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(TransitionComponent, _extends({\n      in: !hidden,\n      timeout: transitionDuration,\n      unmountOnExit: true\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(SpeedDialFab, _extends({\n        color: \"primary\",\n        \"aria-label\": ariaLabel,\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": open,\n        \"aria-controls\": `${id}-actions`\n      }, FabProps, {\n        onClick: handleClick,\n        className: clsx(classes.fab, FabProps.className),\n        ref: handleFabRef,\n        ownerState: ownerState,\n        children: /*#__PURE__*/React.isValidElement(icon) && isMuiElement(icon, ['SpeedDialIcon']) ? /*#__PURE__*/React.cloneElement(icon, {\n          open\n        }) : icon\n      }))\n    })), /*#__PURE__*/_jsx(SpeedDialActions, {\n      id: `${id}-actions`,\n      role: \"menu\",\n      \"aria-orientation\": getOrientation(direction),\n      className: clsx(classes.actions, !open && classes.actionsClosed),\n      ownerState: ownerState,\n      children: children\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDial.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The aria-label of the button element.\n   * Also used to provide the `id` for the `SpeedDial` element and its children.\n   */\n  ariaLabel: PropTypes.string.isRequired,\n  /**\n   * SpeedDialActions to display when the SpeedDial is `open`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the actions open relative to the floating action button.\n   * @default 'up'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n  /**\n   * Props applied to the [`Fab`](/material-ui/api/fab/) element.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n  /**\n   * If `true`, the SpeedDial is hidden.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  /**\n   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component\n   * provides a default Icon with animation.\n   */\n  icon: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggle\"`, `\"blur\"`, `\"mouseLeave\"`, `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggle\"`, `\"focus\"`, `\"mouseEnter\"`.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The icon to display in the SpeedDial Fab when the SpeedDial is open.\n   */\n  openIcon: PropTypes.node,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Zoom\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default SpeedDial;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSpeedDialActionUtilityClass(slot) {\n  return generateUtilityClass('MuiSpeedDialAction', slot);\n}\nconst speedDialActionClasses = generateUtilityClasses('MuiSpeedDialAction', ['fab', 'fabClosed', 'staticTooltip', 'staticTooltipClosed', 'staticTooltipLabel', 'tooltipPlacementLeft', 'tooltipPlacementRight']);\nexport default speedDialActionClasses;","'use client';\n\n// @inheritedComponent Tooltip\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"delay\", \"FabProps\", \"icon\", \"id\", \"open\", \"TooltipClasses\", \"tooltipOpen\", \"tooltipPlacement\", \"tooltipTitle\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Fab from '../Fab';\nimport Tooltip from '../Tooltip';\nimport capitalize from '../utils/capitalize';\nimport speedDialActionClasses, { getSpeedDialActionUtilityClass } from './speedDialActionClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    tooltipPlacement,\n    classes\n  } = ownerState;\n  const slots = {\n    fab: ['fab', !open && 'fabClosed'],\n    staticTooltip: ['staticTooltip', `tooltipPlacement${capitalize(tooltipPlacement)}`, !open && 'staticTooltipClosed'],\n    staticTooltipLabel: ['staticTooltipLabel']\n  };\n  return composeClasses(slots, getSpeedDialActionUtilityClass, classes);\n};\nconst SpeedDialActionFab = styled(Fab, {\n  name: 'MuiSpeedDialAction',\n  slot: 'Fab',\n  skipVariantsResolver: false,\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.fab, !ownerState.open && styles.fabClosed];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 8,\n  color: (theme.vars || theme).palette.text.secondary,\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  '&:hover': {\n    backgroundColor: theme.vars ? theme.vars.palette.SpeedDialAction.fabHoverBg : emphasize(theme.palette.background.paper, 0.15)\n  },\n  transition: `${theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shorter\n  })}, opacity 0.8s`,\n  opacity: 1\n}, !ownerState.open && {\n  opacity: 0,\n  transform: 'scale(0)'\n}));\nconst SpeedDialActionStaticTooltip = styled('span', {\n  name: 'MuiSpeedDialAction',\n  slot: 'StaticTooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.staticTooltip, !ownerState.open && styles.staticTooltipClosed, styles[`tooltipPlacement${capitalize(ownerState.tooltipPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  [`& .${speedDialActionClasses.staticTooltipLabel}`]: _extends({\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.shorter\n    }),\n    opacity: 1\n  }, !ownerState.open && {\n    opacity: 0,\n    transform: 'scale(0.5)'\n  }, ownerState.tooltipPlacement === 'left' && {\n    transformOrigin: '100% 50%',\n    right: '100%',\n    marginRight: 8\n  }, ownerState.tooltipPlacement === 'right' && {\n    transformOrigin: '0% 50%',\n    left: '100%',\n    marginLeft: 8\n  })\n}));\nconst SpeedDialActionStaticTooltipLabel = styled('span', {\n  name: 'MuiSpeedDialAction',\n  slot: 'StaticTooltipLabel',\n  overridesResolver: (props, styles) => styles.staticTooltipLabel\n})(({\n  theme\n}) => _extends({\n  position: 'absolute'\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  boxShadow: (theme.vars || theme).shadows[1],\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '4px 16px',\n  wordBreak: 'keep-all'\n}));\nconst SpeedDialAction = /*#__PURE__*/React.forwardRef(function SpeedDialAction(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSpeedDialAction'\n  });\n  const {\n      className,\n      delay = 0,\n      FabProps = {},\n      icon,\n      id,\n      open,\n      TooltipClasses,\n      tooltipOpen: tooltipOpenProp = false,\n      tooltipPlacement = 'left',\n      tooltipTitle\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    tooltipPlacement\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [tooltipOpen, setTooltipOpen] = React.useState(tooltipOpenProp);\n  const handleTooltipClose = () => {\n    setTooltipOpen(false);\n  };\n  const handleTooltipOpen = () => {\n    setTooltipOpen(true);\n  };\n  const transitionStyle = {\n    transitionDelay: `${delay}ms`\n  };\n  const fab = /*#__PURE__*/_jsx(SpeedDialActionFab, _extends({\n    size: \"small\",\n    className: clsx(classes.fab, className),\n    tabIndex: -1,\n    role: \"menuitem\",\n    ownerState: ownerState\n  }, FabProps, {\n    style: _extends({}, transitionStyle, FabProps.style),\n    children: icon\n  }));\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/_jsxs(SpeedDialActionStaticTooltip, _extends({\n      id: id,\n      ref: ref,\n      className: classes.staticTooltip,\n      ownerState: ownerState\n    }, other, {\n      children: [/*#__PURE__*/_jsx(SpeedDialActionStaticTooltipLabel, {\n        style: transitionStyle,\n        id: `${id}-label`,\n        className: classes.staticTooltipLabel,\n        ownerState: ownerState,\n        children: tooltipTitle\n      }), /*#__PURE__*/React.cloneElement(fab, {\n        'aria-labelledby': `${id}-label`\n      })]\n    }));\n  }\n  if (!open && tooltipOpen) {\n    setTooltipOpen(false);\n  }\n  return /*#__PURE__*/_jsx(Tooltip, _extends({\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses\n  }, other, {\n    children: fab\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   * @default 0\n   */\n  delay: PropTypes.number,\n  /**\n   * Props applied to the [`Fab`](/material-ui/api/fab/) component.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n  /**\n   * The icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Tooltip`](/material-ui/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   * @default false\n   */\n  tooltipOpen: PropTypes.bool,\n  /**\n   * Placement of the tooltip.\n   * @default 'left'\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default SpeedDialAction;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","import type { Declaration } from 'inline-style-parser';\nimport parse from 'inline-style-parser';\n\nexport { Declaration };\n\ninterface StyleObject {\n  [name: string]: string;\n}\n\ntype Iterator = (\n  property: string,\n  value: string,\n  declaration: Declaration,\n) => void;\n\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nexport default function StyleToObject(\n  style: string,\n  iterator?: Iterator,\n): StyleObject | null {\n  let styleObject: StyleObject | null = null;\n\n  if (!style || typeof style !== 'string') {\n    return styleObject;\n  }\n\n  const declarations = parse(style);\n  const hasIterator = typeof iterator === 'function';\n\n  declarations.forEach((declaration) => {\n    if (declaration.type !== 'declaration') {\n      return;\n    }\n\n    const { property, value } = declaration;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      styleObject = styleObject || {};\n      styleObject[property] = value;\n    }\n  });\n\n  return styleObject;\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  const tokenizer = token._tokenizer || context.parser[token.contentType](token.start);\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[text][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","getAvatarGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SPACINGS","small","medium","AvatarGroupRoot","styled","name","overridesResolver","props","styles","_extends","concat","avatarGroupClasses","avatar","root","_ref","theme","ownerState","marginValue","spacing","undefined","avatarClasses","border","vars","palette","background","boxSizing","marginLeft","display","flexDirection","React","inProps","ref","_slotProps$additional","useThemeProps","children","childrenProp","className","component","componentsProps","max","renderSurplus","slotProps","total","variant","other","_objectWithoutPropertiesLoose","clampedMax","classes","composeClasses","useUtilityClasses","toArray","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","additionalAvatarSlotProps","additionalAvatar","_jsxs","as","clsx","_jsx","Avatar","slice","reverse","map","getFabUtilityClass","FabRoot","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","capitalize","size","color","colorInherit","_theme$palette$getCon","_theme$palette","typography","button","minHeight","transition","transitions","create","duration","short","borderRadius","padding","minWidth","width","height","zIndex","fab","boxShadow","shadows","text","primary","getContrastText","call","grey","backgroundColor","A100","textDecoration","fabClasses","focusVisible","_ref2","contrastText","main","dark","_ref3","disabled","action","disabledBackground","disableFocusRipple","focusVisibleClassName","slots","composedClasses","focusRipple","entering","transform","entered","useTheme","defaultTimeout","enter","enteringScreen","exit","leavingScreen","addEndListener","appear","easing","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","timeout","TransitionComponent","Transition","nodeRef","handleRef","useForkRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","handleEntering","handleEnter","isAppearing","reflow","transitionProps","getTransitionProps","mode","webkitTransition","handleEntered","handleExiting","handleExit","handleExited","next","state","childProps","visibility","getSpeedDialUtilityClass","_excluded2","_excluded3","getOrientation","direction","SpeedDialRoot","speedDial","alignItems","pointerEvents","speedDialClasses","actions","marginBottom","paddingBottom","spacingActions","marginTop","paddingTop","marginRight","paddingRight","paddingLeft","SpeedDialFab","Fab","SpeedDialActions","open","actionsClosed","defaultTransitionDuration","ariaLabel","FabProps","origDialButtonRef","hidden","icon","onBlur","onClose","onFocus","onKeyDown","onMouseEnter","onMouseLeave","onOpen","openProp","Zoom","transitionDuration","TransitionProps","setOpenState","useControlled","controlled","eventTimer","useTimeout","focusedAction","nextItemArrowKey","handleOwnFabRef","fabFef","handleFabRef","createHandleSpeedDialActionButtonRef","dialActionIndex","origButtonRef","buttonRef","handleClose","event","type","clear","start","handleOpen","focus","mouseenter","id","replace","allItems","index","_child$props","tooltipPlacement","tooltipPlacementProp","ChildFabProps","delay","role","key","toLowerCase","nextItemArrowKeyCurrent","preventDefault","actionStep","nextAction","clamp","unmountOnExit","onClick","isMuiElement","getSpeedDialActionUtilityClass","SpeedDialActionFab","skipVariantsResolver","fabClosed","margin","secondary","paper","SpeedDialAction","fabHoverBg","emphasize","shorter","opacity","SpeedDialActionStaticTooltip","staticTooltip","staticTooltipClosed","position","speedDialActionClasses","staticTooltipLabel","transformOrigin","right","left","SpeedDialActionStaticTooltipLabel","body1","shape","wordBreak","TooltipClasses","tooltipOpen","tooltipOpenProp","tooltipTitle","setTooltipOpen","transitionStyle","transitionDelay","tabIndex","Tooltip","title","placement","handleTooltipClose","handleTooltipOpen","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","value","newValue","writable","getProperty","module","extend","src","copy","copyIsArray","clone","arguments","i","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","line","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","comments","rules","c","comment","pos","charAt","declaration","val","ret","property","decl","decls","declarations","iterator","styleObject","inline_style_parser_1","hasIterator","forEach","__importDefault","nameRe","nameReJsx","emptyOptions","test","empty","Schema","normal","space","merge","definitions","assign","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","types","DefinedInfo","mask","super","mark","check","values","own","definition","properties","info","attributes","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","maxLength","media","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onCancel","onCanPlay","onCanPlayThrough","onChange","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFormData","onHashChange","onInput","onInvalid","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","sizes","span","spellCheck","srcDoc","srcLang","srcSet","step","translate","typeMustMatch","useMap","wrap","writingSuggestions","align","aLink","archive","axis","bgColor","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","code","codeBase","codeType","compact","declare","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","offset","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","kebab","$0","camelcase","toUpperCase","hastToReact","StyleToObject","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","indexOf","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","isStaticChildren","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","thing","addNode","addChildren","pop","element","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","settings","join","padRight","padLeft","commas","styleToObject","replacer","toCamel","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","isIdentifierName","computed","Boolean","optional","toDash","$1","urlAttributes","includeImageAlt","includeHtml","all","splice","remove","items","parameters","chunkStart","unshift","SpliceBuffer","initial","RangeError","shift","setCursor","stop","POSITIVE_INFINITY","deleteCount","trunc","removed","chunkedPush","item","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","events","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","token","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","adjust","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","write","syntaxExtension","extension","hook","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","consume","tokenize","contentStart","attempt","contentInitial","lineStart","document","self","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","endOfFile","seen","entry","nok","disable","null","blankLine","partial","after","resolve","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","atBreak","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_bufferIndex","_index","thematicBreak","marker","sequence","onBlank","notBlank","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","inside","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","resolveTo","heading","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","called","labelEnd","newEvents","close","_inactive","_balanced","group","insideSpan","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","openingSequence","closingSequence","use","nextEvents","_close","_open","movePoint","attentionMarkers","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","tailExitIndex","headEnterIndex","between","resolveText","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","parse","extensions","combineExtensions","defaultConstructs","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","deserializer","$","out","unpair","Date","flags","RegExp","BigInt","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","serializer","strict","pair","valueOf","toJSON","entries","toISOString","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","_len","_key","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","_len2","output","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","done","then","_len4","_key4","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign"],"sourceRoot":""}