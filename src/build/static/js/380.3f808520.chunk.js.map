{"version":3,"file":"static/js/380.3f808520.chunk.js","mappings":"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","sources":["pages/profile/profileSidebar.tsx","genericComponents/expandCard.tsx","pages/profile/section/documents/aptitude.tsx","pages/profile/section/documents/englishTest.tsx","pages/profile/section/documents/workExperienceDocs.tsx","pages/profile/section/documents/otherDocs.tsx","genericComponents/accordian.tsx","pages/profile/section/documents/academicDocs.tsx","pages/profile/section/documents/documentPreview.tsx","pages/profile/section/documents/personalDocs.tsx","pages/profile/section/documents/personal.tsx","pages/profile/section/documents.tsx","genericComponents/CustomCardHOC.tsx","pages/profile/section/universities/shortlisted.tsx","pages/profile/section/universities/universities.tsx","pages/profile/section/dashboard/upcomingSessions.tsx","pages/profile/section/dashboard/bookedSlots.tsx","pages/profile/section/dashboard/cardPage.tsx","pages/profile/section/dashboard/events.tsx","pages/profile/section/dashboard/advisors.tsx","pages/profile/section/dashboard.tsx","genericComponents/reusableSelect.tsx","pages/profile/section/education/bachelors.tsx","pages/profile/section/education/diploma.tsx","pages/profile/section/education/grade10.tsx","pages/profile/section/education/postGrad.tsx","genericComponents/modalPopup/useProfileData.tsx","pages/profile/section/education/index.tsx","pages/profile/section/testScores/testScores.tsx","pages/profile/section/profileSection/preferences.tsx","pages/profile/section/profileSection/extraCurricular.tsx","pages/profile/section/profileSection/family.tsx","pages/profile/section/profileSection/workExperience.tsx","pages/profile/section/profileSection/personalDetails.tsx","pages/profile/section/profileSection/address.tsx","pages/profile/section/profileSection/profile.tsx","pages/profile/section/profileSection/index.tsx","genericComponents/customCard.tsx","pages/profile/section/universities/appliedUniversities.tsx","assets/constants/courseList.ts","pages/profile/section/RecommendEdit.tsx","genericComponents/shimmer/ShimmerCard.tsx","genericComponents/shimmer/ShimmerGrid.tsx","pages/profile/section/recommend.tsx","pages/profile/section/advisors.tsx","pages/profile/section/cart.tsx","pages/profile/section/orders.tsx","pages/profile/Profile.tsx"],"sourcesContent":["import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { useLocation, Link, Location } from \"react-router-dom\";\nimport {\n  Avatar,\n  IconButton,\n  Tooltip,\n  Typography,\n  useTheme,\n  Drawer,\n} from \"@mui/material\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport Images from \"../../assets\";\nimport { useAppSelector } from \"../../assets/hooks\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\n\nconst profileList = [\n  { path: \"/profile/dashboard\", name: \"Dashboard\", icon: <img src={Images.dashboard} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/personal\", name: \"Profile\", icon: <img src={Images.personal} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/documents\", name: \"Documents\", icon: <img src={Images.documents} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/applications\", name: \"My Products\", icon: <img src={Images.products} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/recommendedCourses/Safe\", name: \"Recommendation\", icon: <img src={Images.recommendations} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/shortlisted\", name: \"Favourites\", icon: <img src={Images.wishlist} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/experts\", name: \"Experts\", icon: <img src={Images.experts} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/orders\", name: \"My Orders\", icon: <img src={Images.orders} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n  { path: \"/profile/cart\", name: \"Cart\", icon: <img src={Images.cart} alt=\"dashboard\" style={{ width: \"1.5rem\", height: \"1.5rem\" }} /> },\n];\n\ninterface SidebarContentProps {\n  location: Location;\n  profile: any; // Replace 'any' with your profile type if available\n  isRecommendedCoursesActive: boolean;\n}\n\nconst SidebarContent = ({ location, profile, isRecommendedCoursesActive }: SidebarContentProps) => (\n  <Box\n    sx={{\n      width: 260,\n      minHeight: 600,\n      py: 2,\n      bgcolor: '#fff',\n      borderRadius: '20px',\n      border: '1.5px solid #E6E6E6',\n      px: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      boxShadow: 'none',\n    }}\n  >\n    {/* Profile Section */}\n    <Box sx={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      mb: 2.5,\n      width: '100%',\n      bgcolor: '#EFF4F7',\n      borderTopLeftRadius: '20px',\n      borderTopRightRadius: '20px',\n      pt: 2.5,\n      pb: 2,\n    }}>\n      <Avatar\n        src={profile.data?.displayPicSrc}\n        alt=\"profile\"\n        sx={{ width: 54, height: 54, mb: 1.2 }}\n      />\n      <Typography\n        color=\"#495052\"\n        sx={{ fontWeight: 700, fontSize: '1.13rem', mb: 0.2, textAlign: 'center', letterSpacing: 0.1 }}\n      >\n        {profile?.data?.firstName} {profile?.data?.lastName}\n      </Typography>\n      <Typography sx={{ color: '#5C6163', fontSize: '0.97rem', textAlign: 'center', fontWeight: 400 }}>\n        {profile?.data?.email}\n      </Typography>\n    </Box>\n    {/* Menu Items */}\n    <Box sx={{ width: '90%', display: 'flex', flexDirection: 'column', gap: 0 }}>\n      {profileList.map((item, idx) => {\n        const isActive = (location.pathname === item.path) || (item.name === 'Recommendation' && isRecommendedCoursesActive && item.path.startsWith('/profile/recommendedCourses'));\n        return (\n          <React.Fragment key={item.name}>\n            <Box\n              component={Link}\n              to={item.path}\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1.7,\n                px: 3,\n                py: 1.7,\n                borderRadius: '12px',\n                cursor: 'pointer',\n                bgcolor: isActive ? '#70A6B2' : 'transparent',\n                fontWeight: isActive ? 700 : 500,\n                color: isActive ? '#ffff' : '#495052',\n                transition: 'background 0.2s, color 0.2s',\n                boxSizing: 'border-box',\n                textDecoration: 'none',\n                '&:hover': {\n                  ...(isActive\n                    ? { bgcolor: '#70A6B2', color: '#fff' }\n                    : { bgcolor: '#EFF4F7', color: '#3B3F76' }),\n                },\n                textTransform: 'none',\n                fontSize: '1.01rem',\n                justifyContent: 'flex-start',\n              }}\n            >\n              <Box\n                sx={{\n                  minWidth: 28,\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  '& img': {\n                    filter: isActive ? 'brightness(0) invert(1)' : 'none',\n                    transition: 'filter 0.2s',\n                  },\n                }}\n              >\n                {item.icon}\n              </Box>\n              <Typography\n                sx={{\n                  fontWeight: isActive ? 700 : 500,\n                  fontSize: '1.01rem',\n                  color: 'inherit',\n                  textTransform: 'capitalize',\n                  ml: 1,\n                }}\n              >\n                {item.name}\n              </Typography>\n            </Box>\n            {idx !== profileList.length - 1 && (\n              <Box sx={{ width: '80%', mx: 'auto', borderBottom: '1px solid #E6E6E6' }} />\n            )}\n          </React.Fragment>\n        );\n      })}\n    </Box>\n  </Box>\n);\n\nconst ProfileSidebar = ({ mobileOnly = false }) => {\n  const location = useLocation();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const profile = useAppSelector((state) => state.sharedInfo);\n  const isRecommendedCoursesActive = location.pathname.startsWith('/profile/recommendedCourses');\n  const [sidebarOpen, setSidebarOpen] = React.useState(false);\n\n  // Hamburger menu for mobile\n  if (isMobile) {\n    return (\n      <>\n        <IconButton\n          onClick={() => setSidebarOpen(true)}\n          sx={{\n            position: 'fixed',\n            top: 24,\n            left: 24,\n            zIndex: 1201,\n            bgcolor: '#fff',\n            borderRadius: '50%',\n            boxShadow: 1,\n            width: 48,\n            height: 48,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <MenuIcon fontSize=\"large\" />\n        </IconButton>\n        <Drawer\n          anchor=\"left\"\n          open={sidebarOpen}\n          onClose={() => setSidebarOpen(false)}\n          PaperProps={{\n            sx: {\n              width: 280,\n              bgcolor: 'transparent',\n              boxShadow: 0,\n              border: 'none',\n              p: 0,\n            },\n          }}\n        >\n          <SidebarContent location={location} profile={profile} isRecommendedCoursesActive={isRecommendedCoursesActive} />\n        </Drawer>\n      </>\n    );\n  }\n\n  // Desktop sidebar\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        width: 260,\n        minHeight: 600,\n        py: 2,\n      }}\n    >\n      <SidebarContent location={location} profile={profile} isRecommendedCoursesActive={isRecommendedCoursesActive} />\n    </Box>\n  );\n};\n\nexport default ProfileSidebar;\n","import { useState } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Container,\n  Collapse,\n  Box,\n  ListItemIcon,\n  IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { expandCardStyles } from \"../components/styles/customStyles\";\n\ninterface expandCardProps {\n  title: string;\n  children: React.ReactNode;\n  imageUrl: string;\n}\n\nexport default function ExpandCard({\n  title,\n  children,\n  imageUrl,\n}: expandCardProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Card\n        sx={[\n          expandCardStyles.cardCollapse,\n          {\n            boxShadow: open ? \"4px 4px 50px rgb(14 4 4 / 8%)\" : 0,\n          },\n        ]}\n      >\n        <CardHeader\n          onClick={() => setOpen(!open)}\n          sx={{\n            ...expandCardStyles.cardTitle,\n            color: \"#8E9091\",\n          }}\n          title={title}\n          avatar={\n            <Box\n              sx={{\n                ...expandCardStyles.cardImg,\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  color: \"#495052\",\n                  fontWeight: 500,\n                }}\n              >\n                {imageUrl}\n              </ListItemIcon>\n            </Box>\n          }\n          action={\n            <IconButton\n              onClick={() => setOpen(!open)}\n              sx={{\n                transform: open ? \"rotate(180deg)\" : \"rotate(0deg)\",\n                transition: \"transform 0.3s\",\n              }}\n            >\n              <ExpandMoreIcon />\n            </IconButton>\n          }\n        />\n        <div>\n          <Collapse\n            in={open}\n            timeout=\"auto\"\n            unmountOnExit\n            sx={expandCardStyles.cardContent}\n          >\n            <CardContent sx={{padding:0.5}}>\n              <Container sx={{padding:0}}>{children}</Container>\n            </CardContent>\n          </Collapse>\n        </div>\n      </Card>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport Images from \"../../../../assets\";\n// import { Link } from \"react-router-dom\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nconst Aptitude = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const testscores = useAppSelector((state) => state.testscores);\n  const findTestScoresByName = (name: string) => {\n    return testscores.data.find((item) => item.name === name);\n  };\n  const testScoresGRE = findTestScoresByName(\"Graduate Record Examination\");\n  const testScoresGMAT = findTestScoresByName(\"Graduate Management Admission Test\");\n  const testScoresACT = findTestScoresByName(\"American College Testing\");\n  const testScoresSAT = findTestScoresByName(\"Scholastic Assessment Test\");\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">GRE</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresGRE?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresGRE.docId?.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresGRE.docId?.contentType}&id=${testScoresGRE.docId?._id}`}\n                  target=\"_blank\"\n                  // onClick={() => {\n                  //   localStorage.setItem(\"docId\", testScoresGRE.docId._id);\n                  // }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                  <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresGRE.docId?.data?.preview_url} title=\"gre\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresGRE.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      {/* Passport ADD */}\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">GMAT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresGMAT?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresGMAT.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >            \n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresGMAT.docId?.contentType}&id=${testScoresGMAT.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresGMAT.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresGMAT.docId?.data?.preview_url} title=\"gmat\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresGMAT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">SAT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresSAT?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresSAT.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresSAT.docId?.contentType}&id=${testScoresSAT.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresSAT.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\"  }}\n                 >\n                  <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresSAT.docId?.data?.preview_url} title=\"sat\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresSAT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">ACT</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresACT?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresACT.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresACT.docId?.contentType}&id=${testScoresACT.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresACT.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\"  }}\n                 >\n                   <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresACT.docId?.data?.preview_url} title=\"act\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresACT.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Aptitude;\n","import React from \"react\";\nimport { Grid, Stack, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport Images from \"../../../../assets\";\n// import { Link } from \"react-router-dom\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\n\nconst EnglishTest = ({data}:any) => {\n  const testscores = useAppSelector((state) => state.testscores);\nconst dispatch = useAppDispatch();\n  const findTestScoresByName = (name: string) => {\n    return testscores.data.find((item) => item.name === name);\n  };\n\n  const testScoresTOEFL = findTestScoresByName(\"Test of English as a Foreign Language\");\n  const testScoresIELTS = findTestScoresByName(\"International English Language Testing System\");\n  const testScoresDET = findTestScoresByName(\"Duolingo English Test\");\n  const testScoresPTE = findTestScoresByName(\"Pearson Test of English\");\n\n  return (\n    <div>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">TOEFL</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n        {testScoresTOEFL?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresTOEFL.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresTOEFL.docId?.contentType}&id=${testScoresTOEFL.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresTOEFL.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                  >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresTOEFL.docId?.data?.preview_url} title=\"toefl\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresTOEFL.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">IELTS</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresIELTS?.docId && (\n             <>\n             <Typography>\n               <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n               {testScoresIELTS.docId.data?.FileName}\n             </Typography>\n             <Stack\n             direction=\"row\"\n             spacing={2}\n             sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n           >\n\n                 {/* <Link\n                   to={`/pdfPreview?type=${testScoresIELTS.docId?.contentType}&id=${testScoresIELTS.docId?._id}`}\n                   target=\"_blank\"\n                   onClick={() => {\n                     localStorage.setItem(\"docId\", testScoresIELTS.docId._id);\n                   }}\n                   style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                >\n                  <VisibilityOutlinedIcon/>\n                 </Link> */}\n                    {/* <iframe src={testScoresIELTS.docId?.data?.preview_url} title=\"ielts\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresIELTS.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n           </Stack>\n           </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">DET</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresDET?.docId && (\n            <>\n            <Typography>\n              <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n              {testScoresDET.docId.data?.FileName}\n            </Typography>\n            <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n\n                {/* <Link\n                  to={`/pdfPreview?type=${testScoresDET.docId?.contentType}&id=${testScoresDET.docId?._id}`}\n                  target=\"_blank\"\n                  onClick={() => {\n                    localStorage.setItem(\"docId\", testScoresDET.docId._id);\n                  }}\n                  style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                  >\n                    <VisibilityOutlinedIcon/>\n                </Link> */}\n                    {/* <iframe src={testScoresDET.docId?.data?.preview_url} title=\"det\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresDET.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n          </>\n          )}\n        </Grid>\n      </Grid>\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">PTE</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {testScoresPTE?.docId && (\n           <>\n           <Typography>\n             <img src={Images.pdfIcon} alt=\"\" style={{ width: \"1rem\" }} />\n             {testScoresPTE.docId.data?.FileName}\n           </Typography>\n           <Stack\n           direction=\"row\"\n           spacing={2}\n           sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n         >\n               {/* <Link\n                 to={`/pdfPreview?type=${testScoresPTE.docId?.contentType}&id=${testScoresPTE.docId?._id}`}\n                 target=\"_blank\"\n                 onClick={() => {\n                   localStorage.setItem(\"docId\", testScoresPTE.docId._id);\n                 }}\n                 style={{ textDecoration: \"none\", color: \"#000\",marginTop:\"0.5rem\" }}\n                 >\n                   <VisibilityOutlinedIcon/>\n               </Link> */}\n                    {/* <iframe src={testScoresPTE.docId?.data?.preview_url} title=\"pte\"  style={{border:\"none\"}}></iframe> */}\n                    <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:testScoresPTE.docId?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n         </Stack>\n         </>\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default EnglishTest;\n","import { Grid, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Document } from \"../../../../types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport { useAppDispatch } from \"src/assets/hooks\";\nimport { setPopup } from \"src/store/Slices/popupSlice\";\n\n\nconst WorkExperienceDocs = ({data}:any) => {\nconst dispatch=useAppDispatch();\n\n  const DocumentItem = ({ doc, handleDelete }:any) => {\n\n  \n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">{doc?.data?.originalname}</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n                <VisibilityOutlinedIcon sx={{fontSize:\"large\"}} onClick={()=>{\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data:doc?.data?.preview_url,\n                          dimensions: {\n                            width: \"500px\",\n                            // height: \"35%\",\n                            // close: \"none\",\n                            // show: \"none\"\n                          },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  )\n              }}/>\n          </Stack>\n        </Grid>\n      </Grid>\n    );\n  };\n  return (\n    <div>\n      { data?.length > 0 ? data?.map((doc:Document) => (\n          <DocumentItem\n          key={doc._id}\n          doc={doc}\n        />\n        )) : <Typography>No data available</Typography>}\n      \n    </div>\n  );\n};\n\nexport default WorkExperienceDocs;\n","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport Aptitude from \"./aptitude\";\nimport EnglishTest from \"./englishTest\";\nimport WorkExperienceDocs from \"./workExperienceDocs\";\n\nconst OtherDocs = () => {\n  const documents = useAppSelector(state=>state.documents)\n\n  const profile = [\n    {\n      title: \"Aptitude Test Marksheet\",\n      image: <div>\n     \n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          1\n        </Typography>\n    \n    </div>,\n      component: <Aptitude data={documents?.data?.test?.general}/>,\n    },\n    {\n      title: \"English Proficiency Test Scores report\",\n      image: <div>\n\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          2\n        </Typography>\n\n    </div>,\n      component: <EnglishTest data={documents?.data?.test?.languageProf}/>,\n    },\n    {\n      title: \"Work Experience\",\n      image: <div>\n\n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          3\n        </Typography>\n\n    </div>,\n      component: <WorkExperienceDocs data={documents?.data?.workExperiences}/>,\n    },\n  ];\n  return (\n    <Box>\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.title} imageUrl={item.image}>\n          {item.component}\n        </ExpandCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default OtherDocs;\n","import {\n  Card,\n  CardHeader,\n  CardContent,\n  Collapse,\n  IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\n\ninterface ExpandCardProps {\n  title: string;\n  children: React.ReactNode;\n  isOpen: boolean;\n  onToggle: () => void;\n}\n\nexport default function Accordion({ title, children, isOpen, onToggle }: ExpandCardProps) {\n  return (\n    <Card sx={{ boxShadow: 0, p: 0, borderRadius: \"8px\", overflow: \"hidden\", marginBottom: 1 }}>\n      <CardHeader\n        onClick={onToggle}\n        sx={{\n          padding: \"8px !important\",\n          background: \"#F7FAFD\",\n          color: \"#495052\",\n          cursor: \"pointer\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n          \".MuiTypography-root\": {\n            fontSize: \"1rem\",\n            fontWeight: 500,\n          },\n        }}\n        title={title}\n        action={\n          <IconButton\n            onClick={(e) => {\n              e.stopPropagation();\n              onToggle();\n            }}\n            aria-label=\"expand\"\n            size=\"small\"\n            sx={{ marginRight: \"12px\" }}\n          >\n            {isOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n          </IconButton>\n        }\n      />\n      <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n        <CardContent sx={{ boxShadow: 3, p: 2 }}>{children}</CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { Button, Grid, Stack, Typography } from \"@mui/material\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { deleteUploadProfile, uploadProfile } from \"../../../../services\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\n\nconst AcademicDocs = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n\n  const [openIndex, setOpenIndex] = useState<number | null>(null); // Manage open state centrally\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [identifier, setIdentifier] = useState<any | null>(null);\n\n  const handleToggle = (index: number) => {\n    setOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n  };\n\n  const handleDeleteOpen = (name: any, item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n    setIdentifier(name);\n  };\n\n  const inputFileRefs = {\n    secondarySchool: useRef<HTMLInputElement>(null),\n    plus2: useRef<HTMLInputElement>(null),\n    degree: useRef<HTMLInputElement>(null),\n  };\n\n  const documents = [\n    { key: \"transcripts\", label: \"Transcripts\" },\n    { key: \"bonafide\", label: \"Bonafide\" },\n    { key: \"CMM\", label: \"CMM\" },\n    { key: \"PCM\", label: \"PCM\" },\n    { key: \"OD\", label: \"OD\" },\n  ];\n\n  const secondaryDocuments = [\n    { key: \"secondarySchool\", label: \"School\" },\n    { key: \"plus2\", label: \"Grade 12\" },\n    { key: \"degree\", label: \"Degree\" },\n  ];\n  const DocumentItem = ({ doc, data, handleDelete }: any) => {\n    return (\n      <Grid\n        container\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          borderRadius: \"8px\",\n          padding: \"10px\",\n          background: \"#F7FAFD\",\n          mb: 2,\n        }}\n      >\n        <Grid item xs={4}>\n          <Typography fontWeight=\"500\">{doc.label}</Typography>\n        </Grid>\n        <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n          {data && data[doc.key] ? (\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n            >\n              <Typography>{data[doc.key]?.data?.FileName}</Typography>\n              <VisibilityOutlinedIcon\n                sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                onClick={() => {\n                  dispatch(\n                    setPopup({\n                      show: true,\n                      data: {\n                        container: {\n                          name: \"fileViewer\",\n                          data: data[doc.key]?.data?.preview_url,\n                          dimensions: { width: \"500px\" },\n                        },\n                        type: \"custom\",\n                      },\n                    })\n                  );\n                }}\n              />\n              <DeleteOutlineOutlinedIcon\n                sx={{ fontSize: \"large\", cursor: \"pointer\" }}\n                onClick={() => handleDelete(`academic.${doc.key}`, data[doc.key]._id)}\n              />\n            </Stack>\n          ) : (\n            <Typography color=\"gray\">No file uploaded</Typography>\n          )}\n        </Grid>\n      </Grid>\n    );\n  };\n  const handleDelete = async (fieldPath: string, deleteId: string) => {\n    try {\n      const response = await deleteUploadProfile({\n        fieldPath: fieldPath,\n        documentId: deleteId,\n      });\n  \n      if (response) {\n        dispatch(setDocuments(response.data.data)); // Update Redux store\n        setOpen(false); // Close the dialog after deletion\n      }\n    } catch (error) {\n      console.error(\"Failed to delete document:\", error);\n    }\n  };\n  \n\n  const FileUploadSection = ({ title, docData, docPath, index }: any) => {\n    return (\n      <Accordion title={title} isOpen={openIndex === index} onToggle={() => handleToggle(index)}>\n        <>\n          {documents.map((doc) => (\n            <DocumentItem\n              key={doc.key}\n              doc={doc}\n              data={docData}\n              handleDelete={handleDeleteOpen}\n            />\n          ))}\n        </>\n      </Accordion>\n    );\n  };\n\n  return (\n    <div>\n      <Typography textAlign=\"right\">\n        <b>Note:</b> Only jpeg, png, pdf files are accepted\n      </Typography>\n\n      {/* Bachelors Section */}\n      <FileUploadSection title=\"Bachelors\" docData={data?.bachelors} docPath=\"academic.bachelors\" index={0} />\n\n      {/* Masters Section */}\n      <FileUploadSection title=\"Masters\" docData={data?.masters} docPath=\"academic.masters\" index={1} />\n\n      {/* Secondary Documents */}\n      {secondaryDocuments.map((doc, idx) => (\n        <DocumentItem\n          key={doc.key}\n          doc={doc}\n          data={data}\n          handleDelete={handleDeleteOpen}\n        />\n      ))}\n\n<ConfirmDialog\n  open={open}\n  handleClose={() => setOpen(false)}\n  additionalData={{\n    onSubmit: () => handleDelete(identifier, deleteItem), // ✅ Now handleDelete is properly defined\n    title: \"Are you sure you want to delete?\",\n    content: \"\",\n  }}\n/>\n\n    </div>\n  );\n};\n\nexport default AcademicDocs;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nimport { useAppDispatch } from \"src/assets/hooks\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport Images from \"src/assets\";\n\nconst Document = ({ doc, data, inputFileRef, handleSubmit, handleDelete }: any) => {\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const [identifier, setIdentifier] = useState<any | null>(null);\n  \n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleDeleteOpen = (name: any, item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n    setIdentifier(name);\n  };\n\n  const dispatch = useAppDispatch();\n\n  const handleFileSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier: string\n  ) => {\n    setLoading(true); \n    await handleSubmit(event, fieldPath, fieldIdentifier);\n    setLoading(false); \n  };\n\n  return (\n    <Grid\n      container\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        borderRadius: \"8px\",\n        padding: \"10px\",\n        background: \"#F7FAFD\",\n        mb: 2,\n      }}\n    >\n      <Grid item xs={4}>\n        <Typography fontWeight=\"500\">{doc.label}</Typography>\n      </Grid>\n      <Grid item xs={8} sx={{ justifyContent: \"end\", display: \"flex\" }}>\n        {data && data[doc.key] ? (\n          <Stack\n            direction=\"row\"\n            spacing={2}\n            sx={{ alignItems: \"center\", marginRight: \"10px\" }}\n          >\n            <Typography>{data[doc.key]?.data?.FileName}</Typography>\n            <VisibilityOutlinedIcon\n              sx={{ fontSize: \"large\" }}\n              onClick={() => {\n                dispatch(\n                  setPopup({\n                    show: true,\n                    data: {\n                      container: {\n                        name: \"fileViewer\",\n                        data: data[doc.key]?.data?.preview_url,\n                        dimensions: {\n                          width: \"500px\",\n                        },\n                      },\n                      type: \"custom\",\n                    }\n                  })\n                );\n              }}\n            />\n            <DeleteOutlineOutlinedIcon\n              sx={{ fontSize: \"large\" }}\n              onClick={() => handleDeleteOpen(`personal.${doc.key}`, data[doc.key]._id)}\n            />\n          </Stack>\n        ) : (\n          <>\n            <input\n              style={{ display: \"none\" }}\n              type=\"file\"\n              onChange={(event) => handleFileSubmit(event, `personal.${doc.key}`, doc.label)}\n              ref={inputFileRef}\n              accept=\".jpeg,.png,.pdf\"\n            />\n            {loading ? (\n              <img\n              src={Images.standardLoader}\n              alt=\"load\"\n              style={{ width: \"20px\", height: \"20px\",marginRight:\"10px\"}}\n            />\n            ) : (\n              <Button\n                sx={{\n                  color: \"#000\",\n                  textTransform: \"none\",\n                  p: 0,\n                  fontSize: \"0.7rem\",\n                }}\n                onClick={() => inputFileRef.current?.click()}\n              >\n                <FileUploadOutlinedIcon />\n              </Button>\n            )}\n          </>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => handleDelete(identifier, deleteItem),\n          title: \"Are you sure you want to delete?\",\n          content: \"\",\n        }}\n      />\n    </Grid>\n  );\n};\n\nexport default Document;\n","import React, { useRef } from \"react\";\nimport {\n  Typography,\n} from \"@mui/material\";\nimport { deleteUploadProfile, uploadProfile } from \"../../../../services\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { allowedFileTypes } from \"../../../../assets/menu\";\nimport Document from \"./documentPreview\";\n\nconst PersonalDocs = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const inputFileRefs = {\n    resume: useRef<HTMLInputElement>(null),\n    passportBD: useRef<HTMLInputElement>(null),\n    passportADD: useRef<HTMLInputElement>(null),\n  };\n  const secondarydocuments = [\n    { key: \"resume\", label: \"Resume\" },\n    { key: \"passportBD\", label: \"Passport Photo Page\" },\n    { key: \"passportADD\", label: \"Passport Address Page\" },\n  ];\n\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    fieldPath: string,\n    fieldIdentifier:string\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    if (file && allowedFileTypes.includes(file.type)) {\n      try {\n        const formData = new FormData();\n        formData.append(\"uploaded_file\", file);\n        formData.append(\"fieldPath\", fieldPath);\n        formData.append(\"fileIdentifier\", fieldIdentifier);\n        const response = await uploadProfile(formData);\n        if (response) {\n          dispatch(setDocuments(response.data.data.docs));\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Document added successfully\",\n                  dimensions: {\n                    width: \"30%\",\n                    height:\"40%\",\n                    show:\"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n      } catch (err) {\n        console.error(\"Upload failed\", err);\n      }\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"error\",\n              data: \"Only jpeg, png, pdf files are accepted\",\n              dimensions: {\n                width: \"250px\",\n                show:\"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  };\n\n  const handleDelete = async (fieldPath: string, deleteId: string) => {\n    try {\n      const response = await deleteUploadProfile({ fieldPath, documentId: deleteId });\n      if (response) {\n        dispatch(setDocuments(response.data.data));\n      }\n    } catch (err) {\n      console.error(\"Delete failed\", err);\n    }\n  };\n\n  return (\n    <div>\n      <Typography textAlign=\"right\">\n        <b>Note:</b> Only jpeg, png, pdf files are accepted\n      </Typography>\n      {secondarydocuments.map((doc) => (\n        <Document\n          key={doc.key}\n          doc={doc}\n          data={data}\n          inputFileRef={inputFileRefs[doc.key as keyof typeof inputFileRefs]}\n          handleSubmit={handleSubmit}\n          handleDelete={handleDelete}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PersonalDocs;\n","import { Box, Typography } from \"@mui/material\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport AcademicDocs from \"./academicDocs\";\nimport PersonalDocs from \"./personalDocs\";\n\nconst TranscriptDocs = () => {\n  const documents = useAppSelector(state=>state.documents)\n  const profile = [\n    {\n      title: \"Personal Documents\",\n      image:  <div>\n   \n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          1\n        </Typography>\n  \n    </div>,\n      component: <PersonalDocs data={documents?.data?.personal}/>\n    },\n    {\n      title: \"Academic Documents\",\n      image: \n      <Typography color=\"#3b3f76\" sx={{position:\"absolute\",top:\"-4px\",left:\"14px\",width:\"200px\"}} fontWeight=\"500\" fontSize=\"1.1rem\">\n          2\n\n    </Typography> ,\n      component:<AcademicDocs data={documents?.data?.academic}/> \n    }\n    \n  ];\n  return (\n    <Box\n     \n    >\n      {profile?.map((item: any) => (\n        <ExpandCard title={item.title} imageUrl={item.image} key={item}>\n          {item.component}\n        </ExpandCard>\n      ))}\n    </Box>\n  );\n};\n\nexport default TranscriptDocs;\n","import { Box, Typography } from '@mui/material'\nimport React from 'react'\nimport CustomTabs from '../../../genericComponents/tabs'\nimport OtherDocs from './documents/otherDocs'\nimport TranscriptDocs from './documents/personal'\n\nconst Documents = () => {\n  return (\n    <Box sx={{display:'flex',flexDirection:'column',justifyContent:'flex-start'}}>\n      <Typography variant=\"h5\" fontWeight=\"bold\" mb={2} sx={{color:\"#8E9091\"}}>Documents</Typography>\n      <TranscriptDocs />\n      <OtherDocs />\n    </Box>\n  )\n}\n\nexport default Documents","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\ninterface CustomCardHOCProps {\n  logoSrc: string;\n  universityName: string;\n  courseName: string;\n  countryName: string;\n  children?: React.ReactNode; // For start date row or other custom content\n  actions?: React.ReactNode; // For action icons row\n}\n\nconst CustomCardHOC = React.memo<CustomCardHOCProps>(({\n  logoSrc,\n  universityName,\n  courseName,\n  countryName,\n  children,\n  actions,\n}) => (\n  <Box\n    sx={{\n      position: \"relative\",\n      borderRadius: \"20px\",\n      // boxShadow: \"0 2px 8px #e0e0e0\",\n      background: \"#EFF4F7\",\n      p: 2,\n      minHeight: 160,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {/* Country name top-right */}\n    <Typography\n      sx={{\n        position: \"absolute\",\n        top: -14,\n        right: 20,\n        fontSize: \"0.85rem\",\n        color: \"#495052\",\n        fontWeight: 500,\n        backgroundColor: \"white\",\n        borderRadius: \"20px\",\n        px: 1.5,\n        py: 0.5,\n        // boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\n      }}\n    >\n      {countryName}\n    </Typography>\n    {/* Logo and names */}\n    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1,mt:2.5 }}>\n      <img\n        src={logoSrc}\n        alt=\"logo\"\n        style={{\n          width: \"2.2rem\",\n          height: \"2.2rem\",\n          borderRadius: \"10px\",\n        }}\n      />\n      <Box>\n        <Typography sx={{ fontWeight: 600, fontSize: \"1rem\" }}>\n          {universityName}\n        </Typography>\n        <Typography sx={{ fontSize: \"0.95rem\", color: \"#495052\" }}>\n          {courseName}\n        </Typography>\n      </Box>\n    </Box>\n    {/* Start date row or custom content */}\n    <Box sx={{ display: \"flex\", alignItems: \"center\", mt: 1, mb: 1 }}>\n      {children}\n    </Box>\n    {/* Actions row */}\n    <Box sx={{ display: \"flex\", justifyContent: \"flex-end\", gap: 2 }}>\n      {actions}\n    </Box>\n  </Box>\n));\n\nexport default CustomCardHOC; ","import { Box, Button, Grid,Tooltip, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport CustomCard from \"../../../../genericComponents/customCard\";\nimport ConfirmDialog from \"../../../../genericComponents/modalPopup/confirmDialog\";\nimport { addToShortList} from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport {  setShortlisted } from \"../../../../store/Slices/shortlistedCoursesSlice\";\nimport {  Event, ShortlistedCourse } from \"../../../../types/types\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { monthNames } from \"../../../../assets/menu\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomCardHOC from '../../../../genericComponents/CustomCardHOC';\n\nconst Shortlisted = () => {\n  const navigate=useNavigate()\n  const shortlistedCourses = useAppSelector(\n    (state) => state.shortlistedcourses\n  );\n  const [open, setOpen] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const dispatch = useAppDispatch();\n  // const navigate = useNavigate();\n  const handleDeleteOpen = (id: string) => {\n    setOpen(true);\n    setDeleteId(id);\n  };\n  const handleDelete = async () => {\n    const values = {\n      action: \"pull\",\n      courseId: deleteId,\n    };\n   \n    const response = await addToShortList(values);\n    if (response.data.success) {\n      dispatch(setShortlisted(response.data.data))\n    }\n      setOpen(false);\n    \n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        try {\n          if (\n            userAuthStatus?.data?.isAuthorized &&\n            userAuthStatus?.data?.isRegistered\n          ) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"applynow\",\n                    data:event.data,\n                    dimensions: {\n                      width: \"450px\",\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                  height:\"70%\",\n                  show:\"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) {}\n        break;\n    }\n  };\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={3}\n        sx={{\n          overflowY: \"scroll\",  \n        }}\n      >\n        {shortlistedCourses.data && shortlistedCourses?.data?.length > 0 ? (\n          <>\n            {shortlistedCourses.data?.map(\n              (item: ShortlistedCourse, i: number) => (\n                                <Grid item xs={12} sm={6} lg={5} sx={{paddingLeft:{xs:0,md:\"1rem\"}}} key={i}>\n                  <CustomCardHOC\n                      logoSrc={item.university.logoSrc}\n                      universityName={item.university.name}\n                      courseName={item.name}\n                      countryName={item.university.location.country}\n                      actions={\n                        <>\n                          <Box\n                            sx={{border:\"1px solid #1C1F40\",borderRadius:\"50%\",width:\"2rem\",height:\"2rem\",display: \"flex\",justifyContent: \"center\",alignItems: \"center\",}}\n                            onClick={() => eventHandler({ name: \"cart\", data: item })}\n                          >\n                            <ShoppingCartOutlinedIcon sx={{fontSize:\"1.25rem\",color:\"#1C1F40\"}} />\n                          </Box>\n                          <Box\n                            component=\"img\"\n                            src={Images.deleteIcon}\n                            alt=\"icon\"\n                            sx={{width:\"2rem\",height:\"2rem\" }}\n                            onClick={() => handleDeleteOpen(item._id)}\n                          />\n                        </>\n                      }\n                    >\n                      <Typography\n                        component=\"span\"\n                        fontSize=\"0.8rem\"\n                        fontWeight=\"500\"\n                        sx={{ display: \"flex\", alignItems: \"center\", whiteSpace: \"nowrap\", mt: 1,color:'#5C6163' }}\n                      >\n                        <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                        &nbsp; Start date :\n                        {item?.startDate\n                          ?.map((item: any, index: number) => monthNames[item?.courseStartingMonth])\n                          .join(\", \")}\n                      </Typography>\n                    </CustomCardHOC>\n                </Grid>\n              )\n            )}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n            }}\n          >\n            <img\n              src={Images.Confused}\n              alt=\"noData\"\n              style={{ width: \"220px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n            />\n            <Typography\n              sx={{\n                mb: 1,\n                fontSize: \"1.6rem\",\n                fontWeight: 600,\n                color: \"#495052\",\n                textAlign: \"center\",\n              }}\n            >\n              No Favourites Yet\n            </Typography>\n            <Typography\n              sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n              }}\n            >\n            Discover programs and save the ones that exite you!\n            </Typography>\n            <Button\n              sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                \"&:hover\": {\n                  background: \"#F48438\",\n                },\n              }}\n              onClick={() => {\n                const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                  1\n                )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              Add products\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: handleDelete, // Pass the function directly without curly braces\n          title: \"Are you sure you want to delete this from your shortlist?\",\n          content:\n            \"You're just a few steps away from applying to universities.\",\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shortlisted;\n","import { Box} from \"@mui/material\";\nimport React from \"react\";\n// import CustomTabs from \"../../../../genericComponents/tabs\";\nimport Shortlisted from \"./shortlisted\";\n\nconst Universities = () => {\n  // const tabs = [\n  //   {\n  //     label: \"Shortlisted programs\",\n  //     Component: (\n  //       <div>\n  //         <Shortlisted />\n  //       </div>\n  //     ),\n  //   },\n  //   {\n  //     label: \"Recommended programs\",\n  //     Component: (\n  //       <div>\n  //         <Typography>Recommendations</Typography>\n  //         {/* <AppliedUniversities /> */}\n  //       </div>\n  //     ),\n  //   },\n  // ];\n  return (\n    <Box\n      sx={{\n        // background: \"#fff\",\n        // borderRadius: \"10px\",\n        p: 2,\n      }}\n    >\n      {/* <CustomTabs tabs={tabs} /> */}\n      <Shortlisted />\n    </Box>\n  );\n};\n\nexport default Universities;\n","import { Avatar, Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { getAdvisorTitle,setWordCase } from \"../../../../assets/library\";\nimport { modifyBooking } from \"../../../../services\";\nimport { updatemeetings } from \"../../../../store/Slices/meetings\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UpcomingSessions = () => {\n  const meetings = useAppSelector((state) => state.meetings);\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [deleteItem,setDeleteItem] = useState();\n  const navigate=useNavigate()\n\n  const joinNowClick = (link: string) => {\n    window.open(link, \"_blank\");\n  };\n\n  const cancelCall = async (id: string) => {\n    try {\n      const response = await modifyBooking({\n        meetingId: deleteItem,\n        option: \"cancelEvent\",\n      });\n      if (response) {\n        dispatch(updatemeetings(response.data));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: response.data.message,\n                dimensions: {\n                  width: \"30%\",\n                height:\"40%\",\n                  show:\"none\"\n    \n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n      console.error(\"Error cancelling the event:\", error);\n    }\n    setOpen(false)\n  };\n\n  const handleDeleteOpen = (item:any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const filteredEvents = meetings.data?.filter((event) => {\n    const startTime = new Date(event?.data?.start.dateTime);\n    const currentTime = new Date();\n    return event.status === \"upcoming\" && startTime > currentTime;\n  });\n\n  const rescheduledEvents = meetings.data?.filter((event) => {\n    const startTime = new Date(event?.data?.start.dateTime);\n    const currentTime = new Date();\n    return event.status === \"rescheduled\" && startTime > currentTime;\n  });\n\n  const hasEvents = filteredEvents?.length > 0 || rescheduledEvents?.length > 0;\n\n  return (\n    <div>\n      <Grid\n        container\n        spacing={2}\n        sx={{\n          mt: 1,\n          p: 1,\n          height: { xs: \"150px\", md: \"150px\",lg:\"170px\" },\n          overflowY: \"auto\",\n        }}\n      >\n        {hasEvents ? (\n          <>\n            {filteredEvents?.map((data, i) => {\n              console.log(\"data\",data)\n              const startTime = new Date(data?.data?.start.dateTime);\n              const endTime = new Date(data?.data?.end.dateTime);\n              const currentTime = new Date();\n              const isEventInProgress =\n                currentTime >= startTime && currentTime <= endTime;\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  key={i}\n                  sx={{\n                    mb: { xs: 2, md: 3 },\n                    display: \"flex\",\n                    background: \"#F8F8FC\",\n                    borderRadius: \"10px\",\n                    height: \"100px\",\n                    position: \"relative\",\n                    alignItems: \"center\",\n                    px: { xs: 1, md: 2 },\n                    py: { xs: 2, md: 0 }\n                  }}\n                >\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={12} md={4}>\n                      <Box sx={{ \n                        display: \"flex\", \n                        flexDirection: \"column\", \n                        gap: { xs: 0.5, md: 1,lg:0.5 },\n                        mb: { xs: 2, md: 0,lg:5 }\n                      }}>\n                        <Typography\n                          fontWeight=\"500\"\n                          sx={{\n                            fontSize: { xs: \"12px\", md: \"14px\" },\n                            color: \"#8E9091\",\n                          }}\n                        >\n                          {data?.member?.role}\n                        </Typography>\n                        <Typography sx={{ \n                          color: \"#495052\", \n                          fontWeight: 500,\n                          fontSize: { xs: \"12px\", md: \"14px\" }\n                        }}>\n                          {setWordCase(data?.data?.description)}\n                        </Typography>\n                        <Typography\n                          fontSize={{ xs: \"9px\", md: \"10px\" }}\n                          sx={{ color: '#8E9091' }}\n                        >\n                          {new Date(data?.data?.start.dateTime).toLocaleString(\"en-GB\", {\n                            month: \"long\",\n                            year: \"numeric\",\n                            day: \"numeric\",\n                            hour: \"numeric\",\n                            minute: \"numeric\",\n                            hour12: true,\n                          })}\n                        </Typography>\n                      </Box>\n                    </Grid>\n                    <Grid item xs={12} md={8} sx={{ position: \"relative\" }}>\n                      <Box sx={{ \n                        display: \"flex\", \n                        flexDirection: { xs: \"column\", md: \"row\" },\n                        alignItems: { xs: \"flex-start\", md: \"center\",lg:\"center\" },\n                        gap: 0,\n                        position: { xs: \"relative\", md: \"absolute\" },\n                        right: { xs: 0, md: 0 },\n                        top: { xs: \"auto\", md: \"50%\" },\n                        transform: { xs: \"none\", md: \"translateY(-50%)\" },\n                        width: { xs: \"100%\", md: \"auto\" }\n                      }}>\n                        <Box sx={{ \n                          display: \"flex\", \n                          flexDirection: \"column\", \n                          alignItems: { xs: \"flex-start\", md: \"center\" }, \n                          gap: 1,\n                          width: { xs: \"100%\", md: \"auto\" }\n                        }}>\n                          {/* <Avatar\n                            src={data?.member.displayPicSrc}\n                            alt=\"advisor\"\n                            sx={{\n                              width: { xs: \"2rem\", md: \"2.5rem\" },\n                              height: { xs: \"2rem\", md: \"2.5rem\" },\n                              border: \"2px solid #3B3F76\",\n                              ml:{xs:'150px'}\n                            }}\n                          /> */}\n                          <Button\n                            onClick={() => joinNowClick(data?.data.hangoutLink)}\n                            disabled={!isEventInProgress}\n                            sx={{\n                              background:\"#70A6B2\",\n                              textTransform: \"none\",\n                              color: \"#FFFFFF !important\",\n                              fontSize: { xs: \"10px\", md: \"11px\" },\n                              p: 1,\n                              height: { xs: \"25px\", md: \"30px\" },\n                              borderRadius: \"25px\",\n                              width: { xs: \"50%\", md: \"auto\",lg:'auto' },\n                              mb:{xs:3,md:0,lg:0.5},\n                            }}\n                          >\n                            Join now\n                          </Button>\n                        </Box>\n                        <Typography\n                          sx={{\n                            background: \"#ffff\",\n                            p: 1,\n                            borderRadius: \"25px\",\n                            border:\"2px solid #70A6B2\",\n                            fontSize: { xs: \"10px\", md: \"10px\",lg:'10px' },\n                            color: \"#3B3F76\",\n                            width: \"fit-content\",\n                            fontWeight: 'bold',\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            position: { xs: \"relative\", md: \"absolute\",lg:'absolute' },\n                            bottom: { xs: \"auto\", md: \"-5px\",lg:'1px' },\n                            right: { xs: \"-100px\", md: \"70px\",lg:\"70px\" },\n                            // mt: { xs: 1, md: 0,lg:7}\n                            \n                          }}\n                        >\n                          <span\n                            onClick={() =>\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"reschedule\",\n                                      data: data,\n                                      dimensions: {\n                                        width: \"800px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                            }\n                            style={{ cursor: \"pointer\",color:\"#495052\" }}\n                          >\n                            Reschedule\n                          </span>\n                          <span style={{ color: \"#3B3F76\" }}>|</span>\n                          <span\n                            onClick={() => handleDeleteOpen(data?._id)}\n                            style={{ cursor: \"pointer\",color:\"#495052\" }}\n                          >\n                            Cancel\n                          </span>\n                        </Typography>\n                      </Box>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            })}\n            {rescheduledEvents?.map((data, i) => {\n              const startTime = new Date(data?.data?.start.dateTime);\n              const endTime = new Date(data?.data?.end.dateTime);\n              const currentTime = new Date();\n              const isEventInProgress =\n                currentTime >= startTime && currentTime <= endTime;\n              return (\n                <Grid\n                item\n                xs={12}\n                key={i}\n                sx={{\n                  display: \"flex\",\n                  position: \"relative\",\n                  background: \"#F8F8FC\",\n                  my: 1,\n                  borderRadius: \"10px\",\n                  height:\"100px\"\n                }}\n              >\n                <Grid container spacing={2}>\n                  <Grid\n                    item\n                    xs={4}\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <Box\n                      sx={{\n                        position: \"absolute\",\n                        top: \"-15px\",\n                        display: \"flex\",\n                        gap: \"1rem\",\n                        left:0\n                      }}\n                    >\n                      <Avatar\n                        src={data?.member.displayPicSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"2rem\",\n                          height: \"2rem\",\n                          borderRadius: \"50%\",\n                          marginLeft: \"0.8rem\",\n                        }}\n                      />\n                      <Typography\n                        fontWeight=\"500\"\n                        sx={{\n                          background: \"#fff\",\n                          p: 1,\n                          borderRadius: \"10px\",\n                          fontSize: \"14px\",\n                          color: \"#3B3F76\",\n                        }}\n                      >\n                        {data?.member?.role\n                          ? getAdvisorTitle(data?.member?.role)\n                          : getAdvisorTitle(data?.member?.role)}\n                      </Typography>\n                    </Box>\n                    <Typography sx={{mt:-2}}>{setWordCase(data?.member.firstName)}</Typography>\n                  </Grid>\n                  <Grid item xs={8} sx={{ mt: 1, position: \"relative\" }}>\n                    <Button\n                      onClick={() => joinNowClick(data?.data.hangoutLink)}\n                      disabled={!isEventInProgress}\n                      sx={{\n                        border: \"1px solid #027A48\",\n                        textTransform: \"none\",\n                        color: \"#000\",\n                        fontSize: \"11px\",\n                        p: 0,\n                        position: \"absolute\",\n                        top: \"0\",\n                        right: \"10px\",\n                      }}\n                    >\n                      Join now\n                    </Button>\n                    {/* <Typography sx={{ mt: 0.5 }}>\n                      {data?.data?.description ? data?.data?.description : \"N/A\"}\n                    </Typography> */}\n                    <Box sx={{display:\"flex\",mt:2}}>\n                    <Typography\n                      // color=\"#C3C3C5\"\n                      fontSize=\"14px\"\n                      gutterBottom\n                      sx={{ mb: 1 }}\n                    >\n                      {new Date(data?.data?.start.dateTime).toLocaleString(\"en-GB\", {\n                        month: \"long\",\n                        year: \"numeric\",\n                        day: \"numeric\",\n                        hour: \"numeric\",\n                        minute: \"numeric\",\n                        hour12: true,\n                      })}\n                    </Typography>\n                    <Tooltip\n              slotProps={{\n                tooltip: {\n                  sx: {\n                    color: \"#514E6A\",\n                    backgroundColor: \"#ffff\",\n                    boxShadow: 2,\n                    cursor: \"pointer\",\n                  },\n                },\n              }}\n              title={data?.data?.description ? data?.data?.description : \"N/A\"}\n              placement=\"top-start\"\n            >\n              <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\",fontSize:\"1rem\",float:\"right\" }} />\n            </Tooltip>\n            </Box>\n                    <Typography\n                      fontWeight=\"500\"\n                      sx={{\n                        background: \"#fff\",\n                        p: 0.5,\n                        borderRadius: \"10px\",\n                        fontSize: \"14px\",\n                        color: \"#3B3F76\",\n                        width: \"fit-content\",\n                        position: \"absolute\",\n                        bottom: \"15px\",\n                        right: \"10px\",\n                      }}\n                    >\n                      <span\n                        onClick={() =>\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"reschedule\",\n                                  data: data,\n                                  dimensions: {\n                                    width: \"800px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        Reschedule\n                      </span>{\" \"}\n                      /\n                      <span\n                        // onClick={() => cancelCall(data?._id)}\n                        onClick={() => handleDeleteOpen(data?._id)}\n                        style={{ cursor: \"pointer\" }}\n                      >\n                        Cancel\n                      </span>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              );\n            })}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              height:\"80px\"\n            }}\n          >\n            <Typography color=\"#3B3F76\" fontSize=\"1.2rem\" fontWeight=\"500\" sx={{color: \"#F87171\",fontWeight:'bold'}}>\n              No Meetings\n            </Typography>\n            <img\n              src={Images.Calender}\n              alt=\"noData\"\n              style={{ width: \"200px\", marginTop: \"0.5rem\" }}\n            />\n             <Typography color=\"black\" fontSize=\"1rem\" fontWeight=\"500\">\n           No Meetings found\n         </Typography>\n          {/* <Button \n          sx={[globalButton, { fontSize: { lg: \"14px\", xs: \"12px\" },  padding: { lg: \"8px\", xs: \"6px\" },my: { lg: \"12px\", xs: \"6px\" },mx: { lg: \"12px\", xs: \"6px\" }  }]}\n           onClick={() =>\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"advisor\",\n                                      // data: advisor,\n                                      dimensions: {\n                                        width: \"900px\",\n                                        height: \"85%\"\n          \n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              )\n                            }>\n          Book Slots\n          </Button> */}\n          </Grid>\n          \n        )}\n      </Grid>\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit:cancelCall, \n          title: \"Are you sure you want to cancel this meeting?\",\n          content:\"\"\n        }}\n      />\n    </div>\n  );\n};\n\nexport default UpcomingSessions;\n","import { Box, Typography } from '@mui/material';\nimport UpcomingSessions from './upcomingSessions';\n\nconst BookedSlots = () => {\n  return (\n    <Box sx={{\n      background: \"#F4F4FF\",\n      borderRadius: \"16px\",\n      boxShadow: 0,\n      p: 1,\n      mb: 2,\n    }}>\n      <Typography fontWeight={600} fontSize=\"1.1rem\" color=\"#3B3F76\" mb={0.5}>\n        Upcoming Meetings\n      </Typography>\n      <UpcomingSessions/>\n    </Box>\n  )\n}\n\nexport default BookedSlots","import { Box, Button, Grid, Stack, Tooltip, Typography } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport Images from \"../../../../assets\";\n// import CircularWithValueLabel from \"./circularprogress\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport { uploadApplicationDocs } from \"../../../../services\";\nimport { updateApplication } from \"../../../../store/Slices/applicationsSlice\";\nimport { setWordCase } from \"../../../../assets/library\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { commonStackStyles, commonTypographyStyles, globalButton } from \"../../../../components/styles/customStyles\";\n// import EastIcon from \"@mui/icons-material/East\";\nimport { Recommendation } from \"src/types/types\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport '../../../../App.css'\n\nconst CardPage = () => {\n  const navigate = useNavigate();\n  const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n  const applied = useAppSelector((state) => state.applications);\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const ambitious = recommendations?.data && recommendations?.data?.data?.filter(\n    (item: Recommendation) => item?.possibilityOfAdmit === \"Ambitious\"\n  );\n  const safe: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Safe\"\n  );\n  const moderate: any = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Moderate\");\n\n  const sections = [\n    {\n      title: \"Activity\",\n      items: [\n        {\n          count: `${shortlisted.data?.length}`,\n          background: \"#FFF7E9\",\n          link: \"/profile/shortlisted\",\n          label: \"Wishlisted Courses\", icon: <img src={Images.BookDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${applied.data?.length}`,\n          background: \"#FFA89C4D\",\n          link: \"/profile/applications\",\n          label: \"Applied Universities\", icon: <img src={Images.UniDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n      ],\n    },\n    {\n      title: \"Recommendation\",\n      items: [\n        {\n          count: `${safe?.length}`,\n          link: `/profile/recommendedCourses/Safe`,\n          background: \"#FFA89C4D\",\n\n          label: \"Safe\", icon: <img src={Images.SafeDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${moderate?.length}`,\n          link: `/profile/recommendedCourses/Moderate`,\n          background: \"#C9F9F6\",\n\n          label: \"Moderate\", icon: <img src={Images.ModerateDashboard} alt=\"safe\" style={{ width: \"1.2rem\" }} />\n        },\n        {\n          count: `${ambitious?.length}`,\n          link: `/profile/recommendedCourses/Ambitious`,\n          background: \"#F4F4FF\",\n\n          label: \"Ambitious\",  icon: <img src={Images.AmbitiousDashboard} alt=\"ambitious\" style={{ width: \"1.2rem\" }} />\n        },\n      ],\n    },\n  ];\n  return (\n    <div>\n      <Box sx={{ borderRadius: \"10px\", pl: 2, height: { xs: \"100%\" } }}>\n        {/* Activity Section */}\n        <Box sx={{ mb: 2}}>\n          <Typography fontWeight={600} fontSize=\"1.1rem\" mb={1} color=\"#3b3f76\">\n                Activity\n              </Typography>\n          <Grid container spacing={2} justifyContent=\"flex-start\">\n            {sections[0].items.map((item, idx) => (\n              <Grid item xs={12} sm={6} md={6} key={idx}>\n                <Box\n                  sx={{\n                    bgcolor: \"#E6F4FF\",\n                    borderRadius: 2,\n                    p: 2,\n                    display: \"flex\",\n                    flexDirection:\"column\",\n                    // alignItems: \"center\",\n                    gap: 0.5,\n                    cursor: \"pointer\",\n                    boxShadow: 0,\n                    transition: \"box-shadow 0.2s\",\n                    '&:hover': { boxShadow: 3 },\n                  }}\n                  onClick={() => navigate(item.link)}\n                >\n                  <Box sx={{ fontSize: 18, fontWeight: 700, color: \"#3b3f76\", minWidth: 40 }}>{item.count}</Box>\n                  <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1}}>\n                          {item.icon}\n                    <Typography color=\"#3b3f76\">{item.label}</Typography>\n                  </Box>\n              </Box>\n            </Grid>\n            ))}\n          </Grid>\n        </Box>\n        {/* Recommendations Section */}\n        <Box>\n          <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", mb: 1 }}>\n            <Typography fontWeight={600} fontSize=\"1.1rem\" color=\"#3b3f76\">\n                Recommendations\n            </Typography>\n            {recommendations.data && recommendations.data?.data?.length > 0 ? (\n              <Button\n                variant=\"text\"\n                sx={{ color: \"#F87171\", fontWeight: 600, textTransform: \"none\", fontSize: \"1rem\" }}\n                onClick={() => navigate(`/profile/recommendedCourses/Safe`)}\n              >\n                Show Recommendations\n              </Button>\n            ) : (\n                       <Button \n                variant=\"text\"\n                sx={{ color: \"#F87171\", fontWeight: 600, textTransform: \"none\", fontSize: \"1rem\" }}\n                onClick={() => navigate(\"/profile/recommendedCourses/generate\")}\n              >\n                         Generate Recommendations\n                         </Button>\n            )}\n          </Box>\n          {recommendations.data && recommendations.data?.data?.length > 0 ? (\n            <Grid container spacing={2} justifyContent=\"flex-start\">\n              {sections[1].items.map((item, idx) => (\n                <Grid item xs={12} sm={4} key={idx}>\n                  <Box\n                    sx={{\n                      bgcolor: \"#E6F4FF\",\n                      borderRadius: 2,\n                      p: 2,\n                      // textAlign: \"center\",\n                      cursor: \"pointer\",\n                      boxShadow: 0,\n                      transition: \"box-shadow 0.2s\",\n                      '&:hover': { boxShadow: 3 },\n                    }}\n                    onClick={() => navigate(item.link)}\n                  >\n                    <Box sx={{ fontSize: 16, fontWeight: 700, color: \"#3b3f76\", minWidth: 40 }}>{item.count}</Box>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mt: 1 }}>\n                      {item.icon}\n                      <Typography fontWeight={500} color=\"#3b3f76\">{item.label}</Typography>\n                    </Box>\n                  </Box>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Box sx={{ bgcolor: \"#E6F4FF\", borderRadius: 2, p: 4, textAlign: \"center\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n              <Box>\n                <Typography color=\"#3B3F76\" fontWeight={600} fontSize=\"1.2rem\">Oh <span style={{ color: \"#F87171\" }}>nooo!</span></Typography>\n                <Typography sx={{ mt: 1, mb: 2 }}>Recommendations not generated yet!</Typography>\n              </Box>\n              <Box>\n                <img src={Images.noRecommend} alt=\"No Recommendations\" style={{ width: 120, height: 120 }} />\n              </Box>\n            </Box>\n          )}\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nconst Checklist = () => {\n  const [loading, setLoading] = useState(false);\n  const inputFile = useRef<HTMLInputElement>(null);\n  const dispatch = useAppDispatch();\n  const applications = useAppSelector((state) => state.applications);\n\n  const handleSubmit = async (\n    event: React.ChangeEvent<HTMLInputElement>,\n    item: any,\n    docItem: any\n  ) => {\n    const file = event.target.files && event.target.files[0];\n    try {\n      if (file !== null && file !== undefined) {\n        const formData = new FormData();\n        formData.append(\"uploaded_file\", file || null);\n        formData.append(\"applicationId\", item._id);\n        formData.append(\"checklistItemId\", docItem._id);\n        // setLoading(true)\n        const response = await uploadApplicationDocs(formData);\n        if (response) {\n          dispatch(setDocuments(response.data.data.docs));\n          dispatch(\n            updateApplication(response.data.data)\n          );\n          setLoading(false);\n        }\n      } else {\n        setLoading(false);\n      }\n    } catch (err) {\n      setLoading(false);\n    }\n  };\n\n  const imageClick = () => {\n    inputFile?.current?.click();\n  };\n  const filteredApplications = applications?.data?.filter((item) => {\n    return item?.docChecklist?.some((docItem) => !docItem?.isChecked);\n  })\n    .map((item) => ({\n      ...item,\n      docChecklist: item?.docChecklist?.filter((docItem) => !docItem?.isChecked),\n    }));\n\n  return (\n    <Box>\n      <div>\n        <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\"}}>\n          <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n            Pending Task\n          </Typography>\n        </Typography>\n      </div>\n      <Box\n        sx={{\n          height: \"140px\",\n          background: \"#F4F4FF\",\n          overflowY: \"scroll\",\n          borderRadius: \"10px\",\n          mt: 1\n        }}\n\n      >\n        {filteredApplications?.length > 0 ? (\n          filteredApplications?.map((item) => {\n            return item?.docChecklist?.map((docItem) => (\n              <>\n                <Grid\n                  container\n                  sx={{\n                    px: 2,\n                    py: 1,\n                    borderRadius: \"10px\",\n                    cursor: \"pointer\",\n                    margin: \"10px\",\n                    width: \"auto\",\n                    background: \"transparent\",\n                    borderBottom: \"3px solid #fff\"\n                  }}\n                  key={item._id}\n                >\n                  <Grid\n                    item\n                    xs={12}\n                    onClick={() =>\n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"applicationPopup\",\n                              data: item._id,\n                              dimensions: {\n                                width: \"800px\",\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      )\n                    }\n                  >\n                    <Typography\n                      fontSize=\"14px\"\n                      display=\"flex\"\n                      alignItems=\"center\"\n                    >\n                      <img\n                        src={item?.course?.university?.logoSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"2rem\",\n                          height: \"2rem\",\n                          marginRight: \"10px\",\n                          borderRadius: \"50%\",\n                        }}\n                      />\n                      {item?.course?.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography fontWeight=\"500\" fontSize=\"14px\">\n                      {setWordCase(docItem.name)}\n                    </Typography>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={6}\n                    sx={{\n                      display: \"flex\",\n                      height: \"20px\",\n                      justifyContent: \"space-between\",\n                    }}\n                  >\n                    {docItem?.doc ? (\n                      <Box\n                        sx={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        {/* <Link\n                          to={`/pdfPreview?type=${docItem?.doc?.contentType}&id=${docItem?.doc?._id}`}\n                          // to=\"/pdfPreview\"\n                          target=\"_blank\"\n                          // onClick={() => {\n                          //   localStorage.setItem(\n                          //     \"docId\",\n                          //     docItem?.doc?._id\n                          //   );\n                          // }}\n                          style={{ textDecoration: \"none\" }}\n                        > */}\n                        <VisibilityOutlinedIcon\n                          sx={{ fontSize: \"large\" }}\n                          onClick={() => {\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"fileViewer\",\n                                    data: docItem?.doc?.data?.preview_url,\n                                    dimensions: {\n                                      width: \"500px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                }\n                              })\n                            );\n                          }}\n                        />\n                        <h4\n                          style={{\n                            color: \"#000\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            fontSize: \"12px\",\n                            // width: \"120px\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            textOverflow: \"ellipsis\",\n                            fontWeight:400,marginLeft:\"5px\"\n                          }}\n                        >\n                          {docItem?.doc?.data?.FileName}\n                        </h4>\n                        {/* </Link> */}\n                      </Box>\n                    ) : (\n                      <>\n                        <input\n                          style={{ display: \"none\" }}\n                          type=\"file\"\n                          className=\"\"\n                          name=\"image\"\n                          onChange={(event) =>\n                            handleSubmit(event, item, docItem)\n                          }\n                          ref={inputFile}\n                          accept=\".pdf\"\n                        />\n                        <Button\n                          sx={{\n                            color: \"#000\",\n                            textTransform: \"none\",\n                            p: 0.25,\n                            fontSize: \"0.7rem\",\n                            ml: 1,\n                          }}\n                          onClick={imageClick}\n                        >\n                          {loading ? (\n                            <Box\n                              component=\"img\"\n                              src={Images.standardLoader}\n                              alt=\"standardLoader\"\n                              sx={{ width: \"1rem\", height: \"1rem\" }}\n                            />\n                          ) : (\n                            <FileUploadOutlinedIcon />\n                          )}\n                        </Button>\n                      </>\n                    )}\n                    <Typography\n                      sx={{\n                        fontSize: \"11px\",\n                        margin: \"2px 2px 0 0\",\n                        position: \"relative\",\n                        cursor: \"pointer\",\n                        \"&:hover .cancel-icon\": {\n                          display: \"block !important\",\n                        },\n                      }}\n                    >\n                      <InfoOutlinedIcon\n                        sx={{ color: \"#FF751A\", fontSize: \"1rem\" }}\n                      />\n                      {docItem?.desc && (\n                        <span\n                          className=\"cancel-icon\"\n                          style={{\n                            display: \"none\",\n                            color: \"#000\",\n                            position: \"absolute\",\n                            // border: \"1px solid #7d7d7d\",\n                            padding: \"2px\",\n                            maxWidth: \"200px\",\n                            zIndex: 1,\n                            // background: \"#fff\",\n                            textAlign: \"center\",\n                            right: 0,\n                            border: \"1px solid #000\",\n                            borderRadius: \"5px\"\n                          }}\n                        >\n                          {docItem.desc}\n                        </span>\n                      )}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </>\n            ));\n          })\n        ) : (\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              height: \"80%\",\n              \n            }}\n          >\n            {/* <img className=\"responsive-img\" src={Images.Explore7} alt=\"nodata\" /> */}\n            <Typography sx={{fontSize:20,color: \"#F87171\",fontWeight:'bold' }}> Pending Task?</Typography>\n            <Typography sx={{ display: \"flex\",width:'330px' }}>\n              The checklist has yet to be added by the student counsellor\n              {/* <Tooltip\n                slotProps={{\n                  tooltip: {\n                    sx: {\n                      color: \"#514E6A\",\n                      backgroundColor: \"#ffff\",\n                      boxShadow: 2,\n                      cursor: \"pointer\",\n                    },\n                  },\n                }}\n                title=\"A checklist is a list of items or tasks added by the Student Advisor which need's \nto be completed or verified. It serves as a tool for ensuring that all necessary \nsteps or items are addressed in a particular process or activity. Checklists \nare commonly used in various contexts, such as in planning, organizing, quality \nassurance, and everyday tasks, to help individuals or teams stay organized \nand ensure that nothing is overlooked.\"\n                placement=\"top-start\"\n              >\n                <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\" }} />\n              </Tooltip> */}\n            </Typography>\n          </Box>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport { CardPage, Checklist };\n","import { Avatar, Box, Button, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { User } from \"../../../../types/types\";\n\nconst Events = () => {\n  const advisor = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n\n  // Placeholder: Replace with your real events data source\n  const events = advisor?.data && Array.isArray(advisor?.data)\n    ? advisor.data.map((item, idx) => ({\n        date: \"Tomorrow\",\n        day: \"16, April\",\n        name: \"Event name\",\n        organizer: \"Organizer name\",\n        time: \"9am - 10am\",\n        id: idx,\n      }))\n    : [];\n\n  return (\n    <Box\n      sx={{\n        borderRadius: \"16px\",\n        background: \"#fff\",\n        p: 2,\n        boxShadow: 1,\n        minHeight: 290,\n      }}\n    >\n      <Typography fontWeight={600} fontSize=\"1.2rem\" color=\"#3B3F76\" mb={2}>\n        Upcoming Events\n      </Typography>\n      <Stack spacing={2} sx={{ maxHeight: 320, overflowY: 'auto', pr: 1 }}>\n        {events.length < 0 ? (\n          events.map((event) => (\n            <Box\n              key={event.id}\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"space-between\",\n                background: \"#fff\",\n                borderRadius: \"12px\",\n                boxShadow: 0,\n                p: 2,\n                border: '1px solid #E6E6E6',\n                minHeight: 60,\n                gap: 2,\n              }}\n            >\n              {/* Date */}\n              <Box sx={{ minWidth: 80, textAlign: 'left' }}>\n                <Typography fontWeight={600} color=\"#3B3F76\" fontSize=\"1rem\">\n                  {event.date}\n                </Typography>\n                <Typography color=\"#A6A6A6\" fontSize=\"0.95rem\">\n                  {event.day}\n                </Typography>\n              </Box>\n              {/* Event Info */}\n              <Box sx={{ flex: 1, pl: 2 }}>\n                <Typography fontWeight={600} color=\"#3B3F76\" fontSize=\"1rem\">\n                  {event.name}\n                </Typography>\n                <Typography color=\"#A6A6A6\" fontSize=\"0.95rem\">\n                  Organized by : {event.organizer}\n                </Typography>\n                <Box sx={{ mt: 1 }}>\n                  <Typography\n                    sx={{\n                      display: 'inline-block',\n                      background: '#E0F7FA',\n                      color: '#0097A7',\n                      borderRadius: '8px',\n                      px: 1.5,\n                      py: 0.5,\n                      fontSize: '0.9rem',\n                      fontWeight: 600,\n                    }}\n                  >\n                    {event.time}\n                  </Typography>\n                </Box>\n              </Box>\n              {/* Book Now Button */}\n              <Button\n                variant=\"outlined\"\n                sx={{\n                  height:\"30px\",\n                  width:\"60px\",\n                  borderRadius: '25px',\n                  borderColor: '#F2994A',\n                  color: '#F2994A',\n                  fontWeight: 300,\n                  px: 3,\n                  py: 1,\n                  textTransform: 'none',\n                  fontSize: '1rem',\n                  boxShadow: 0,\n                  '&:hover': {\n                    borderColor: '#F2994A',\n                    background: '#FFF7E6',\n                  },\n                }}\n                onClick={() => dispatch(setPopup({ show: true, data: { container: { name: \"event\", data: event, dimensions: { width: \"600px\", height: \"60%\" } }, type: \"custom\" } }))}\n              >\n                Book Now\n              </Button>\n            </Box>\n          ))\n        ) : (\n          <Box sx={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"}}>\n           <Typography color=\"#3B3F76\" fontWeight={500} fontSize=\"1rem\" style={{alignItems:\"center\"}}>\n            No <span style={{ color: \"#F87171\" }}>Upcoming</span> Events right now.\n          </Typography>\n          </Box>   \n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Events;\n","import { Avatar, Box, Grid, Stack, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { getAdvisorTitle, normalizeType } from \"../../../../assets/library\";\nimport { commonStackStyles, commonTypographyStyles } from \"../../../../components/styles/customStyles\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { User } from \"../../../../types/types\";\n\nconst Advisors = () => {\n  const advisor = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n\n  interface Advisor {\n    _id: string;\n    info: User;\n    assignedCountries: string[],\n  }\n  return (\n    <Box\n      sx={{\n        borderRadius: \"20px\",\n        background: \"#F4F4FF\",\n        p: 2.5,\n        mb: 3,\n        boxShadow: 0,\n        minHeight: 180,\n        maxWidth: 250,\n      }}\n    >\n      <Typography fontWeight={600} fontSize=\"1.25rem\" color=\"#3B3F76\" mb={2}>\n        Advisors\n      </Typography>\n      <Stack spacing={2.2} sx={{ maxHeight: 320, overflowY: 'auto', pr: 0.5 }}>\n        {advisor?.data && Array.isArray(advisor?.data) && advisor?.data?.length > 0 ? (\n          advisor?.data?.map((advisor: Advisor, idx: number) => (\n            <Box\n              key={advisor._id}\n              sx={{\n                display: 'flex',\n                alignItems: 'center',\n                background: '#fff',\n                borderRadius: '16px',\n                p: 2,\n                boxShadow: '0px 2px 8px 0px #E0E0F6',\n                cursor: 'pointer',\n                minHeight: 80,\n              }}\n              onClick={() =>\n                dispatch(\n                  setPopup({\n                    show: true,\n                    data: {\n                      container: {\n                        name: \"advisor\",\n                        data: advisor,\n                        dimensions: {\n                          width: \"1200px\",\n                          height: \"85%\"\n                        },\n                      },\n                      type: \"custom\",\n                    },\n                  })\n                )\n              }\n            >\n              <Avatar\n                src={advisor?.info?.displayPicSrc}\n                alt=\"pic\"\n                sx={{ width: 28, height: 28, mr: 2, boxShadow: '0 1px 4px #E0E0F6' }}\n              />\n              <Box>\n                <Typography fontWeight={700} color=\"#3B3F76\" fontSize=\"1.05rem\" lineHeight={1.3}>\n                  {normalizeType(advisor?.info?.firstName)}\n                </Typography>\n                <Typography color=\"#3B3F76\" fontSize=\"0.85rem\" fontWeight={400} lineHeight={1.3}>\n                  {getAdvisorTitle(advisor?.info?.role)}\n                </Typography>\n                <Box\n                  sx={{\n                    display: 'inline-block',\n                    mt: 1,\n                    px: 1.5,\n                    py: 0.3,\n                    borderRadius: '12px',\n                    background: '#E6E6FA',\n                  }}\n                >\n                  <Typography fontSize=\"0.65rem\" color=\"#3B3F76\" fontWeight={600}>\n                    6+ Years experience\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          ))\n        ) : (\n          <Typography color=\"#3B3F76\" fontWeight={500} fontSize=\"1rem\">\n            Advisors not assigned\n          </Typography>\n        )}\n      </Stack>\n    </Box>\n  );\n};\n\nexport default Advisors; ","import { Box, Grid, Card, Typography, Button } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport BookedSlots from \"./dashboard/bookedSlots\";\nimport { CardPage, Checklist } from \"./dashboard/cardPage\";\nimport Events from \"./dashboard/events\";\nimport Advisors from \"./dashboard/advisors\";\nimport Images from \"src/assets\";\n\nconst carouselData = [\n  {\n    title: \"Exclusive Scholarships\",\n    subtitle: \"Limited-Time Scholarship Finder\",\n    description: \"Explore scholarships tailored to your profile, limited-time access available now!\",\n    button: \"Unlock now\",\n    image: Images.MoneyBag,\n    bg: \"#B7A9F9\"\n  },\n  {\n    title: \"Free SOP review\",\n    subtitle: \"Get expert feedback on your SOP.\",\n    description: \"Improve its clarity, structure, and overall impact before you submit.\",\n    button: \"Improve my sop\",\n    image: Images.SopDashboard, \n    bg: \"#6DB1B3\"\n  },\n  {\n    title: \"Free test prep access\",\n    subtitle: \"Test smarter-practice for free.\",\n    description: \"practice with mock tests, tips, and guides to ace your exams.\",\n    button: \"Try for free\",\n    image: Images.TestDashboard,\n    bg: \"#EE6F57 \"\n  },\n  {\n    title: \"Profile review\",\n    subtitle: \"Get a free expert review.\",\n    description: \"Boost your chances of admission with a free expert.\",\n    button: \"Get free review\",\n    image: Images.ProfileDashboard,\n    bg: \"#F2A05E\"\n  }\n];\n\nconst ScholarshipCarousel = () => {\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIndex((prev) => (prev + 1) % carouselData.length);\n    }, 2000);\n    return () => clearTimeout(timer);\n  }, [index]);\n\n  const card = carouselData[index];\n\n  return (\n    <>\n      <Card\n        sx={{\n          background: card.bg,\n          borderRadius: '32px',\n          mt: 4,\n          p: 4,\n          color: '#fff',\n          display: 'flex',\n          alignItems: 'flex-start',\n          minHeight: 160,\n          boxShadow: 0,\n          position: 'relative',\n          overflow: 'visible',\n        }}\n      >\n        <Box sx={{ flex: 1, pr: 2 }}>\n          <Typography fontWeight={500} fontSize=\"1.1rem\" mb={1} sx={{ color: '#fff', textAlign: 'left' }}>\n            {card.title}\n          </Typography>\n          <Typography fontWeight={300} fontSize=\"1.0rem\" mb={1} sx={{ color: '#fff', textAlign: 'left' }}>\n            {card.subtitle}\n          </Typography>\n          <Typography fontSize=\"0.8rem\" mb={2} sx={{ color: '#fff', textAlign: 'left' }}>\n            {card.description}\n          </Typography>\n          <Button\n            variant=\"contained\"\n            sx={{\n              background: '#fff',\n              color: '#222',\n              borderRadius: '24px',\n              fontWeight: 700,\n              px: 3,\n              py: 1,\n              textTransform: 'none',\n              boxShadow: '0 2px 8px 0 rgba(0,0,0,0.10)',\n              minWidth: 120,\n              '&:hover': { background: '#f5f5f5', color: '#222' },\n            }}\n          >\n            {card.button}\n          </Button>\n        </Box>\n        <Box sx={{ position: 'absolute', right: 32, bottom: 0 }}>\n          <img\n            src={card.image}\n            alt={card.title}\n            style={{ width: 120, height: 'auto', borderRadius: 0 }}\n          />\n        </Box>\n      </Card>\n      {/* Carousel dots */}\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', mt: 1, mb: 2 }}>\n        {carouselData.map((_, i) => (\n          <Box\n            key={i}\n            sx={{\n              width: 10,\n              height: 10,\n              borderRadius: '50%',\n              background: i === index ? '#A993FF' : '#F2EFFF',\n              mx: 0.5\n            }}\n          />\n        ))}\n      </Box>\n    </>\n  );\n};\n\nconst Dashboard = () => {\n  return (\n    <Box>\n      {/* Activity and Recommendations sections (CardPage) at the top */}\n      <Grid container spacing={1.5}>\n        <Grid item xs={12} md={7}>\n          <CardPage />\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <ScholarshipCarousel/>\n        </Grid>\n      </Grid>\n      {/* Advisors, Upcoming Meetings, Pending Task row below Recommendations */}\n      <Grid container spacing={1.5}>\n        <Grid item xs={12} md={7} mt={2}>\n          <Grid container spacing={1}>\n            <Grid item xs={12} md={5}>\n              <Advisors />\n            </Grid>\n            <Grid item xs={12} md={7}>\n              <BookedSlots />\n              <Checklist />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} md={5}>\n          <Events />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useMemo } from \"react\";\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  InputAdornment,\n  ListSubheader,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ReusableDropdownProps {\n  label: string;\n  name: string;\n  options: string[];\n  value: any;\n  onChange: any;\n  placeholder?: string;\n  searchEnabled?: boolean;  // Toggle to enable or disable the search box\n}\n\nconst ReusableDropdown: React.FC<ReusableDropdownProps> = ({\n  label,\n  name,\n  options,\n  value,\n  onChange,\n  placeholder = `Select `,\n  searchEnabled = true,\n}) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n// console.log(value)\n  const filteredOptions = useMemo(\n    () =>\n      options.filter((option) =>\n        option.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [options, searchQuery]\n  );\n\n  return (\n    <FormControl fullWidth>\n      <Select\n        labelId={`${name}-label`}\n        size=\"small\"\n        id={name}\n        name={name}\n        displayEmpty\n        onClose={()=>setSearchQuery(\"\")}\n        value={value}\n        onChange={onChange}\n        fullWidth\n        IconComponent={ExpandMoreIcon}\n        renderValue={(selected) => {\n          if (!selected) {\n            return (\n              <Typography sx={{ color: \"#757575\", fontSize: \"14px\" }}>\n                {placeholder}\n              </Typography>\n            );\n          }\n          return selected;\n        }}\n        MenuProps={{\n          PaperProps: {\n            sx: {\n              maxHeight: 300,\n              maxWidth: 300,\n              \"&.MuiPaper-root\": {\n                boxShadow: 3,\n                borderRadius: \"15px !important\",\n              },\n            },\n          },\n          autoFocus: false,\n        }}\n        sx={{\n        }}\n      >\n        {searchEnabled && (\n          <ListSubheader>\n            <TextField\n              size=\"small\"\n              autoFocus\n              placeholder=\"Type to search...\"\n              fullWidth\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n              onKeyDown={(e) => {\n                if (e.key !== \"Escape\") {\n                  e.stopPropagation();\n                }\n              }}\n            />\n          </ListSubheader>\n        )}\n        <MenuItem\n          disabled\n          value=\"\"\n          sx={{\n            \"& .MuiTypography-root\": {\n              fontSize: \"14px !important\",\n            },\n          }}\n        >\n          {placeholder} \n        </MenuItem>\n        {filteredOptions.length > 0 ? (\n          filteredOptions.map((name, i) => (\n            <MenuItem\n              key={i}\n              value={name}\n              sx={{\n                \"& .MuiTypography-root\": {\n                  fontSize: \"14px !important\",\n                },\n                \"& .MuiSvgIcon-root \": {\n                  fontSize: \"1rem\",\n                },\n                whiteSpace: \"normal\",\n              }}\n            >\n              {name}\n            </MenuItem>\n          ))\n        ) : (\n          <MenuItem disabled>No options available</MenuItem>\n        )}\n      </Select>\n    </FormControl>\n  );\n};\n\nexport default ReusableDropdown;\n","import {\n  Box,\n  Button,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { bachelorCourses } from \"../../../../assets/menu\";\nimport { editProfile, getSearchUniversityDetails } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setUnderGraduation } from \"../../../../store/Slices/educationHistorySlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { Close, Star } from \"@mui/icons-material\";\nimport * as Yup from \"yup\";\n// import { fetchAllMsgsEndPoint } from \"src/services/endpoints\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport Images from \"src/assets\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\n\ntype Gradingsystem=\"percentage\"|\"cgpa1\"|\"cgpa2\"|\"cgpa3\"|\"gpa\"|\"grade\";\nconst Bachelors = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [institutions, setInstitutions] = useState([])\n  const [institutionName, setInstitutionName] = useState<string>(data?.instituteName || \"\");\n  const [universities, setUniversities] = useState<string[]>(data?.affiliatedUniversity ? [data.affiliatedUniversity] : []);\n  const [affiliatedUniversity, setAffiliatedUniversity] = useState<string>(data?.affiliatedUniversity || \"\");\n  const [programMajor, setProgramMAjor] = useState<string>(data?.programMajor || \"\");\n  const [degreeName, setDegreeName] = useState<string>(data?.degreeProgram ? data?.degreeProgram : \"\");\n\n  const [ieh, setIeh] = useState<boolean>(false);\n  const [institutionId, setInstitutionId] = useState<string>(\"\");\n  const [gradingSystem, setGradingSystem] = useState<Gradingsystem>(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  //const [maxScore, setMaxScore] = useState(data?.maxScore);\n  const profile = useAppSelector((store) => store.profile);\n  const [iehStatus, setIEHStatus] = useState<any>(profile?.data?.IEH);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const gradingSystemData=useRef({\n    percentage:100,\n    cgpa1:10,\n    cgpa2:7,\n    cgpa3:5,\n    gpa:4,\n    grade:undefined\n  }).current;\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    console.log('grading system',event.target.value)\n    setGradingSystem(event.target.value as Gradingsystem);\n    setTotalScore('');\n  };\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  // console.log(\"city\",selectedCity)\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  const profileSchema = Yup.object().shape({\n    underGraduation: Yup.object().shape({\n      // degreeProgram: Yup.string().required(\"Degree Program is required\"),\n      // programMajor: Yup.string().required(\"Specialization is required\"),\n      // instituteName: Yup.string().required(\"Institution Name is required\"),\n      // affiliatedUniversity: Yup.string().required(\"Affiliated University is required\"),\n      // gradingSystem: Yup.string().required(\"Grading System is required\"),\n      // totalScore: Yup.mixed() \n      //   .required('Score is required')\n      //   .test('valid-score', 'Invalid score', function (value) {\n      //     const { gradingSystem } = this.parent;\n      //     if (gradingSystem === 'percentage') {\n      //       return typeof value === 'number' && value >= 1 && value <= 100;\n      //     }\n      //     if (gradingSystem === 'GPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 10;\n      //     }\n      //     if (gradingSystem === 'CGPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 6;\n      //     }\n\n      //     if (gradingSystem === 'grade') {\n      //       return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n      //     }\n\n      //     return true; \n      //   })\n      // ,\n      startDate: Yup.date().required(\"Start Date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable()\n        .test('not-same-date', 'Start date and end date cannot be the same.', function (endDate) {\n          const { startDate } = this.parent;\n          if (!startDate || !endDate) return true;\n          const start = new Date(startDate);\n          const end = new Date(endDate);\n          return start.getFullYear() !== end.getFullYear() || start.getMonth() !== end.getMonth() || start.getDate() !== end.getDate();\n        }),\n      // backlogs: Yup.number()\n      //   .when(\"backlogs\", {\n      //     is: (value: string) => value === \"yes\",\n      //     then: schema => schema.required(\"Number of Backlogs is required\").min(1),\n      //   })\n      //   .nullable(),\n      // country: Yup.string().required(\"Country is required\"),\n      // state: Yup.string().required(\"State/Province is required\"),\n      // city: Yup.string().required(\"City/Town is required\"),\n    }),\n  });\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    setInstitutionName(value);\n  };\n\n  // Handle institution selection\n\n  useEffect(() => {\n    console.log(\"Called\")\n    if (searchTerm.length > 3) {\n      setLoading(true);\n      setHasSearched(true); // Mark as searched when making an API call\n      getSearchUniversityDetails(replaceSpecialChars(searchTerm), 1, 10, 1, 0, 0, 0, 0)\n        .then((response) => {\n          setInstitutions(response.data?.institutions || []);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching institutions:\", error);\n          setLoading(false);\n        });\n    } else {\n      setInstitutions([]);\n      setHasSearched(false); // Reset search state if searchTerm is not long enough\n    }\n  }, [searchTerm]);\n\n  const replaceSpecialChars=(str:String)=>{\n    let filteredString=str.replaceAll(/[^a-zA-Z0-9\\s]/g,\"\").trim();\n    console.log(\"Filtered\",filteredString);\n    return filteredString;\n  }\n\n  const [customField, setCustomField] = useState<boolean>(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n  const initialValues = {\n    underGraduation: {\n      instituteName: institutionName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      programMajor: programMajor, // enum  eee,ese,ece\n      degreeProgram: degreeName, // enum btech,bedu,bsc....\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      affiliatedUniversity: affiliatedUniversity,\n      totalScore: totalScore,\n      maxScore:gradingSystemData[gradingSystem], // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const [specializations, setSpecializations] = useState<any>([]);\n\n  const handleDegreeChange = (event: React.ChangeEvent<{ value: unknown }>, setFieldValue: Function) => {\n    const selectedDegree = event.target.value as string;\n    // setFieldValue('underGraduation.degreeProgram', selectedDegree);\n    const degreeCourses = bachelorCourses[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[selectedDegree] || [];\n    setSpecializations(selectedSpecializations);\n    setFieldValue('underGraduation.programMajor', '');\n  };\n\n  useEffect(() => {\n    const degreeCourses = bachelorCourses[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[data?.degreeProgram] || [];\n    setSpecializations(selectedSpecializations);\n  }, [data?.degreeProgram])\n\n  // const [showCustomInput, setShowCustomInput] = useState(false);\n  // const [showUniversity, setShowUniversity] = useState(false);\n  // const [showSpecialization, setShowSpecialization] = useState(false);\n  // const [showDegree, setShowDegree] = useState(false);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n  const handleOptionClick = (option: any) => {\n    if (option === \"Other\") {\n      // setShowCustomInput(true);\n      setInstitutionName(\"\");\n      setIeh(false);\n      setSearchTerm(\"\");\n      setCustomField(true)\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"customfield\",\n              data: {\n                name: \"underGraduation.institutionName\",\n                fieldName: institutionName,\n                setFieldName: setInstitutionName,\n                placeholder: \"Enter your institution name\"\n              },\n              dimensions: {\n                width: \"450px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      )\n    } else {\n      setInstitutionName(option?.InstitutionName);\n      setUniversities(option?.university || []);\n      setIeh(option?.IEH?.exists)\n      setInstitutionId(option?._id)\n      setAffiliatedUniversity(\"\");\n      setSearchTerm(\"\");\n    }\n  };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n\n  const submitHandler = async (values: any) => {\n    try {\n      console.log(\"form value\",values)\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setUnderGraduation(response.data.data.education.underGraduation));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"UnderGraduate Details are Added Succesfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoader(false)\n\n    } catch (error) {\n      setLoader(false)\n\n    }\n  };\n\n  const [formEdit, setFormEdit] = useState(false);\n\n  return (\n    <>\n      {formEdit ? (\n        <div>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={profileSchema}\n            enableReinitialize\n            onSubmit={(values: any) => submitHandler(values)}\n          >\n            {({ touched, errors, values, handleChange, setFieldValue }) => {\n              // console.log(errors)\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={3} sx={{ px: 2 }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Degree Name\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"underGraduation.degreeProgram\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={degreeName}\n                        onChange={(e: any) => {\n                          handleDegreeChange(e, setFieldValue);\n                          setDegreeName(e.target.value);\n                        }}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.underGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {Object.keys(bachelorCourses[0]).map((degree) => (\n                          <MenuItem key={degree} value={degree} sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}>\n                            {degree}\n                          </MenuItem>\n                        ))}\n                        {!Object.keys(bachelorCourses[0]).includes(degreeName) && degreeName !== \"\" && (\n                          <MenuItem key={degreeName} value={degreeName}>\n                            {degreeName}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            // setShowDegree(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"underGraduation.degreeProgram\",\n                                      fieldName: degreeName,\n                                      setFieldName: setDegreeName,\n                                      placeholder: \"Enter your degree name\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your degree\n                        </MenuItem>\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Specialization\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"underGraduation.programMajor\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={programMajor}\n                        onChange={(e) => setProgramMAjor(e.target.value)}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.underGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {specializations?.map((name: string) => (\n                          <MenuItem\n                            key={name}\n                            value={name}\n                            sx={{\n                              \"& .MuiTypography-root\": {\n                                fontSize: \"14px !important\",\n                              },\n                              \"& .MuiSvgIcon-root \": {\n                                fontSize: \"1rem\",\n                              },\n                              whiteSpace: \"normal\",\n                            }}\n                          >\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!specializations.includes(programMajor) && programMajor !== \"\" && (\n                          <MenuItem key={programMajor} value={programMajor}>\n                            {programMajor}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"underGraduation.programMajor\",\n                                      fieldName: programMajor,\n                                      setFieldName: setProgramMAjor,\n                                      placeholder: \"Enter your specialization\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your specialization\n                        </MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"underGraduation.programMajor\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"instituteName\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Name of Institution\n                      </InputLabel>\n                      <Box sx={{ width: \"100%\", position: \"relative\" }}>\n                        <TextField\n                          value={institutionName}\n                          onChange={handleInputChange}\n                          placeholder=\"Search for an institution\"\n                          variant=\"outlined\"\n                          name=\"underGraduation.instituteName\"\n                          size=\"small\"\n                          autoComplete=\"off\"\n                          fullWidth\n                          InputProps={{\n                            endAdornment: (\n                              <>\n                                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                                {institutionName && (\n                                  <Close\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => {\n                                      setInstitutionName(\"\");\n                                      setInstitutions([]);\n                                      setSearchTerm(\"\");\n                                      // setShowCustomInput(false);\n                                      setHasSearched(false);\n                                    }}\n                                  />\n                                )}\n                              </>\n                            ),\n                          }}\n                        />\n                        {loading || institutions.length > 0 || (hasSearched && institutions.length === 0) ? (\n                          <Box\n                            sx={{\n                              position: \"absolute\",\n                              zIndex: 1,\n                              backgroundColor: \"#fff\",\n                              boxShadow: 1,\n                              maxHeight: \"200px\",\n                              overflowY: \"auto\",\n                              width: \"100%\",\n                            }}\n                          >\n                            {institutions.map((option: any, index) => (\n                              <MenuItem\n                                key={index}\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                }}\n                                onClick={() => handleOptionClick(option)}\n                              >\n                                {option?.InstitutionName}\n                                {option?.IEH?.exists && <Star sx={{ fontSize: \"1.1rem\", color: \"orange\" }} />}\n                                {option?.District && `, ${option?.District}`}\n                              </MenuItem>\n                            ))}\n                            {!loading && hasSearched && (\n                              <MenuItem\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  // alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                  color: \"#1cbeb5  !important\"\n\n                                  // justifyContent: \"center\",\n                                }}\n                                onClick={() => handleOptionClick(\"Other\")}\n\n                              >\n                                Can't find institution\n                              </MenuItem>\n                            )}\n                          </Box>\n                        ) : null}\n                      </Box>\n\n                      <ErrorMessage\n                        name=\"underGraduation.instituteName\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"affiliatedUniversity\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Affiliated University\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"affiliatedUniversity\"\n                        name=\"underGraduation.affiliatedUniversity\"\n                        displayEmpty\n                        value={affiliatedUniversity}\n                        onChange={(e) => setAffiliatedUniversity(e.target.value)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem disabled value=\"\">\n                          Select University\n                        </MenuItem>\n                        {universities.map((name: string) => (\n                          <MenuItem key={name} value={name}>\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!universities.includes(affiliatedUniversity) && programMajor !== \"\" && (\n                          <MenuItem key={affiliatedUniversity} value={affiliatedUniversity}>\n                            {affiliatedUniversity}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"underGraduation.affiliatedUniversity\",\n                                      fieldName: affiliatedUniversity,\n                                      setFieldName: setAffiliatedUniversity,\n                                      placeholder: \"Enter your university\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n\n                          }}\n                        >\n                          Can't find university\n                        </MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"underGraduation.affiliatedUniversity\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    {ieh ?\n                      <Grid item xs={12} sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n                        <Typography>This college is a member of <b style={{ color: \"#3b3f76\" }}>IEH</b> . You need to verify to get benefits.</Typography>\n                        {iehStatus?.verificationStatus === \"Verification Request Initiated\" ? \"\" :\n                          <Button sx={globalButton} onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"ieh\",\n                                    data: {\n                                      id: institutionId,\n                                      setIEHStatus: setIEHStatus\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }>Verify</Button>}\n                      </Grid>\n                      : \"\"}\n\n                    {iehStatus?.verificationStatus === \"Verification Request Initiated\" ?\n                      <Grid item xs={12}>\n                        <Typography>Your IEH verification request is initiated</Typography>\n                      </Grid> : \"\"}\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Grading System\n                      </InputLabel>\n\n                      <Select\n                        id=\"grading-system\"\n                        size=\"small\"\n                        name=\"gradingSystem\"\n                        displayEmpty\n                        defaultValue=\"\"\n\n                        value={gradingSystem}\n                        onChange={(e: any) => handleGradingSystemChange(e)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                        <MenuItem value=\"percentage\">Percentage out of 100</MenuItem>\n                        <MenuItem value=\"cgpa1\">CGPA out of 10</MenuItem>\n                        <MenuItem value=\"cgpa2\">CGPA out of 7</MenuItem>\n                        <MenuItem value=\"cgpa3\">CGPA out of 5</MenuItem>\n                        <MenuItem value=\"gpa\">GPA out of 4</MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"underGraduation.gradingSystem\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Score{\" \"}\n                      </InputLabel>\n                      {gradingSystem === \"grade\" ?\n                        <Select\n                          size=\"small\"\n                          id=\"totalScore\"\n                          name=\"underGraduation.totalScore\"\n                          displayEmpty\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          MenuProps={MenuProps}\n                        >\n                          <MenuItem disabled value=\"\">\n                            Select Grade\n                          </MenuItem>\n                          {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                        :\n                        <TextField\n                          // type=\"number\"\n                          name=\"underGraduation.totalScore\"\n                          size=\"small\"\n                          fullWidth\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          placeholder={\n                            gradingSystem === \"percentage\"\n                              ? \"Enter percentage\"\n                                : \"Enter score\"\n                          }\n                          inputProps={{\n                            step: \"0.1\",\n\n                            min:1,\n                            max:gradingSystemData[gradingSystem],\n                            list: undefined,\n                            onInput: (e) => {\n                              const target = e.target as HTMLInputElement;\n                              const value = parseFloat(target.value);\n                              const min=1\n                                const max=gradingSystemData[gradingSystem]\n\n                                if (value < (min || 0) || value > (max || Infinity)) {\n                                  target.value = value.toString(); // Remove the last character\n                                }\n                            },\n                          }}\n                        />}\n\n                      <ErrorMessage\n                        name=\"underGraduation.totalScore\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                        Education status\n                      </InputLabel>\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          aria-labelledby=\"education-status\"\n                          name=\"underGraduation.isCompleted\"\n                          value={values.underGraduation.isCompleted}\n                          onChange={(event) => {\n                            handleChange({\n                              target: {\n                                name: \"underGraduation.isCompleted\",\n                                value: event.target.value === \"true\",\n                              },\n                            });\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"true\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Completed\"\n                          />\n                          <FormControlLabel\n                            value=\"false\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Pursuing\"\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Start Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.underGraduation?.startDate}\n                        onChange={(date) => handleChange({ target: { name: `underGraduation.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      <ErrorMessage\n                        name=\"underGraduation.startDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {(values.underGraduation.isCompleted === \"true\" || values.underGraduation.isCompleted === true)  && (\n                        <>\n                          <InputLabel sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                            End Date\n                          </InputLabel>\n                          \n                          <DatePickerComponent\n                            selectedDate={values?.underGraduation?.endDate}\n                            onChange={(date) =>\n                              handleChange({\n                                target: {\n                                  name: `underGraduation.endDate`,\n                                  value: date?.toISOString().slice(0, 10),\n                                },\n                              })\n                            }\n                            minDate={\n                              values.underGraduation.startDate\n                                ? new Date(\n                                  new Date(values.underGraduation.startDate).setFullYear(\n                                    new Date(values.underGraduation.startDate).getFullYear() + 1\n                                  )\n                                )\n                                : undefined\n                            }\n                            maxDate={\n                              values.underGraduation.startDate\n                                ? (() => {\n                                    const twelveYearsFromStartDate = new Date(\n                                      new Date(values.underGraduation.startDate).setFullYear(\n                                        new Date(values.underGraduation.startDate).getFullYear() + 12\n                                      )\n                                    );\n                                    return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                                  })()\n                                : new Date()\n                            }\n                            placeholderText=\"End Date\"\n                          />\n\n                          <ErrorMessage name=\"underGraduation.endDate\" component=\"div\" className=\"error\" />\n                        </>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Backlogs\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n                      <CustomField\n                            id=\"name\"\n                            type=\"number\"\n                            placeholder=\"Number of backlogs(if any)\"\n                            name=\"underGraduation.backlogs\"\n                            value={values.underGraduation.backlogs}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"underGraduation.country\"\n                        options={countries.map(country => country.name)}\n                        value={selectedCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"Country\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"underGraduation.state\"\n                        options={states.map(state => state.name)}\n                        value={selectedState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"State\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"underGraduation.city\"\n                          value={selectedCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setSelectedCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              autoComplete=\"off\"\n                              // autoFocus=\"true\"\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            {!selectedState ? \"Please select state\" :\n                              \"Select city\"}\n                          </MenuItem>\n\n                          {filteredCities.length > 0 ? (\n                            filteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            selectedState && <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!cities.some((city) => city.name === selectedCity) &&\n                            selectedCity !== undefined &&\n                            selectedCity !== \"\" && (\n                              <MenuItem key={selectedCity} value={selectedCity}>\n                                {selectedCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            // value=\"\"\n                            onClick={() => {\n                              // setSelectedCity(\"\")\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"underGraduation.city\",\n                                        fieldName: selectedCity,\n                                        setFieldName: cityHandle,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                    // eventHandler:cityHandle\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n\n                    </Grid>\n\n\n                    <Grid\n                      item\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                    >\n                      <CustomButton\n                        handleSubmit={() => submitHandler}\n                        width=\"100px\"\n                      >\n                        {loader ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\", height: \"1rem\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600 ,color:\"#495052\"}}>\n                Undergraduate Details\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#3B3F76' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]}onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Degree Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{degreeName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Specialization</Typography>\n              <Typography sx={{color:\"#495052\"}}>{programMajor || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{institutionName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Affiliated University</Typography>\n              <Typography sx={{color:\"#495052\"}}>{affiliatedUniversity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Backlogs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.backlogs || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Education Status</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.isCompleted === true || data?.isCompleted === 'true' ? 'Completed' : data?.isCompleted === false || data?.isCompleted === 'false' ? 'Pursuing' : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Bachelors;\n","import {\n  // Box,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Box,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { editProfile } from \"../../../../services\";\nimport { setPlus2 } from \"../../../../store/Slices/educationHistorySlice\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { boards, languages } from \"../../../../assets/menu\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from 'yup';\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport Images from \"src/assets\";\n\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst Plus2 = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const [gradingSystem, setGradingSystem] = useState<string>(data?.gradingSystem || \"\");\n  const [totalScore, setTotalScore] = useState<string>(data?.totalScore || \"\");\n  const [stream, setStream] = useState<string>(data?.stream || \"\");\n  const [customField, setCustomField] = useState<boolean>(false);\n  const [board, setBoard] = useState<string>(data?.board || \"\");\n  const [loader, setLoader] = useState(false);\n  const [formEdit, setFormEdit] = useState(false);\n\n  console.log('[DEBUG] Initial data prop:', data);\n\n  useEffect(() => {\n    console.log('[DEBUG] useEffect data change:', data);\n    if (data) {\n      setGradingSystem(data.gradingSystem || \"\");\n      setTotalScore(data.totalScore || \"\");\n      setStream(data.stream || \"\");\n      setBoard(data.board || \"\");\n      setSelectedCountry(data.country || \"India\");\n      setSelectedState(data.state || \"\");\n      setSelectedCity(data.city || \"\");\n    }\n  }, [data]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n\n  const initialValues = {\n    plus2: {\n      instituteName: data?.instituteName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      languageOfInstruction: data?.languageOfInstruction,\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      board: board,\n      stream: stream,\n      totalScore: totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n  const submit = async (values: any) => {\n    console.log(\"Submitting\",values);\n    try {\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        const updatedData = response.data.data.education.plus2;\n        console.log('[DEBUG] After save, updatedData:', updatedData);\n        dispatch(setPlus2(updatedData));\n        // Update local state with the response data\n        setGradingSystem(updatedData.gradingSystem || \"\");\n        setTotalScore(updatedData.totalScore || \"\");\n        setStream(updatedData.stream || \"\");\n        setBoard(updatedData.board || \"\");\n        setSelectedCountry(updatedData.country || \"India\");\n        setSelectedState(updatedData.state || \"\");\n        setSelectedCity(updatedData.city || \"\");\n        console.log(\"DDD\",data)\n        // Update data prop fields for read-only view\n        data={...updatedData}\n        // data.startDate = updatedData.startDate;\n        // data.endDate = updatedData.endDate;\n        // data.isCompleted = updatedData.isCompleted;\n        // data.languageOfInstruction = updatedData.languageOfInstruction;\n        // data.backlogs = updatedData.backlogs;\n        // data.instituteName = updatedData.instituteName;\n        console.log(\"Reached\")\n        setLoader(false);\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Diploma/Grade 12 details added successfully \",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) { }\n  };\n  // eslint-disable-next-line\n  const validationSchema = Yup.object().shape({\n    plus2: Yup.object().shape({\n      instituteName: Yup.string().required(\"Institution name is required\"),\n      // city: Yup.string().required(\"City is required\"),\n      state: Yup.string().required(\"State is required\"),\n      country: Yup.string().required(\"Country is required\"),\n      // languageOfInstruction: Yup.string().required(\n      //   \"Language of instruction is required\"\n      // ),\n      gradingSystem: Yup.string().required(\"Grading system is required\"),\n      totalScore: Yup.mixed()\n        .required('Score is required')\n        .test('valid-score', 'Invalid score', function (value) {\n          const { gradingSystem } = this.parent;\n          if (gradingSystem === 'percentage') {\n            return typeof value === 'number' && value >= 1 && value <= 100;\n          }\n          if (gradingSystem === 'GPA') {\n            return typeof value === 'number' && value >= 1 && value <= 10;\n          }\n          if (gradingSystem === 'CGPA') {\n            return typeof value === 'number' && value >= 1 && value <= 6;\n          }\n\n          if (gradingSystem === 'grade') {\n            return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n          }\n\n          return true;\n        })\n      ,\n      startDate: Yup.date().required(\"Start date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable()\n        .test('not-same-date', 'Start date and end date cannot be the same.', function (endDate) {\n          const { startDate } = this.parent;\n          if (!startDate || !endDate) return true;\n          const start = new Date(startDate);\n          const end = new Date(endDate);\n          return start.getFullYear() !== end.getFullYear() || start.getMonth() !== end.getMonth() || start.getDate() !== end.getDate();\n        }),\n      // backlogs: Yup.number()\n      //   .when(\"isCompleted\", {\n      //     is: \"false\",\n      //     then: Yup.number().notRequired(),\n      //     otherwise: Yup.number().required(\"Backlog count is required\"),\n      //   })\n      //   .nullable(),\n    }),\n  });\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n  };\n\n  useEffect(() => {\n    console.log('[DEBUG] gradingSystem:', gradingSystem, 'totalScore:', totalScore);\n  }, [gradingSystem, totalScore]);\n\n  console.log(\"loader\",loader)\n\n  return (\n    <>\n      {formEdit ? (\n        <div>\n          <Formik\n            initialValues={initialValues}\n            // validationSchema={validationSchema}\n            enableReinitialize={true}\n            onSubmit={(values: any) => submit(values)}\n          >\n            {({ touched, errors, values, handleChange, resetForm, handleSubmit }) => {\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={3} sx={{ px: 2 }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Specialization/Subjects\n                      </InputLabel>\n                      <TextField\n                        value={stream}\n                        onChange={(e) => setStream(e.target.value)}\n                        placeholder=\"Enter your stream name\"\n                        variant=\"outlined\"\n                        name=\"plus2.stream\"\n                        size=\"small\"\n                        autoComplete=\"off\"\n                        fullWidth\n                      // sx={{ mt: 2 }}\n                      />\n\n                      <ErrorMessage\n                        name=\"plus2.stream\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb:1 }}>\n                        Education status\n                      </InputLabel>\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                          name=\"plus2.isCompleted\"\n                          value={values.plus2.isCompleted}\n                          onChange={(event) => {\n                            handleChange({\n                              target: {\n                                name: \"plus2.isCompleted\",\n                                value: event.target.value === \"true\",\n                              },\n                            });\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"true\"\n                            control={\n                              <Radio\n                                size=\"small\"\n                                sx={{\n                                  \"&.MuiRadio-root.Mui-checked\": {\n                                    color: \"#3B3F76 !important\",\n                                  },\n                                }}\n                              />\n                            }\n                            label=\"Completed\"\n                          />\n                          <FormControlLabel\n                            value=\"false\"\n                            control={\n                              <Radio\n                                size=\"small\"\n                                sx={{\n                                  \"&.MuiRadio-root.Mui-checked\": {\n                                    color: \"#3B3F76 !important\",\n                                  },\n                                }}\n                              />\n                            }\n                            label=\"Pursuing\"\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Name of Institution{\" \"}\n                      </InputLabel>\n                      <CustomField\n                        id=\"name\"\n                        type=\"text\"\n                        placeholder=\"Name of Institution\"\n                        name=\"plus2.instituteName\"\n                        value={values.plus2.instituteName}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                      <ErrorMessage\n                        name=\"plus2.instituteName\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Board\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"A board in education is a governing body that manages an educational system or part of it\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n\n                      <Select\n                        size=\"small\"\n                        id=\"board\"\n                        name=\"plus2.board\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={board}\n                        onChange={(e) => setBoard(e.target.value)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                        MenuProps={MenuProps}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {boards.map(\n                          (name: any) => (\n                            <MenuItem\n                              key={name}\n                              value={name}\n                              sx={{\n                                \"& .MuiTypography-root\": {\n                                  fontSize: \"14px !important\",\n                                },\n                                \"& .MuiSvgIcon-root \": {\n                                  fontSize: \"1rem\",\n                                },\n                                whiteSpace: \"normal\",\n                              }}\n                            >\n                              {name}\n                            </MenuItem>\n                          )\n                        )}\n                        {!boards.includes(board) && board !== \"\" && (\n                          <MenuItem key={board} value={board}>\n                            {board}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            // setShowBoard(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"plus2.board\",\n                                      fieldName: board,\n                                      setFieldName: setBoard,\n                                      placeholder: \"Enter your board\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your board\n                        </MenuItem>\n                      </Select>\n\n                      <ErrorMessage\n                        name=\"plus2.board\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Grading System\n                      </InputLabel>\n                      <Select\n                        id=\"gradingSystem\"\n                        size=\"small\"\n                        name=\"plus2.gradingSystem\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={gradingSystem}\n                        onChange={(e: any) => handleGradingSystemChange(e)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                        <MenuItem value=\"percentage\">Percentage</MenuItem>\n                        <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                        <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                        <MenuItem value=\"grade\">Grade</MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"plus2.gradingSystem\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Score{\" \"}\n                      </InputLabel>\n                      {gradingSystem === \"grade\" ?\n                        <Select\n                          size=\"small\"\n                          id=\"totalScore\"\n                          name=\"plus2.totalScore\"\n                          displayEmpty\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          MenuProps={MenuProps}\n                        >\n                          <MenuItem disabled value=\"\">\n                            Select Grade\n                          </MenuItem>\n                          {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                        :\n                        <TextField\n                          // type=\"number\"\n                          id=\"totalScore\"\n                          name=\"plus2.totalScore\"\n                          size=\"small\"\n                          fullWidth\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          placeholder={\n                            gradingSystem === \"percentage\"\n                              ? \"Enter percentage\"\n                              : gradingSystem === \"grade\"\n                                ? \"Enter grade\"\n                                : \"Enter score\"\n                          }\n                          inputProps={{\n                            step: \"0.1\",\n\n                            min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                            max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                            list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                            onInput: (e) => {\n                              const target = e.target as HTMLInputElement;\n                              const value = parseFloat(target.value);\n                              if (gradingSystem !== \"Grade\") {\n                                const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                                const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                                if (value < (min || 0) || value > (max || Infinity)) {\n                                  target.value = value.toString().slice(0, -1); // Remove the last character\n                                }\n                              }\n                            },\n                          }}\n                        />}\n\n                      <ErrorMessage\n                        name=\"plus2.totalScore\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"startDate\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Start Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.plus2?.startDate}\n                        onChange={(date) => handleChange({ target: { name: `plus2.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      <ErrorMessage\n                        name=\"plus2.startDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {(values.plus2.isCompleted === \"true\" || values.plus2.isCompleted === true) && (\n                        <>\n                          <InputLabel\n                            id=\"endDate\"\n                            sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                          >\n                            End Date\n                          </InputLabel>\n                          <DatePickerComponent\n                            selectedDate={values?.plus2?.endDate}\n                            onChange={(date) =>\n                              handleChange({\n                                target: {\n                                  name: `plus2.endDate`,\n                                  value: date?.toISOString().slice(0, 10),\n                                },\n                              })\n                            }\n                            minDate={\n                              values.plus2.startDate\n                                ? new Date(\n                                  new Date(values.plus2.startDate).setFullYear(\n                                    new Date(values.plus2.startDate).getFullYear() + 1\n                                  )\n                                )\n                                : undefined\n                            }\n                            maxDate={\n                              values.plus2.startDate\n                                ? (() => {\n                                    const twelveYearsFromStartDate = new Date(\n                                      new Date(values.plus2.startDate).setFullYear(\n                                        new Date(values.plus2.startDate).getFullYear() + 12\n                                      )\n                                    );\n                                    return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                                  })()\n                                : new Date()\n                            }\n                            placeholderText=\"End Date\"\n                          />\n                        </>\n                      )}\n                      <ErrorMessage\n                        name=\"plus2.endDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"languageOfInstruction\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Language of instruction\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Language of Instruction\"\n                        name=\"plus2.languageOfInstruction\"\n                        options={languages}\n                        value={values.plus2.languageOfInstruction}\n                        onChange={handleChange}\n                        placeholder=\"Select\"\n                        searchEnabled={true}  // Enables the search box\n                      />\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Backlogs\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n                      <CustomField\n                        id=\"backlogs\"\n                        type=\"number\"\n                        placeholder=\"Number of backlogs(if any)\"\n                        name=\"plus2.backlogs\"\n                        value={values.plus2.backlogs}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"country\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"plus2.country\"\n                        options={countries.map(country => country.name)}\n                        value={selectedCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"Country\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"state\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"plus2.state\"\n                        options={states.map(state => state.name)}\n                        value={selectedState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"State\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"city\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"plus2.city\"\n                          value={selectedCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setSelectedCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              autoComplete=\"off\"\n                              // autoFocus=\"true\"\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            {!selectedState ? \"Please select state\" :\n                              \"Select city\"}\n                          </MenuItem>\n\n                          {filteredCities.length > 0 ? (\n                            filteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            selectedState && <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!cities.some((city) => city.name === selectedCity) &&\n                            selectedCity !== undefined &&\n                            selectedCity !== \"\" && (\n                              <MenuItem key={selectedCity} value={selectedCity}>\n                                {selectedCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            // value=\"\"\n                            onClick={() => {\n                              // setSelectedCity(\"\")\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"plus2.city\",\n                                        fieldName: selectedCity,\n                                        setFieldName: cityHandle,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                    // eventHandler:cityHandle\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                    >\n                      <CustomButton\n                        handleSubmit={()=>submit}\n                        width=\"100px\"\n                      >\n                        {loader ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\", height: \"1rem\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#495052\" }}>\n                Diploma/Grade 12 Details\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#3B3F76' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Specialization/Subjects</Typography>\n              <Typography sx={{color:\"#495052\"}}>{stream || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.instituteName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Board</Typography>\n              <Typography sx={{color:\"#495052\"}}>{board || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Language of Instruction</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.languageOfInstruction || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Backlogs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.backlogs || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Education Status</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.isCompleted === true || data?.isCompleted === 'true' ? 'Completed' : data?.isCompleted === false || data?.isCompleted === 'false' ? 'Pursuing' : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Plus2;\n","import {\n  // Box,\n  FormControl,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  ListSubheader,\n  MenuItem,\n  Select,\n  TextField,\n  Tooltip,\n  Box,\n  Button,\n  Typography,\n} from \"@mui/material\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useAppDispatch } from \"../../../../assets/hooks\";\nimport { editProfile } from \"../../../../services\";\nimport { setSchool } from \"../../../../store/Slices/educationHistorySlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\n// import { grading } from \"../../../../assets/menu\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { boards, languages } from \"src/assets/menu\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\n// import { Close } from \"@mui/icons-material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport Images from \"src/assets\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\n\nconst School = ({ data }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state || \"\"\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city || \"\"\n  );\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n  const [gradingSystem, setGradingSystem] = useState<string>(data?.gradingSystem || \"\");\n  const [totalScore, setTotalScore] = useState<string>(data?.totalScore || \"\");\n  const [customField, setCustomField] = useState<boolean>(false);\n  const [board, setBoard] = useState<string>(data?.board || \"\");\n  const [formEdit, setFormEdit] = useState(false);\n   const [loader, setLoader] = useState(false);\n\n  // Add useEffect to update state when data changes\n  useEffect(() => {\n    if (data) {\n      setGradingSystem(data.gradingSystem || \"\");\n      setTotalScore(data.totalScore || \"\");\n      setBoard(data.board || \"\");\n      setSelectedCountry(data.country || \"India\");\n      setSelectedState(data.state || \"\");\n      setSelectedCity(data.city || \"\");\n    }\n  }, [data]);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setGradingSystem(event.target.value as string);\n  };\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n  const initialValues = {\n    school: {\n      instituteName: data?.instituteName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      languageOfInstruction: data?.languageOfInstruction,\n      gradingSystem:gradingSystem, // enum % grade gpa cgpa\n      board: board,\n      totalScore:totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      custom: customField\n\n    },\n  };\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const cityHandle = (newCity: string) => {\n    setSelectedCity(newCity);\n  };\n\n  const submit = async (values: any) => {\n    try {\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        const updatedData = response.data.data.education.school;\n        dispatch(setSchool(updatedData));\n        // Update local state with the response data\n        setGradingSystem(updatedData.gradingSystem || \"\");\n        setTotalScore(updatedData.totalScore || \"\");\n        setBoard(updatedData.board || \"\");\n        setSelectedCountry(updatedData.country || \"India\");\n        setSelectedState(updatedData.state || \"\");\n        setSelectedCity(updatedData.city || \"\");\n        // Update data prop fields for read-only view\n        data={...updatedData}\n        // data.startDate = updatedData.startDate;\n        // data.endDate = updatedData.endDate;\n        // data.languageOfInstruction = updatedData.languageOfInstruction;\n        // data.instituteName = updatedData.instituteName;\n        setLoader(false)\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Grade 10 details added successfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n    }\n  };\n  return (\n    <>\n      {formEdit ? (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        // validationSchema={profileSchema}\n        enableReinitialize\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, resetForm, handleSubmit }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Name of Institution{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Name of Institution\"\n                    name=\"school.instituteName\"\n                    value={values.school.instituteName}\n                    onChange={handleChange}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                    Board\n                    <Tooltip\n                      slotProps={{\n                        tooltip: {\n                          sx: {\n                            color: \"#514E6A\",\n                            backgroundColor: \"#ffff\",\n                            boxShadow: 2,\n                            cursor: \"pointer\",\n                          },\n                        },\n                      }}\n                      title={\"A board in education is a governing body that manages an educational system or part of it\"}\n                      placement=\"right\"\n                    >\n                      <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                    </Tooltip>\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"school.board\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={board}\n                    onChange={(e)=>setBoard(e.target.value)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {boards.map(\n                      (name: any) => (\n                        <MenuItem\n                          key={name}\n                          value={name}\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}\n                        >\n                          {name}\n                        </MenuItem>\n                      )\n                    )}\n                     {!boards.includes(board) && board !== \"\" && (\n        <MenuItem key={board} value={board}>\n          {board}\n        </MenuItem>\n      )}\n        <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color:\"#1cbeb5  !important\"\n                        }}\n                        onClick={() => {\n                          setCustomField(true)\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name:\"school.board\",\n                                    fieldName:board,\n                                    setFieldName:setBoard,\n                                    placeholder:\"Enter your board\"\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                              },\n                            })\n                          )\n                        }}\n                      >\n                        Can't find your board\n                      </MenuItem>\n                  </Select>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Grading System\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"school.gradingSystem\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={gradingSystem}\n                    onChange={(e: any) => handleGradingSystemChange(e)}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                    <MenuItem value=\"percentage\">Percentage</MenuItem>\n                    <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                    <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                    <MenuItem value=\"grade\">Grade</MenuItem>\n                  </Select>\n                  {/* <ErrorMessage\n                      name=\"school.gradingSystem\"\n                      component=\"div\"\n                      className=\"error\"\n                    /> */}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Score{\" \"}\n                  </InputLabel>\n                  {gradingSystem === \"grade\" ?\n                    <Select\n                      size=\"small\"\n                      id=\"totalScore\"\n                      name=\"school.totalScore\"\n                      displayEmpty\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      MenuProps={MenuProps}\n                    >\n                      <MenuItem disabled value=\"\">\n                        Select Grade\n                      </MenuItem>\n                      {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                        <MenuItem key={name} value={name}>\n                          {name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                    :\n                    <TextField\n                      // type=\"number\"\n                      name=\"school.totalScore\"\n                      size=\"small\"\n                      fullWidth\n                      value={totalScore}\n                      onChange={(e) => setTotalScore(e.target.value)}\n                      placeholder={\n                        gradingSystem === \"percentage\"\n                          ? \"Enter percentage\"\n                          : gradingSystem === \"grade\"\n                            ? \"Enter grade\"\n                            : \"Enter score\"\n                      }\n                      inputProps={{\n                        step: \"0.1\",\n\n                        min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                        max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                        list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                        onInput: (e) => {\n                          const target = e.target as HTMLInputElement;\n                          const value = parseFloat(target.value);\n                          if (gradingSystem !== \"Grade\") {\n                            const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                            const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                            if (value < (min || 0) || value > (max || Infinity)) {\n                              target.value = value.toString().slice(0, -1); // Remove the last character\n                            }\n                          }\n                        },\n                      }}\n                    />}\n\n                  {/* <ErrorMessage\n                    name=\"school.totalScore\"\n                    component=\"div\"\n                    className=\"error\"\n                  /> */}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Language of instruction\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Language of Instruction\"\n                    name=\"school.languageOfInstruction\"\n                    options={languages}\n                    value={values.school.languageOfInstruction}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}  // Enables the search box\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}></Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values?.school?.startDate}\n                    onChange={(date) => handleChange({ target: { name: `school.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                    maxDate={new Date()}\n                    placeholderText=\"Start Date\"\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        End Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.school?.endDate}\n                        onChange={(date) =>\n                          handleChange({\n                            target: {\n                              name: `school.endDate`,\n                              value: date?.toISOString().slice(0, 10),\n                            },\n                          })\n                        }\n                        minDate={\n                          values.school.startDate\n                            ? new Date(\n                              new Date(values.school.startDate).setFullYear(\n                                new Date(values.school.startDate).getFullYear() + 1\n                              )\n                            )\n                            : undefined\n                        }\n                        maxDate={\n                          values.school.startDate\n                            ? (() => {\n                                const twelveYearsFromStartDate = new Date(\n                                  new Date(values.school.startDate).setFullYear(\n                                    new Date(values.school.startDate).getFullYear() + 12\n                                  )\n                                );\n                                return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                              })()\n                            : new Date()\n                        }\n                        placeholderText=\"End Date\"\n                      />\n                    </>\n                </Grid>\n\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    Country\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"school.country\"\n                    options={countries.map(country => country.name)}\n                    value={selectedCountry}\n                    onChange={(e: any) => eventHandler({\n                      name: \"Country\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    State/Province\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"State\"\n                    name=\"school.state\"\n                    options={states.map(state => state.name)}\n                    value={selectedState}\n                    onChange={(e: any) => eventHandler({\n                      name: \"State\",\n                      data: e?.target.value,\n                    })}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"instituteName\"\n                    sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                  >\n                    City/Town\n                  </InputLabel>\n                  <FormControl fullWidth>\n                    <Select\n                      id=\"city\"\n                      name=\"school.city\"\n                      value={selectedCity}\n                      displayEmpty\n                      size=\"small\"\n                      defaultValue=\"\"\n                      onChange={(e) => setSelectedCity(e.target.value)}\n                      fullWidth\n                      IconComponent={ExpandMoreIcon}\n                      onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                      MenuProps={{\n                        PaperProps: {\n                          sx: {\n                            maxHeight: 300,\n                            \"&.MuiPaper-root\": {\n                              boxShadow: 3,\n                              borderRadius: \"15px !important\",\n                            },\n                          },\n                        },\n                      }}\n                    >\n                      <ListSubheader>\n                        <TextField\n                          size=\"small\"\n                          autoFocus\n                          placeholder=\"Search City...\"\n                          fullWidth\n                          autoComplete=\"off\"\n                          // autoFocus=\"true\"\n                          value={searchQuery}\n                          onChange={(e) => setSearchQuery(e.target.value)}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <SearchIcon />\n                              </InputAdornment>\n                            ),\n                          }}\n                          onKeyDown={(e) => {\n                            if (e.key !== \"Escape\") {\n                              e.stopPropagation();\n                            }\n                          }}\n                        />\n                      </ListSubheader>\n\n                      <MenuItem value=\"\" disabled>\n                        {!selectedState ? \"Please select state\" :\n                          \"Select city\"}\n                      </MenuItem>\n\n                      {filteredCities.length > 0 ? (\n                        filteredCities.map((city: any) => (\n                          <MenuItem key={city.name} value={city.name}>\n                            {city.name}\n                          </MenuItem>\n                        ))\n                      ) : (\n                        selectedState && <MenuItem disabled>No cities available</MenuItem>\n                      )}\n\n                      {!cities.some((city) => city.name === selectedCity) &&\n                        selectedCity !== undefined &&\n                        selectedCity !== \"\" && (\n                          <MenuItem key={selectedCity} value={selectedCity}>\n                            {selectedCity}\n                          </MenuItem>\n                        )}\n\n                      <MenuItem\n                        sx={{\n                          fontSize: \"14px !important\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          whiteSpace: \"normal\",\n                          color: \"#1cbeb5 !important\",\n                        }}\n                        // value=\"\"\n                        onClick={() => {\n                          // setSelectedCity(\"\")\n                          dispatch(\n                            setPopup({\n                              show: true,\n                              data: {\n                                container: {\n                                  name: \"customfield\",\n                                  data: {\n                                    name: \"school.city\",\n                                    fieldName: selectedCity,\n                                    setFieldName: cityHandle,\n                                    placeholder: \"Enter your city\",\n                                  },\n                                  dimensions: {\n                                    width: \"450px\",\n                                  },\n                                },\n                                type: \"custom\",\n                                // eventHandler:cityHandle\n                              },\n                            })\n                          );\n                        }}\n                      >\n                        Can't find city\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n\n                </Grid>\n\n                <Grid\n                  item\n                  xs={12}\n                  sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                >\n                  <CustomButton\n                    handleSubmit={handleSubmit}\n                    width=\"100px\"\n                  >\n                  {loader ? (\n                  <img \n                  src={Images.standardLoader}\n                  alt=\"load\"\n                  style={{ width: \"1rem\", height: \"1rem\" }}\n                   />\n                   ) : (\n                  \"Save\"\n                   )}\n                  </CustomButton>\n                </Grid>\n              </Grid>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#495052\" }}>\n                Grade 10 / School Details\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#3B3F76' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.instituteName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Board</Typography>\n              <Typography sx={{color:\"#495052\"}}>{board || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Language of Instruction</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.languageOfInstruction || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default School;\n","import {\n  Box,\n  CircularProgress,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n  Button,\n  ListSubheader,\n  InputAdornment\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { pgCourseList } from \"../../../../assets/menu\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPostGraduation } from \"../../../../store/Slices/educationHistorySlice\";\nimport { editProfile, getSearchUniversityDetails } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from \"yup\";\nimport { Close, Star } from \"@mui/icons-material\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport Images from \"src/assets\";\nimport { globalButton } from \"src/components/styles/customStyles\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\n\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\ninterface IState {\n  name: string;\n  isoCode: string;\n  countryCode: string;\n}\n\ninterface ICity {\n  name: string;\n  stateCode: string;\n  countryCode: string;\n}\nconst PostGrad = ({ data,profileData }: any) => {\n  const dispatch = useAppDispatch();\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [states, setStates] = useState<IState[]>([]);\n  const [cities, setCities] = useState<ICity[]>([]);\n  const [institutions, setInstitutions] = useState([])\n  const [institutionName, setInstitutionName] = useState<string>(data?.instituteName || \"\");\n  const [postGradData] = useState(profileData?.postGraduation || {});\n  console.log(postGradData)\n  const [universities, setUniversities] = useState<string[]>(data?.affiliatedUniversity ? [data.affiliatedUniversity] : []);\n  const [affiliatedUniversity, setAffiliatedUniversity] = useState<string>(data?.affiliatedUniversity || \"\");\n  const [programMajor, setProgramMAjor] = useState<string>(data?.specialization || \"\");\n  const [degreeName, setDegreeName] = useState<string>(data?.degreeProgram ? data?.degreeProgram : \"\");\n\n\n  const [ieh, setIeh] = useState<boolean>(false);\n  const [institutionId, setInstitutionId] = useState<string>(\"\");\n  const [gradingSystem, setGradingSystem] = useState(data?.gradingSystem);\n  const [totalScore, setTotalScore] = useState(data?.totalScore);\n  const profile = useAppSelector((store) => store.profile);\n  const [iehStatus, setIEHStatus] = useState<any>(profile?.data?.IEH);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const handleGradingSystemChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    // const { name, value } = event.target;\n    // const updatedData = { ...postGradData, [name]: value };\n    // setPostGradData(updatedData);\n    setGradingSystem(event.target.value as string);\n    setTotalScore('');\n  };\n  const [selectedCountry, setSelectedCountry] = useState(\n    data?.country || \"India\"\n  );\n  const [selectedState, setSelectedState] = useState(\n    data?.state\n  );\n  const [selectedCity, setSelectedCity] = useState(\n    data?.city\n  );\n  const [loading, setLoading] = useState<boolean>(false);\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n\n  const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n  const stateInfo = states.find((s: any) => s.name === selectedState);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n\n    fetchCountries();\n  }, []);\n\n  const profileSchema = Yup.object().shape({\n    postGraduation: Yup.object().shape({\n      // degreeProgram: Yup.string().required(\"Degree Program is required\"),\n      // programMajor: Yup.string().required(\"Specialization is required\"),\n      // instituteName: Yup.string().required(\"Institution Name is required\"),\n      // affiliatedUniversity: Yup.string().required(\"Affiliated University is required\"),\n      // gradingSystem: Yup.string().required(\"Grading System is required\"),\n      // totalScore: Yup.mixed() \n      //   .required('Score is required')\n      //   .test('valid-score', 'Invalid score', function (value) {\n      //     const { gradingSystem } = this.parent;\n      //     if (gradingSystem === 'percentage') {\n      //       return typeof value === 'number' && value >= 1 && value <= 100;\n      //     }\n      //     if (gradingSystem === 'GPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 10;\n      //     }\n      //     if (gradingSystem === 'CGPA') {\n      //       return typeof value === 'number' && value >= 1 && value <= 6;\n      //     }\n\n      //     if (gradingSystem === 'grade') {\n      //       return typeof value === 'string' && ['A', 'A+', 'B', 'B+', 'C', 'D'].includes(value);\n      //     }\n\n      //     return true; \n      //   })\n      // ,\n      startDate: Yup.date().required(\"Start Date is required\"),\n      endDate: Yup.date()\n        .when(\"isCompleted\", {\n          is: true,\n          then: schema => schema.required(\"End Date is required\"),\n        })\n        .nullable()\n        .test('not-same-date', 'Start date and end date cannot be the same.', function (endDate) {\n          const { startDate } = this.parent;\n          if (!startDate || !endDate) return true;\n          const start = new Date(startDate);\n          const end = new Date(endDate);\n          return start.getFullYear() !== end.getFullYear() || start.getMonth() !== end.getMonth() || start.getDate() !== end.getDate();\n        }),\n      // backlogs: Yup.number()\n      //   .when(\"backlogs\", {\n      //     is: (value: string) => value === \"yes\",\n      //     then: schema => schema.required(\"Number of Backlogs is required\").min(1),\n      //   })\n      //   .nullable(),\n      // country: Yup.string().required(\"Country is required\"),\n      // state: Yup.string().required(\"State/Province is required\"),\n      // city: Yup.string().required(\"City/Town is required\"),\n    }),\n  });\n  useEffect(() => {\n    const fetchStateAndCities = async () => {\n      const statesOfCountry = await State.getStatesOfCountry(\n        countryInfo?.isoCode\n      );\n      setStates(statesOfCountry);\n\n      const citiesOfState = await City.getCitiesOfState(\n        stateInfo?.countryCode ?? \"\",\n        stateInfo?.isoCode ?? \"\"\n      );\n      setCities(citiesOfState);\n    };\n    fetchStateAndCities();\n  }, [countryInfo, stateInfo]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    setSearchTerm(value);\n    setInstitutionName(value);\n  };\n\n  // Handle institution selection\n\n  useEffect(() => {\n    if (searchTerm.length > 3) {\n      setLoading(true);\n      setHasSearched(true); // Mark as searched when making an API call\n      getSearchUniversityDetails(searchTerm,1,10, 1, 0, 0, 0,0)\n        .then((response:any) => {\n          setInstitutions(response.data?.institutions || []);\n          setLoading(false);\n        })\n        .catch((error:any) => {\n          console.error(\"Error fetching institutions:\", error);\n          setLoading(false);\n        });\n    } else {\n      setInstitutions([]);\n      setHasSearched(false); // Reset search state if searchTerm is not long enough\n    }\n  }, [searchTerm]);\n\n  const [customField, setCustomField] = useState<boolean>(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n  const initialValues = {\n    postGraduation: {\n      instituteName: institutionName,\n      city: selectedCity,\n      state: selectedState,\n      country: selectedCountry,\n      specialization: programMajor, // enum  eee,ese,ece\n      degreeProgram: degreeName, // enum btech,bedu,bsc....\n      gradingSystem: gradingSystem, // enum % grade gpa cgpa\n      affiliatedUniversity: affiliatedUniversity,\n      totalScore: totalScore, // for grade A+..., for Percent 0-100, gpa 0-10\n      startDate: data?.startDate?data?.startDate:new Date().toISOString(),\n      endDate: data?.endDate?data.endDate:new Date().toISOString(),\n      backlogs: data?.backlogs,\n      isCompleted: data?.isCompleted,\n      custom: customField\n    },\n  };\n  console.log(\"post\",initialValues);\n  const [specializations, setSpecializations] = useState<any>([]);\n\n  const handleDegreeChange = (event: React.ChangeEvent<{ value: unknown }>, setFieldValue: Function) => {\n    const selectedDegree = event.target.value as string;\n    // setFieldValue('postGraduation.degreeProgram', selectedDegree);\n    const degreeCourses = pgCourseList[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[selectedDegree] || [];\n    setSpecializations(selectedSpecializations);\n    setFieldValue('postGraduation.programMajor', '');\n  };\n\n  useEffect(() => {\n    const degreeCourses = pgCourseList[0] as { [key: string]: string[] };\n    const selectedSpecializations = degreeCourses[data?.degreeProgram] || [];\n    setSpecializations(selectedSpecializations);\n  }, [data?.degreeProgram])\n\n  const handleOptionClick = (option: any) => {\n    if (option === \"Other\") {\n      // setShowCustomInput(true);\n      setInstitutionName(\"\");\n      setIeh(false);\n      setSearchTerm(\"\");\n      setCustomField(true)\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"customfield\",\n              data: {\n                name: \"postGraduation.institutionName\",\n                fieldName: institutionName,\n                setFieldName: setInstitutionName,\n                placeholder: \"Enter your institution name\"\n              },\n              dimensions: {\n                width: \"450px\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      )\n    } else {\n      setInstitutionName(option?.InstitutionName);\n      setUniversities(option?.university || []);\n      setIeh(option?.IEH?.exists)\n      setInstitutionId(option?._id)\n      setAffiliatedUniversity(\"\");\n      setSearchTerm(\"\");\n    }\n  };\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const filteredCities = useMemo(\n    () =>\n      cities.filter((city) =>\n        city.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ),\n    [cities, searchQuery]\n  );\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"Country\":\n        setSelectedCountry(event.data);\n        setSelectedState('');\n        setSelectedCity('');\n        setCities([]);\n\n        const countryInfo = countries.find((c: any) => c.name === event.data);\n        if (countryInfo) {\n          const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n          setStates(statesOfCountry);\n        }\n        break;\n\n      case \"State\":\n        setSelectedCity('');\n        setSelectedState(event.data);\n        const stateInfo = states.find((s: any) => s.name === event.data);\n        if (stateInfo) {\n          const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n          setCities(citiesOfState);\n        }\n        break;\n\n      case \"City\":\n        setSelectedCity(event.data);\n        break;\n      default:\n        break;\n\n    }\n  };\n\n  const submitHandler = async (values: any) => {\n    try {\n\n      setLoader(true)\n      const response = await editProfile(values);\n      if (response) {\n        dispatch(setPostGraduation(response.data.data.education.postGraduation));\n        const updatedData = response.data.data.education.postGraduation;\n        // Update local state if needed (already handled by useState hooks)\n        // Update data prop fields for read-only view\n        data.startDate = updatedData.startDate;\n        data.endDate = updatedData.endDate;\n        data.isCompleted = updatedData.isCompleted;\n        data.affiliatedUniversity = updatedData.affiliatedUniversity;\n        data.specialization = updatedData.specialization;\n        data.degreeProgram = updatedData.degreeProgram;\n        data.gradingSystem = updatedData.gradingSystem;\n        data.totalScore = updatedData.totalScore;\n        data.backlogs = updatedData.backlogs;\n        data.country = updatedData.country;\n        data.state = updatedData.state;\n        data.city = updatedData.city;\n        data.instituteName = updatedData.instituteName;\n        setLoader(false)\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Post graduate Details are added succesfully\",\n                dimensions: {\n                  width: \"35%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n    } catch (error) {\n      setLoader(false)\n    }\n  };\n\n  console.log(\"Masters\",data);\n\n  const [formEdit, setFormEdit] = useState(false);\n\n  return (\n    <>\n      {formEdit ? (\n        <div>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={profileSchema}\n            enableReinitialize\n            onSubmit={(values: any) => submitHandler(values)}\n          >\n            {({ touched, errors, values, handleChange, setFieldValue }) => {\n              // console.log(errors)\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={3} sx={{ px: 2 }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Degree Name\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"postGraduation.degreeProgram\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={degreeName}\n                        onChange={(e: any) => {\n                          handleDegreeChange(e, setFieldValue);\n                          setDegreeName(e.target.value);\n                        }}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.postGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {Object.keys(pgCourseList[0]).map((degree) => (\n                          <MenuItem key={degree} value={degree} sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                            \"& .MuiSvgIcon-root \": {\n                              fontSize: \"1rem\",\n                            },\n                            whiteSpace: \"normal\",\n                          }}>\n                            {degree}\n                          </MenuItem>\n                        ))}\n                        {!Object.keys(pgCourseList[0]).includes(degreeName) && degreeName !== \"\" && (\n                          <MenuItem key={degreeName} value={degreeName}>\n                            {degreeName}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            // setShowDegree(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"postGraduation.degreeProgram\",\n                                      fieldName: degreeName,\n                                      setFieldName: setDegreeName,\n                                      placeholder: \"Enter your degree name\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your degree\n                        </MenuItem>\n                      </Select>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Specialization\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"Country\"\n                        name=\"postGraduation.specialization\"\n                        displayEmpty\n                        defaultValue=\"\"\n                        value={programMajor}\n                        onChange={(e) => setProgramMAjor(e.target.value)}\n                        fullWidth\n                        sx={{\n                          \"& .Mui-error .MuiOutlinedInput-notchedOutline\": {\n                            borderColor: \"red !important\", // Custom error border color\n                          },\n                        }}\n                        MenuProps={MenuProps}\n                        // error={errors.postGraduation.programMajor}\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem\n                          disabled\n                          value=\"\"\n                          sx={{\n                            \"& .MuiTypography-root\": {\n                              fontSize: \"14px !important\",\n                            },\n                          }}\n                        >\n                          Select\n                        </MenuItem>\n\n                        {specializations?.map((name: string) => (\n                          <MenuItem\n                            key={name}\n                            value={name}\n                            sx={{\n                              \"& .MuiTypography-root\": {\n                                fontSize: \"14px !important\",\n                              },\n                              \"& .MuiSvgIcon-root \": {\n                                fontSize: \"1rem\",\n                              },\n                              whiteSpace: \"normal\",\n                            }}\n                          >\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!specializations.includes(programMajor) && programMajor !== \"\" && (\n                          <MenuItem key={programMajor} value={programMajor}>\n                            {programMajor}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"postGraduation.specialization\",\n                                      fieldName: programMajor,\n                                      setFieldName: setProgramMAjor,\n                                      placeholder: \"Enter your specialization\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find your specialization\n                        </MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"postGraduation.specialization\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"instituteName\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Name of Institution\n                      </InputLabel>\n                      <Box sx={{ width: \"100%\", position: \"relative\" }}>\n                        <TextField\n                          value={institutionName}\n                          onChange={handleInputChange}\n                          placeholder=\"Search for an institution\"\n                          variant=\"outlined\"\n                          name=\"postGraduation.instituteName\"\n                          size=\"small\"\n                          autoComplete=\"off\"\n                          fullWidth\n                          InputProps={{\n                            endAdornment: (\n                              <>\n                                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                                {institutionName && (\n                                  <Close\n                                    sx={{ cursor: \"pointer\" }}\n                                    onClick={() => {\n                                      setInstitutionName(\"\");\n                                      setInstitutions([]);\n                                      setSearchTerm(\"\");\n                                      // setShowCustomInput(false);\n                                      setHasSearched(false);\n                                    }}\n                                  />\n                                )}\n                              </>\n                            ),\n                          }}\n                        />\n\n                        {loading || institutions.length > 0 || (hasSearched && institutions.length === 0) ? (\n                          <Box\n                            sx={{\n                              position: \"absolute\",\n                              zIndex: 1,\n                              backgroundColor: \"#fff\",\n                              boxShadow: 1,\n                              maxHeight: \"200px\",\n                              overflowY: \"auto\",\n                              width: \"100%\",\n                            }}\n                          >\n                            {institutions.map((option: any, index) => (\n                              <MenuItem\n                                key={index}\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                }}\n                                onClick={() => handleOptionClick(option)}\n                              >\n                                {option?.InstitutionName}\n                                {option?.IEH?.exists && <Star sx={{ fontSize: \"1.1rem\", color: \"orange\" }} />}\n                                {option?.District && `, ${option?.District}`}\n                              </MenuItem>\n                            ))}\n                            {!loading && hasSearched && (\n                              <MenuItem\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  // alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                  color: \"#1cbeb5  !important\"\n\n                                  // justifyContent: \"center\",\n                                }}\n                                onClick={() => handleOptionClick(\"Other\")}\n\n                              >\n                                Can't find institution\n                              </MenuItem>\n                            )}\n                          </Box>\n                        ) : null}\n                      </Box>\n\n                      <ErrorMessage\n                        name=\"postGraduation.instituteName\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"affiliatedUniversity\" sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                        Affiliated University\n                      </InputLabel>\n                      <Select\n                        size=\"small\"\n                        id=\"affiliatedUniversity\"\n                        name=\"postGraduation.affiliatedUniversity\"\n                        displayEmpty\n                        value={affiliatedUniversity}\n                        onChange={(e) => setAffiliatedUniversity(e.target.value)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem disabled value=\"\">\n                          Select University\n                        </MenuItem>\n                        {universities.map((name: string) => (\n                          <MenuItem key={name} value={name}>\n                            {name}\n                          </MenuItem>\n                        ))}\n                        {!universities.includes(affiliatedUniversity) && programMajor !== \"\" && (\n                          <MenuItem key={affiliatedUniversity} value={affiliatedUniversity}>\n                            {affiliatedUniversity}\n                          </MenuItem>\n                        )}\n                        <MenuItem\n                          sx={{\n                            fontSize: \"14px !important\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"normal\",\n                            color: \"#1cbeb5  !important\"\n\n                          }}\n                          onClick={() => {\n                            setCustomField(true)\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"customfield\",\n                                    data: {\n                                      name: \"postGraduation.affiliatedUniversity\",\n                                      fieldName: affiliatedUniversity,\n                                      setFieldName: setAffiliatedUniversity,\n                                      placeholder: \"Enter your university\"\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }}\n                        >\n                          Can't find university\n                        </MenuItem>\n                      </Select>\n\n                      <ErrorMessage\n                        name=\"postGraduation.affiliatedUniversity\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    {ieh ?\n                      <Grid item xs={12} sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }}>\n                        <Typography>This college is a member of <b style={{ color: \"#3b3f76\" }}>IEH</b> . You need to verify to get benefits.</Typography>\n                        {iehStatus?.verificationStatus === \"Verification Request Initiated\" ? \"\" :\n                          <Button sx={globalButton} onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"ieh\",\n                                    data: {\n                                      id: institutionId,\n                                      setIEHStatus: setIEHStatus\n                                    },\n                                    dimensions: {\n                                      width: \"450px\",\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }>Verify</Button>}\n                      </Grid>\n                      : \"\"}\n\n                    {iehStatus?.verificationStatus === \"Verification Request Initiated\" ?\n                      <Grid item xs={12}>\n                        <Typography>Your IEH verification request is initiated</Typography>\n                      </Grid> : \"\"}\n\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Grading System\n                      </InputLabel>\n\n                      <Select\n                        id=\"grading-system\"\n                        size=\"small\"\n                        name=\"gradingSystem\"\n                        displayEmpty\n                        defaultValue=\"\"\n\n                        value={gradingSystem}\n                        onChange={(e: any) => handleGradingSystemChange(e)}\n                        fullWidth\n                        IconComponent={ExpandMoreIcon}\n                      >\n                        <MenuItem value=\"\" disabled>Select grade</MenuItem>\n                        <MenuItem value=\"percentage\">Percentage</MenuItem>\n                        <MenuItem value=\"gpa\">CGPA    4.0 scale</MenuItem>\n                        <MenuItem value=\"cgpa\">CGPA   10.0 scale</MenuItem>\n                        <MenuItem value=\"grade\">Grade</MenuItem>\n                      </Select>\n                      <ErrorMessage\n                        name=\"postGraduation.gradingSystem\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Score{\" \"}\n                      </InputLabel>\n                      {gradingSystem === \"grade\" ?\n                        <Select\n                          size=\"small\"\n                          id=\"totalScore\"\n                          name=\"postGraduation.totalScore\"\n                          displayEmpty\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          MenuProps={MenuProps}\n                        >\n                          <MenuItem disabled value=\"\">\n                            Select Grade\n                          </MenuItem>\n                          {[\"A\", \"A+\", \"B\", \"B+\", \"C\", \"C+\", \"D\", \"D+\"].map((name: string) => (\n                            <MenuItem key={name} value={name}>\n                              {name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                        :\n                        <TextField\n                          // type=\"number\"\n                          name=\"postGraduation.totalScore\"\n                          size=\"small\"\n                          fullWidth\n                          value={totalScore}\n                          onChange={(e) => setTotalScore(e.target.value)}\n                          placeholder={\n                            gradingSystem === \"percentage\"\n                              ? \"Enter percentage\"\n                              : gradingSystem === \"grade\"\n                                ? \"Enter grade\"\n                                : \"Enter score\"\n                          }\n                          inputProps={{\n                            step: \"0.1\",\n\n                            min: gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined,\n                            max: gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined,\n                            list: gradingSystem === \"grade\" ? \"grades\" : undefined,\n                            onInput: (e) => {\n                              const target = e.target as HTMLInputElement;\n                              const value = parseFloat(target.value);\n                              if (gradingSystem !== \"Grade\") {\n                                const min = gradingSystem === \"percentage\" ? 1 : gradingSystem === \"gpa\" ? 1 : gradingSystem === \"cgpa\" ? 1 : undefined;\n                                const max = gradingSystem === \"percentage\" ? 100 : gradingSystem === \"gpa\" ? 4 : gradingSystem === \"cgpa\" ? 10 : undefined;\n\n                                if (value < (min || 0) || value > (max || Infinity)) {\n                                  target.value = value.toString().slice(0, -1); // Remove the last character\n                                }\n                              }\n                            },\n                          }}\n                        />}\n\n                      <ErrorMessage\n                        name=\"postGraduation.totalScore\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                        Education status\n                      </InputLabel>\n                      <FormControl>\n                        <RadioGroup\n                          row\n                          aria-labelledby=\"education-status\"\n                          name=\"postGraduation.isCompleted\"\n                          value={values.postGraduation.isCompleted}\n                          onChange={(event) => {\n                            handleChange({\n                              target: {\n                                name: \"postGraduation.isCompleted\",\n                                value: event.target.value === \"true\",\n                              },\n                            });\n                          }}\n                        >\n                          <FormControlLabel\n                            value=\"true\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Completed\"\n                          />\n                          <FormControlLabel\n                            value=\"false\"\n                            control={<Radio size=\"small\" sx={{ \"&.MuiRadio-root.Mui-checked\": { color: \"#3B3F76 !important\" } }} />}\n                            label=\"Pursuing\"\n                          />\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Start Date\n                      </InputLabel>\n                      <DatePickerComponent\n                        selectedDate={values?.postGraduation?.startDate}\n                        onChange={(date) => handleChange({ target: { name: `postGraduation.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      <ErrorMessage\n                        name=\"postGraduation.startDate\"\n                        component=\"div\"\n                        className=\"error\"\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      {(values.postGraduation.isCompleted === \"true\" || values.postGraduation.isCompleted === true ) && (\n                        <>\n                          <InputLabel sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}>\n                            End Date\n                          </InputLabel>\n                            <DatePickerComponent\n                            selectedDate={values?.postGraduation?.endDate}\n                            onChange={(date) =>\n                              handleChange({\n                                target: {\n                                  name: `postGraduation.endDate`,\n                                  value: date?.toISOString().slice(0, 10),\n                                },\n                              })\n                            }\n                            minDate={\n                              values.postGraduation.startDate\n                                ? new Date(\n                                    new Date(values.postGraduation.startDate).setFullYear(\n                                      new Date(values.postGraduation.startDate).getFullYear() + 1\n                                    )\n                                  )\n                                : undefined\n                            }\n                            maxDate={\n                              values.postGraduation.startDate\n                                ? (() => {\n                                    const twelveYearsFromStartDate = new Date(\n                                      new Date(values.postGraduation.startDate).setFullYear(\n                                        new Date(values.postGraduation.startDate).getFullYear() + 12\n                                      )\n                                    );\n                                    return twelveYearsFromStartDate > new Date() ? new Date() : twelveYearsFromStartDate;\n                                  })()\n                                : new Date()\n                            }\n                            placeholderText=\"End Date\"\n                          />\n                          {touched.postGraduation?.endDate && typeof errors.postGraduation?.endDate === 'string' && (\n                            <p style={{ color: \"red\", marginTop: \"5px\" }}>\n                              {errors.postGraduation?.endDate}\n                            </p>\n                          )}\n                        </>\n                      )}\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"\" sx={{ color: \"#8E9091\", display: \"flex\", alignItems: \"center\",mb:1 }}>\n                        Backlogs\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Backlog refers to a failed subject or exam that you have not cleared in your first attempt\"}\n                          placement=\"right\"\n                        >\n                          <InfoIcon sx={{ color: \"#3B3F76\", ml: 1, cursor: \"pointer\", fontSize: \"1rem\", float: \"right\" }} />\n                        </Tooltip>\n                      </InputLabel>\n                      <CustomField\n                            id=\"name\"\n                            type=\"number\"\n                            placeholder=\"Number of backlogs(if any)\"\n                            name=\"postGraduation.backlogs\"\n                            value={values.postGraduation.backlogs}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"postGraduation.country\"\n                        options={countries.map(country => country.name)}\n                        value={selectedCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"Country\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"postGraduation.state\"\n                        options={states.map(state => state.name)}\n                        value={selectedState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"State\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel\n                        id=\"instituteName\"\n                        sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 1 }}\n                      >\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"city\"\n                          name=\"postGraduation.city\"\n                          value={selectedCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setSelectedCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              autoComplete=\"off\"\n                              // autoFocus=\"true\"\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n\n                          <MenuItem value=\"\" disabled>\n                            {!selectedState ? \"Please select state\" :\n                              \"Select city\"}\n                          </MenuItem>\n\n                          {filteredCities.length > 0 ? (\n                            filteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            selectedState && <MenuItem disabled>No cities available</MenuItem>\n                          )}\n\n                          {!cities.some((city) => city.name === selectedCity) &&\n                            selectedCity !== undefined &&\n                            selectedCity !== \"\" && (\n                              <MenuItem key={selectedCity} value={selectedCity}>\n                                {selectedCity}\n                              </MenuItem>\n                            )}\n\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            onClick={() => {\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"postGraduation.city\",\n                                        fieldName: selectedCity,\n                                        setFieldName: setSelectedCity,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      sx={{ display: \"flex\", justifyContent: \"end\", my: 2, mr: 10 }}\n                    >\n                      <CustomButton\n                        handleSubmit={() => submitHandler}\n                        width=\"100px\"\n                      >\n                        {loader ? (\n                          <img\n                            src={Images.standardLoader}\n                            alt=\"load\"\n                            style={{ width: \"1rem\", height: \"1rem\" }}\n                          />\n                        ) : (\n                          \"Save\"\n                        )}\n                      </CustomButton>\n                    </Grid>\n                  </Grid>\n                </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#495052\" }}>\n                Post Graduation Details\n              </Typography>\n              <Button variant=\"outlined\"sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Degree Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{degreeName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Specialization</Typography>\n              <Typography sx={{color:\"#495052\"}}>{programMajor || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Institution Name</Typography>\n              <Typography sx={{color:\"#495052\"}}>{institutionName || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Affiliated University</Typography>\n              <Typography sx={{color:\"#495052\"}}>{affiliatedUniversity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Grading System</Typography>\n              <Typography sx={{color:\"#495052\"}}>{gradingSystem || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Score</Typography>\n              <Typography sx={{color:\"#495052\"}}>{totalScore || 'NA'}</Typography>\n              \n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Country</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>State/Province</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>City/Town</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCity || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Start Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.startDate ? data.startDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>End Date</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.endDate ? data.endDate.split('T')[0] : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Backlogs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.backlogs || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Education Status</Typography>\n              <Typography sx={{color:\"#495052\"}}>{data?.isCompleted === true || data?.isCompleted === 'true' ? 'Completed' : data?.isCompleted === false || data?.isCompleted === 'false' ? 'Pursuing' : 'NA'}</Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\n\nexport default PostGrad;\n","import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { Profile } from \"src/types/types\";\n\nconst API_URL = \"https://campusroot.com/api/v1/student/profile\";\n\nexport const useProfileData = () => {\n  const [profileData, setProfileData] = useState<Profile|null>(null);\n\n  const fetchProfileData = useCallback(async () => {\n    try {\n      const response = await axios.get(API_URL, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n\n      setProfileData(response.data);\n      localStorage.setItem(\"user-profile\", JSON.stringify(response.data));\n    } catch (error) {\n      console.error(\"❌ Error fetching profile data:\", error);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchProfileData();\n  }, [fetchProfileData]);\n\n  return { profileData, fetchProfileData };\n};\n","import { Box, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { useAppSelector } from \"../../../../assets/hooks\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport Bachelors from \"./bachelors\";\nimport Diploma from \"./diploma\";\nimport School from \"./grade10\";\nimport PostGrad from \"./postGrad\";\nimport { useProfileData } from \"src/genericComponents/modalPopup/useProfileData\";\n\nconst Education = () => {\n  const education = useAppSelector((state) => state.educationhistory);\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n  const { profileData } = useProfileData();\n\n  const handleToggle = (index: number) => {\n    setOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n  };\n\n  const profile = [\n    {\n      title: \"Masters\",\n      component: <PostGrad data={education.data.postGraduation} profileData={profileData} />,\n    },\n    {\n      title: \"Under Graduation\",\n      component: <Bachelors data={education.data.underGraduation} profileData={profileData} />,\n    },\n    {\n      title: \"Diploma / Grade 12\",\n      component: <Diploma data={education.data.plus2} profileData={profileData} />,\n    },\n    {\n      title: \"Grade 10\",\n      component: <School data={education.data.school} profileData={profileData} />,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        height: \"75vh\",\n        overflowY: \"scroll\",\n        px: 3,\n      }}\n    >\n      <Typography fontSize=\"1rem\" gutterBottom color=\"#495052\" sx={{ m: 1, fontWeight: \"500\" }}>\n        Enter your current and last education details\n      </Typography>\n      {profile.map((item, index) => (\n        <Accordion\n          key={index}\n          title={item.title}\n          isOpen={openIndex === index} // ✅ Pass open state\n          onToggle={() => handleToggle(index)} // ✅ Toggle accordion\n        >\n          {item.component}\n        </Accordion>\n      ))}\n    </Box>\n  );\n};\n\nexport default Education;\n","/* eslint-disable */\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Images from \"../../../../assets/index\";\nimport { Formik, Form, useFormik } from \"formik\";\nimport { editProfile } from \"../../../../services\";\nimport { Box, Button, Grid, InputLabel, Stack, TextField, Typography, FormControl, RadioGroup, FormControlLabel, Radio, Select, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, Tooltip, Divider } from \"@mui/material\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { settestScores } from \"../../../../store/Slices/testScoresSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { testScores } from \"src/assets/menu\";\nimport { CustomButton } from \"src/genericComponents/customButton\";\nimport { closePopup } from \"src/store/Slices/popupSlice\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport { setSharedInfo } from \"src/store/Slices/sharedInfoSlice\";\nimport { RootState } from \"../../../../store/store\";\nimport { Sharedinfo, Test as TestType } from \"../../../../types/types\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\nimport TestStatus2 from '../../../../genericComponents/modalPopup/testStatus2'\nimport {testOptions as englishTestInfo} from '../../../../genericComponents/modalPopup/TestStatus3'\nimport { languageTests } from \"src/assets/constants/misc\";\n\n// Add type definitions at the top of the file, after imports\ninterface TestScore {\n  description: string;\n  count: string;\n  range?: string;\n}\n\ninterface Test {\n  name: string;\n  scores: TestScore[][];\n  testDate?: string;\n  document?: {\n    name: string;\n    icon: string;\n  };\n}\n\n// Rename the interface to avoid conflict with imported Test type\ninterface TestScoreData {\n  name: string;\n  scores: { label: string; value: string; range?: string }[];\n  testDate?: string;\n  document?: {\n    name: string;\n    icon: string;\n  };\n}\n\nconst TestScores = (props: any) => {\n  const { setQaTab, qaTab } = props;\n  const safeMissingFields = Array.isArray(props.missingFields) ? props.missingFields : [];\n  const currentIndex = safeMissingFields.indexOf(qaTab);\n\n  const navigate = useNavigate();\n  const [error, setError] = useState<string | undefined>();\n  const dispatch = useAppDispatch();\n  // const { profileDetails, setProfileDetails } = useContext(Context);\n  const [loading, setLoading] = useState(false);\n  const testscoresData = useAppSelector((state: RootState) => state.testscores);\n\n  const sharedInfo = useAppSelector((state: RootState) => state.sharedInfo);\n\n  //   function date(date) {\n  //     const month = date.toLocaleString(\"default\", { month: \"short\" });\n  //     const year = date.getFullYear();\n  //     return month + \" \" + year;\n  //   }\n\n  const handleBack = () => {\n    if (currentIndex > 0) {\n      setQaTab(safeMissingFields[currentIndex - 1]);\n    }\n  };\n  const handleSkip = () => {\n    if (currentIndex !== -1 && currentIndex < safeMissingFields.length - 1) {\n      setQaTab(safeMissingFields[currentIndex + 1]);\n    } else {\n      dispatch(closePopup());\n    }\n  }\n  const [fieldName, setFieldName] = useState(\"\");\n  // let tests = profileDetails?.tests;\n\n  const handleSubmit = (field: string) => {\n    setFieldName(field);\n  };\n  const submit = async () => {\n    if (fieldName === \"Not planning to take\") {\n      // const response = await editProfile({\n      // ,\n      // });\n      setQaTab(\"englishTest\")\n    } else {\n      const selectedTestScores = testScores.find(\n        (test) => test.name === fieldName\n      );\n\n      if (!selectedTestScores) {\n        console.error(\"Selected test not found.\");\n        return;\n      }\n      const payload = {\n        name: selectedTestScores.name,\n        scores: selectedTestScores.scores[0].map((score) => ({\n          description: score.description,\n          count: scoreCounts[score.description] || \"\",\n        })),\n        testDate: \"\",\n        docId: null,\n      };\n      const response = await editProfile({\n        tests: [...testscoresData?.data, payload],\n      });\n      if (response) {\n        dispatch(settestScores(response.data.data.tests));\n        // setFieldName(\"\");\n        setScoreCounts({});\n        if (currentIndex !== -1 && currentIndex < safeMissingFields.length - 1) {\n          setQaTab(safeMissingFields[currentIndex + 1]);\n        } else {\n          // closePopup();\n        }\n      }\n    }\n\n  };\n  const [scoreCounts, setScoreCounts] = useState<{\n    [description: string]: string;\n  }>({});\n\n  const handleCountChange = (description: string, value: string) => {\n    setScoreCounts((prevCounts) => ({\n      ...prevCounts,\n      [description]: value,\n    }));\n  };\n  interface Score {\n    description: string;\n    count: string;\n    range: string;\n  }\n\n  interface TestScore {\n    name: string;\n    scores: Score[][];\n    tookTest: string;\n  }\n\n\n  const parseRange = (range: string) => {\n    const [min, max] = range.split('-').map(Number);\n    return { min, max };\n  };\n\n  const validateScore = (count: number, range: string): string | undefined => {\n    const { min, max } = parseRange(range);\n    const numberValue = Number(count);\n\n    if (numberValue < min || numberValue > max) {\n      return `Score must be between ${min} and ${max}`;\n    }\n\n    return undefined;\n  };\n\n  interface TestScoreFormProps {\n    selectedTest: string;\n    validateScore: (count: number, range: string) => string | undefined;\n  }\n\n  const TestScoreForm: React.FC<TestScoreFormProps> = ({ selectedTest, validateScore }) => {\n    const selectedTestScores = testScores?.find((test) => test.name === selectedTest);\n    const sharedInfo = useAppSelector((state: RootState) => state.sharedInfo);\n\n    const parseRange = (range: string) => {\n      const [min, max] = range.split('-').map(Number);\n      return { min, max };\n    };\n\n    const requiredFields = selectedTestScores?.requiredFields || [];\n\n    const computeTotal = (scores: Score[]): string => {\n      const totalField = scores.find((score) => score.description === \"Total\");\n      if (!totalField) return \"\";\n\n      const relevantScores = scores.filter((score) =>\n        requiredFields.includes(score.description) && score.count !== \"\"\n      );\n\n      if (relevantScores.length === 0) return \"Invalid Total\";\n\n      let total = 0;\n      if (selectedTestScores?.method === \"add\") {\n        total = relevantScores.reduce(\n          (acc, score) => acc + (parseInt(score.count) || 0),\n          0\n        );\n      } else if (selectedTestScores?.method === \"average\") {\n        total = relevantScores.reduce(\n          (acc, score) => acc + (parseInt(score.count) || 0),\n          0\n        );\n        total = relevantScores.length > 0 ? total / relevantScores.length : 0;\n      }\n\n      const { min, max } = parseRange(totalField.range);\n      return total >= min && total <= max ? total.toString() : \"Invalid Total\";\n    };\n\n    const formik = useFormik({\n      initialValues: {\n        name: selectedTest,\n        scores: selectedTestScores ? selectedTestScores.scores : [],\n        testDate: \"\",\n        docId: null,\n      },\n      onSubmit: async (values) => {\n        let data = {\n          name: values.name,\n          scores: selectedTestScores ? values.scores[0] : [],\n          testDate: values.testDate,\n          docId: values.docId,\n        }\n\n        if (selectedTest === \"Not planning to take\" || selectedTest === \"\") {\n          // setQaTab(\"englishTest\")\n            try {\n              console.log(\"Final tests payload:\", [...testscoresData?.data, data]);\n              const response = await editProfile({ isPlanningToTakeAcademicTest:\"No\" });\n              dispatch(\n                setSharedInfo({\n                  ...sharedInfo.data,\n                  isPlanningToTakeAcademicTest: response.data.data.isPlanningToTakeAcademicTest,\n                })\n              );\n              setQaTab(\"englishTest\")\n            } catch (error) {\n              console.error(\"Error in API Call:\", error);\n            }\n\n        } else {\n          const response = await editProfile({\n            tests: [...testscoresData?.data, data],\n          });\n          if (response) {\n            dispatch(settestScores(response.data.data.tests));\n            setScoreCounts({});\n            if (currentIndex !== -1 && currentIndex < safeMissingFields.length - 1) {\n              setQaTab(safeMissingFields[currentIndex + 1]);\n            } else {\n              dispatch(closePopup())\n            }\n            setQaTab(\"englishTest\")\n          }\n        }\n\n      },\n      validate: (values) => {\n        const errors: any = {};\n        values.scores.forEach((scoreArray, scoreArrayIndex) => {\n          scoreArray.forEach((score, scoreIndex) => {\n            if (score.description === \"Total\") return;\n\n            const { min, max } = parseRange(score.range);\n            const count = Number(score.count);\n\n            if (count < min || count > max) {\n              if (!errors.scores) errors.scores = [];\n              if (!errors.scores[scoreArrayIndex]) errors.scores[scoreArrayIndex] = [];\n              errors.scores[scoreArrayIndex][scoreIndex] = `Score must be between ${min} and ${max}`;\n            }\n          });\n        });\n        return errors;\n      },\n    });\n\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <Box sx={{ height: \"350px\" }}>\n          <Grid container spacing={3} >\n            {formik.values.scores.map((scoreArray, scoreArrayIndex) =>\n              scoreArray.map((score, scoreIndex) => {\n                if (score.description === \"Total\") return null;\n\n                return (\n                  <Grid item xs={12} sm={4} key={`${scoreArrayIndex}-${scoreIndex}`}>\n                    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                      <InputLabel sx={{ fontWeight: 500, color: \"#8E9091\" }}>\n                        {score.description}\n                      </InputLabel>\n                      <TextField\n                        type=\"number\"\n                        name={`scores[${scoreArrayIndex}][${scoreIndex}].count`}\n                        value={score.count}\n                        onChange={(e) => {\n                          formik.handleChange(e);\n                          const updatedScores = [...formik.values.scores[scoreArrayIndex]];\n                          updatedScores[scoreIndex].count = e.target.value;\n\n                          const allFieldsFilled = updatedScores\n                            .filter((score) => score.description !== \"Total\")\n                            .every((score) => score.count !== \"\");\n\n                          if (allFieldsFilled) {\n                            const totalIndex = updatedScores.findIndex((s) => s.description === \"Total\");\n                            if (totalIndex !== -1) {\n                              updatedScores[totalIndex].count = String(computeTotal(updatedScores));\n                            }\n                          }\n\n                          formik.setFieldValue(`scores[${scoreArrayIndex}]`, updatedScores);\n                        }}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        placeholder={`${score.range}`}\n                      />\n                      {formik.errors.scores &&\n                        formik.errors.scores[scoreArrayIndex] &&\n                        formik.errors.scores[scoreArrayIndex][scoreIndex] && (\n                          <div style={{ color: \"red\", fontSize: \"12px\" }}>\n                            {String(formik.errors.scores[scoreArrayIndex][scoreIndex])}\n                          </div>\n                        )}\n                    </div>\n                  </Grid>\n                );\n              })\n            )}\n          </Grid>\n        </Box>\n        <Stack\n          direction=\"row\"\n          spacing={3}\n          sx={{\n            justifyContent: \"center\", alignItems: \"center\"\n          }}\n        >\n          {currentIndex > 0 && (\n            <Button sx={secondaryButton} onClick={handleBack}>\n              Back\n            </Button>\n          )}\n          <Button\n            type=\"submit\"\n            // variant=\"contained\"\n            sx={secondaryButton}\n          >\n            Continue\n          </Button>\n          <Button sx={secondaryButton} onClick={handleSkip}>\n            {loading ? (\n              <img\n                src={Images.standardLoader}\n                alt=\"load\"\n                style={{\n                  width: \"20px\",\n                  height: \"20px\",\n                  padding: \"5px\",\n                }}\n              />\n            ) : (\n              \"Skip\"\n            )}\n          </Button>\n        </Stack>\n      </form>\n    );\n  };\n  const testOptions = [\n    { label: \"IELTS\", value: \"IELTS\" },\n    { label: \"TOEFL\", value: \"TOEFL\" },\n    { label: \"Duolingo\", value: \"Duolingo\" },\n    { label: \"PET\", value: \"PET\" },\n  ];\n  \n  const testOptions1 = [\n    { label: \"GRE\", value: \"GRE\" },\n    { label: \"GMAT\", value: \"GMAT\" },\n    { label: \"SAT\", value: \"SAT\" },\n    { label: \"ACT\", value: \"ACT\" },\n  ];\n\n  // Helper to get test by name\n  const getTestByName = (name: string) =>\n    testscoresData?.data?.find((test: any) => test.name?.toLowerCase().includes(name.toLowerCase()));\n\n  // English Proficiency Test\n  const englishTest = testscoresData?.data?.find((test) =>\n    [\n      'english',\n      'ielts',\n      'toefl',\n      'international english language testing system',\n      'test of english as a foreign language',\n      'pearson test of english',\n      'duolingo',\n      'pte',\n      'det'\n    ].some((key) => test.name?.toLowerCase().includes(key))\n  );\n\n  // const englishTestData = englishTest\n  //   ? {\n  //       name: englishTest.name,\n  //       scores: englishTest.scores[0].map((s: any) => ({\n  //         label: s.description,\n  //         value: s.count\n  //       })),\n  //       testDate: englishTest.testDate || \"\",\n  //       document: englishTest.document || { name: \"\", icon: Images.pdfIcon }\n  //     }\n  //   : null;\n  //\n  // GRE/GMAT Test\n  // const greTest = getTestByName(\"gre\");\n  // const greTestData = greTest\n  //   ? {\n  //       name: greTest.name,\n  //       scores: greTest.scores[0].map((s: any) => ({\n  //         label: s.description,\n  //         value: s.count\n  //       })),\n  //       testDate: greTest.testDate || \"\",\n  //       document: greTest.document || { name: \"\", icon: Images.pdfIcon }\n  //     }\n  //   : null;\n\n  const [editMode, setEditMode] = useState(false);\n  const [greEditMode, setGreEditMode] = useState(false);\n  // Placeholder demo state for edit UI\n  const [isGRESelected, setIsGRESelected] = useState(\"yes\");\n  const [selectedGRETest, setSelectedGRETest] = useState(\"\");\n  const academicTests: any[] = [];\n  const academicTestNames: any[] = [];\n  const AcademicTestNamesEnum = {};\n  const eventHandler = ({ name, data }: { name: string; data: any }) => {\n    if (name === \"academicTestSelection\") setIsGRESelected(data);\n    if (name === \"academicTest\") setSelectedGRETest(data);\n  };\n\n  // Add separate state/handlers for English test edit section\n  const [isEnglishSelected, setIsEnglishSelected] = useState(\"\");\n  const [selectedEnglishTest, setSelectedEnglishTest] = useState(\"\");\n  const englishTests: any[] = [];\n  const englishTestNames: any[] = [];\n  const englishEventHandler = ({ name, data }: { name: string; data: any }) => {\n    if (name === \"englishTestSelection\") setIsEnglishSelected(data);\n    if (name === \"englishTest\") setSelectedEnglishTest(data);\n  };\n\n  // Example static data for demonstration (replace with your dynamic data as needed)\n  const initialEnglishTestData: TestScoreData | null = null; // or an object if data exists\n  const initialGreTestData: TestScoreData | null = {\n    name: 'GRE',\n    scores: [\n      { label: 'Verbal Reasoning', value: '130-170' },\n      { label: 'Quantitative Reasoning', value: '130-170' },\n      { label: 'Analytical Writing Assessment', value: '1-6' },\n    ],\n    testDate: '06-03-2024',\n    document: { name: 'GRE.pdf', icon: Images.pdfIcon },\n  };\n\n  const [englishEditMode, setEnglishEditMode] = useState(false);\n  const [greTestData, setGreTestData] = useState<TestScoreData | null>(null);\n  const [englishTestData, setEnglishTestData] = useState<TestScoreData | null>(null);\n  const [englishForm, setEnglishForm] = useState<TestScoreData | null>(null);\n  const [greForm, setGreForm] = useState<TestScoreData | null>(null);\n\n  const [showEnglishTestForm, setShowEnglishTestForm] = useState(false);\n  const [showGRETestForm, setShowGRETestForm] = useState(false);\n\n  const [isAddingEnglishTest, setIsAddingEnglishTest] = useState(false);\n  const [isAddingGRETest, setIsAddingGRETest] = useState(false);\n\n  // Add validation state for English and GRE/GMAT modals\n  const [englishErrors, setEnglishErrors] = useState<any>({});\n  const [greErrors, setGreErrors] = useState<any>({});\n\n  // Validation helper for English\n  const validateEnglish = () => {\n    const errors: any = {};\n    if (!isEnglishSelected) errors.radio = 'Please select Yes or No.';\n    if (isEnglishSelected === 'yes') {\n      if (!englishForm?.name) errors.name = 'Please select a test.';\n      englishForm?.scores.forEach((s, i) => {\n        if (!s.value) errors[`score${i}`] = 'Required.';\n        else if (s.label === 'Reading' || s.label === 'Writing' || s.label === 'Listening' || s.label === 'Speaking') {\n          const val = Number(s.value);\n          if (isNaN(val) || val < 1 || val > 30) errors[`score${i}`] = 'Must be 1–30.';\n        }\n      });\n      if (!englishForm?.testDate) errors.testDate = 'Test date required.';\n    }\n    setEnglishErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Validation helper for GRE/GMAT\n  const validateGRE = () => {\n    const errors: any = {};\n    if (!isGRESelected) errors.radio = 'Please select Yes or No.';\n    if (isGRESelected === 'yes') {\n      if (!greForm?.name) errors.name = 'Please select a test.';\n      greForm?.scores.forEach((s, i) => {\n        if (!s.value) errors[`score${i}`] = 'Required.';\n        else if (s.label === 'Verbal Reasoning' || s.label === 'Quantitative Reasoning') {\n          const val = Number(s.value);\n          if (isNaN(val) || val < 130 || val > 170) errors[`score${i}`] = 'Must be 130–170.';\n        } else if (s.label === 'Analytical Writing') {\n          const val = Number(s.value);\n          if (isNaN(val) || val < 1 || val > 6) errors[`score${i}`] = 'Must be 1–6.';\n        }\n      });\n      if (!greForm?.testDate) errors.testDate = 'Test date required.';\n    }\n    setGreErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Add logging and robust matching for English and GRE tests\n  useEffect(() => {\n    // Log the raw Redux data\n    console.log('testscoresData.data', testscoresData?.data);\n\n    // More robust English test matching\n    const englishTest = testscoresData?.data?.find((item)=>languageTests.find((item2)=>item2.fullForm==item.name))\n\n    // Log the raw English test data\n    console.log('Raw English Test Data:', englishTest);\n\n    if (englishTest && englishTest.scores && Array.isArray(englishTest.scores[0])) {\n      const testData = englishTest as any;\n      const mappedScores = testData.scores[0].map((s: any) => ({\n        label: s.description || '',\n        value: s.count || '',\n        range: s.range\n      }));\n      \n      if (\n        mappedScores.length === 1 &&\n        mappedScores[0].label.toLowerCase() === 'total'\n      ) {\n        setEnglishTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else if (!mappedScores.find((s: any) => s.label.toLowerCase() === 'total')) {\n        const total = mappedScores\n          .filter((s: any) => s.value && !isNaN(Number(s.value)))\n          .reduce((acc: number, s: any) => acc + Number(s.value), 0);\n        mappedScores.push({ label: 'Total', value: String(total) });\n        setEnglishTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else {\n        setEnglishTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      }\n    } else {\n      setEnglishTestData(null);\n    }\n\n    // More robust GRE/GMAT test matching\n    const greTest = testscoresData?.data?.find((test) =>\n      [\n        'gre',\n        'graduate record examination',\n        'gmat',\n        'graduate management admission test'\n      ].some((key) => test.name?.toLowerCase().includes(key))\n    );\n\n    // Log the raw GRE test data\n    console.log('Raw GRE Test Data:', greTest);\n\n    if (greTest && greTest.scores && Array.isArray(greTest.scores[0])) {\n      const testData = greTest as any;\n      const mappedScores = testData.scores[0].map((s: any) => ({\n        label: s.description || '',\n        value: s.count || '',\n        range: s.range\n      }));\n      if (\n        mappedScores.length === 1 &&\n        mappedScores[0].label.toLowerCase() === 'total'\n      ) {\n        setGreTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else if (!mappedScores.find((s: any) => s.label.toLowerCase() === 'total')) {\n        const total = mappedScores\n          .filter((s: any) => s.value && !isNaN(Number(s.value)))\n          .reduce((acc: number, s: any) => acc + Number(s.value), 0);\n        mappedScores.push({ label: 'Total', value: String(total) });\n        setGreTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      } else {\n        setGreTestData({\n          name: testData.name,\n          scores: mappedScores,\n          testDate: testData.testDate || \"\",\n          document: testData.document || { name: \"\", icon: Images.pdfIcon }\n        });\n      }\n    } else {\n      setGreTestData(null);\n    }\n\n    // Log the mapped state\n    console.log('englishTestData', englishTestData);\n    console.log('greTestData', greTestData);\n  }, [testscoresData?.data]);\n\n  // Build the fallback English score box from englishTest\n  let englishTotalScoreBox = null;\n  if (\n    englishTest &&\n    Array.isArray(englishTest.scores) &&\n    englishTest.scores.length > 0\n  ) {\n    let totalScore = null;\n    if (Array.isArray(englishTest.scores[0])) {\n      if (englishTest.scores[0].length > 0) {\n        totalScore = englishTest.scores[0][0];\n      }\n    } else {\n      totalScore = englishTest.scores[0];\n    }\n    if (totalScore) {\n      englishTotalScoreBox = (\n        <Box>\n          <Typography color=\"#8E9091\" fontWeight={600} sx={{ mb: 1,color:\"#8E9091\" }}>{englishTestInfo.find((item)=>item.fullform==englishTest.name)?.text}</Typography>\n          <Box sx={{ display: 'flex', gap: 3 }}>\n            <Box sx={{ minWidth: 90 }}>\n              <Typography fontWeight={700} color=\"#495052\">{totalScore.count}</Typography>\n              <Typography color=\"#8E9091\" fontSize={14}>{totalScore.description}</Typography>\n            </Box>\n          </Box>\n        </Box>\n      );\n    }\n  }\n\n  // Place this just before the return statement\n  const greTest = testscoresData?.data?.find((test) =>\n    [\n      'gre',\n      'graduate record examination',\n      'gmat',\n      'graduate management admission test'\n    ].some((key) => test.name?.toLowerCase().includes(key))\n  );\n\n  let greTotalScoreBox = null;\n  if (\n    greTest &&\n    Array.isArray(greTest.scores) &&\n    greTest.scores.length > 0\n  ) {\n    let totalScore = null;\n    if (Array.isArray(greTest.scores[0])) {\n      if (greTest.scores[0].length > 0) {\n        totalScore = greTest.scores[0][0];\n      }\n    } else {\n      totalScore = greTest.scores[0];\n    }\n    if (totalScore) {\n      greTotalScoreBox = (\n        <Box>\n          <Typography fontWeight={600} sx={{ mb: 1, color:\"#8E9091\"  }}>{greTest.name}</Typography>\n          <Box sx={{ display: 'flex', gap: 3 }}>\n            <Box sx={{ minWidth: 90 }}>\n              <Typography fontWeight={700} color=\"#495052\">{totalScore.count}</Typography>\n              <Typography color=\"#8E9091\" fontSize={14}>{totalScore.description}</Typography>\n            </Box>\n          </Box>\n        </Box>\n      );\n    }\n  }\n\n  return (\n    <>\n      {/* English Proficiency Test Card */}\n      <Box\n        sx={{\n          background: \"#fff\",\n          borderRadius: \"20px\",\n          boxShadow: 1,\n          p: 3,\n          mb: 3,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n        }}\n      >\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <Typography sx={{color:\"#8E9091\"}} variant=\"h6\" fontWeight={700}>\n            English Proficiency Test\n          </Typography>\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <Button variant=\"outlined\" size=\"small\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"4px\", xs: \"2px\" } }]} onClick={() => {\n              setShowEnglishTestForm(true);\n              setIsAddingEnglishTest(false);\n              setEnglishForm(englishTestData || {\n                name: '',\n                scores: [\n                  { label: 'Reading', value: '' },\n                  { label: 'Writing', value: '' },\n                  { label: 'Speaking', value: '' },\n                  { label: 'Listening', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>Edit</Button>\n            <Button variant=\"outlined\" size=\"small\" sx={{ borderRadius: \"50%\",border:'2px solid #F48438 ', minWidth: 32, width: 36, height: 36,color:\"#495052\" }} onClick={() => {\n              setIsAddingEnglishTest(true);\n              setShowEnglishTestForm(true);\n              setEnglishForm({\n                name: '',\n                scores: [\n                  { label: 'Reading', value: '' },\n                  { label: 'Writing', value: '' },\n                  { label: 'Speaking', value: '' },\n                  { label: 'Listening', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>+</Button>\n          </Box>\n        </Box>\n        <Box sx={{ mt: 2, borderRadius: \"10px\", p: 1 }}>\n          <Typography sx={{ color: '#495052', fontSize: 15, mb: 1 }}>\n            Have you taken any English Proficiency test\n          </Typography>\n          {englishTestData && englishTotalScoreBox ? (\n            <>\n              <Box>\n                {/* <Typography variant=\"subtitle2\" sx={{ color: '#3b3f76', mb: 1 }}>Mapped Scores</Typography> */}\n                <Typography fontWeight={600} sx={{ mb: 1 }}>{englishTestInfo.find((item)=>item.fullform==englishTestData.name)?.text}</Typography>\n                <Box sx={{ display: 'flex', gap: 3 }}>\n                  {englishTestData.scores.map((score, idx) => (\n                    <Box key={idx} sx={{ minWidth: 90 }}>\n                      <Typography fontWeight={700} color=\"#495052\">{score.value}</Typography>\n                      <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n              <Divider sx={{ my: 2 }} />\n              <Box>\n     \n                {englishTotalScoreBox}\n              </Box>\n            </>\n          ) : englishTestData ? (\n            <Box>\n              <Typography fontWeight={600} sx={{ mb: 1 }}>{englishTestData.name}</Typography>\n              <Box sx={{ display: 'flex', gap: 3 }}>\n                {englishTestData.scores.map((score, idx) => (\n                  <Box key={idx} sx={{ minWidth: 90 }}>\n                    <Typography fontWeight={700} color=\"#1C1F40\">{score.value}</Typography>\n                    <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          ) : englishTotalScoreBox ? (\n            <Box>\n            \n              {englishTotalScoreBox}\n            </Box>\n          ) : <Typography fontWeight={700}>NA</Typography>}\n        </Box>\n      </Box>\n\n      {/* GRE/GMAT Test Card */}\n      <Box\n        sx={{\n          background: \"#fff\",\n          borderRadius: \"20px\",\n          boxShadow: 1,\n          p: 3,\n          mb: 3,\n          display: \"flex\",\n          flexDirection: \"column\",\n          minWidth: 0,\n        }}\n      >\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n          <Typography sx={{color:\"#8E9091\"}} variant=\"h6\" fontWeight={700}>\n            Graduate Record Examination/Graduate Management Admission Test\n          </Typography>\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <Button variant=\"outlined\" size=\"small\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"4px\", xs: \"2px\" } }]} onClick={() => {\n              setShowGRETestForm(true);\n              setIsAddingGRETest(false);\n              setGreForm(greTestData || {\n                name: '',\n                scores: [\n                  { label: 'Verbal Reasoning', value: '' },\n                  { label: 'Quantitative Reasoning', value: '' },\n                  { label: 'Analytical Writing', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>Edit</Button>\n            <Button variant=\"outlined\" size=\"small\" sx={{ borderRadius: \"50%\",border:'2px solid #F48438 ', minWidth: 36, width: 36, height: 36,color:\"#495052\" }} onClick={() => {\n              setIsAddingGRETest(true);\n              setShowGRETestForm(true);\n              setGreForm({\n                name: '',\n                scores: [\n                  { label: 'Verbal Reasoning', value: '' },\n                  { label: 'Quantitative Reasoning', value: '' },\n                  { label: 'Analytical Writing', value: '' },\n                ],\n                testDate: '',\n                document: { name: '', icon: Images.pdfIcon }\n              });\n            }}>+</Button>\n          </Box>\n        </Box>\n        <Box sx={{ mt: 2, borderRadius: \"10px\", p: 1 }}>\n          {greTestData && greTotalScoreBox ? (\n            <>\n              <Box>\n                {/* <Typography variant=\"subtitle2\" sx={{ color: '#3b3f76', mb: 1 }}>Mapped Scores</Typography> */}\n                <Typography fontWeight={600} sx={{ mb: 1 }}>{greTestData.name}</Typography>\n                <Box sx={{ display: 'flex', gap: 3 }}>\n                  {greTestData.scores.map((score, idx) => (\n                    <Box key={idx} sx={{ minWidth: 90 }}>\n                      <Typography fontWeight={700} color=\"#1C1F40\">{score.value}</Typography>\n                      <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                    </Box>\n                  ))}\n                </Box>\n              </Box>\n              <Divider sx={{ my: 2 }} />\n              <Box>\n                {greTotalScoreBox}\n              </Box>\n            </>\n          ) : greTestData ? (\n            <Box>\n              <Typography fontWeight={600} sx={{ mb: 1 }}>{greTestData.name}</Typography>\n              <Box sx={{ display: 'flex', gap: 3 }}>\n                {greTestData.scores.map((score, idx) => (\n                  <Box key={idx} sx={{ minWidth: 90 }}>\n                    <Typography fontWeight={700} color=\"#1C1F40\">{score.value}</Typography>\n                    <Typography color=\"#8E9091\" fontSize={14}>{score.label}</Typography>\n                  </Box>\n                ))}\n              </Box>\n            </Box>\n          ) : greTotalScoreBox ? (\n            <Box>\n              {greTotalScoreBox}\n            </Box>\n          ) : <Typography fontWeight={700}>NA</Typography>}\n        </Box>\n      </Box>\n\n      {/* English Test Form Modal */}\n      <Dialog\n        open={showEnglishTestForm}\n        onClose={() => {\n          setShowEnglishTestForm(false);\n          setIsAddingEnglishTest(false);\n        }}\n        maxWidth=\"md\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            borderRadius: '20px',\n            background: '#fff',\n            boxShadow: 4,\n            p: 0,\n          }\n        }}\n      >\n        <Box sx={{ p: 4, position: 'relative' }}>\n          <Typography variant=\"h6\" fontWeight={700} sx={{ mb: 3,color:\"#8E9091\" }}>\n            English Proficiency Test\n          </Typography>\n          <IconButton\n            onClick={() => {\n              setShowEnglishTestForm(false);\n              setIsAddingEnglishTest(false);\n            }}\n            sx={{ position: \"absolute\", top: 20, right: 20 }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 2 }}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography fontWeight={500} sx={{ mb: 1 ,color:\"#8E9091\"}}>Have you taken any English Proficiency Test?</Typography>\n              <RadioGroup\n                row\n                value={isEnglishSelected}\n                onChange={e => {\n                  setIsEnglishSelected(e.target.value);\n                  if (e.target.value === 'no') {\n                    setEnglishForm({\n                      name: '',\n                      scores: [\n                        { label: 'Reading', value: '' },\n                        { label: 'Writing', value: '' },\n                        { label: 'Listening', value: '' },\n                        { label: 'Speaking', value: '' },\n                      ],\n                      testDate: '',\n                      document: { name: '', icon: Images.pdfIcon }\n                    });\n                  }\n                }}\n              >\n                <FormControlLabel value=\"yes\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"Yes\" />\n                <FormControlLabel value=\"no\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"No\" />\n              </RadioGroup>\n              {englishErrors.radio && <Typography color=\"error\" fontSize={13}>{englishErrors.radio}</Typography>}\n            </Grid>\n            {isEnglishSelected === 'yes' && (\n              <Grid item xs={12} sm={6} md={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Select a Test</InputLabel>\n                  <Select\n                    label=\"Select a Test\"\n                    value={englishForm?.name || ''}\n                    onChange={e => setEnglishForm(f => f ? { ...f, name: e.target.value } : null)}\n                  >\n                    {testOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>{option.label}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {englishErrors.name && <Typography color=\"error\" fontSize={13}>{englishErrors.name}</Typography>}\n              </Grid>\n            )}\n          </Grid>\n          {isEnglishSelected === 'yes' && englishForm?.name && (\n            <>\n              <Box sx={{ background: '#f6f7ff', borderRadius: 2, p: 2, mb: 3, fontWeight: 600, fontSize: 18 }}>\n                {englishForm.name.toUpperCase()}\n              </Box>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Reading\" fullWidth value={englishForm?.scores[0]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 0 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score0`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score0`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Writing\" fullWidth value={englishForm?.scores[1]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 1 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score1`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score1`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Listening\" fullWidth value={englishForm?.scores[2]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 2 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score2`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score2`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Speaking\" fullWidth value={englishForm?.scores[3]?.value || ''} onChange={e => setEnglishForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 3 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {englishErrors[`score3`] && <Typography color=\"error\" fontSize={13}>{englishErrors[`score3`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField\n                    label=\"Test Date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    value={englishForm?.testDate || ''}\n                    onChange={e => setEnglishForm(f => f ? { ...f, testDate: e.target.value } : null)}\n                  />\n                  {englishErrors.testDate && <Typography color=\"error\" fontSize={13}>{englishErrors.testDate}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={6}>\n                  \n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2,marginTop:'6px' }}>\n                    <Button\n                      component=\"label\"\n                      sx={{\n                        border: '1px dashed #aaa',\n                        borderRadius: 2,\n                        minWidth: 40,\n                        minHeight: 40,\n                        color: '#3B3F76',\n                        background: '#fafaff',\n                        '&:hover': { background: '#f4f4ff' },\n                      }}\n                    >\n                      <ArrowUpwardIcon />\n                      <input type=\"file\" hidden onChange={e => {\n                        const file = e.target.files?.[0];\n                        if (file) {\n                          setEnglishForm(f => f ? {\n                            ...f,\n                            document: { name: file.name, icon: Images.pdfIcon }\n                          } : null);\n                        }\n                      }} />\n                   \n                    </Button>\n                       <Typography fontWeight={600} >Upload File</Typography>\n                    {englishForm?.document?.name && (\n                      <TextField value={englishForm.document.name} size=\"small\" InputProps={{ readOnly: true }} sx={{ width: 180 }} />\n                    )}\n                    {/* Add icons for view/delete if needed */}\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 4 }}>\n            <Button\n              onClick={() => {\n                setShowEnglishTestForm(false);\n                setIsAddingEnglishTest(false);\n              }}\n              variant=\"outlined\"\n              sx={{\n                border:\"2px solid #F48438\",\n                borderRadius: '20px',\n                px: 4,\n                py: 1,\n                fontWeight: 700,\n                fontSize: 18,\n                color: '#495052',\n                background: '#f8f8ff',\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              sx={{\n                borderRadius: '20px',\n                px: 4,\n                py: 1,\n                fontWeight: 700,\n                fontSize: 18,\n                color: '#fff',\n                background: '#F48438',\n              }}\n              onClick={async () => {\n                if (!validateEnglish()) return;\n                // Prepare payload for English test\n                const updatedTest = {\n                  name:englishTestInfo?.find((item)=>item.text==englishForm?.name)?.fullform || '',\n                  scores: \n                    (englishForm?.scores || []).map(s => ({\n                      description: s.label,\n                      count: s.value,\n                      range: s.range\n                    })),\n                  testDate: englishForm?.testDate || '',\n                  document: englishForm?.document || { name: '', icon: Images.pdfIcon },\n                };\n                // Merge or add, preserving all Test fields\n                let found = false;\n                const newTests = (testscoresData?.data || []).map((t: any) => {\n                  if (t.name === updatedTest.name) {\n                    found = true;\n                    return {\n                      ...t,\n                      ...updatedTest,\n                      docId: t.docId ?? undefined,\n                      _id: t._id ?? undefined,\n                    };\n                  }\n                  return t;\n                });\n                if (!found) {\n                  newTests.push({ ...updatedTest, docId: undefined, _id: undefined });\n                }\n                // Dispatch to Redux\n                dispatch(settestScores(newTests));\n                // Persist to backend\n                await editProfile({ tests: newTests });\n                setEnglishTestData(englishForm);\n                setShowEnglishTestForm(false);\n                setIsAddingEnglishTest(false);\n              }}\n            >\n              Save\n            </Button>\n            <Button variant=\"outlined\" sx={{marginTop:'4px', borderRadius: \"50%\", minWidth: 44, width: 42, height: 42, color: \"#495052\", borderColor: \"#F48438\", fontSize: 28, ml: 2,border:\"2px solid #F48438\" }}>+</Button>\n          </Box>\n        </Box>\n      </Dialog>\n\n      {/* GRE Test Form Modal */}\n      <Dialog\n        open={showGRETestForm}\n        onClose={() => {\n          setShowGRETestForm(false);\n          setIsAddingGRETest(false);\n        }}\n        maxWidth=\"md\"\n        fullWidth\n        PaperProps={{\n          sx: {\n            borderRadius: '20px',\n            background: '#fff',\n            boxShadow: 4,\n            p: 0,\n          }\n        }}\n      >\n        <Box sx={{ p: 4, position: 'relative' }}>\n          <Typography variant=\"h6\" fontWeight={700} sx={{ mb: 3,color:\"#8E9091\" }}>\n            Graduate Record Examination/Graduate Management Admission Test\n          </Typography>\n          <IconButton\n            onClick={() => {\n              setShowGRETestForm(false);\n              setIsAddingGRETest(false);\n            }}\n            sx={{ position: \"absolute\", top: 20, right: 20 }}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Grid container spacing={3} alignItems=\"center\" sx={{ mb: 2 }}>\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography fontWeight={500} sx={{ mb: 1 ,color:\"#8E9091\"}}>Have you taken GRE/GMAT Test?</Typography>\n              <RadioGroup\n                row\n                value={isGRESelected}\n                onChange={e => {\n                  setIsGRESelected(e.target.value);\n                  if (e.target.value === 'no') {\n                    setGreForm({\n                      name: '',\n                      scores: [\n                        { label: 'Verbal Reasoning', value: '' },\n                        { label: 'Quantitative Reasoning', value: '' },\n                        { label: 'Analytical Writing', value: '' },\n                      ],\n                      testDate: '',\n                      document: { name: '', icon: Images.pdfIcon }\n                    });\n                  }\n                }}\n              >\n                <FormControlLabel value=\"yes\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"Yes\" />\n                <FormControlLabel value=\"no\" control={<Radio sx={{ color: \"#3B3F76\" }} />} label=\"No\" />\n              </RadioGroup>\n              {greErrors.radio && <Typography color=\"error\" fontSize={13}>{greErrors.radio}</Typography>}\n            </Grid>\n            {isGRESelected === 'yes' && (\n              <Grid item xs={12} sm={6} md={4}>\n                <FormControl fullWidth>\n                  <InputLabel>Select a Test</InputLabel>\n                  <Select\n                    label=\"Select a Test\"\n                    value={greForm?.name || ''}\n                    onChange={e => setGreForm(f => f ? { ...f, name: e.target.value } : null)}\n                  >\n                    {testOptions1.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>{option.label}</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                {greErrors.name && <Typography color=\"error\" fontSize={13}>{greErrors.name}</Typography>}\n              </Grid>\n            )}\n          </Grid>\n          {isGRESelected === 'yes' && greForm?.name && (\n            <>\n              <Box sx={{ background: '#f6f7ff', borderRadius: 2, p: 2, mb: 3, fontWeight: 600, fontSize: 18 }}>\n                {greForm.name.toUpperCase()}\n              </Box>\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Verbal Reasoning\" fullWidth value={greForm?.scores[0]?.value || ''} onChange={e => setGreForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 0 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {greErrors[`score0`] && <Typography color=\"error\" fontSize={13}>{greErrors[`score0`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Quantitative Reasoning\" fullWidth value={greForm?.scores[1]?.value || ''} onChange={e => setGreForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 1 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {greErrors[`score1`] && <Typography color=\"error\" fontSize={13}>{greErrors[`score1`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField label=\"Analytical Writing\" fullWidth value={greForm?.scores[2]?.value || ''} onChange={e => setGreForm(f => f ? { ...f, scores: f.scores.map((s, i) => i === 2 ? { ...s, value: e.target.value } : s) } : null)} />\n                  {greErrors[`score2`] && <Typography color=\"error\" fontSize={13}>{greErrors[`score2`]}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={3}>\n                  <TextField\n                    label=\"Test Date\"\n                    type=\"date\"\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                    value={greForm?.testDate || ''}\n                    onChange={e => setGreForm(f => f ? { ...f, testDate: e.target.value } : null)}\n                  />\n                  {greErrors.testDate && <Typography color=\"error\" fontSize={13}>{greErrors.testDate}</Typography>}\n                </Grid>\n                <Grid item xs={12} sm={6} md={6}>\n                 \n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <Button\n                      component=\"label\"\n                      sx={{\n                        border: '1px dashed #aaa',\n                        borderRadius: 2,\n                        minWidth: 30,\n                        minHeight: 30,\n                        color: '#3B3F76',\n                        background: '#fafaff',\n                        '&:hover': { background: '#f4f4ff' },\n                      }}\n                    >\n                      <ArrowUpwardIcon />\n                      <input type=\"file\" hidden onChange={e => {\n                        const file = e.target.files?.[0];\n                        if (file) {\n                          setGreForm(f => f ? {\n                            ...f,\n                            document: { name: file.name, icon: Images.pdfIcon }\n                          } : null);\n                        }\n                      }} />\n                    </Button>\n                     <Typography fontWeight={600} sx={{ mb: 1 }}>Upload File</Typography>\n                    {greForm?.document?.name && (\n                      <TextField value={greForm.document.name} size=\"small\" InputProps={{ readOnly: true }} sx={{ width: 180 }} />\n                    )}\n                    {/* Add icons for view/delete if needed */}\n                  </Box>\n                </Grid>\n              </Grid>\n            </>\n          )}\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', gap: 2, mt: 4 }}>\n            <Button\n              onClick={() => {\n                setShowGRETestForm(false);\n                setIsAddingGRETest(false);\n              }}\n              variant=\"outlined\"\n              sx={{\n                border:\"2px solid #F48438\",\n                borderRadius: '20px',\n                px: 4,\n                fontWeight: 700,\n                fontSize: 16,\n                color: '#495052',\n                background: '#f8f8ff',\n                '&:hover': { background: '#e6e6fa' },\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              sx={{\n                borderRadius: '20px',\n                px: 4,\n                py: 1,\n                fontWeight: 700,\n                fontSize: 18,\n                color: '#fff',\n                background: '#F48438',\n                '&:hover': { background: '#23245a' },\n              }}\n              onClick={async () => {\n                if (!validateGRE()) return;\n                // Prepare payload for GRE/GMAT test\n                const updatedTest = {\n                  name: greForm?.name || '',\n                  scores: [\n                    (greForm?.scores || []).map(s => ({\n                      description: s.label,\n                      count: s.value,\n                      range: s.range\n                    }))\n                  ],\n                  testDate: greForm?.testDate || '',\n                  document: greForm?.document || { name: '', icon: Images.pdfIcon },\n                };\n                // Merge or add, preserving all Test fields\n                let found = false;\n                const newTests = (testscoresData?.data || []).map((t: any) => {\n                  if (t.name === updatedTest.name) {\n                    found = true;\n                    return {\n                      ...t,\n                      ...updatedTest,\n                      docId: t.docId ?? undefined,\n                      _id: t._id ?? undefined,\n                    };\n                  }\n                  return t;\n                });\n                if (!found) {\n                  newTests.push({ ...updatedTest, docId: undefined, _id: undefined });\n                }\n                // Dispatch to Redux\n                dispatch(settestScores(newTests));\n                // Persist to backend\n                await editProfile({ tests: newTests });\n                setGreTestData(greForm);\n                setShowGRETestForm(false);\n                setIsAddingGRETest(false);\n              }}\n            >\n              Save\n            </Button>\n            <Button variant=\"outlined\" sx={{marginTop:'4px', borderRadius: \"50%\", minWidth: 40, width: 42, height: 42, color: \"#495052\", borderColor: \"#3B3F76\", fontSize: 28, ml: 2 ,border:\"2px solid #F48438\" }}>+</Button>\n          </Box>\n        </Box>\n      </Dialog>\n    </>\n  );\n};\n\nexport default TestScores;","// import { Cancel } from \"@mui/icons-material\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  // Button,\n  FormControl,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  Slider,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport Images from \"../../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport {\n  budgetType,\n  countryList,\n  currencySymbols,\n  degreeType,\n  monthNames,\n  skillsList,\n  subDisciplines,\n} from \"../../../../assets/menu\";\nimport { editProfile, requestAdvisor } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { setpreferences } from \"../../../../store/Slices/preferencesSlice\";\nimport { setskills } from \"../../../../store/Slices/skillsSlice\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { Advisor, Event } from \"../../../../types/types\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from \"yup\";\n// import { useNavigate } from \"react-router-dom\";\nimport { addAdvisorInfo, updateAdvisorInfo } from \"src/store/Slices/advisorsSlice\";\nimport { addChats } from \"src/store/Slices/chatsSlice\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport { budgets } from \"src/assets/constants/misc\";\nimport { globalButton } from \"src/components/styles/customStyles\";\n\n// interface CurrencyOption {\n//   label: string;\n//   value: string;\n// }\nconst Preferences = () => {\n  const Preferences = useAppSelector((state) => state.preferences);\n  const educationDetails=useAppSelector((state)=>state.educationhistory)\n  console.log(\"educationDetails\",educationDetails)\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const [intake, setIntake] = useState<string>(Preferences.data?.intake ? Preferences.data?.intake :\"\")\n  const date = new Date(intake)\n  // const monthDate = date.getMonth()\n  const [year, setYear] = useState(Preferences.data?.intake ? date.getFullYear() : \"\")\n  const [month, setMonth] = useState<any>(Preferences.data?.intake ? date.getMonth() : \"\")\n  const [intakeError, setIntakeError] = useState(\"\");\n  const [courseData, setCourseData] = useState(\n    Preferences?.data?.subCategory || []\n  );\n  const [countryData, setCountryData] = useState(\n    Preferences?.data?.country || []\n  );\n  // const [minBudget, setMinBudget] = useState<number>(\n  //   Preferences?.data?.budget?.lower || 0\n  // );\n  // const [maxBudget, setMaxBudget] = useState<number>(\n  //   Preferences?.data?.budget?.upper || 5000000\n  // );\n  const [selectedCurrency, setSelectedCurrency] = useState<any>(\n    Preferences?.data?.currency\n  );\n\n  const advisors = useAppSelector((state) => state.advisor);\n  // const navigate = useNavigate();\n  const assignedCountries =\n    advisors?.data?.flatMap((advisor: Advisor) => advisor.assignedCountries) ||\n    [];\n  const unassignedCountries = Preferences?.data?.country?.filter(\n    (country: string) => !assignedCountries.includes(country)\n  );\n  // eslint-disable-next-line\n  const validationSchema = Yup.object().shape({\n    preference: Yup.object().shape({\n      intake: Yup.string()\n        .required(\"Intake is required\")\n        .matches(/^(January|February|March|April|May|June|July|August|September|October|November|December)-\\d{4}$/, \"Month & Year required\"),\n      budget: Yup.object().shape({\n        lower: Yup.number()\n          .required(\"Lower budget is required\")\n          .min(0, \"Lower budget must be greater than or equal to 0\"),\n        upper: Yup.number()\n          .required(\"Upper budget is required\")\n          .moreThan(Yup.ref(\"lower\"), \"Upper budget must be greater than lower budget\"),\n      }),\n      degree: Yup.string()\n        .required(\"Degree is required\")\n        .oneOf(degreeType, \"Invalid degree program selected\"),\n      country: Yup.array()\n        .of(Yup.string())\n        .min(1, \"At least one country is required\")\n        .required(\"Countries are required\"),\n        subCategory: Yup.array()\n        .of(Yup.string())\n        .min(1, \"At least one course is required\")\n        .required(\"Courses are required\"),\n        currency: Yup.string().required(\"Currency is required\"),\n    }),\n  });\n  \n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 150,\n      },\n    },\n  };\n\n  const currencies = currencySymbols.map((symbol) => {\n    const [label, value] = symbol.split(\"-\");\n    return { label: symbol, value };\n  });\n\n  // const handleOptionChange = (\n  //   event: React.ChangeEvent<{}>,\n  //   newValue: string[]\n  // ) => {\n  //   setSkillsData(newValue);\n  // };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"OptionChange\":\n        setSelectedCurrency(event.data.newValue?.value);\n        break;\n      // case \"sliderChange\":\n      //   if (Array.isArray(event.data.newValue)) {\n      //     setMinBudget(event.data.newValue[0]);\n      //     setMaxBudget(event.data.newValue[1]);\n      //   }\n      //   break;\n      case \"countryChange\":\n        setCountryData(event.data.newValue);\n        break;\n      case \"courseChange\":\n        setCourseData(event.data.newValue);\n        break;\n    }\n  };\n  useEffect(() => {\n    if (month !== \"\" && year !== \"\") {\n      setIntake(`${monthNames[month]}-${year}`);\n    } else {\n      setIntake(\"\");\n    }\n  }, [month, year]);\n\n  useEffect(() => {\n    if (year !== \"\" && month !== \"\") {\n      setIntakeError(\"\");\n    }\n  }, [year, month]);\n\n  const initialValues = {\n    preference: {\n      intake: intake,\n      budget:budgets.find((item)=>item.lower===Preferences.data?.budget?.lower && item.upper===Preferences.data?.budget.upper)?.name,\n      degree: Preferences?.data?.degree,\n      country: countryData,\n      subCategory: courseData,\n      currency: selectedCurrency,\n    },\n  };\n\n  const submit = async (values: any) => {\n    // Intake validation: year and month must be selected\n    if (year === \"\" || month === \"\") {\n      setIntakeError(\"Both year and month are required.\");\n      setLoading(false);\n      return;\n    } else {\n      setIntakeError(\"\");\n    }\n    let budget=budgets.find((item)=>item.name===values.preference.budget)\n    setLoading(true);\n    console.log(\"Submit\",{...values,preference:{...values.preference,budget:{upper:budget?.upper,lower:budget?.lower}}})\n    try {\n      const response = await editProfile({...values,preference:{...values.preference,budget:{upper:budget?.upper,lower:budget?.lower}}});\n      if (response) {\n        dispatch(setpreferences(response.data.data.preference));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Preferences updated \",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setLoading(false);\n      }\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n\n  const addAdvisors = async (item: string) => {\n    try {\n      const response = await requestAdvisor({\n        country: item,\n      });\n\n      const newAdvisor = response.data.data.advisor;\n      const existingAdvisor = advisors?.data?.find((advisor) => advisor._id === newAdvisor._id);\n\n      if (existingAdvisor) {\n        dispatch(updateAdvisorInfo(newAdvisor));\n      } else {\n        dispatch(addAdvisorInfo(newAdvisor));\n      }\n      if (response.data.data.chat !== null) {\n        dispatch(addChats(response.data.data.chat));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const [formEdit, setFormEdit] = useState(false);\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ px: { lg: 3 } }}>\n      <Formik\n        initialValues={initialValues}\n        enableReinitialize={true}\n        // validationSchema={validationSchema}\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => (\n          <Form className=\"mt-5\">\n            <Grid container spacing={4} sx={{ width:\"100% !important\" }}>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  What program would you like to pursue?\n                </Typography>\n                <Autocomplete\n                  multiple\n                  id=\"subdisciplines\"\n                  sx={{\n                    \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n                      padding: \"5px\",\n                    },\n                    width: \"100%\",\n                  }}\n                  limitTags={2}\n                  size=\"small\"\n                  options={subDisciplines}\n                  getOptionLabel={(option) => option}\n                  value={courseData}\n                  filterSelectedOptions\n                  ListboxProps={{\n                    style: { maxHeight: \"180px\", overflowY: \"auto\" },\n                  }}\n                  onChange={(event, newValue) =>\n                    eventHandler({\n                      name: \"courseChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search programs\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        ...params.InputProps,\n                      }}\n                    />\n                  )}\n                />\n                    {((touched.preference as any)?.subCategory && (errors.preference as any)?.subCategory) ? (\n                      <div className=\"error\">{(errors.preference as any)['subCategory']}</div>\n                ) : null}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  What are your preferred study destinations?\n                </Typography>\n                <Autocomplete\n                  multiple\n                  id=\"autocomplete\"\n                  sx={{\n                    \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n                      padding: \"5px\",\n                    },\n                    width: \"100%\",\n                  }}\n                  limitTags={2}\n                  size=\"small\"\n                  options={countryList}\n                  getOptionLabel={(option) => option}\n                  value={countryData}\n                  filterSelectedOptions\n                  ListboxProps={{\n                    style: { maxHeight: \"180px\", overflowY: \"auto\" },\n                  }}\n                  onChange={(event, newValue) =>\n                    eventHandler({\n                      name: \"countryChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search country\"\n                      variant=\"outlined\"\n                      InputProps={{\n                        ...params.InputProps,\n                      }}\n                    />\n                  )}\n                />\n                    {((touched.preference as any)?.country && (errors.preference as any)?.country) ? (\n                      <div className=\"error\">{(errors.preference as any)['country']}</div>\n                ) : null}\n                {unassignedCountries?.map((item, i) => (\n                  <Grid item xs={12} key={i}>\n                    <Box\n                      sx={{\n                        py: 1,\n                        display: \"flex\",\n                        gap: \"1rem\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <Button\n                        onClick={() => addAdvisors(item)}\n                        sx={{\n                          border: \"1px solid #3B3F76CC\",\n                          borderRadius: \"15px\",\n                          p: 0.5,\n                          textTransform: \"none\",\n                          color: \"#3B3F76CC\",\n                        }}\n                      >\n                        Request advisor for {item}\n                      </Button>\n                    </Box>\n                  </Grid>\n                ))}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  Which degree program do you prefer?\n                </Typography>\n                <FormControl size=\"small\">\n                  <InputLabel sx={{color:\"#8E9091\"}} id=\"degree\">Select Degree</InputLabel>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={values.preference.degree}\n                    label=\"Select Degree\"\n                    onChange={handleChange}\n                  >\n                    {degreeType.map((item, i) => (\n                      <MenuItem value={item} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                      {((touched.preference as any)?.degree && (errors.preference as any)?.degree) ? (\n                        <div className=\"error\">{(errors.preference as any)['degree']}</div>\n                  ) : null}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6} >\n                <Typography fontWeight=\"500\" gutterBottom sx={{color:\"#8E9091\"}}\n                >\n                  When would you like to begin your studies?\n                </Typography>\n                <div style={{ display: \"flex\", gap: \"1rem\" }}>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    // name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={year}\n                    // label=\"Select Year\"\n                    onChange={(e: any) => setYear(e.target.value)}\n                    defaultValue=\"\"\n                    displayEmpty\n                  >\n                    <MenuItem sx={{color:\"#8E9091\"}} value=\"\" disabled>Select Year</MenuItem>\n                    {[\"2025\", \"2026\", \"2027\", \"2028\", \"2029\", \"2030\"].map((item, i) => (\n                      <MenuItem value={item} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <Select\n                    labelId=\"degree\"\n                    id=\"degree\"\n                    size=\"small\"\n                    // name=\"preference.degree\"\n                    MenuProps={MenuProps}\n                    value={month}\n                    // label=\"Select Year\"\n                    onChange={(e: any) => setMonth(e.target.value)}\n                    defaultValue=\"\"\n                    displayEmpty\n                  >\n                    <MenuItem sx={{color:\"#8E9091\"}} value=\"\" disabled>Select Month</MenuItem>\n                    {monthNames.map((item, i) => (\n                      <MenuItem value={i} key={i}>\n                        {item}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </div>\n                {intakeError && (\n                  <div className=\"error\" style={{ color: 'red', marginTop: 4 }}>{intakeError}</div>\n                )}\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                md={6}\n                sx={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n               <Typography sx={{color:\"#8E9091\"}} fontWeight=\"500\" gutterBottom \n                >\n                  What is your estimated budget range for your studies?\n                </Typography>\n                <FormControl size=\"small\">\n                  <InputLabel sx={{color:\"#8E9091\"}} id=\"budget\">Select Budget</InputLabel>\n                  <Select\n                    labelId=\"budget\"\n                    id=\"budget\"\n                    size=\"small\"\n                    name=\"preference.budget\"\n                    MenuProps={MenuProps}\n                    value={values.preference.budget}\n                    label=\"Select budget\"\n                    onChange={handleChange}\n                  >\n                    {budgets.map((item, i) => (\n                      <MenuItem value={item.name} key={item.id}>\n                        {item.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                      {((touched.preference as any)?.budget && (errors.preference as any)?.budget) ? (\n                        <div className=\"error\">{(errors.preference as any)['budget']}</div>\n                  ) : null}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <InputLabel\n                  id=\"degree\"\n                  sx={{ fontWeight: \"500\", color: \"#8E9091\", mb: 0.5 }}\n                >\n                  Preferred currency?\n                </InputLabel>\n                <Autocomplete\n                  sx={{\n                    marginTop: \"9px\",\n                    width: \"100%\",\n                    \"& .MuiInputBase-input\": {\n                      fontSize: \"14px !important\",\n                    },\n                    \"&.MuiAutocomplete-listbox\": {\n                      width: \"400px\",\n                    },\n                    \"&.MuiAutocomplete-listbox .MuiAutocomplete-option \": {\n                      fontSize: \"14px !important\",\n                    },\n                    \"& .MuiOutlinedInput-root\": {\n                      paddingRight: \"0 !important\",\n                    },\n                  }}\n                  options={currencies}\n                  getOptionLabel={(option) => option?.label}\n                  value={\n                    currencies.find(\n                      (option) => option.value === selectedCurrency\n                    ) || null\n                  }\n                  onChange={(\n                    event: any,\n                    newValue: { label: string; value: string } | null\n                  ) =>\n                    eventHandler({\n                      name: \"OptionChange\",\n                      data: { event, newValue },\n                    })\n                  }\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      placeholder=\"Search currency\"\n                      size=\"small\"\n                      InputProps={{\n                        ...params.InputProps,\n                        type: \"search\",\n                        endAdornment: (\n                          <ExpandMoreIcon\n                            sx={{ color: \"gray\", marginRight: \"5px\" }}\n                          />\n                        ),\n                        style: {\n                          fontSize: \"14px !important\",\n                          color: \"#000 !important\",\n                        },\n                      }}\n                    />\n                  )}\n                />\n                    {((touched.preference as any)?.currency && (errors.preference as any)?.currency) ? (\n                      <div className=\"error\">{String((errors.preference as any)['currency'])}</div>\n                ) : null}\n              </Grid>\n\n\n              <Grid\n                item\n                xs={12}\n                sx={{ justifyContent: \"end\", display: \"flex\" }}\n              >\n                <CustomButton\n                  width=\"100px\"\n                  handleSubmit={() => console.log(\"first\")}\n                >\n                  {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Save\"\n                  )}\n                </CustomButton>\n              </Grid>\n            </Grid>\n          </Form>\n        )}\n      </Formik>\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#8E9091\" }}>\n                Preferences\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Preferred Programs</Typography>\n              <Typography sx={{color:\"#495052\"}}>{courseData && courseData.length > 0 ? courseData.join(', ') : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Preferred Study Destinations</Typography>\n              <Typography sx={{color:\"#495052\"}}>{countryData && countryData.length > 0 ? countryData.join(', ') : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Degree Program</Typography>\n              <Typography sx={{color:\"#495052\"}}>{Preferences?.data?.degree || 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Intake</Typography>\n              <Typography sx={{color:\"#495052\"}}>{intake || 'NA'}</Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500 }}>Budget</Typography>\n              <Typography sx={{color:\"#495052\"}}>{Preferences?.data?.budget ? budgets.find((item) => item.lower === Preferences?.data?.budget?.lower && item.upper === Preferences?.data?.budget?.upper)?.name || 'NA' : 'NA'}</Typography>\n              <Typography sx={{ color: \"#8E9091\", fontWeight: 500, mt: 2 }}>Currency</Typography>\n              <Typography sx={{color:\"#495052\"}}>{selectedCurrency || 'NA'}</Typography>\n            </Grid>\n          </Grid>\n    </Box>\n      )}\n    </>\n  );\n};\n\nconst Skills: React.FC = () => {\n  const skills = useAppSelector((state) => state.skills);\n  const dispatch = useAppDispatch();\n  const [skilldata, setSkillsData] = useState<string[]>(skills.data);\n  const [loading,setLoading] = useState(false)\n  const handleOptionChange = (\n    event: React.ChangeEvent<{}>,\n    newValue: string[]\n  ) => {\n    setSkillsData(newValue);\n  };\n  // const handleSkillsDelete = async (item: any) => {\n  //   const updated = skilldata.filter((value, i) => value !== item);\n  //   const response = await editProfile({ skills: updated });\n  //   if (response) {\n  //     dispatch(setskills(response.data.data.skills));\n  //     setSkillsData(response.data.data.skills);\n  //     dispatch(\n  //       setPopup({\n  //         show: true,\n  //         data: {\n  //           container: {\n  //             name: \"success\",\n  //             data: \"Deleted successfully\",\n  //             dimensions: {\n  //               width: \"30%\",\n  //               height:\"40%\",\n  //               show:\"none\"\n\n  //             },\n  //           },\n  //           type: \"custom\",\n  //         },\n  //       })\n  //     );\n  //   } else {\n  //   }\n  // };\n\n  const submit = async () => {\n    setLoading(true)\n    const response = await editProfile({ skills: skilldata });\n    if (response) {\n      dispatch(setskills(response.data.data.skills));\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"success\",\n              data: \"Skills added successfully\",\n              dimensions: {\n                width: \"30%\",\n                height: \"40%\",\n                show: \"none\"\n\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n      setLoading(false)\n    }else{\n      setLoading(false)\n    }\n  };\n  return (\n    <div>\n      <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", color: \"rgba(48, 51, 99, 0.5)\" }}>Skills</Typography>\n      <Autocomplete\n        multiple\n        id=\"autocomplete\"\n        sx={{\n          \"& .MuiOutlinedInput-root .MuiAutocomplete-input\": {\n            padding: \"5px\",\n          },\n          width: {lg:\"50%\"},\n          \"& .MuiTextField-root\": {\n            marginTop: \"8px\",\n          },\n          mb:1\n        }}\n        disableClearable\n        size=\"small\"\n        fullWidth\n        options={skillsList}\n        getOptionLabel={(option) => option}\n        value={skilldata}\n        filterSelectedOptions\n        ListboxProps={{\n          style: { maxHeight: \"180px\", overflowY: \"auto\" },\n        }}\n        // renderTags={() => null}\n        onChange={handleOptionChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            placeholder=\"Ex: Problem-Solving\"\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              type: \"search\",\n              endAdornment: null,\n            }}\n          />\n        )}\n      />\n      {/* {skilldata?.length > 0 ? (\n        <Box\n          sx={{\n            background: \"#EDF2F6\",\n            p: 2,\n            width: \"fit-content\",\n            mt: 2,\n            borderRadius: \"10px\",\n            display: \"flex\",\n          }}\n        >\n          {skilldata?.map((item) => (\n            <Typography\n              sx={{\n                p: 1.5,\n                background: \"#fff\",\n                width: \"fit-content\",\n                borderRadius: \"10px\",\n                fontSize: \"13px\",\n                mr: 1,\n                position: \"relative\",\n                \"&:hover .cancel-icon\": {\n                  display: \"block\",\n                },\n              }}\n            >\n              {item}\n              <Cancel\n                className=\"cancel-icon\"\n                sx={{\n                  display: \"none\",\n                  color: \"red\",\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0,\n                  fontSize: \"1rem\",\n                }}\n                onClick={() => handleSkillsDelete(item)}\n              />\n            </Typography>\n          ))}\n        </Box>\n      ) : null} */}\n      <Box sx={{ justifyContent: \"end\", display: \"flex\", mr: {lg:10} }}>\n        <Button type=\"submit\" onClick={submit} sx={[secondaryButton, { width: \"100px\" }]}>\n        {loading ? (\n                    <img\n                      src={Images.standardLoader}\n                      alt=\"load\"\n                      style={{ width: \"1rem\" }}\n                    />\n                  ) : (\n                    \"Save\"\n                  )}        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default Skills;\n\nexport { Preferences, Skills };\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  InputLabel,\n  Stack,\n  MenuItem,\n  Select,\n  FormControlLabel,\n  Radio,\n  // FormControl,\n  RadioGroup,\n  Typography,\n  FormControl,\n} from \"@mui/material\";\nimport Images from \"../../../../assets\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { editProfile, getProfile } from \"../../../../services\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setExtraCurriculum } from \"../../../../store/Slices/extraCurricular\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Formik, Field, FieldArray, ErrorMessage, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport Skills from \"./preferences\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n// import { useState } from \"react\";\n// import { Grid, RadioGroup, FormControlLabel, Radio, Typography } from \"@mui/material\";\n\n\ninterface ExtraCurricularMember {\n  activity: string;\n  description: string;\n  startDate: any;\n  endDate: any;\n  designation: string;\n  status: string;\n  participatedPublication?: string;\n  participationLevel?: string;\n}\n\ninterface ResearchPaper {\n  title: string;\n  journal: string;\n  year: string;\n  authors: string;\n  description: string;\n}\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst validationSchema = Yup.object().shape({\n  activity: Yup.string().required(\"Activity is required\"),\n  description: Yup.string().required(\"Description is required\"),\n  startDate: Yup.date().required(\"Start Date is required\"),\n  endDate: Yup.date()\n    .nullable() \n    .when(\"status\", {\n      is: \"completed\", \n      then: (schema) =>\n        schema.required(\"End Date is required\").min(\n          Yup.ref(\"startDate\"),\n          \"End Date cannot be earlier than Start Date\"\n        ),\n      otherwise: (schema) => schema.nullable(), \n    }),\n  status: Yup.string().required(\"Status is required\"),\n});\n\nconst validationSchemaArray = Yup.array().of(validationSchema);\n\nconst ExtraCurricular = () => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const extracurricular = useAppSelector((state) => state.extracurriculum);\n  const [formEdit, setFormEdit] = useState(false);\n  const initialValues = {\n    extraCurriculumActivities: (extracurricular.data?.length\n      ? extracurricular.data\n      : [\n        {\n          activity: \"\",\n          description: \"\",\n          designation: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          status: \"\",\n        },\n      ]\n    ).map((item: any) => ({\n      ...item,\n      participatedPublication: item.participatedPublication ?? \"No\",\n      participationLevel: item.participationLevel ?? \"\",\n    })),\n  };\n\n  const activities = [\n    \"Dance\",\n    \"Online Certification\",\n    \"Paper Publication\",\n    \"Project\",\n    \"Research\",\n    \"Student Government\",\n    \"Academic Teams and Clubs\",\n    \"The Debate Team Students\",\n    \"Internships\",\n  ];\n\n  const [researchPapers] = useState<ResearchPaper[]>([]);\n  const skills = useAppSelector((state) => state.skills.data);\n\n  useEffect(() => {\n    async function fetchExtraCurricular() {\n      try {\n        const profile = await getProfile();\n        console.log('Fetched profile for extraCurricular:', profile);\n        if (profile && profile.data && profile.data.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(profile.data.extraCurriculumActivities));\n        } else if (profile && profile.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(profile.extraCurriculumActivities));\n        }\n      } catch (error) {\n        // Optionally handle error\n      }\n    }\n    fetchExtraCurricular();\n  }, [dispatch]);\n\n  const submitForm = async (values: any) => {\n    if (!loading) {\n      try {\n        setLoading(true);\n        // Ensure all activities have the new fields\n        const activitiesWithPublication = values.extraCurriculumActivities.map((item: any) => ({\n          ...item,\n          participatedPublication: item.participatedPublication ?? \"No\",\n          participationLevel: item.participationLevel ?? \"\",\n        }));\n        console.log('Submitting activities:', activitiesWithPublication);\n        const response = await editProfile({\n          extraCurriculumActivities: activitiesWithPublication,\n          researchPapers: researchPapers,\n        });\n        console.log('Submit response:', response);\n        if (response && response.data && response.data.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(response.data.extraCurriculumActivities));\n        } else if (response && response.data && response.data.data && response.data.data.extraCurriculumActivities) {\n          dispatch(setExtraCurriculum(response.data.data.extraCurriculumActivities));\n        }\n        if (response) {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Extra curricular activities and research papers added successfully\",\n                  dimensions: {\n                    width: \"40%\",\n                    height: \"40%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    }\n  };\n\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ overflowY: \"scroll\", px: 3, height: \"75vh\" }}>\n          <Box sx={{ px: 2 }}>\n            <Skills />\n          </Box>\n          <Box >\n            <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", mb: 1, color: \"rgba(48, 51, 99, 0.5)\", px: 2 }}>Activities</Typography>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={Yup.object().shape({\n                extraCurriculumActivities: validationSchemaArray,\n              })}\n              onSubmit={(values, { setSubmitting }) => {\n                submitForm(values);\n                setSubmitting(false);\n              }}\n            >\n              {({ values, handleChange, handleBlur, isValid, dirty }) => (\n                <Form >\n                  <FieldArray name=\"extraCurriculumActivities\">\n                    {({ push, remove }) => (\n                      <>\n                        {values.extraCurriculumActivities.map((activity: ExtraCurricularMember, index) => (\n                          <div className=\"mb-5\" key={index}>\n                            <Grid container spacing={4} sx={{ px: 2 }}>\n                              {/* Activity Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                                  Activity\n                                </InputLabel>\n                                <FormControl fullWidth variant=\"outlined\" size=\"small\" sx={{ mt: 1,color:\"#8E9091\" }}>\n                                  <Field\n                                    as={Select}\n                                    size=\"small\"\n                                    name={`extraCurriculumActivities.${index}.activity`}\n                                    value={activity.activity}\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    displayEmpty\n                                    IconComponent={ExpandMoreIcon}\n                                    MenuProps={MenuProps}\n                                  >\n                                    <MenuItem sx={{color:\"#8E9091\"}} disabled value=\"\">\n                                      Select activity\n                                    </MenuItem >\n                                    {activities.map((value) => (\n                                      <MenuItem sx={{color:\"#495052\"}} key={value} value={value}>\n                                        {value}\n                                      </MenuItem>\n                                    ))}\n                                  </Field>\n                                  <ErrorMessage\n                                    name={`extraCurriculumActivities.${index}.activity`}\n                                    component=\"div\"\n                                    className=\"error\"\n                                  />\n                                </FormControl>\n                              </Grid>\n\n                              {/* Designation Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb: 1}}>\n                                  Designation\n                                </InputLabel>\n                                <Field\n                                  as={TextField}\n                                  size=\"small\"\n                                  name={`extraCurriculumActivities.${index}.designation`}\n                                  placeholder=\"Designation\"\n                                  value={activity.designation}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  fullWidth\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.designation`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                              {/* Status Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                                  Active status\n                                </InputLabel>\n                                <Field\n                                  as={RadioGroup}\n                                  row\n                                  name={`extraCurriculumActivities.${index}.status`}\n                                  value={activity.status}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                >\n                                  <FormControlLabel\n                                    value=\"completed\"\n                                    control={<Radio size=\"small\" />}\n                                    label=\"Completed\"\n                                  />\n                                  <FormControlLabel\n                                    value=\"ongoing\"\n                                    control={<Radio size=\"small\" />}\n                                    label=\"Ongoing\"\n                                  />\n                                </Field>\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.status`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                              {/* Description Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb: 1 }}>\n                                  Description\n                                </InputLabel>\n                                <Field\n                                  as={TextField}\n                                  size=\"small\"\n                                  name={`extraCurriculumActivities.${index}.description`}\n                                  placeholder=\"Description\"\n                                  value={activity.description}\n                                  onBlur={handleBlur}\n                                  onChange={handleChange}\n                                  fullWidth\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.description`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                              {/* Start Date Field */}\n                              <Grid item xs={12} sm={6}>\n                                <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500,mb: 1 }}>\n                                  Attended from\n                                </InputLabel>\n\n                              \n                                <DatePickerComponent\n                                  selectedDate={activity?.startDate}\n                                  onChange={(date) => handleChange({ target: { name: `extraCurriculumActivities.${index}.startDate`, value: date?.toISOString().slice(0, 10) } })}\n                                  maxDate={new Date()}\n                                  placeholderText=\"Start Date\"\n                                />\n                                <ErrorMessage\n                                  name={`extraCurriculumActivities.${index}.startDate`}\n                                  component=\"div\"\n                                  className=\"error\"\n                                />\n                              </Grid>\n\n                                <Grid item xs={12} sm={6}>\n        <Typography sx={{ fontWeight: 500, color: \"#8E9091\", mb: 1 }}>\n          Did you participate any publication?\n        </Typography>\n        <Field\n          as={RadioGroup}\n          row\n          name={`extraCurriculumActivities.${index}.participatedPublication`}\n          value={activity.participatedPublication || \"No\"}\n          onChange={handleChange}\n        >\n          <FormControlLabel value=\"Yes\" control={<Radio size=\"small\" />} label=\"Yes\" />\n          <FormControlLabel value=\"No\" control={<Radio size=\"small\" />} label=\"No\" />\n        </Field>\n      </Grid>\n\n     \n\n\n                              {/* End Date Field */}\n                              <Grid item xs={12} sm={6}>\n                                {activity.status === \"completed\" && (\n                                  <>\n                                    <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                                      Attended till\n                                    </InputLabel>\n                                    <DatePickerComponent\n                                      selectedDate={activity?.endDate}\n                                      onChange={(date) => handleChange({ target: { name: `extraCurriculumActivities.${index}.endDate`, value: date?.toISOString().slice(0, 10) } })}\n                                      minDate={\n                                        activity.startDate\n                                          ? new Date(\n                                            new Date(activity?.startDate).getTime() + 10 * 24 * 60 * 60 * 1000\n                                          )\n                                          : undefined\n                                      }\n                                      maxDate={new Date()}\n                                      placeholderText=\"End Date\"\n                                    />\n                                    <ErrorMessage\n                                      name={`extraCurriculumActivities.${index}.endDate`}\n                                      component=\"div\"\n                                      className=\"error\"\n                                    />\n                                  </>\n                                )}\n                              </Grid>\n\n                              {activity.participatedPublication === \"Yes\" && (\n                                <Grid item xs={12} sm={6}>\n                                  <Typography sx={{ fontWeight: 500, color: \"#8E9091\", mb: 1 }}>\n                                    Participation Level\n                                  </Typography>\n                                  <Field\n                                    as={RadioGroup}\n                                    row\n                                    name={`extraCurriculumActivities.${index}.participationLevel`}\n                                    value={activity.participationLevel || \"\"}\n                                    onChange={handleChange}\n                                  >\n                                    <FormControlLabel value=\"National\" control={<Radio size=\"small\" />} label=\"National\" />\n                                    <FormControlLabel value=\"International\" control={<Radio size=\"small\" />} label=\"International\" />\n                                  </Field>\n                                </Grid>\n                              )}\n\n                              {/* Remove Activity Button */}\n                              {values.extraCurriculumActivities.length > 1 && (\n                                <Grid item xs={12}>\n                                  <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                                    <img\n                                      src={Images.deleteIcon}\n                                      alt=\"delete\"\n                                      style={{ width: \"1.5rem\" }}\n                                      onClick={() => remove(index)}\n                                    />\n                                  </Box>\n                                </Grid>\n                              )}\n                            </Grid>\n                          </div>\n                        ))}\n\n                        <Stack\n                          direction=\"row\"\n                          sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n                          spacing={2}\n                        >\n                          <Button\n                            onClick={() =>\n                              push({\n                                activity: \"\",\n                                description: \"\",\n                                designation: \"\",\n                                startDate: \"\",\n                                endDate: \"\",\n                                status: \"\",\n                                participatedPublication: \"No\",\n                                participationLevel: \"\",\n                              })\n                            }\n                            sx={secondaryButton}\n                          >\n                            Add new\n                          </Button>\n                          <CustomButton width=\"100px\" handleSubmit={()=>submitForm}>\n                            {loading ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n                          </CustomButton>\n                        </Stack>\n                      </>\n                    )}\n                  </FieldArray>\n                </Form>\n              )}\n            </Formik>\n          </Box>\n          {/* <Box sx={{ mt: 4, px: 2 }}>\n            <Typography sx={{ fontSize: \"1.25rem\", fontWeight: \"500\", mb: 1, color: \"rgba(48, 51, 99, 0.5)\" }}>\n              Research Papers\n            </Typography>\n            {researchPapers.map((paper, idx) => (\n              <Box key={idx} sx={{ mb: 2, border: '1px solid #eee', borderRadius: 2, p: 2 }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Title\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.title}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].title = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Journal\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.journal}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].journal = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Year\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.year}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].year = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      label=\"Authors\"\n                      size=\"small\"\n                      fullWidth\n                      value={paper.authors}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].authors = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      label=\"Description\"\n                      size=\"small\"\n                      fullWidth\n                      multiline\n                      minRows={2}\n                      value={paper.description}\n                      onChange={e => {\n                        const newPapers = [...researchPapers];\n                        newPapers[idx].description = e.target.value;\n                        setResearchPapers(newPapers);\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"error\"\n                      onClick={() => {\n                        setResearchPapers(researchPapers.filter((_, i) => i !== idx));\n                      }}\n                      disabled={researchPapers.length === 1}\n                    >\n                      Remove\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Box>\n            ))}\n            <Button\n              variant=\"outlined\"\n              onClick={() => setResearchPapers([...researchPapers, { title: \"\", journal: \"\", year: \"\", authors: \"\", description: \"\" }])}\n            >\n              Add Research Paper\n            </Button>\n          </Box> */}\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', pl: 3, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <span style={{ fontWeight: 600, fontSize: '1.25rem',color:\"#8E9091\" }}>Extra Curricular Details</span>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]}onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            {extracurricular.data && extracurricular.data.length > 0 ? (\n              extracurricular.data.map((item: any, idx: number) => (\n                <Grid item xs={12} key={idx} sx={{ mb: 2 }}>\n                  <Box sx={{ mb: 2 }}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        \n                        <span style={{ color: \"#8E9091\", fontWeight: 500,display:'block' }}>Activity</span>\n                        <div style={{color:\"#495052\"}}>{item.activity || 'NA'}</div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Skills</span>\n                        <div style={{color:\"#495052\"}}>{skills && skills.length > 0 ? skills.join(', ') : 'NA'}\n                        </div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Description</span>\n                        <div style={{color:\"#495052\"}}>{item.description || 'NA'}</div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Publication Participation</span>\n                        <div style={{color:\"#495052\"}}>{item.participatedPublication || 'NA'}</div>\n                        {item.participatedPublication === 'Yes' && (\n                          <>\n                            <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Participation Level</span>\n                            <div style={{color:\"#495052\"}}>{item.participationLevel || 'NA'}</div>\n                          </>\n                        )}\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, display: 'block' }}>Start Date</span>\n                        <div style={{color:\"#495052\"}}>\n                          {item.startDate && item.endDate\n                            ? `${item.startDate.split('T')[0]}`\n                            : item.startDate\n                              ? item.startDate.split('T')[0]\n                              : item.endDate\n                                ? item.endDate.split('T')[0]\n                                : ''}\n                        </div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500,marginTop:16,display:'block' }}>End Date</span>\n                        <div style={{color:\"#495052\"}}>\n                          {item.startDate && item.endDate\n                            ? `${item.endDate.split('T')[0]}`\n                            : item.startDate\n                              ? item.startDate.split('T')[0]\n                              : item.endDate\n                                ? item.endDate.split('T')[0]\n                                : ''}\n                        </div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Designation</span>\n                        <div style={{color:\"#495052\"}}>{item.designation || 'NA'}</div>\n                        <span style={{ color: \"#8E9091\", fontWeight: 500, marginTop: 16, display: 'block' }}>Status</span>\n                        <div style={{color:\"#495052\"}}>{item.status || 'NA'}</div>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n              ))\n            ) : (\n              <Grid item xs={12}><div>No extra curricular details available.</div></Grid>\n            )}\n          </Grid>\n        </Box>\n      )}\n      {/* Research Papers Section (Read-Only Mode) */}\n      {!formEdit && researchPapers && researchPapers.length > 0 && (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3, mb: 3, mt: 3 }}>\n          <Typography variant=\"h6\" sx={{ fontWeight: 600, mb: 2 }}>\n            Research Papers\n          </Typography>\n          {researchPapers.map((paper: ResearchPaper, idx: number) => (\n            <Box key={idx} sx={{ border: '1px solid #eee', borderRadius: 2, p: 2, mb: 2 }}>\n              <div><strong>Title:</strong> {paper.title || 'NA'}</div>\n              <div><strong>Journal:</strong> {paper.journal || 'NA'}</div>\n              <div><strong>Year:</strong> {paper.year || 'NA'}</div>\n              <div><strong>Authors:</strong> {paper.authors || 'NA'}</div>\n              <div><strong>Description:</strong> {paper.description || 'NA'}</div>\n            </Box>\n          ))}\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default ExtraCurricular;\n","import React, { useState } from \"react\";\nimport { Button, Grid, TextField, Box, InputLabel, Stack, MenuItem, Select, FormControl } from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { editProfile } from \"../../../../services\";\nimport { setfamilyInfo } from \"../../../../store/Slices/familyInfoSlice\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport { Formik, Field, FieldArray, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport ReactPhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport Images from \"src/assets\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\n\nconst validationSchema = Yup.object({\n  familyDetails: Yup.array()\n    .of(\n      Yup.object({\n        GuardianFirstName: Yup.string()\n        .max(50, \"First name cannot exceed 50 characters\")\n        .required('First name is required'),\n        GuardianLastName: Yup.string()\n        .max(50, \"Last name cannot exceed 50 characters\")\n        .required('Last name is required'),\n        GuardianOccupation: Yup.string().required(\"Occupation is required\"),\n        RelationshipWithStudent: Yup.string().required(\"Relationship is required\"),\n        GuardianContactNumber: Yup.object({\n          number:Yup.string()\n          .required(\"Phone number is required\")\n          .test(\"is-valid-phone\", \"Invalid phone number\", function (value) {\n            const { countryCode } = this.parent;\n            if (!countryCode || !value) return false; // Ensure both countryCode and number are provided\n  \n            try {\n              const phoneNumber = parsePhoneNumberFromString(`${countryCode}${value}`, countryCode);\n              return phoneNumber?.isValid();\n            } catch (error) {\n              return false;\n            }\n          }),\n          countryCode: Yup.string().required(\"Country code is required\"),\n        }).required(\"Phone number is required\"),\n      })\n    )\n    .required(\"Must have family members\")\n    .min(1, \"Minimum of 1 family member is required\"),\n});\n\n// Helper: always keep at least one entry, but allow deleting any index\nconst getNewFamilyArrayAfterDelete = (arr: any[], idx: number) => {\n  if (arr.length === 1) {\n    return [{\n      GuardianFirstName: \"\",\n      GuardianLastName: \"\",\n      GuardianEmail: \"\",\n      GuardianOccupation: \"\",\n      GuardianQualification: \"\",\n      RelationshipWithStudent: \"\",\n      GuardianContactNumber: { number: \"\", countryCode: \"\" },\n    }];\n  }\n  const newArr = arr.slice();\n  newArr.splice(idx, 1);\n  return newArr;\n};\n\nconst Family = () => {\n  const familyData = useAppSelector((state) => state.familyInfo);\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(false);\n  const [formEdit, setFormEdit] = useState(false);\n\n  const initialValues = {\n    familyDetails:\n      familyData.data?.length > 0\n        ? familyData.data\n        : [\n          {\n            GuardianFirstName: \"\",\n            GuardianLastName: \"\",\n            GuardianEmail: \"\",\n            GuardianOccupation: \"\",\n            GuardianQualification: \"\",\n            RelationshipWithStudent: \"\",\n            GuardianContactNumber: {\n              number: \"\",\n              countryCode: \"\"\n            },\n          },\n        ],\n  };\n\n  const submitForm = async (values: any) => {\n    let family = {\n      familyDetails: values.familyDetails,\n    };\n    try {\n      setLoading(true)\n      const response = await editProfile(family);\n      if (response) {\n        dispatch(setfamilyInfo(response.data.data.familyDetails));\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Family details added successfully\",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n      }\n      setLoading(false)\n    } catch (error) { \n      setLoading(false)\n    }\n  };\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ overflowY: \"scroll\", px: 3, height: \"75vh\" }}>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={submitForm}\n          >\n            {({ values, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\n              <form onSubmit={handleSubmit}>\n                <FieldArray name=\"familyDetails\">\n                  {({ push, remove }) => (\n                    <div>\n                      {values.familyDetails.map((familyMember, index) => (\n                        <div className=\"mb-5\" key={index}>\n                          <Grid container spacing={4} sx={{ px: 2 }}>\n                            {/* RelationshipWithStudent */}\n                            <Grid item xs={12} sm={6}>\n                              <FormControl fullWidth variant=\"outlined\" size=\"small\" sx={{ mt: 1,color:\"#8E9091\"}}>\n                                <InputLabel id=\"family\">\n                                  Select Relation\n                                </InputLabel>\n                                <Select\n                                  size=\"small\"\n                                  id=\"family\"\n                                  name={`familyDetails.${index}.RelationshipWithStudent`}\n                                  value={familyMember.RelationshipWithStudent}\n                                  onChange={handleChange}\n                                  // onBlur={handleBlur}\n                                  fullWidth\n                                  IconComponent={ExpandMoreIcon}\n                                  // displayEmpty\n                                  label=\"Select Relation\"\n                                >\n                                  <MenuItem sx={{color:\"#8E9091\"}} disabled value=\"\">\n                                    Select\n                                  </MenuItem>\n                                  {[\n                                    { name: \"Father\", value: \"father\" },\n                                    { name: \"Mother\", value: \"mother\" },\n                                    { name: \"Spouse\", value: \"spouse\" },\n                                    { name: \"Guardian\", value: \"guardian\" },\n                                  ].map((option) => (\n                                    <MenuItem sx={{color:\"#495052\"}} key={option.value} value={option.value}>\n                                      {option.name}\n                                    </MenuItem>\n                                  ))}\n                                </Select>\n                              </FormControl>\n                              <ErrorMessage\n                                name={`familyDetails.${index}.RelationshipWithStudent`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n                            <Grid xs={12} sm={6}></Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianFirstName`}\n                                placeholder=\"First Name\"\n                                value={familyMember.GuardianFirstName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"First Name\"\n                                onkeydown={(e:any) => {\n                                  if (familyMember.GuardianFirstName && familyMember.GuardianFirstName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                                    e.preventDefault();\n                                  }\n                                }}\n                                inputProps={{\n                                  maxLength: 50,\n                                }}\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianFirstName`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianLastName`}\n                                placeholder=\"Last Name\"\n                                value={familyMember.GuardianLastName}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Last Name\"\n                                inputProps={{\n                                  maxLength: 50,\n                                }}\n                                onkeydown={(e:any) => {\n                                  if (familyMember.GuardianLastName && familyMember.GuardianLastName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                                    e.preventDefault();\n                                  }\n                                }}\n\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianLastName`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                type=\"email\"\n                                name={`familyDetails.${index}.GuardianEmail`}\n                                placeholder=\"Email\"\n                                value={familyMember.GuardianEmail}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Email\"\n\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianEmail`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <ReactPhoneInput\n                                value={`${familyMember.GuardianContactNumber.countryCode}${familyMember.GuardianContactNumber.number}`}\n                                onChange={(value, data: any) => {\n                                  const dialCode = data?.dialCode || \"\";\n                                  setFieldValue(`familyDetails.${index}.GuardianContactNumber.countryCode`, \"+\" + dialCode);\n                                  setFieldValue(`familyDetails.${index}.GuardianContactNumber.number`, value.slice(dialCode.length).trim());\n                                }}\n                                country=\"in\"\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianContactNumber.number`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianOccupation`}\n                                placeholder=\"Occupation\"\n                                value={familyMember.GuardianOccupation}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Occupation\"\n\n                              />\n                              <ErrorMessage\n                                name={`familyDetails.${index}.GuardianOccupation`}\n                                component=\"div\"\n                                className=\"error\"\n                              />\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                              <Field\n                                as={TextField}\n                                size=\"small\"\n                                name={`familyDetails.${index}.GuardianQualification`}\n                                placeholder=\"Educational Qualification\"\n                                value={familyMember.GuardianQualification}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                fullWidth\n                                label=\"Qualification\"\n                              />\n                            </Grid>\n\n                            {/* Delete Button */}\n                            <Grid item xs={12}>\n                              <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                                <img\n                                  src={Images.deleteIcon}\n                                  alt=\"delete\"\n                                  style={{ width: \"1.5rem\" }}\n                                  onClick={() => {\n                                    setFieldValue('familyDetails', getNewFamilyArrayAfterDelete(values.familyDetails, index));\n                                  }}\n                                />\n                              </Box>\n                            </Grid>\n                          </Grid>\n                        </div>\n                      ))}\n                      <Stack\n                        direction=\"row\"\n                        sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n                        spacing={2}\n                      >\n                        <Button\n                          onClick={() =>\n                            push({\n                              GuardianFirstName: \"\",\n                              GuardianLastName: \"\",\n                              GuardianEmail: \"\",\n                              GuardianOccupation: \"\",\n                              GuardianQualification: \"\",\n                              RelationshipWithStudent: \"\",\n                              GuardianContactNumber: { number: \"\", countryCode: \"\" },\n                            })\n                          }\n                          sx={[secondaryButton, { width: \"100px\" ,color:\"#495052\" }]}\n                        >\n                          Add new\n                        </Button>\n                        <CustomButton\n                          width=\"35%\"\n                          handleSubmit={handleSubmit}\n                        >\n                            {loading ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\",color:\"#495052\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n                        </CustomButton>\n                      </Stack>\n                    </div>\n                  )}\n                </FieldArray>\n              </form>\n            )}\n          </Formik>\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3}}>\n          <Grid container >\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n              <span style={{ fontWeight: 600, fontSize: '1.25rem',color:'#8E9091' }}>Family Details</span>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"4px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            {familyData.data && familyData.data.length > 0 ? (\n              familyData.data.map((member: any, idx: number) => (\n                <Grid item xs={12} key={idx} >\n                  <Box sx={{ p: 2}}>\n                    <Grid container spacing={2}>\n                      <Grid item xs={12} sm={6}>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>First Name</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianFirstName || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10}}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Last Name</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianLastName || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom:10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Email</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianEmail || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Relationship</span>\n                          <span style={{color:\"#495052\"}}>{member.RelationshipWithStudent || 'NA'}</span>\n                        </div>\n                      </Grid>\n                      <Grid item xs={12} sm={6}>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Occupation</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianOccupation || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10 }}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Qualification</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianQualification || 'NA'}</span>\n                        </div>\n                        <div style={{ marginBottom: 10}}>\n                          <span style={{ color: \"#8E9091\", fontWeight: 500, marginRight: 8 }}>Contact Number</span>\n                          <span style={{color:\"#495052\"}}>{member.GuardianContactNumber?.countryCode && member.GuardianContactNumber?.number ? `${member.GuardianContactNumber.countryCode} ${member.GuardianContactNumber.number}` : 'NA'}</span>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                </Grid>\n              ))\n            ) : (\n              <Grid sx={{color:\"#495052\"}} item xs={12}><div>No family details available.</div></Grid>\n            )}\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default Family;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport {\n  Button,\n  Grid,\n  TextField,\n  Box,\n  InputLabel,\n  Stack,\n  MenuItem,\n  Select,\n  FormControlLabel,\n  Radio,\n  FormControl,\n  RadioGroup,\n  Typography,\n  Tooltip,\n} from \"@mui/material\";\nimport Images from \"../../../../assets\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { Event, WorkExperience } from \"../../../../types/types\";\nimport { setWorkExperience } from \"../../../../store/Slices/workexperienceSlice\";\nimport { editProfile, uploadProfile, getProfile } from \"../../../../services\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { setDocuments } from \"../../../../store/Slices/documentsSlice\";\nimport FileUploadOutlinedIcon from \"@mui/icons-material/FileUploadOutlined\";\nimport { allowedFileTypes, industrySector, workTypes } from \"../../../../assets/menu\";\nimport { secondaryButton } from \"../../../../components/styles/customStyles\";\nimport { Info } from \"@mui/icons-material\";\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\nimport ConfirmDialog from \"src/genericComponents/modalPopup/confirmDialog\";\nimport { globalButton } from \"../../../../components/styles/customStyles\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 150,\n    },\n  },\n};\n\nconst WorkExperiences = () => {\n  const dispatch = useAppDispatch();\n  const [open, setOpen] = useState<boolean>(false);\n  const [deleteItem, setDeleteItem] = useState<any | null>(null);\n  const handleDeleteOpen = (item: any) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n  const [document, setdoc] = useState<any>(null);\n  const inputFile = useRef<HTMLInputElement>(null);\n  const [loading, setLoading] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [formEdit, setFormEdit] = useState(false);\n\n  const workExperienceData = useAppSelector((state) => state.workexperience);\n  const [WorkExperienceDetails, setWorkExperienceDetails] = useState<WorkExperience[]>(\n    workExperienceData.data?.length > 0\n      ? workExperienceData.data\n      : [\n        {\n          companyName: \"\",\n          sector: \"\",\n          type: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          designation: \"\",\n          docId: document,\n        },\n      ]\n  );\n  const [workStatus, setWorkStatus] = useState<(\"completed\" | \"ongoing\" | \"\")[]>(\n    WorkExperienceDetails.map((work) =>\n      work.endDate ? \"completed\" : \"\"\n    )\n  );\n  const [errors, setErrors] = useState<Record<number, Record<string, string>>>({});\n\n  useEffect(() => {\n    async function fetchWorkExperience() {\n      try {\n        const profile = await getProfile();\n        console.log('Fetched profile:', profile);\n        if (profile && profile.data && profile.data.workExperience) {\n          dispatch(setWorkExperience(profile.data.workExperience));\n        }\n      } catch (error) {\n        // Optionally handle error\n      }\n    }\n    fetchWorkExperience();\n  }, [dispatch]);\n\n  const validateForm = () => {\n    const newErrors: Record<number, Record<string, string>> = {};\n    WorkExperienceDetails.forEach((detail, index) => {\n      const detailErrors: Record<string, string> = {};\n      if (!detail.companyName) {\n        detailErrors.companyName = \"Company Name is required\";\n      }\n      if (!detail.sector) {\n        detailErrors.sector = \"Sector is required\";\n      }\n      if (!detail.designation) {\n        detailErrors.designation = \"Designation is required\";\n      }\n      if (!detail.startDate) {\n        detailErrors.startDate = \"Start Date is required\";\n      }\n      if (workStatus[index] === \"completed\" && !detail.endDate) {\n        detailErrors.endDate = \"End Date is required\";\n      }\n      if (!detail.type) {\n        detailErrors.type = \"Work Type is required\";\n      }\n      if (!detail.docId && !loading) {\n        detailErrors.docId = \"Document upload is required\";\n      }\n      if (Object.keys(detailErrors).length > 0) {\n        newErrors[index] = detailErrors;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"addWork\":\n        setWorkExperienceDetails([\n          ...WorkExperienceDetails,\n          {\n            companyName: \"\",\n            sector: \"\",\n            type: \"\",\n            designation: \"\",\n            startDate: \"\",\n            endDate: \"\",\n            docId: document,\n          },\n        ]);\n        setErrors({ ...errors, [WorkExperienceDetails.length]: {} });\n        break;\n      case \"removeWorkExperience\":\n        const newWorkExperienceDetails = [...WorkExperienceDetails];\n        newWorkExperienceDetails.splice(event.data, 1);\n        // setWorkExperienceDetails(newWorkExperienceDetails);\n        const newErrors = { ...errors };\n        delete newErrors[event.data];\n        setErrors(newErrors);\n        try {\n          let workexperience = {\n            workExperience: newWorkExperienceDetails,\n          };\n          const response = await editProfile(workexperience);\n          if (response) {\n            dispatch(setWorkExperience(response.data.data.workExperience));\n            setWorkExperienceDetails(response.data.data.workExperience?.length > 0 ? response.data.data.workExperience :[\n              {\n                companyName: \"\",\n                sector: \"\",\n                type: \"\",\n                designation: \"\",\n                startDate: \"\",\n                endDate: \"\",\n                docId: document,\n              },\n            ])\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: \"Work experience removed\",\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) { }\n        break;\n      case \"inputChange\":\n        const { name, value } = event.data.e.target;\n        setWorkExperienceDetails((prevDetails) => {\n          const newDetails = [...prevDetails];\n          newDetails[event.data.index] = {\n            ...newDetails[event.data.index],\n            [name]: value,\n          };\n          return newDetails;\n        });\n        setErrors((prevErrors) => {\n          const newErrors = { ...prevErrors };\n          if (newErrors[event.data.index]) {\n            delete newErrors[event.data.index][name];\n            if (Object.keys(newErrors[event.data.index]).length === 0) {\n              delete newErrors[event.data.index];\n            }\n          }\n          return newErrors;\n        });\n        break;\n      case \"inputClick\":\n        inputFile?.current?.click();\n        break;\n      case \"statusChange\":\n        const newWorkStatus = [...workStatus];\n        newWorkStatus[event.data.index] = event.data.e.target.value;\n        setWorkStatus(newWorkStatus);\n        break;\n      case \"submitForm\":\n        if (validateForm()) {\n          setLoad(true)\n          try {\n            let workexperience = {\n              workExperience: WorkExperienceDetails,\n            };\n            const response = await editProfile(workexperience);\n            if (response) {\n              dispatch(setWorkExperience(response.data.data.workExperience));\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"success\",\n                      data: \"Work experience added\",\n                      dimensions: {\n                        width: \"30%\",\n                        height: \"40%\",\n                        show: \"none\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            }\n            setLoad(false)\n          } catch (error) { \n            setLoad(false)\n          }\n        }\n        break;\n      case \"documentUpload\":\n        const file = event.data.e.target.files && event.data.e.target.files[0];\n        if (file && allowedFileTypes.includes(file.type)) {\n          try {\n            if (file !== null && file !== undefined) {\n              setLoading(true);\n              const formData = new FormData();\n              formData.append(\"uploaded_file\", file);\n              formData.append(\"fieldPath\", \"workExperiences\");\n              formData.append(\"fileIdentifier\", `workExperiences${file.name}`);\n              const response = await uploadProfile(formData);\n              if (response.data.success) {\n                dispatch(setDocuments(response.data.data.docs));\n                const lastDoc = response.data.data.docs.workExperiences[response.data.data.docs.workExperiences.length - 1];\n                setdoc(lastDoc);\n                const updatedWorkExperienceDetails = [...WorkExperienceDetails];\n                updatedWorkExperienceDetails[WorkExperienceDetails.length - 1].docId = lastDoc;\n                setWorkExperienceDetails(updatedWorkExperienceDetails);\n                setLoading(false);\n              } else {\n                setLoading(false);\n              }\n            } else {\n              setLoading(false);\n            }\n          } catch (err) {\n            setLoading(false);\n          }\n        } else {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"error\",\n                  data: \"Only jpeg , png , pdf files are accepted\",\n                  dimensions: {\n                    width: \"250px\",\n                    show: \"none\"\n\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        break;\n    }\n  };\n\n  function getTotalWorkExperienceInMonths() {\n    return WorkExperienceDetails.reduce((total, exp, idx) => {\n      if (exp.startDate && (exp.endDate || workStatus[idx] === \"completed\")) {\n        const start = new Date(exp.startDate);\n        const end = exp.endDate\n          ? new Date(exp.endDate)\n          : new Date(); // If ongoing, use current date\n        const months =\n          (end.getFullYear() - start.getFullYear()) * 12 +\n          (end.getMonth() - start.getMonth());\n        return total + (months > 0 ? months : 0);\n      }\n      return total;\n    }, 0);\n  }\n\n  return (\n    <>\n      {formEdit ? (\n        <Box sx={{ overflowY: \"scroll\", px: 3, height: \"75vh\" }}>\n          <Typography fontSize=\"1rem\" gutterBottom color=\"#8E9091\" sx={{ ml: 2, mb: 2, fontWeight: \"500\" }}>Provide details of your most recent or current experience</Typography>\n          {WorkExperienceDetails?.map((WorkExperienceMember, index) => (\n            <div className=\"mb-5\" key={index}>\n              <Grid container spacing={3} sx={{ px: 2 }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Name of Organization\n                  </InputLabel>\n                  <TextField\n                    size=\"small\"\n                    name={`companyName`}\n                    placeholder=\"Name of Organization\"\n                    value={WorkExperienceMember.companyName}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    required\n                    fullWidth\n                    error={!!errors[index]?.companyName}\n                    helperText={errors[index]?.companyName}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Sector\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name={`sector`}\n                    displayEmpty\n                    value={WorkExperienceMember.sector || \"\"}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    IconComponent={ExpandMoreIcon}\n                    required\n                    fullWidth\n                    error={!!errors[index]?.sector}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem sx={{color:\"#495052\"}} disabled value=\"\">\n                      Select a sector\n                    </MenuItem>\n                    {industrySector.map((sector) => (\n                      <MenuItem sx={{color:\"#495052\"}} key={sector.name} value={sector.value}>\n                        {sector.name}\n                      </MenuItem>\n                    ))}\n\n                    {WorkExperienceMember.sector &&\n                      !industrySector.some((sector) => sector.value === WorkExperienceMember.sector) && (\n                        <MenuItem key={WorkExperienceMember.sector} value={WorkExperienceMember.sector}>\n                          {WorkExperienceMember.sector}\n                        </MenuItem>\n                      )\n                    }\n\n                    <MenuItem\n                      sx={{\n                        fontSize: \"14px !important\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        whiteSpace: \"normal\",\n                        color: \"#1cbeb5  !important\",\n                      }}\n                      onClick={() => {\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"customfield\",\n                                data: {\n                                  name: `workExperience[${index}].sector`,\n                                  fieldName: WorkExperienceMember.sector,\n                                  setFieldName: (value: any) => {\n                                    const newWorkExperience = [...WorkExperienceDetails];\n                                    newWorkExperience[index].sector = value;\n                                    setWorkExperienceDetails(newWorkExperience);\n                                  },\n                                  placeholder: \"Enter your sector\",\n                                },\n                                dimensions: {\n                                  width: \"450px\",\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        );\n                      }}\n                    >\n                      Can't find your sector\n                    </MenuItem>\n                  </Select>\n\n\n                  {errors[index]?.sector && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].sector}\n                    </Box>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Type of Work\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name={`type`}\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={WorkExperienceMember.type}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    IconComponent={ExpandMoreIcon}\n                    required\n                    fullWidth\n                    error={!!errors[index]?.type}\n                    MenuProps={MenuProps}\n                  >\n                    <MenuItem  sx={{color:\"#495052\"}} disabled value=\"\">\n                      Select\n                    </MenuItem>\n                    {workTypes.map((type) => (\n                      <MenuItem  sx={{color:\"#495052\"}} key={type.name} value={type.value}>\n                        {type.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  {errors[index]?.type && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].type}\n                    </Box>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Designation\n                  </InputLabel>\n                  <TextField\n                    size=\"small\"\n                    name={`designation`}\n                    placeholder=\"Designation\"\n                    value={WorkExperienceMember.designation}\n                    onChange={(e: any) =>\n                      eventHandler({\n                        name: \"inputChange\",\n                        data: { index, e },\n                      })\n                    }\n                    required\n                    fullWidth\n                    error={!!errors[index]?.designation}\n                    helperText={errors[index]?.designation}\n                  />\n                  \n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Status\n                  </InputLabel>\n                  <FormControl sx={{}}>\n                    <RadioGroup\n                      row\n                      name={`workStatus`}\n                      value={workStatus[index]}\n                      onChange={(e: any) =>\n                        eventHandler({\n                          name: \"statusChange\",\n                          data: { index, e },\n                        })\n                      }\n                    >\n                      <FormControlLabel\n                       sx={{color:\"#495052\"}}\n                        value=\"completed\"\n                        control={<Radio />}\n                        label=\"Completed\"\n                      />\n                      <FormControlLabel\n                       sx={{color:\"#495052\"}}\n                        value=\"ongoing\"\n                        control={<Radio />}\n                        label=\"Ongoing\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Upload Document\n                  </InputLabel>\n                  <Stack\n                    direction=\"row\"\n                    spacing={1}\n                    alignItems=\"center\"\n                    onClick={() =>\n                      inputFile?.current?.click()\n                    }\n                  >\n                    {WorkExperienceMember.docId ? \"\" :\n                      <>\n                        <Button\n                          variant=\"outlined\"\n                          size=\"small\"\n                          component=\"label\"\n                          startIcon={<FileUploadOutlinedIcon />}\n                          sx={{\n                            ...secondaryButton,\n                            fontSize: \"12px\",\n                            textTransform: \"capitalize\",\n                            color:\"#495052\"\n                          }}\n                        >\n                          Upload\n                          <input\n                            type=\"file\"\n                            hidden\n                            onChange={(e: any) =>\n                              eventHandler({\n                                name: \"documentUpload\",\n                                data: { index, e },\n                              })\n                            }\n                          />\n                        </Button>\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#000\",\n                                backgroundColor: \"#fff\",\n                                fontSize: \"14px\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\":\n                                {\n                                  marginTop: \"3px !important\",\n                                },\n                              },\n                            },\n                          }}\n                          title=\"Only jpeg , png , pdf files are accepted\"\n                          placement=\"bottom\"\n                        >\n                          <Info sx={{ color: \"#7d7d7d\", fontSize: \"1rem\", cursor: \"pointer\" }} />\n                        </Tooltip>\n                      </>}\n                    {loading ? (\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Uploading...\n                      </Typography>\n                    ) : (\n                      WorkExperienceMember.docId ?\n                        <Typography variant=\"body2\" color=\"textSecondary\" sx={{ display: \"flex\", gap: \"1rem\", alignItems: \"center\" }} >\n                          {WorkExperienceMember?.docId?.data?.originalname}\n                          <VisibilityOutlinedIcon sx={{ fontSize: \"large\" }} onClick={() => {\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"fileViewer\",\n                                    data: WorkExperienceMember.docId?.data?.preview_url,\n                                    dimensions: {\n                                      width: \"500px\",\n                                      // height: \"35%\",\n                                      // close: \"none\",\n                                      // show: \"none\"\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }} />\n                        </Typography>\n                        : \"\"\n                    )}\n                  </Stack>\n                  {errors[index]?.docId && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].docId}\n                    </Box>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                    Start Date\n                  </InputLabel>\n                  <DatePickerComponent\n                        selectedDate={WorkExperienceMember?.startDate}\n                        onChange={(date: Date | null) =>\n                          eventHandler({\n                            name: \"inputChange\",\n                            data: {\n                              index,\n                              e: {\n                                target: {\n                                  name: \"startDate\",\n                                  value: date ? date.toISOString().slice(0, 10) : \"\",\n                                },\n                              },\n                            },\n                          })\n                        }\n                        maxDate={new Date()}\n                        placeholderText=\"Start Date\"\n                      />\n                      {errors[index]?.startDate && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].startDate}\n                    </Box>\n                  )}\n                </Grid>\n                {workStatus[index] === \"completed\" && (\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel id=\"\" sx={{ color: \"#8E9091\", fontWeight: 500 }}>\n                      End Date\n                    </InputLabel>\n                    <DatePickerComponent\n                        selectedDate={WorkExperienceMember?.endDate}\n                        onChange={(date: Date | null) =>\n                          eventHandler({\n                            name: \"inputChange\",\n                            data: {\n                              index,\n                              e: {\n                                target: {\n                                  name: \"endDate\",\n                                  value: date ? date.toISOString().slice(0, 10) : \"\",\n                                },\n                              },\n                            },\n                          })\n                        }\n                        minDate={\n                          WorkExperienceMember?.startDate\n                            ? new Date(\n                              new Date(WorkExperienceMember?.startDate).getTime() + 10 * 24 * 60 * 60 * 1000\n                            )\n                            : undefined\n                        } \n                        maxDate={new Date()}\n                        placeholderText=\"End Date\"\n                      />\n                      {errors[index]?.endDate && (\n                    <Box sx={{ color: \"error.main\", fontSize: \"0.75rem\", mt: 1 }}>\n                      {errors[index].endDate}\n                    </Box>\n                  )}\n                  </Grid>\n                )}\n\n                {workExperienceData?.data?.length  > 0 && (\n                  <Grid item xs={12} sx={{ mt: 3 }}>\n                    <Box sx={{ display: \"flex\", justifyContent: \"end\" }}>\n                      <img\n                        src={Images.deleteIcon}\n                        alt=\"delete\"\n                        style={{ width: \"1.5rem\",cursor:\"pointer\" }}\n                        onClick={()=>handleDeleteOpen(index)}\n                      />\n                    </Box>\n                  </Grid>\n                )}\n              </Grid>\n            </div>\n          ))}\n          <Box sx={{ mt: 4 }}>\n            <Stack\n              direction=\"row\"\n              sx={{ mt: 5, mb: 1, display: \"flex\", justifyContent: \"end\", mr: 10 }}\n              spacing={2}\n            >\n              {workExperienceData?.data?.length  > 0 && \n              <Button\n                variant=\"outlined\"\n                sx={{\n                  ...secondaryButton,\n                  textTransform: \"capitalize\",\n                  // fontSize: \"12px\",\n                }}\n                onClick={() =>\n                  eventHandler({\n                    name: \"addWork\",\n                    data: {},\n                  })\n                }\n              >\n                Add Previous\n              </Button>}\n            \n              <CustomButton\n                // label=\"Submit\"\n                // variant=\"contained\"\n                width=\"100px\"\n                handleSubmit={() =>\n                  eventHandler({\n                    name: \"submitForm\",\n                    data: {},\n                  })\n                }\n              >\n                  {load ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"4px\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n              </CustomButton>\n            </Stack>\n          </Box>\n          <ConfirmDialog\n            open={open}\n            handleClose={() => setOpen(false)}\n            additionalData={{\n              onSubmit: () => eventHandler({\n                  name: \"removeWorkExperience\",\n                  data: deleteItem,\n                }),\n              title: \"Are you sure you want to delete ?\",\n              content:\n                \"\",\n            }}\n          />\n        </Box>\n      ) : (\n        <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3, mb: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n              <Typography variant=\"h6\" sx={{ fontWeight: 600,color:\"#8E9091\" }}>\n                Work Experience\n              </Typography>\n              <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={() => setFormEdit(true)}>\n                Edit\n              </Button>\n            </Grid>\n            {WorkExperienceDetails && WorkExperienceDetails.length > 0 ? (\n              <>\n                <Grid item xs={12}>\n                  <Typography sx={{ color: 'grey', fontWeight: 500 }}>\n                    Total Work Experience in months: {getTotalWorkExperienceInMonths() > 0 ? getTotalWorkExperienceInMonths() : 'NA'}\n                  </Typography>\n                </Grid>\n                {/* Table Header */}\n                <Grid item xs={12}>\n                  <Grid container sx={{ fontWeight: 600, background: '#f5f5f5', borderRadius: 1, py: 1 }}>\n                    <Grid item xs={12} sm={3} md={2}><Typography sx={{color:\"#8E9091\"}}>Name of Organization</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Sector</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Type of Work</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Designation</Typography></Grid>\n                    <Grid item xs={12} sm={1} md={1}><Typography sx={{color:\"#8E9091\"}}>Status</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Start Date</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>End Date</Typography></Grid>\n                    <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#8E9091\"}}>Document</Typography></Grid>\n                  </Grid>\n                </Grid>\n                {/* Table Rows */}\n                {WorkExperienceDetails.map((exp, idx) => (\n                  <Grid item xs={12} key={idx}>\n                    <Grid container sx={{ py: 1, borderBottom: idx < WorkExperienceDetails.length - 1 ? '1px solid #eee' : 'none' }}>\n                      <Grid item xs={12} sm={3} md={2}><Typography sx={{color:\"#495052\"}}>{exp.companyName || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.sector || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.type || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.designation || 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={1} md={1}><Typography sx={{color:\"#495052\"}}>{exp.endDate ? 'Completed' : 'Ongoing'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.startDate ? exp.startDate.split('T')[0] : 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.endDate ? exp.endDate.split('T')[0] : 'NA'}</Typography></Grid>\n                      <Grid item xs={12} sm={2} md={1.5}><Typography sx={{color:\"#495052\"}}>{exp.docId?.data?.originalname || 'NA'}</Typography></Grid>\n                    </Grid>\n                  </Grid>\n                ))}\n              </>\n            ) : (\n              <Grid item xs={12}><Typography>No work experience added.</Typography></Grid>\n            )}\n          </Grid>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default WorkExperiences;\n","import {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControl,\n  FormControlLabel,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { ErrorMessage, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\n// import { DestinationTypeEnum } from \"../../../../assets/enums\";\nimport CustomField from \"../../../../genericComponents/customTextfield\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { Country, } from \"country-state-city\";\nimport { Event } from \"../../../../types/types\";\nimport { editProfile, sendSms, verifyEmailPhone } from \"../../../../services\";\nimport { setSharedInfo } from \"../../../../store/Slices/sharedInfoSlice\";\nimport { setPersonalInfo } from \"../../../../store/Slices/personalInfoSlice\";\nimport VerifiedIcon from '@mui/icons-material/Verified';\nimport Images from \"../../../../assets/index\";\nimport { CustomButton } from \"../../../../genericComponents/customButton\";\nimport * as Yup from 'yup';\nimport { nationalities } from \"../../../../assets/menu\";\nimport ReusableDropdown from \"src/genericComponents/reusableSelect\";\nimport { secondaryButton } from \"src/components/styles/customStyles\";\nimport DatePickerComponent from \"src/genericComponents/datePicker\";\n\ninterface ICountry {\n  name: string;\n  isoCode: string;\n}\n\nconst PersonalDetails = () => {\n  const dispatch = useAppDispatch();\n  const verification = useAppSelector((state) => state.verification);\n  const phoneStatus = verification.data?.phoneLoginOtp.verified;\n  const emailStatus = verification.data?.emailLoginOtp?.verified;\n  const personalInfo = useAppSelector((state) => state.personalInfo);\n  const sharedInfo = useAppSelector((state) => state.sharedInfo);\n  const [refused, setRefused] = useState(personalInfo?.data?.visaRejectedDetails !== undefined ? \"yes\" : \"no\");\n  const [loading, setLoading] = useState(false);\n  const [load, setLoad] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [countries, setCountries] = useState<ICountry[]>([]);\n  const [formEdit,setFormEdit]=useState(false)\n  \n  \n  useEffect(() => {\n    const fetchCountries = async () => {\n      const allCountries = await Country.getAllCountries();\n      setCountries(allCountries);\n    };\n    fetchCountries();\n  }, []);\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"verifyPhone\":\n        setLoad(true);\n        const response = await sendSms({});\n        if (response) {\n          setLoad(false);\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"phoneverification\",\n                  data: response.data.message,\n                  dimensions: {\n                    width: \"400px\",\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        } else {\n          setLoad(false);\n        }\n        break;\n      case \"verifyemail\":\n        setLoading(true);\n        if (event.data) {\n          const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n          if (!emailRegex.test(event.data)) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: \"Please enter a valid email address.\",\n                    dimensions: {\n                      width: \"400px\",\n                      show:\"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n            setLoading(false);\n            return; \n          }\n          try {\n            const response = await verifyEmailPhone({ email: event.data });\n            if (response) {\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"verifyEmail\",\n                      data: event.data,\n                      dimensions: {\n                        width: \"500px\",\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n              setLoading(false);\n            } else {\n              console.log(\"Verification failed:\", response);\n            }\n          } catch (err:any) {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: err.response.data.message,\n                    dimensions: {\n                      width: \"500px\",\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          } finally {\n            setLoading(false);\n          }\n        }else{\n          setLoading(false);\n        }\n        break;\n        default:\n          break;\n    }\n \n\n  };\n\n  // eslint-disable-next-line \n  const validationSchema = Yup.object({\n    firstName: Yup.string()\n      .max(50, \"First name cannot exceed 50 characters\")\n      .required('First name is required'),\n    lastName: Yup.string()\n      .max(50, \"Last name cannot exceed 50 characters\")\n      .required('Last name is required'),\n    email: Yup.string()\n      .matches(\n        /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n        \"Enter a valid Email Id\"\n      )\n      .required(\"Enter Email ID\")\n      .max(40, \"Email ID must be at most 40 characters\"),\n    personalDetails: Yup.object({\n      DOB: Yup.date().required('Date of birth is required'),\n      Gender: Yup.string().required('Gender is required'),\n      nationality: Yup.string().required('Nationality is required'),\n      countyOfBirth: Yup.string().required('County of birth is required'),\n      maritalStatus: Yup.string().required('Marital status is required'),\n\n    }),\n  });\n\n  const initialValues = {\n    firstName: sharedInfo?.data?.firstName,\n    lastName: sharedInfo?.data?.lastName,\n    email: sharedInfo?.data?.email,\n    personalDetails: {\n      DOB: personalInfo?.data?.DOB,\n      Gender: personalInfo?.data?.Gender,\n      nationality: personalInfo?.data?.nationality,\n      countyOfBirth: personalInfo?.data?.countyOfBirth,\n      maritalStatus: personalInfo?.data?.maritalStatus,\n      validPassport: personalInfo?.data?.validPassport,\n      validPermit: personalInfo?.data?.validPermit,\n      visaRejectedDetails: personalInfo?.data?.visaRejectedDetails,\n    },\n  };\n\n\n  const submit = async (values: any) => {\n    try {\n      setLoader(true);\n      const response = await editProfile({\n        ...values,\n        personalDetails: {\n          ...values.personalDetails,\n          temporaryAddress: personalInfo?.data?.temporaryAddress,\n          permanentAddress: personalInfo?.data?.permanentAddress,\n        },\n      });\n      if (response.data.success) {\n        const sharedProfile = {\n          _id: response.data?.data?._id,\n          firstName: response.data?.data?.firstName,\n          lastName: response.data?.data?.lastName,\n          displayPicSrc: response.data?.data?.displayPicSrc,\n          email: response.data?.data?.email,\n          phone: response.data?.data?.phone,\n          LeadSource: response.data?.data?.LeadSource,\n          isPlanningToTakeAcademicTest:\n            response.data?.data?.isPlanningToTakeAcademicTest,\n          isPlanningToTakeLanguageTest:\n            response.data?.data?.isPlanningToTakeLanguageTest,\n        };\n        const personalInfo = {\n          DOB: response.data?.data?.personalDetails.DOB,\n          Gender: response.data?.data?.personalDetails.Gender, // enum\n          temporaryAddress:\n            response.data?.data?.personalDetails.temporaryAddress,\n          permanentAddress:\n            response.data?.data?.personalDetails.permanentAddress,\n          nationality: response.data?.data?.personalDetails.nationality, // enum\n          countyOfBirth: response.data?.data?.personalDetails.countyOfBirth, // enum\n          maritalStatus: response.data?.data?.personalDetails.maritalStatus, // enum\n          validPassport: response.data?.data?.personalDetails.validPassport, // enum yes no and processing\n          validPermit: response.data?.data?.personalDetails.validPermit, // enum yes no and processing,\n          visaRejectedDetails:\n            response.data?.data?.personalDetails.visaRejectedDetails,\n        };\n        dispatch(\n          setSharedInfo({\n            ...sharedProfile,\n          })\n        );\n        dispatch(\n          setPersonalInfo({\n            ...personalInfo,\n          })\n        );\n        dispatch(\n          setPopup({\n            show: true,\n            data: {\n              container: {\n                name: \"success\",\n                data: \"Profile updated successfully\",\n                dimensions: {\n                  width: \"30%\",\n                  height: \"40%\",\n                  show: \"none\"\n\n                },\n              },\n              type: \"custom\",\n            },\n          })\n        );\n        setLoader(false);\n        setFormEdit(false);\n      } else {\n        setLoader(false);\n      }\n    } catch (error) { }\n  };\n  const getMaxDate = () => {\n    const today = new Date();\n    return new Date(\n      today.getFullYear() - 12,\n      today.getMonth(),\n      today.getDate()\n    ); \n  };\n  const editHandler=()=>{\n    setFormEdit(true)\n  }\n\n  return (\n    <>\n      {formEdit ? (\n        <div >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        enableReinitialize={true}\n        onSubmit={(values: any) => submit(values)}\n      >\n        {({ touched, errors, values, handleChange, setFieldValue }) => {\n          return (\n            <Form style={{}}>\n              <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\" }}>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    First Name{\" \"}\n                  </InputLabel>\n                  <CustomField\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    fullWidth\n                    maxLength={50}\n                    onkeydown={(e:any) => {\n                      if (values?.firstName && values?.firstName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    error={touched.firstName && Boolean(errors.firstName)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"firstName\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Last Name{\" \"}\n                  </InputLabel>\n\n                  <CustomField\n                    id=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    fullWidth\n                    maxLength={50}\n                    onkeydown={(e:any) => {\n                      if (values?.lastName && values?.lastName?.length >= 50 && e.key !== 'Backspace' && e.key !== 'Delete') {\n                        e.preventDefault();\n                      }\n                    }}\n                    error={touched.lastName && Boolean(errors.lastName)}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"lastName\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Email{\" \"}\n                  </InputLabel>\n\n                  <Box sx={{ display: \"flex\" }}>\n                    {emailStatus ? (\n                      <Typography\n                        sx={{\n                          border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                          p: 1,\n                          borderRadius: \"5px\",\n                          width: \"100%\",\n                        }}\n                      >\n                        {sharedInfo?.data?.email}\n                      </Typography>\n                    ) : (\n                      <>\n                        <CustomField\n                          id=\"lastName\"\n                          type=\"email\"\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          value={values.email}\n                          onChange={handleChange}\n                          fullWidth\n                          // disabled\n                          error={touched.email && Boolean(errors.email)}\n                        />\n                       \n                      </>\n                    )}\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        width: \"20%\",\n                      }}\n                    >\n                      {emailStatus && sharedInfo?.data?.email ? (\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#514E6A\",\n                                backgroundColor: \"#ffff\",\n                                boxShadow: 2,\n                                cursor: \"pointer\",\n                              },\n                            },\n                          }}\n                          title={\"Verified\"}\n                          placement=\"right\"\n                        >\n                          <VerifiedIcon\n                            sx={{\n                              fontSize: { xs: \"1.2rem\" },\n                              color: \"green\",\n                              marginLeft: \"-8px\",\n                              cursor: \"pointer\"\n                            }}\n                          />\n                        </Tooltip>\n                      ) : values.email && !emailStatus  ? (\n                        <Button\n                          sx={[secondaryButton, { width: \"75px\" }]}\n                          onClick={() =>\n                            eventHandler({\n                              name: \"verifyemail\",\n                              data: values.email,\n                            })\n                          }\n                        >\n                          {loading ? (\n                            <img\n                              src={Images.standardLoader}\n                              alt=\"load\"\n                              style={{ width: \"1rem\" }}\n                            />\n                          ) : (\n                            \"Verify\"\n                          )}\n                        </Button>\n                      ):\"\"}\n                    </Box>\n                  </Box>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                          <ErrorMessage name=\"email\" component=\"div\" />\n                        </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  {sharedInfo?.data?.phone &&\n                    (sharedInfo.data.phone.number || Object.keys(sharedInfo.data.phone).length > 0) ? (\n                    <>\n                      <InputLabel\n                        id=\"firstName\"\n                        sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                      >\n                        Contact number\n                      </InputLabel>\n                      <Box sx={{ display: \"flex\" }}>\n                        <Typography\n                          sx={{\n                            border: \"1px solid rgba(0, 0, 0, 0.23)\",\n                            p: 1,\n                            borderRadius: \"5px\",\n                            width: \"100%\",\n                          }}\n                          onClick={() =>\n                            dispatch(\n                              setPopup({\n                                show: true,\n                                data: {\n                                  container: {\n                                    name: \"phonenumber\",\n                                    dimensions: {\n                                      width: \"400px\",\n                                      // height: \"35%\",\n                                      // close: \"none\",\n                                      show: \"none\"\n                                    },\n                                  },\n                                  type: \"custom\",\n                                },\n                              })\n                            )\n                          }\n                        >\n                          {sharedInfo?.data?.phone?.countryCode}{\" \"}\n                          {sharedInfo?.data?.phone?.number}\n                        </Typography>\n                        <Box\n                          sx={{\n                            width: \"20%\",\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          {phoneStatus ? (\n                            <Tooltip\n                              slotProps={{\n                                tooltip: {\n                                  sx: {\n                                    color: \"#514E6A\",\n                                    backgroundColor: \"#ffff\",\n                                    boxShadow: 2,\n                                    cursor: \"pointer\",\n                                  },\n                                },\n                              }}\n                              title={\"Verified\"}\n                              placement=\"right\"\n                            >\n                              <VerifiedIcon\n                                sx={{\n                                  fontSize: { xs: \"1.2rem\" },\n                                  color: \"green\",\n                                  marginLeft: \"-8px\",\n                                  cursor: \"pointer\"\n                                }}\n                              />\n                            </Tooltip>\n                          ) : (\n                            <Button\n                              sx={[secondaryButton, { width: \"75px\" }]}\n                              onClick={() =>\n                                dispatch(\n                                  setPopup({\n                                    show: true,\n                                    data: {\n                                      container: {\n                                        name: \"phonenumber\",\n                                        dimensions: {\n                                          width: \"400px\",\n                                          // height: \"35%\",\n                                          // close: \"none\",\n                                          show: \"none\"\n                                        },\n                                      },\n                                      type: \"custom\",\n                                    },\n                                  })\n                                )\n                              }\n                            >\n                              {load ? (\n                                <img\n                                  src={Images.standardLoader}\n                                  alt=\"load\"\n                                  style={{ width: \"1rem\" }}\n                                />\n                              ) : (\n                                \"Verify\"\n                              )}\n                            </Button>\n                          )}\n                        </Box>\n                      </Box>\n                    </>\n                  ) : (\n                    <Button\n                      sx={{ textTransform: \"none\", fontSize: \"1rem\" }}\n                      onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"phonenumber\",\n                                dimensions: {\n                                  width: \"400px\",\n                                  // height: \"35%\",\n                                  // close: \"none\",\n                                  show: \"none\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }\n                    >\n                      + Add contact number\n                    </Button>\n                  )}\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Gender\n                  </InputLabel>\n\n                  <Select\n                    id=\"Country\"\n                    size=\"small\"\n                    name=\"personalDetails.Gender\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={values.personalDetails.Gender}\n                    onChange={handleChange}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                        error={Boolean((touched.personalDetails as any)?.Gender && (errors.personalDetails as any)?.Gender)}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Gender\n                    </MenuItem>\n\n                    {[\"Male\",\"Female\",\"Non-Binary\",\"Prefer Not to Say\"].map((name) => (\n                      <MenuItem\n                        key={name}\n                        value={name}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.Gender\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Date of Birth\n                  </InputLabel>\n                  <DatePickerComponent\n                    selectedDate={values.personalDetails.DOB}\n                    onChange={(date) =>\n                      setFieldValue(\"personalDetails.DOB\", date?.toISOString().slice(0, 10))\n                    }\n                    maxDate={getMaxDate()}\n                    placeholderText=\"Date of Birth\"\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.DOB\" component=\"div\" />\n                  </div>\n\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Nationality\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Nationality\"\n                    name=\"personalDetails.nationality\"\n                    options={nationalities}\n                    value={values.personalDetails.nationality}\n                    // onChange={handleChange}\n                    onChange={(e:any) =>\n                      setFieldValue(\"personalDetails.nationality\", e.target.value)\n                    }\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.nationality\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Country of Birth\n                  </InputLabel>\n                  <ReusableDropdown\n                    label=\"Country\"\n                    name=\"personalDetails.countyOfBirth\"\n                    options={countries.map(country => country.name)}\n                    value={values.personalDetails.countyOfBirth}\n                    onChange={handleChange}\n                    placeholder=\"Select\"\n                    searchEnabled={true}\n                  />\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.countyOfBirth\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Marital status\n                  </InputLabel>\n                  <FormControl>\n                    <RadioGroup\n                      aria-label=\"radio-group\"\n                      name=\"personalDetails.maritalStatus\"\n                      value={values.personalDetails.maritalStatus}\n                      sx={{ display: \"flex\", flexDirection: \"row\" }}\n                      onChange={(e:any) =>\n                        setFieldValue(\"personalDetails.maritalStatus\", e.target.value)\n                      }\n                    >\n                      {[\"Married\", \"Single\", \"Widowed\", \"Seperated\"].map(\n                        (option) => (\n                          <FormControlLabel\n                            key={option}\n                            value={option}\n                            control={\n                              <Radio\n                                sx={{\n                                  \"&.Mui-checked.Mui-disabled\": {\n                                    color: \"#14C6A4\",\n                                  },\n                                }}\n                              />\n                            }\n                            label={option}\n                          />\n                        )\n                      )}\n                    </RadioGroup>\n                  </FormControl>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.maritalStatus\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"firstName\"\n                    sx={{ fontWeight: \"500\", color: '#8E9091', mb: 1 }}\n                  >\n                    Do you have valid passport ?\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"personalDetails.validPassport\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={values.personalDetails.validPassport}\n                    onChange={handleChange}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                        error={Boolean((touched.personalDetails as any)?.validPassport && (errors.personalDetails as any)?.validPassport)}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Do you have a valid passport\n                    </MenuItem>\n\n                    {[\n                      { name: \"Yes\", value: \"yes\" },\n                      { name: \"No\", value: \"no\" },\n                      { name: \"Processing\", value: \"processing\" },\n                    ].map((name: any) => (\n                      <MenuItem\n                        key={name}\n                        value={name.value}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {name.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                    <ErrorMessage name=\"personalDetails.validPassport\" component=\"div\" />\n                  </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <InputLabel\n                    id=\"refusedLabel\"\n                    sx={{\n                      fontWeight: \"500\",\n                      color: \"#000\",\n                      mb: 1,\n                      whiteSpace: \"normal\",\n                    }}\n                  >\n                    Have you ever been refused a visa from any country?\n                  </InputLabel>\n                  <Select\n                    size=\"small\"\n                    id=\"Country\"\n                    name=\"refusal\"\n                    displayEmpty\n                    defaultValue=\"\"\n                    value={\n                      refused === \"no\" && values.personalDetails.visaRejectedDetails\n                        ? \"yes\" // Force \"Yes\" if visaRejectedDetails is present\n                        : refused\n                    }\n                    onChange={(e) => {\n                      const newValue = e.target.value;\n                      console.log('newValue',newValue)\n                      setRefused(newValue);\n\n                      // If 'No' is selected, clear the visaRejectedDetails\n                      if (newValue === \"no\") {\n                        handleChange({ target: { name: \"personalDetails.visaRejectedDetails\", value: \"\" } });\n                      }\n                    }}\n                    fullWidth\n                    IconComponent={ExpandMoreIcon}\n                  >\n                    <MenuItem\n                      disabled\n                      value=\"\"\n                      sx={{\n                        \"& .MuiTypography-root\": {\n                          fontSize: \"14px !important\",\n                        },\n                      }}\n                    >\n                      Select\n                    </MenuItem>\n\n                    {[\n                      { name: \"Yes\", value: \"yes\" },\n                      { name: \"No\", value: \"no\" },\n                    ].map((option) => (\n                      <MenuItem\n                        key={option.value}\n                        value={option.value}\n                        sx={{\n                          \"& .MuiTypography-root\": {\n                            fontSize: \"14px !important\",\n                          },\n                          \"& .MuiSvgIcon-root \": {\n                            fontSize: \"1rem\",\n                          },\n                          whiteSpace: \"normal\",\n                        }}\n                      >\n                        {option.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </Grid>\n\n                {(refused === \"yes\" || values.personalDetails.visaRejectedDetails) && (\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel\n                      id=\"visaRejectedDetailsLabel\"\n                      sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}\n                    >\n                      Reason for visa rejection\n                    </InputLabel>\n                    <TextField\n                      variant=\"outlined\"\n                      size=\"small\"\n                      type=\"text\"\n                      id=\"visaRejectedDetails\"\n                      multiline\n                      fullWidth\n                      rows={3}\n                      placeholder=\"Reason for visa rejection\"\n                      onChange={handleChange}\n                      name=\"personalDetails.visaRejectedDetails\"\n                      value={values.personalDetails.visaRejectedDetails}\n                    />\n                  </Grid>\n                )}\n              </Grid>\n              <Box\n                      sx={{ display: \"flex\", justifyContent: \"end\", pb:2, mr: 10,mt:3 }}\n                >\n                  <CustomButton\n                    width=\"100px\"\n                    handleSubmit={() => submit}\n                  >\n                    {loader ? (\n                      <img\n                        src={Images.standardLoader}\n                        alt=\"load\"\n                        style={{ width: \"1rem\",height:\"1rem\",padding:\"6px\" }}\n                      />\n                    ) : (\n                      \"Save\"\n                    )}\n                  </CustomButton>\n                </Box>\n            </Form>\n          );\n        }}\n      </Formik>\n              </div>\n      ) : (\n        <Card sx={{ boxShadow: 2, borderRadius: 3 }}>\n          <CardContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  {/* Avatar if available */}\n                  {sharedInfo?.data?.displayPicSrc && (\n                    <img\n                      src={sharedInfo.data.displayPicSrc}\n                      alt=\"profile\"\n                      style={{ width: 48, height: 48, borderRadius: '50%', marginRight: 16 }}\n                    />\n                  )}\n                  <Box>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600 }}>\n                      {sharedInfo?.data?.firstName || 'NA'} {sharedInfo?.data?.lastName || 'NA'}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {sharedInfo?.data?.email || 'NA'}\n                    </Typography>\n                </Box>\n              </Box>\n                <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={editHandler}>\n                  Edit\n                </Button>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>First name</Typography>\n                <Typography sx={{color:\"#495052\"}}>{sharedInfo?.data?.firstName || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Email ID</Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Typography sx={{color:\"#495052\"}}>{sharedInfo?.data?.email || 'NA'}</Typography>\n                  {emailStatus && sharedInfo?.data?.email && (\n                    <>\n                      <VerifiedIcon sx={{ color: 'green', fontSize: 18, ml: 1 }} />\n                      <Typography sx={{ color: 'green', fontSize: 13, ml: 0.5 }}>Verified</Typography>\n                    </>\n                  )}\n                </Box>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Gender</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.Gender || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Nationality</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.nationality || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Marital status</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.maritalStatus || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Have you ever been refused a visa from any country</Typography>\n                <Typography sx={{color:\"#495052\"}}>\n                  {personalInfo?.data?.visaRejectedDetails === undefined\n                    ? 'NA'\n                    : personalInfo?.data?.visaRejectedDetails === ''\n                      ? 'No'\n                      : 'Yes'}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>Last name</Typography>\n                <Typography sx={{color:\"#495052\"}}>{sharedInfo?.data?.lastName || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Contact number</Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <Typography sx={{color:\"#495052\"}}>\n                    {sharedInfo?.data?.phone?.countryCode ? `${sharedInfo.data.phone.countryCode} ` : ''}\n                    {sharedInfo?.data?.phone?.number || 'NA'}\n              </Typography >\n                  {phoneStatus && sharedInfo?.data?.phone && (\n                    <>\n                      <VerifiedIcon sx={{ color: 'green', fontSize: 18, ml: 1 }} />\n                      <Typography sx={{ color: 'green', fontSize: 13, ml: 0.5 }}>Verified</Typography>\n                    </>\n                  )}\n                </Box>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Date of birth</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.DOB ? personalInfo.data.DOB.split('T')[0] : 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country of birth</Typography>\n                <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.countyOfBirth || 'NA'}</Typography>\n                <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Do you have valid passport</Typography>\n                <Typography sx={{color:\"#495052\"}}>{\n                  personalInfo?.data?.validPassport === \"yes\"\n                    ? \"Yes\"\n                    : personalInfo?.data?.validPassport === \"no\"\n                    ? \"No\"\n                    : personalInfo?.data?.validPassport === \"processing\"\n                    ? \"Processing\"\n                    : 'NA'\n                }</Typography>\n            </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default PersonalDetails;\n","import {\n    Box,\n    Button,\n    FormControl,\n    FormControlLabel,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    ListSubheader,\n    MenuItem,\n    Radio,\n    RadioGroup,\n    Select,\n    TextField,\n    Typography,\n  } from \"@mui/material\";\n  import { ErrorMessage, Form, Formik } from \"formik\";\n  import React, { useEffect, useMemo, useState } from \"react\";\n  // import { DestinationTypeEnum } from \"../../../../assets/enums\";\n  import CustomField from \"../../../../genericComponents/customTextfield\";\n  import ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\n  import { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\n  import { setPopup } from \"../../../../store/Slices/popupSlice\";\n  import { Country, State, City } from \"country-state-city\";\n  import type { Event } from \"../../../../types/types\";\n  import { editProfile } from \"../../../../services\";\n  import { setPersonalInfo } from \"../../../../store/Slices/personalInfoSlice\";\n  import Images from \"../../../../assets/index\";\n  import * as Yup from 'yup';\n  import ReusableDropdown from \"src/genericComponents/reusableSelect\";\n  // import CityDropdown from \"./reuseDropdowns\";\n  import SearchIcon from \"@mui/icons-material/Search\";\nimport { CustomButton } from \"src/genericComponents/customButton\";\nimport { globalButton } from \"../../../../components/styles/customStyles\";\n\n  \n  interface ICountry {\n    name: string;\n    isoCode: string;\n  }\n  interface IState {\n    name: string;\n    isoCode: string;\n    countryCode: string;\n  }\n  interface ICity {\n    name: string;\n    stateCode: string;\n    countryCode: string;\n  }\n  const Address = () => {\n    const dispatch = useAppDispatch();\n    const personalInfo = useAppSelector((state) => state.personalInfo);\n    const [permanent, setPermanent] = useState(\"\");\n    const [loader, setLoader] = useState(false);\n    const [countries, setCountries] = useState<ICountry[]>([]);\n    const [states, setStates] = useState<IState[]>([]);\n    const [cities, setCities] = useState<ICity[]>([]);\n    const [permanentstates, setpermanentstates] = useState<IState[]>([]);\n    const [permanentcities, setpermanentCities] = useState<ICity[]>([]);\n    const [selectedCountry, setSelectedCountry] = useState<any>(\n      personalInfo?.data?.temporaryAddress?.country\n    );\n    const [selectedState, setSelectedState] = useState<any>(\n      personalInfo?.data?.temporaryAddress?.state\n    );\n    const [selectedCity, setSelectedCity] = useState<any>(\n      personalInfo?.data?.temporaryAddress?.city\n    );\n    const [permanentCountry, setPermanentCountry] = useState<any>(\n      personalInfo?.data?.permanentAddress?.country\n    );\n    const [permanentState, setpermanentState] = useState<any>(\n      personalInfo?.data?.permanentAddress?.state\n    );\n    const [permanentCity, setpermanentCity] = useState<any>(\n      personalInfo?.data?.permanentAddress?.city\n    );\n    const ITEM_HEIGHT = 78;\n    const ITEM_PADDING_TOP = 8;\n    const MenuProps = {\n      PaperProps: {\n        style: {\n          maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n          width: 220,\n        },\n      },\n    };\n    const countryInfo = countries.find((c: any) => c.name === selectedCountry);\n    const stateInfo = states.find((s: any) => s.name === selectedState);\n    const countryPInfo = countries.find((c: any) => c.name === permanentCountry);\n    const stateInPfo = states.find((s: any) => s.name === permanentState);\n    useEffect(() => {\n      const fetchCountries = async () => {\n        const allCountries = await Country.getAllCountries();\n        setCountries(allCountries);\n      };\n  \n      fetchCountries();\n    }, []);\n  \n    useEffect(() => {\n      const fetchStateAndCities = async () => {\n        const statesOfCountry = await State.getStatesOfCountry(\n          countryInfo?.isoCode\n        );\n        setStates(statesOfCountry);\n  \n        const citiesOfState = await City.getCitiesOfState(\n          stateInfo?.countryCode ?? \"\",\n          stateInfo?.isoCode ?? \"\"\n        );\n        setCities(citiesOfState);\n      };\n      fetchStateAndCities();\n    }, [countryInfo, stateInfo]);\n  \n    useEffect(() => {\n      const fetchStateAndCities = async () => {\n        const statesOfCountry = await State.getStatesOfCountry(\n          countryPInfo?.isoCode\n        );\n        setpermanentstates(statesOfCountry);\n  \n        const citiesOfState = await City.getCitiesOfState(\n          stateInPfo?.countryCode ?? \"\",\n          stateInPfo?.isoCode ?? \"\"\n        );\n        setpermanentCities(citiesOfState);\n      };\n      fetchStateAndCities();\n    }, [countryPInfo, stateInPfo]);\n  \n    useEffect(() => {\n      if (personalInfo?.data) {\n        setSelectedCountry(personalInfo?.data?.temporaryAddress?.country);\n        setSelectedState(personalInfo?.data?.temporaryAddress?.state);\n        setSelectedCity(personalInfo?.data?.temporaryAddress?.city);\n  \n        setPermanentCountry(personalInfo?.data?.permanentAddress?.country);\n        setpermanentState(personalInfo?.data?.permanentAddress?.state);\n        setpermanentCity(personalInfo?.data?.permanentAddress?.city);\n      }\n    }, [personalInfo]);\n  \n    const eventHandler = async (event: Event) => {\n      switch (event.name) {\n        case \"temporaryCountry\":\n          setSelectedCountry(event.data);\n          setSelectedState('');\n          setSelectedCity('');\n          setCities([]);\n  \n          const countryInfo = countries.find((c: any) => c.name === event.data);\n          if (countryInfo) {\n            const statesOfCountry = await State.getStatesOfCountry(countryInfo.isoCode);\n            setStates(statesOfCountry);\n          }\n          break;\n  \n        case \"temporaryState\":\n          setSelectedCity('');\n          setSelectedState(event.data);\n          const stateInfo = states.find((s: any) => s.name === event.data);\n          if (stateInfo) {\n            const citiesOfState = await City.getCitiesOfState(stateInfo.countryCode, stateInfo.isoCode);\n            setCities(citiesOfState);\n          }\n          break;\n  \n        case \"temporaryCity\":\n          setSelectedCity(event.data);\n          break;\n        case \"permanentCountry\":\n          setPermanentCountry(event.data);\n          setpermanentState(\"\");\n          setpermanentCity('');\n          setpermanentCities([]);\n          const countryPInfo = countries.find((c: any) => c.name === event.data);\n          if (countryPInfo) {\n            const statesOfCountry = await State.getStatesOfCountry(\n              countryPInfo.isoCode\n            );\n            setpermanentstates(statesOfCountry);\n          }\n          break;\n        case \"permanentState\":\n          setpermanentCity('');\n          setpermanentState(event.data);\n          const statePInfo = permanentstates.find((s: any) => s.name === event.data);\n          if (statePInfo) {\n            const citiesOfState = await City.getCitiesOfState(\n              statePInfo?.countryCode,\n              statePInfo?.isoCode\n            );\n            setpermanentCities(citiesOfState);\n          }\n          break;\n        case \"permanentCity\":\n          setpermanentCity(event.data);\n          break;\n          default:\n            break;\n      }\n   \n  \n    };\n  \n    // eslint-disable-next-line \n    const validationSchema = Yup.object({\n      personalDetails: Yup.object({\n        temporaryAddress: Yup.object({\n          city: Yup.string().required('City is required'),\n          state: Yup.string().required('State is required'),\n          pinCode: Yup.string().required('Pincode is required'),\n          country: Yup.string().required('Country is required'),\n          addressLine1: Yup.string().required('Address Line1 is required'),\n        }),\n        permanentAddress: Yup.object().when('permanent', {\n          is: 'no',\n          then: schema => schema.shape({\n            city: Yup.string().required('City is required'),\n            state: Yup.string().required('State is required'),\n            pinCode: Yup.string().required('Pincode is required'), // Changed to string\n            country: Yup.string().required('Country is required'),\n            addressLine1: Yup.string().required('Address Line1 is required'),\n          }),\n        }),\n      }),\n    });\n  \n    const initialValues = {\n      personalDetails: {\n        temporaryAddress: {\n          city: selectedCity,\n          state: selectedState,\n          pinCode: personalInfo?.data?.temporaryAddress?.pinCode,\n          country: selectedCountry,\n          addressLine1: personalInfo?.data?.temporaryAddress?.addressLine1,\n          addressLine2: personalInfo?.data?.temporaryAddress?.addressLine2,\n          addressLine3: personalInfo?.data?.temporaryAddress?.addressLine3,\n        },\n        permanentAddress: {\n          city: permanentCity,\n          state: permanentState,\n          pinCode: personalInfo?.data?.permanentAddress?.pinCode,\n          country: permanentCountry,\n          addressLine1: personalInfo?.data?.permanentAddress?.addressLine1,\n          addressLine2: personalInfo?.data?.permanentAddress?.addressLine2,\n          addressLine3: personalInfo?.data?.permanentAddress?.addressLine3,\n        },\n      },\n    };\n  \n    function isEmpty(obj: any): boolean {\n      if (obj == null) return true;\n      return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n  \n    useEffect(() => {\n      const tempAddress = initialValues.personalDetails.temporaryAddress;\n      const permAddress = initialValues.personalDetails.permanentAddress;\n      if (isEmpty(personalInfo?.data?.permanentAddress)) {\n        setPermanent(\"\");\n      } else if (\n        tempAddress.city === permAddress.city &&\n        tempAddress.state === permAddress.state &&\n        tempAddress.pinCode === permAddress.pinCode &&\n        tempAddress.country === permAddress.country &&\n        tempAddress.addressLine1 === permAddress.addressLine1 &&\n        tempAddress.addressLine2 === permAddress.addressLine2 &&\n        tempAddress.addressLine3 === permAddress.addressLine3\n      ) {\n        setPermanent(\"yes\");\n      } else {\n        setPermanent(\"no\");\n      }\n      // eslint-disable-next-line\n    }, []);\n  \n    const submit = async (values: any) => {\n      try {\n        setLoader(true);\n        if (permanent === \"yes\") {\n          values.personalDetails.permanentAddress = {\n            ...values.personalDetails.temporaryAddress,\n          };\n        }\n        const response = await editProfile({\n          personalDetails: {\n          ...personalInfo.data,\n          temporaryAddress:\n          values?.personalDetails.temporaryAddress,\n        permanentAddress:\n          values?.personalDetails.permanentAddress,\n        }\n        });\n        if (response.data.success) {\n          dispatch(\n            setPersonalInfo({\n              ...personalInfo.data,\n              temporaryAddress:\n              response.data?.data?.personalDetails.temporaryAddress,\n            permanentAddress:\n              response.data?.data?.personalDetails.permanentAddress,\n            })\n          );\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"success\",\n                  data: \"Address added successfully\",\n                  dimensions: {\n                    width: \"30%\",\n                    height: \"40%\",\n                    show: \"none\"\n  \n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n          setLoader(false);\n        } else {\n          setLoader(false);\n        }\n      } catch (error) { }\n      \n    };\n    const editHandler=()=>{\n      setFormEdit(true)\n    }\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [formEdit,setFormEdit]=useState(false)\n    const [permFormEdit, setPermFormEdit] = useState(false);\n\n    const handleTempEdit = () => {\n      setFormEdit(true);\n    };\n    const handlePermEdit = () => {\n      setPermFormEdit(true);\n    };\n    const handleCancelTemp = () => {\n      setFormEdit(false);\n    };\n    const handleCancelPerm = () => {\n      setPermFormEdit(false);\n    };\n  \n    const filteredCities = useMemo(\n      () =>\n        cities.filter((city) =>\n          city.name.toLowerCase().includes(searchQuery.toLowerCase())\n        ),\n      [cities, searchQuery]\n    );\n    const permfilteredCities = useMemo(\n      () =>\n        permanentcities.filter((city) =>\n          city.name.toLowerCase().includes(searchQuery.toLowerCase())\n        ),\n      [permanentcities, searchQuery]\n    );\n  \n  \n    return (   \n      <>\n        {permFormEdit ? (\n          // Only show permanent address edit form\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            enableReinitialize={true}\n            onSubmit={(values: any) => submit(values)}\n          >\n            {({ touched, errors, values, handleChange, setFieldValue }) => {\n              return (\n                <Form style={{}}>\n                  <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\"  }}>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permAddressLine1\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Address Line 1\n                      </InputLabel>\n                      <CustomField\n                        id=\"permAddressLine1\"\n                        type=\"text\"\n                        placeholder=\"Address Line 1\"\n                        name=\"personalDetails.permanentAddress.addressLine1\"\n                        value={values.personalDetails.permanentAddress.addressLine1}\n                        onChange={(e:any) => setFieldValue(\"personalDetails.permanentAddress.addressLine1\", e.target.value)}\n                        fullWidth\n                        error={Boolean((touched.personalDetails as any)?.permanentAddress?.addressLine1 && (errors.personalDetails as any)?.permanentAddress?.addressLine1)}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.addressLine1\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permAddressLine2\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Address Line 2\n                      </InputLabel>\n                      <CustomField\n                        id=\"permAddressLine2\"\n                        type=\"text\"\n                        placeholder=\"Address Line 2\"\n                        name=\"personalDetails.permanentAddress.addressLine2\"\n                        value={values.personalDetails.permanentAddress.addressLine2}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permAddressLine3\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Address Line 3\n                      </InputLabel>\n                      <CustomField\n                        id=\"permAddressLine3\"\n                        type=\"text\"\n                        placeholder=\"Address Line 3\"\n                        name=\"personalDetails.permanentAddress.addressLine3\"\n                        value={values.personalDetails.permanentAddress.addressLine3}\n                        onChange={handleChange}\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permCountry\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Country\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"Country\"\n                        name=\"personalDetails.permanentAddress.country\"\n                        options={countries.map(country => country.name)}\n                        value={permanentCountry}\n                        onChange={(e: any) => eventHandler({\n                          name: \"permanentCountry\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.country\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permState\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        State/Province\n                      </InputLabel>\n                      <ReusableDropdown\n                        label=\"State\"\n                        name=\"personalDetails.permanentAddress.state\"\n                        options={permanentstates.map(state => state.name)}\n                        value={permanentState}\n                        onChange={(e: any) => eventHandler({\n                          name: \"permanentState\",\n                          data: e?.target.value,\n                        })}\n                        placeholder=\"Select\"\n                        searchEnabled={true}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.state\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permCity\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        City/Town\n                      </InputLabel>\n                      <FormControl fullWidth>\n                        <Select\n                          id=\"permCity\"\n                          name=\"personalDetails.permanentAddress.city\"\n                          value={permanentCity}\n                          displayEmpty\n                          size=\"small\"\n                          defaultValue=\"\"\n                          onChange={(e) => setpermanentCity(e.target.value)}\n                          fullWidth\n                          IconComponent={ExpandMoreIcon}\n                          onClose={() => setSearchQuery(\"\")}\n                          MenuProps={{\n                            PaperProps: {\n                              sx: {\n                                maxHeight: 300,\n                                \"&.MuiPaper-root\": {\n                                  boxShadow: 3,\n                                  borderRadius: \"15px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <ListSubheader>\n                            <TextField\n                              size=\"small\"\n                              autoFocus\n                              placeholder=\"Search City...\"\n                              fullWidth\n                              value={searchQuery}\n                              onChange={(e) => setSearchQuery(e.target.value)}\n                              InputProps={{\n                                startAdornment: (\n                                  <InputAdornment position=\"start\">\n                                    <SearchIcon />\n                                  </InputAdornment>\n                                ),\n                              }}\n                              onKeyDown={(e) => {\n                                if (e.key !== \"Escape\") {\n                                  e.stopPropagation();\n                                }\n                              }}\n                            />\n                          </ListSubheader>\n                          <MenuItem value=\"\" disabled>\n                            Select City\n                          </MenuItem>\n                          {permfilteredCities.length > 0 ? (\n                            permfilteredCities.map((city: any) => (\n                              <MenuItem key={city.name} value={city.name}>\n                                {city.name}\n                              </MenuItem>\n                            ))\n                          ) : (\n                            <MenuItem disabled>No cities available</MenuItem>\n                          )}\n                          {!permanentcities.some((city) => city.name === permanentCity) &&\n                            permanentCity !== undefined && permanentCity !== \"\" && (\n                              <MenuItem key={permanentCity} value={permanentCity}>\n                                {permanentCity}\n                              </MenuItem>\n                            )}\n                          <MenuItem\n                            sx={{\n                              fontSize: \"14px !important\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"normal\",\n                              color: \"#1cbeb5 !important\",\n                            }}\n                            onClick={() => {\n                              dispatch(\n                                setPopup({\n                                  show: true,\n                                  data: {\n                                    container: {\n                                      name: \"customfield\",\n                                      data: {\n                                        name: \"personalDetails.permanentAddress.city\",\n                                        fieldName: permanentCity,\n                                        setFieldName: setpermanentCity,\n                                        placeholder: \"Enter your city\",\n                                      },\n                                      dimensions: {\n                                        width: \"450px\",\n                                      },\n                                    },\n                                    type: \"custom\",\n                                  },\n                                })\n                              );\n                            }}\n                          >\n                            Can't find city\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.city\" component=\"div\" />\n                      </div>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"permPinCode\" sx={{ fontWeight: \"500\", color: \"#000\", mb: 1 }}>\n                        Zipcode\n                      </InputLabel>\n                      <CustomField\n                        id=\"permPinCode\"\n                        type=\"number\"\n                        placeholder=\"Pincode\"\n                        name=\"personalDetails.permanentAddress.pinCode\"\n                        value={values.personalDetails.permanentAddress.pinCode}\n                        onChange={handleChange}\n                        fullWidth\n                        error={Boolean((touched.personalDetails as any)?.permanentAddress?.pinCode && (errors.personalDetails as any)?.permanentAddress?.pinCode)}\n                      />\n                      <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                        <ErrorMessage name=\"personalDetails.permanentAddress.pinCode\" component=\"div\" />\n                      </div>\n                    </Grid>\n                  </Grid>\n                  <Box\n                    sx={{ display: \"flex\", justifyContent: \"end\", pb:2, mr: 10, gap: 2 }}\n                  >\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancelPerm}>Cancel</Button>\n                    <CustomButton\n                      width=\"100px\"\n                      handleSubmit={() => submit}\n                    >\n                      {loader ? (\n                        <img\n                          src={Images.standardLoader}\n                          alt=\"load\"\n                          style={{ width: \"1rem\",height:\"1rem\",padding:\"6px\" }}\n                        />\n                      ) : (\n                        \"Save\"\n                      )}\n                    </CustomButton>\n                  </Box>\n                </Form>\n              );\n            }}\n          </Formik>\n        ) : (\n          <>\n            {/* Temporary address edit or view */}\n            {formEdit ? (\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                enableReinitialize={true}\n                onSubmit={(values: any) => submit(values)}\n              >\n                {({ touched, errors, values, handleChange, setFieldValue }) => {\n                  return (\n                    <Form style={{}}>\n                      <Grid container spacing={4} sx={{ px: { xs: 0.5, lg: 2 }, width: \"100% !important\"  }}>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Address Line 1\n                          </InputLabel>\n                          <CustomField\n                            id=\"addressLine1\"\n                            type=\"text\"\n                            placeholder=\"Address Line 1\"\n                            name=\"personalDetails.temporaryAddress.addressLine1\"\n                            value={values.personalDetails.temporaryAddress.addressLine1}\n                            onChange={(e:any) =>\n                              setFieldValue(\"personalDetails.temporaryAddress.addressLine1\", e.target.value)\n                            }\n                            fullWidth\n                            error={Boolean((touched.personalDetails as any)?.temporaryAddress?.addressLine1 && (errors.personalDetails as any)?.temporaryAddress?.addressLine1)}\n                          />\n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.addressLine1\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Address Line 2\n                          </InputLabel>\n                          <CustomField\n                            id=\"addressLine2\"\n                            type=\"text\"\n                            placeholder=\"Address Line 2\"\n                            name=\"personalDetails.temporaryAddress.addressLine2\"\n                            value={values.personalDetails.temporaryAddress.addressLine2}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Address Line 3\n                          </InputLabel>\n                          <CustomField\n                            id=\"addressLine3\"\n                            type=\"text\"\n                            placeholder=\"Address Line 3\"\n                            name=\"personalDetails.temporaryAddress.addressLine3\"\n                            value={values.personalDetails.temporaryAddress.addressLine3}\n                            onChange={handleChange}\n                            fullWidth\n                          />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Country\n                          </InputLabel>\n                          <ReusableDropdown\n                            label=\"Country\"\n                            name=\"personalDetails.temporaryAddress.country\"\n                            options={countries.map(country => country.name)}\n                            value={selectedCountry}\n                            onChange={(e: any) => eventHandler({\n                              name: \"temporaryCountry\",\n                              data: e?.target.value,\n                            })}\n                            placeholder=\"Select\"\n                            searchEnabled={true}\n                          />\n  \n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.country\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            State/Province\n                          </InputLabel>\n                          <ReusableDropdown\n                            label=\"State\"\n                            name=\"personalDetails.temporaryAddress.state\"\n                            options={states.map(state => state.name)}\n                            value={selectedState}\n                            onChange={(e: any) => eventHandler({\n                              name: \"temporaryState\",\n                              data: e?.target.value,\n                            })}\n                            placeholder=\"Select\"\n                            searchEnabled={true}\n                          />\n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.state\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            City/Town\n                          </InputLabel>\n                          <FormControl fullWidth>\n                            <Select\n                              id=\"city\"\n                              name=\"personalDetails.temporaryAddress.city\"\n                              value={selectedCity}\n                              displayEmpty\n                              size=\"small\"\n                              defaultValue=\"\"\n                              onChange={(e) => setSelectedCity(e.target.value)}\n                              fullWidth\n                              IconComponent={ExpandMoreIcon}\n                              onClose={() => setSearchQuery(\"\")} // Reset search when dropdown closes\n                              MenuProps={{\n                                PaperProps: {\n                                  sx: {\n                                    maxHeight: 300,\n                                    \"&.MuiPaper-root\": {\n                                      boxShadow: 3,\n                                      borderRadius: \"15px !important\",\n                                    },\n                                  },\n                                },\n                              }}\n                            >\n                              <ListSubheader>\n                                <TextField\n                                  size=\"small\"\n                                  autoFocus\n                                  placeholder=\"Search City...\"\n                                  fullWidth\n                                  value={searchQuery}\n                                  onChange={(e) => setSearchQuery(e.target.value)}\n                                  InputProps={{\n                                    startAdornment: (\n                                      <InputAdornment position=\"start\">\n                                        <SearchIcon />\n                                      </InputAdornment>\n                                    ),\n                                  }}\n                                  onKeyDown={(e) => {\n                                    if (e.key !== \"Escape\") {\n                                      e.stopPropagation();\n                                    }\n                                  }}\n                                />\n                              </ListSubheader>\n  \n                              <MenuItem value=\"\" disabled>\n                                Select City\n                              </MenuItem>\n  \n                              {filteredCities.length > 0 ? (\n                                filteredCities.map((city: any) => (\n                                  <MenuItem key={city.name} value={city.name}>\n                                    {city.name}\n                                  </MenuItem>\n                                ))\n                              ) : (\n                                <MenuItem disabled>No cities available</MenuItem>\n                              )}\n  \n                              {!cities.some((city) => city.name === selectedCity) &&\n                                selectedCity !== undefined && selectedCity !== \"\" && (\n                                  <MenuItem key={selectedCity} value={selectedCity}>\n                                    {selectedCity}\n                                  </MenuItem>\n                                )}\n  \n                              <MenuItem\n                                sx={{\n                                  fontSize: \"14px !important\",\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"normal\",\n                                  color: \"#1cbeb5 !important\",\n                                }}\n                                onClick={() => {\n                                  dispatch(\n                                    setPopup({\n                                      show: true,\n                                      data: {\n                                        container: {\n                                          name: \"customfield\",\n                                          data: {\n                                            name: \"personalDetails.temporaryAddress.city\",\n                                            fieldName: selectedCity,\n                                            setFieldName: setSelectedCity,\n                                            placeholder: \"Enter your city\",\n                                          },\n                                          dimensions: {\n                                            width: \"450px\",\n                                          },\n                                        },\n                                        type: \"custom\",\n                                      },\n                                    })\n                                  );\n                                }}\n                              >\n                                Can't find city\n                              </MenuItem>\n                            </Select>\n                          </FormControl>\n  \n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.city\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel\n                            id=\"firstName\"\n                            sx={{ fontWeight: \"500\", color: \"#495052\", mb: 1 }}\n                          >\n                            Zipcode\n                          </InputLabel>\n                          <CustomField\n                            id=\"pinCode\"\n                            type=\"number\"\n                            placeholder=\"Pincode\"\n                            name=\"personalDetails.temporaryAddress.pinCode\"\n                            value={values.personalDetails.temporaryAddress.pinCode}\n                            onChange={handleChange}\n                            fullWidth\n                            error={Boolean((touched.personalDetails as any)?.temporaryAddress?.pinCode && (errors.personalDetails as any)?.temporaryAddress?.pinCode)}\n  \n                          />\n                          <div style={{ color: \"#e60c0c\", fontSize: \"12px\" }}>\n                            <ErrorMessage name=\"personalDetails.temporaryAddress.pinCode\" component=\"div\" />\n                          </div>\n                        </Grid>\n                        <Grid item xs={12} sm={6}></Grid>\n                        <Grid item xs={12} sm={6}>\n                          <InputLabel id=\"\" sx={{ color: \"#495052\" }}>\n                            Is your Home address same as Contact address?\n                          </InputLabel>\n                          <FormControl>\n                            <RadioGroup\n                              row\n                              aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                              name=\"row-radio-buttons-group\"\n                              value={permanent}\n                              onChange={(e: any) => setPermanent(e.target.value)}\n                            >\n                              <FormControlLabel\n                                value=\"yes\"\n                                control={\n                                  <Radio\n                                    size=\"small\"\n                                    sx={{\n                                      \"&.MuiRadio-root.Mui-checked\": {\n                                        color: \"#3B3F76 !important\",\n                                      },\n                                    }}\n                                  />\n                                }\n                                label=\"Yes\"\n                              />\n                              <FormControlLabel\n                                value=\"no\"\n                                control={\n                                  <Radio\n                                    size=\"small\"\n                                    sx={{\n                                      \"&.MuiRadio-root.Mui-checked\": {\n                                        color: \"#3B3F76 !important\",\n                                      },\n                                    }}\n                                  />\n                                }\n                                label=\"No\"\n                              />\n                            </RadioGroup>\n                          </FormControl>\n                        </Grid>\n                        <Grid item xs={12} sm={6}></Grid>\n                        {permanent === \"no\" ? (\n                          <>\n                            <Grid item xs={12} sm={6}>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 1</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine1 || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Address Line 2</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine2 || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.country || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>State/Province</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.state || 'NA'}</Typography>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 3</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine3 || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>City/Town</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.city || 'NA'}</Typography>\n                              <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Zipcode</Typography>\n                              <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.pinCode || 'NA'}</Typography>\n                            </Grid>\n                          </>\n                        ) : null}\n                        \n                      </Grid>\n                      <Box\n                          sx={{ display: \"flex\", justifyContent: \"end\", pb:2, mr: 10, gap: 2 }}\n                        >\n                          <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancelTemp}>Cancel</Button>\n                          <CustomButton\n                            width=\"100px\"\n                            handleSubmit={() => submit}\n                          >\n                            {loader ? (\n                              <img\n                                src={Images.standardLoader}\n                                alt=\"load\"\n                                style={{ width: \"1rem\",height:\"1rem\",padding:\"6px\" }}\n                              />\n                            ) : (\n                              \"Save\"\n                            )}\n                          </CustomButton>\n                        </Box>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            ) : (\n              <Box sx={{ boxShadow: 2, borderRadius: 3, background: '#fff', p: 3 }}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                    <Typography variant=\"h6\" sx={{ fontWeight: 600, color:\"#495052\" }}>\n                      Address Details\n                       </Typography>\n                    <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={handleTempEdit}>\n                                 Edit\n                               </Button>\n                     </Grid>\n                     <Grid item xs={12} sm={6}>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>Address Line 1</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.addressLine1 || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Address Line 2</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.addressLine2 || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{selectedCountry || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>State/Province</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{selectedState || 'NA'}</Typography>\n                     </Grid>\n                     <Grid item xs={12} sm={6}>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500 }}>Address Line 3</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.addressLine3 || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>City/Town</Typography>\n                    <Typography>{selectedCity || 'NA'}</Typography>\n                    <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Zipcode</Typography>\n                    <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.temporaryAddress?.pinCode || 'NA'}</Typography>\n                     </Grid>\n                     {/* Show permanent address if not same as contact address */}\n                     {permanent === 'no' && !permFormEdit && (\n                       <>\n                         <Grid item xs={12} sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 4 }}>\n                           <Typography variant=\"h6\" sx={{ fontWeight: 600, color:\"#495052\" }}>\n                             Permanent Address\n                           </Typography>\n                           <Button variant=\"outlined\" sx={[{ border:'2px solid #F48438 ', borderRadius:'20px',color:'#495052' ,fontSize: { lg: \"16px\", xs: \"12px\" }, width: { lg: \"100px\", xs: \"90px\" }, padding: { lg: \"8px\", xs: \"6px\" } }]} onClick={handlePermEdit}>\n                             Edit\n                           </Button>\n                         </Grid>\n                         <Grid item xs={12} sm={6}>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 1</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine1 || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Address Line 2</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine2 || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Country</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.country || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>State/Province</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.state || 'NA'}</Typography>\n                         </Grid>\n                         <Grid item xs={12} sm={6}>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 4 }}>Address Line 3</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.addressLine3 || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>City/Town</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.city || 'NA'}</Typography>\n                           <Typography sx={{ color: '#8E9091', fontWeight: 500, mt: 2 }}>Zipcode</Typography>\n                           <Typography sx={{color:\"#495052\"}}>{personalInfo?.data?.permanentAddress?.pinCode || 'NA'}</Typography>\n                         </Grid>\n                       </>\n                     )}\n                     </Grid>\n              </Box>\n            )}\n          </>\n        )}\n      </>\n    );\n  };\n  \n  export default Address;\n  ","import { Box } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Accordion from \"../../../../genericComponents/accordian\";\nimport PersonalDetails from \"./personalDetails\";\nimport Address from \"./address\";\nimport { useProfileData } from \"src/genericComponents/modalPopup/useProfileData\";\n\nconst Profile = () => {\n  // State to track which accordion is open\n  const [openIndex, setOpenIndex] = useState<number | null>(null);\n  \n\n  // Function to handle accordion toggling\n  const handleToggle = (index: number) => {\n    setOpenIndex((prevIndex) => (prevIndex === index ? null : index));\n  };\n\n  const profile = [\n    {\n      title: \"My Details\",\n      component: <PersonalDetails />,\n    },\n    {\n      title: \"Address\",\n      component: <Address />,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n        background: \"#fff\",\n        borderRadius: \"10px\",\n        height: \"75vh\",\n        overflowY: \"scroll\",\n        px: 3,\n      }}\n    >\n      {profile.map((item, index) => (\n        <Accordion\n          key={index}\n          title={item.title}\n          isOpen={openIndex === index} // Pass state-controlled open status\n          onToggle={() => handleToggle(index)} // Toggle function\n        >\n          {item.component}\n        </Accordion>\n      ))}\n    </Box>\n  );\n};\n\nexport default Profile;\n","import { Box} from \"@mui/material\";\nimport Education from \"../education\";\nimport TestScoreForm from \"../testScores/testScores\";\nimport ExtraCurricular from \"./extraCurricular\";\nimport Family from \"./family\";\nimport { Preferences } from \"./preferences\";\nimport WorkExperience from \"./workExperience\";\nimport StarBorderOutlinedIcon from '@mui/icons-material/StarBorderOutlined';\nimport SchoolOutlinedIcon from '@mui/icons-material/SchoolOutlined';\nimport PermIdentityOutlinedIcon from '@mui/icons-material/PermIdentityOutlined';\nimport WorkOutlineOutlinedIcon from '@mui/icons-material/WorkOutlineOutlined';\nimport CustomTabs from \"../../../../genericComponents/tabs\";\nimport ExpandCard from \"../../../../genericComponents/expandCard\";\nimport AccessibilityIcon from '@mui/icons-material/Accessibility';\nimport Diversity3Icon from '@mui/icons-material/Diversity3';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport Profile from \"./profile\";\n\n\ninterface ProfileSectionProps {\n  initialTab: number;\n}\nconst  ProfileSection: React.FC<ProfileSectionProps>= ({initialTab}) => {\n  const profile = [\n    {\n      label: \"Personal Information\",\n      image: <PermIdentityOutlinedIcon />,\n      Component: <Profile />,\n    },\n    {\n      label: \"Education\",\n      image: <SchoolOutlinedIcon />,\n      Component: <Education />\n    },\n    {\n      label: \"Test Scores\",\n      image: <AssignmentIcon />,\n      Component: <TestScoreForm />,\n    },\n    {\n      label: \"Work experience\",\n      image: <WorkOutlineOutlinedIcon />,\n      Component: <WorkExperience />,\n    },\n    {\n      label: \"Preferences\",\n      image: <StarBorderOutlinedIcon />,\n      Component: <Preferences />,\n    },\n    {\n      label: \"Family\",\n      image: <Diversity3Icon />,\n      Component: <Family />,\n    },\n    {\n      label: \"Extra Curriculum Activities \",\n      image: <AccessibilityIcon />,\n      Component: <ExtraCurricular />,\n    },\n  ];\n\n  return (\n    <Box\n      sx={{\n      }}\n    >\n      <Box sx={{ display: { xs: \"block\", lg: \"none\" } }}>\n        {profile?.map((item: any) => (\n          <ExpandCard  title={item.label} imageUrl={item.image} key={item}>\n            {item.Component}\n          </ExpandCard>\n        ))}\n      </Box>\n      <Box sx={{ display: { xs: \"none\", lg: \"block\" } }}>\n        <CustomTabs tabs={profile} initialValue={initialTab}/>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfileSection;\n\n","import React from \"react\";\nimport { Card, Box } from \"@mui/material\";\nimport { customCardProps } from \"../types/types\";\n\nconst CustomCard = React.memo(function CustomCard({\n  children,\n  title,\n  titleIcon,\n  badgeColor = \"#ffff\",\n  badgePosition = \"top-right\",\n  sx = {},\n  badgeStyle,\n  ...rest\n}: customCardProps & {\n  badgeColor?: string;\n  badgePosition?: 'top-left' | 'top-right';\n  sx?: any;\n  titleIcon?: React.ReactNode;\n  badgeStyle?: React.CSSProperties;\n\n}) {\n  // Badge position styles\n  const badgeStyles = badgePosition === 'top-left'\n    ? { top: 18, left: 18, right: 'auto' }\n    : { top: -10, right: 22, left: 'auto' };\n\n  return (\n   <Box sx={{ position: \"relative\", mb: 2, width: \"100%\" }}>\n  <Card\n    sx={{\n      background: '#ffff',\n      // border: '4px solid white',\n      borderRadius: \"18px\",\n      // boxShadow: \"0 4px 24px 0 rgba(60,72,128,0.07)\",\n      boxShadow: 'none',\n      minHeight: 220,\n      position: \"relative\",\n      overflow: \"visible\",\n      p: 0,\n      color: 'inherit',\n      ...sx // ✅ THIS will override background and borderRadius\n    }}\n    {...rest}\n  >\n    {/* Badge */}\n    {title && (\n      <Box\n        sx={{\n          position: \"absolute\",\n          ...badgeStyles,\n          ...(badgeStyle || {}),\n          background: badgeStyle?.backgroundColor || badgeColor,\n          color: \"#495052\",\n          px: 2,\n          py: 0.5,\n          borderRadius: \"12px\",\n          fontSize: \"0.85rem\",\n          fontWeight: 500,\n          zIndex: 2,\n          // boxShadow: \"0 2px 8px 0 rgba(78, 86, 125, 0.1)\",\n        }}\n      >\n        {titleIcon}\n        {title}\n      </Box>\n    )}\n\n    {/* Content */}\n    <Box sx={{ width: '100%', p: 5, color: 'inherit' }}>\n      {children}\n    </Box>\n  </Card>\n</Box>\n\n  );\n});\n\nexport default CustomCard;\n\n","/* eslint-disable */\nimport { Box, Button, Grid, Stack, Tooltip, Typography } from \"@mui/material\";\nimport CustomCard from \"../../../../genericComponents/customCard\";\n// import WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport { useAppDispatch, useAppSelector } from \"../../../../assets/hooks\";\nimport { Application } from \"../../../../types/types\";\nimport Images from \"../../../../assets\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport { setPopup } from \"../../../../store/Slices/popupSlice\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AppliedUniversities = () => {\n  const navigate =useNavigate()\n  const applicationsData = useAppSelector((state) => state.applications);\n  const dispatch = useAppDispatch();\n  function date(date: Date) {\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return month + \" \" + year;\n  }\n  return (\n    <div\n      style={{\n        // maxHeight: \"81vh\",\n        overflowY: \"scroll\",\n        paddingTop:\"1rem\"\n      }}\n    >\n      <Grid container spacing={3}>\n        {applicationsData?.data &&\n        applicationsData?.data?.length > 0 ? (\n          <>\n                     {applicationsData?.data?.map(\n              (item: Application, i: number) => (\n                <Grid item xs={12} sm={6} lg={4} sx={{paddingLeft:{xs:0,md:\"1rem\"}}} key={i}>\n                  <CustomCard title={item.stage} i={i} titleIcon={<TimerIcon sx={{ fontSize: \"1.25rem\",marginRight:\"5px\" }} />} >\n                    <Box\n                      onClick={() =>\n                        dispatch(\n                          setPopup({\n                            show: true,\n                            data: {\n                              container: {\n                                name: \"applicationPopup\",\n                                data: item._id,\n                                dimensions: {\n                                  width: \"800px\",\n                                  height:\"85%\"\n                                },\n                              },\n                              type: \"custom\",\n                            },\n                          })\n                        )\n                      }\n                    >\n                        {item?.cancellationRequest === true ? (\n                          <img\n                            src={Images.cancelledIcon}\n                            alt=\"cancelled\"\n                            style={{\n                              position: \"absolute\",\n                              top: \"-28px\",\n                              right: \"-26px\",\n                            }}\n                          />\n                        ) : (\n                          \"\"\n                        )}\n<Box sx={{display:\"flex\",gap:\"10px\",width:\"100%\"}}>\n                        <img\n                          src={item.course?.university?.logoSrc}\n                          alt=\"logo\"\n                          style={{\n                            width: \"1.5rem\",\n                            height: \"1.5rem\",\n                            marginRight: \"5px\",\n                            borderRadius: \"10px\",\n                          }}\n                        />\n                        <div style={{flex: 1 }}>\n                        <Tooltip\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#fff\",\n                                backgroundColor: \"#3B3F76\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\":\n                                  {\n                                    marginTop:\"-5px !important\",\n                                  },\n                              },\n                            },\n                          }}\n                          title={item.course.name}\n                          placement=\"bottom\"\n                        >\n                          <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              fontSize: { xs: \"13px\", lg: \"14px\" },\n                                fontWeight: 500,\n                                textOverflow: \"ellipsis \",\n                                lineClamp: 1,\n                                height: \"1.5rem\",\n                                textTransform: \"capitalize\",\n                                overflow: \"hidden\",\n                                display: \"-webkit-box\",\n                                WebkitLineClamp: \"1\",\n                                WebkitBoxOrient: \"vertical\",\n                            }}\n                          >\n                            {item.course.name}\n                          </Typography>\n                        </Tooltip>\n                        <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              // height: \"1.5rem\",\n                              fontSize: { xs: \"12px\", lg: \"12px\" },\n                              // textOverflow: \"ellipsis \",\n                              // lineClamp: 1,\n                              height: \"1.5rem\",\n                              textTransform: \"capitalize\",\n                              // overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              // WebkitLineClamp: \"1\",\n                              WebkitBoxOrient: \"vertical\",\n                              my: 1,\n                              // alignItems: \"center\",\n                            }}\n                          >\n\n                            {item.course?.university?.name} | &nbsp;\n                            {item.course?.university?.location?.country}\n\n                          </Typography>\n                        </div>\n                      </Box>\n                        <Stack direction=\"row\" justifyContent=\"end\"  spacing={1} sx={{mt:10,mr:6}}>\n                          <Typography\n                            component=\"span\"\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              whiteSpace: \"nowrap\",\n                            }} \n                          >\n                            <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                            &nbsp; Start date :\n                            {item?.intake ? date(new Date(item?.intake)) : null}\n                          </Typography>\n                          {/* <Divider\n                            orientation=\"vertical\"\n                            flexItem\n                            sx={{ borderWidth: \"2px\" }}\n                          />\n                          <Typography\n                            fontSize=\"0.8rem\"\n                            fontWeight=\"500\"\n                            sx={{ display: \"flex\", alignItems: \"center\" }}\n                          >\n                            <Tooltip\n                              slotProps={{\n                                tooltip: {\n                                  sx: {\n                                    color: \"#fff\",\n                                    backgroundColor: \"#3B3F76\",\n                                    boxShadow: 2,\n                                  },\n                                },\n                              }}\n                              title=\"Status\"\n                              placement=\"bottom\"\n                            >\n                              <WatchLaterIcon\n                                sx={{  fontSize: \"1.25rem\" }}\n                              />\n                            </Tooltip>\n                            &nbsp;{item.status}\n                          </Typography> */}\n                        </Stack>\n                        {/* <p style={{\n        position: 'absolute',\n        left: '10px',\n        bottom: '10%', background: \"#B7B7E7\", width: \"1.1rem\", height: \"1.1rem\", margin: 0, borderBottomLeftRadius: \"20px\", transform: \"rotate(45deg\"\n      }}></p> */}\n                      </Box>\n                  </CustomCard>\n                </Grid>\n              )\n            )}\n          </>\n        )  : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n            }}\n          >\n            <img\n              src={Images.Dull}\n              alt=\"noData\"\n              style={{ width: \"230px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n            />\n            <Typography\n              sx={{\n                mb: 1,\n                fontSize: \"1.6rem\",\n                fontWeight: 600,\n                color: \"#495052\",\n                textAlign: \"center\",\n              }}\n            >\n             No Products Added Yet\n            </Typography>\n            <Typography\n              sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n              }}\n            >\n             You haven't saved any courses yet-start exploring and <br/> discover your next opportunity!\n            </Typography>\n            <Button\n              sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                \"&:hover\": {\n                  background: \"#F48438\",\n                },\n              }}\n              onClick={() => {\n                const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                  1\n                )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              Add products\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default AppliedUniversities;\n","export interface CourseOption {\n  label: string;\n  value: string;\n}\n\nexport const courseList: CourseOption[] = [\n  { label: \"Agribusiness\", value: \"Agribusiness\" },\n  { label: \"Agricultural Science\", value: \"Agricultural Science\" },\n  { label: \"Agronomy\", value: \"Agronomy\" },\n  { label: \"Fisheries\", value: \"Fisheries\" },\n  { label: \"Forestry\", value: \"Forestry\" },\n  { label: \"Horticulture\", value: \"Horticulture\" },\n  { label: \"Mariculture\", value: \"Mariculture\" },\n  { label: \"Poultry, Dairy\", value: \"Poultry, Dairy\" },\n  { label: \"Architecture\", value: \"Architecture\" },\n  { label: \"Construction\", value: \"Construction\" },\n  { label: \"Construction Management\", value: \"Construction Management\" },\n  { label: \"Heating\", value: \"Heating\" },\n  { label: \"Interior Design\", value: \"Interior Design\" },\n  { label: \"Surveying\", value: \"Surveying\" },\n  { label: \"Urban Planning\", value: \"Urban Planning\" },\n  { label: \"Ventilation\", value: \"Ventilation\" },\n  { label: \"Animation\", value: \"Animation\" },\n  { label: \"Applied Arts - Printing, Studio Art\", value: \"Applied Arts - Printing, Studio Art\" },\n  { label: \"Arts\", value: \"Arts\" },\n  { label: \"Bakery and Pastry Arts\", value: \"Bakery and Pastry Arts\" },\n  { label: \"Car Interior Design\", value: \"Car Interior Design\" },\n  { label: \"Carpentry, Woodworking, Blacksmithing, Goldsmithing, Silversmithing, Ceramics\", value: \"Carpentry, Woodworking, Blacksmithing, Goldsmithing, Silversmithing, Ceramics\" },\n  { label: \"Creative Writing\", value: \"Creative Writing\" },\n  { label: \"Dance\", value: \"Dance\" },\n  { label: \"Design - Fashion, Textile, Graphics, Product\", value: \"Design - Fashion, Textile, Graphics, Product\" },\n  { label: \"English\", value: \"English\" },\n  { label: \"Exhibition/Event\", value: \"Exhibition/Event\" },\n  { label: \"Film, Cinematography, Interactive Media, Multimedia\", value: \"Film, Cinematography, Interactive Media, Multimedia\" },\n  { label: \"Fine Arts-Drawing, Painting, Sculpture\", value: \"Fine Arts-Drawing, Painting, Sculpture\" },\n  { label: \"General Studies\", value: \"General Studies\" },\n  { label: \"Interdisciplinary Studies\", value: \"Interdisciplinary Studies\" },\n  { label: \"Liberal Arts and Studies\", value: \"Liberal Arts and Studies\" },\n  { label: \"Library\", value: \"Library\" },\n  { label: \"Music\", value: \"Music\" },\n  { label: \"Photography\", value: \"Photography\" },\n  { label: \"Publishing\", value: \"Publishing\" },\n  { label: \"Theatre,Drama\", value: \"Theatre,Drama\" },\n  { label: \"Visual Arts\", value: \"Visual Arts\" },\n  { label: \"Banking, Insurance, Risk Management, Taxation\", value: \"Banking, Insurance, Risk Management, Taxation\" },\n  { label: \"Business Analytics, Management Consulting\", value: \"Business Analytics, Management Consulting\" },\n  { label: \"Business Management, Business Administration, Entrepreneurship, Innovation, Operations, Project Management, Event Management, Organizational Management, Health Management\", value: \"Business Management, Business Administration, Entrepreneurship, Innovation, Operations, Project Management, Event Management, Organizational Management, Health Management\" },\n  { label: \"Commerce\", value: \"Commerce\" },\n  { label: \"Conflict Analysis and Management\", value: \"Conflict Analysis and Management\" },\n  { label: \"Finance, Accounts, Commerce, Economics\", value: \"Finance, Accounts, Commerce, Economics\" },\n  { label: \"Financial Management, International Management, Marketing Management, Technical Management\", value: \"Financial Management, International Management, Marketing Management, Technical Management\" },\n  { label: \"Hospitality and Tourism Management\", value: \"Hospitality and Tourism Management\" },\n  { label: \"Human Resource Management, Human Resource Development\", value: \"Human Resource Management, Human Resource Development\" },\n  { label: \"Information Systems, Information Technology Management\", value: \"Information Systems, Information Technology Management\" },\n  { label: \"International Business\", value: \"International Business\" },\n  { label: \"Logistics, Supply Chain Management\", value: \"Logistics, Supply Chain Management\" },\n  { label: \"Office Administration\", value: \"Office Administration\" },\n  { label: \"Real Estate, Property Administeration\", value: \"Real Estate, Property Administeration\" },\n  { label: \"Sales, Marketing, Public Relations, Public Services, E-business, Digital Business, Digital Marketing\", value: \"Sales, Marketing, Public Relations, Public Services, E-business, Digital Business, Digital Marketing\" },\n  { label: \"Artificial Intelligence\", value: \"Artificial Intelligence\" },\n  { label: \"Business Analysis, IT Business Analytics\", value: \"Business Analysis, IT Business Analytics\" },\n  { label: \"Computer Information Systems\", value: \"Computer Information Systems\" },\n  { label: \"Computer Science, Software Development\", value: \"Computer Science, Software Development\" },\n  { label: \"Computer Technology\", value: \"Computer Technology\" },\n  { label: \"Computer/ Game Programming\", value: \"Computer/ Game Programming\" },\n  { label: \"Computing\", value: \"Computing\" },\n  { label: \"Customer Intelligence and Analytics\", value: \"Customer Intelligence and Analytics\" },\n  { label: \"Cyber Security, Information Security\", value: \"Cyber Security, Information Security\" },\n  { label: \"Cytotechnology\", value: \"Cytotechnology\" },\n  { label: \"Data Science and Analytics\", value: \"Data Science and Analytics\" },\n  { label: \"Game Design\", value: \"Game Design\" },\n  { label: \"Information Technology\", value: \"Information Technology\" },\n  { label: \"Mobile Application\", value: \"Mobile Application\" },\n  { label: \"Mobile Communication\", value: \"Mobile Communication\" },\n  { label: \"Multimedia\", value: \"Multimedia\" },\n  { label: \"Networking\", value: \"Networking\" },\n  { label: \"Programmer\", value: \"Programmer\" },\n  { label: \"Software Testing\", value: \"Software Testing\" },\n  { label: \"Web Design, Web Applications\", value: \"Web Design, Web Applications\" }\n]; ","import {\n    Box,\n    Button,\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    IconButton,\n    Autocomplete,\n    Chip\n  } from \"@mui/material\";\n  import CloseIcon from \"@mui/icons-material/Close\";\n  import React, { useEffect, useState } from \"react\";\n  import { useNavigate } from \"react-router-dom\";\n  import { useAppDispatch, useAppSelector } from \"src/assets/hooks\";\nimport { academicTests, gradeScaleOptions, languageTests } from \"src/assets/constants/misc\";\nimport { editProfile, getRecommendations } from \"src/services\";\nimport { setPopup } from \"src/store/Slices/popupSlice\";\nimport { countryList } from \"src/assets/menu\";\nimport { setRecommendEditData } from 'src/store/Slices/recommendEditSlice';\nimport { courseList } from \"src/assets/constants/courseList\";\nimport { Test } from \"src/types/types\";\nimport { setRecommended } from \"src/store/Slices/recommendations\";\n\n  \n  interface Criterion {\n    label: string;\n    data: {\n      value: any;\n      editLink?: string;\n    };\n  }\n  \n  interface RecommendationEditModalProps {\n    open: boolean;\n    onClose: () => void;\n    data: any[];\n    onSubmit?: (updatedData: Record<string, string>) => void;\n    //courseList: string[]; \n  }\n\n  \n  const testOptions = [\n    { label: \"IELTS\", value: \"IELTS\" },\n    { label: \"TOEFL\", value: \"TOEFL\" },\n    { label: \"Duolingo\", value: \"Duolingo\" },\n    { label: \"PTE\", value: \"PTE\" },\n  ];\n  \n  const testOptions1 = [\n    { label: \"GRE\", value: \"GRE\" },\n    { label: \"GMAT\", value: \"GMAT\" },\n    { label: \"SAT\", value: \"SAT\" },\n    { label: \"ACT\", value: \"ACT\" },\n  ];\n  \n  const outOff=[\n    {label:'Percentage out of 100',value:100},\n    {label:'CGPA out of 10',value:10},\n    {label:\"CGPA out of 7\",value:7},\n    {label:\"CGPA out of 5\",value:5},\n    {label:\"CGPA out of 4\",value:4}\n  ]\n  \n  const RecommendationEditModal = ({\n    open,\n    onClose,\n    data,\n    onSubmit,\n  }: RecommendationEditModalProps) => {\n    const navigate = useNavigate();\n    const dispatch = useAppDispatch();\n    const recommendations = useAppSelector((state) => state.recommendations);\n    const recommendEditData = useAppSelector((state) => state.recommendEdit);\n    const criteria: Criterion[] = recommendations?.data?.criteria || [];\n    const profile = useAppSelector((state) => state.profile);\n    const [formData, setFormData] = useState<Record<string, any>>({});\n    \n\n   useEffect(() => {\n    if (criteria.length) {\n      const gpaData = criteria.find((item) => item.label === \"GPA\")?.data.value;\n      const [score, maxScore] = gpaData ? gpaData.split(\"/\").map((s: string) => s.trim()) : ['', ''];\n      let temp = {\n        studyLevel: criteria.find((item) => item.label === \"StudyLevel\")?.data.value || 'Bachelors',\n        bachelorsScore: score,\n        gradeScale: gradeScaleOptions.find((item) => item.maxScore.toString() === maxScore)?.label || '',\n        backlogs: criteria.find((item) => item.label === \"Backlogs\")?.data.value || '',\n        englishTestType: languageTests.find((item) => criteria.find((item2) => item2.label === item.fullForm))?.shortForm || '',\n        englishTestScore: criteria.find((item) => languageTests.find((item2) => item2.fullForm === item.label))?.data.value || '',\n        academicTestType: academicTests.find((item) => criteria.find((item2) => item2.label === item.fullForm))?.shortForm || '',\n        academicTestScore: criteria.find((item) => academicTests.find((item2) => item2.fullForm === item.label))?.data.value || '',\n        country: criteria.find((item) => item.label === \"Country\")?.data.value || [],\n        subCategory: criteria.find((item) => item.label === \"SubCategory\")?.data.value?.map((item: string) => ({ label: item, value: item })) || []\n      };\n      setFormData(temp);\n      // Store in Redux\n      dispatch(setRecommendEditData(temp));\n    }\n  }, [criteria, dispatch]);\n\n  \n    const handleChange = (field: string, value: any) => {\n      const newData = {\n        ...formData,\n        [field]: value,\n      };\n      setFormData(newData);\n      // Update Redux store with the entire form data to maintain consistency\n      dispatch(setRecommendEditData(newData));\n    };\n\n    const validateScores = () => {\n      let error = '';\n      // Academic Test Validation\n      const selectedTest = testOptions1.find(opt => opt.label === formData[\"academicTestType\"]);\n      const academicScore = Number(formData[\"academicTestScore\"]);\n      if (selectedTest?.label === \"GRE\") {\n        if (academicScore < 260 || academicScore > 340 || academicScore % 1 !== 0) {\n          error = \"GRE score must be between 260 and 340 \";\n        }\n      } else if (selectedTest?.label === \"GMAT\") {\n        if (academicScore < 200 || academicScore > 800 || academicScore % 5 !== 0) {\n          error = \"GMAT score must be between 200 and 800\";\n        }\n      } else if (selectedTest?.label === \"SAT\") {\n        if (academicScore < 200 || academicScore > 1600 || academicScore % 1 !== 0) {\n          error = \"SAT score must be between 200 and 1600\";\n        }\n      } else if (selectedTest?.label === \"ACT\") {\n        if (academicScore < 1 || academicScore > 36 || academicScore % 1 !== 0) {\n          error = \"ACT score must be between 1 and 36 \";\n        }\n      }\n      // English Test Validation\n      const selectedEngTest = testOptions.find(opt => opt.label === formData[\"englishTestType\"]);\n      const englishScore = Number(formData[\"englishTestScore\"]);\n      if (selectedEngTest?.label === \"IELTS\") {\n        const isHalfStep = Math.abs(englishScore * 10) % 5 === 0;\n        if (englishScore < 0 || englishScore > 9 || !isHalfStep) {\n          error = \"IELTS score must be between 0 and 9 \";\n        }\n      } else if (selectedEngTest?.label === \"TOEFL\") {\n        if (englishScore < 0 || englishScore > 120 || englishScore % 1 !== 0) {\n          error = \"TOEFL score must be between 0 and 120\";\n        }\n      } else if (selectedEngTest?.label === \"Duolingo\") {\n        if (englishScore < 0 || englishScore > 160 || englishScore % 1 !== 0) {\n          error = \"Duolingo score must be between 0 and 160\";\n        }\n      } else if (selectedEngTest?.label === \"PTE\") {\n        if (englishScore < 0 || englishScore > 90 || englishScore % 1 !== 0) {\n          error = \"PTE score must be between 0 and 90\";\n        }\n      }\n      // Grade Scale Validation\n      const gradeScale = formData[\"gradeScale\"];\n      const bachelorsScore = Number(formData[\"bachelorsScore\"]);\n      if (gradeScale === \"Percentage out of 100\") {\n        if (bachelorsScore < 0 || bachelorsScore > 100) {\n          error = \"Percentage must be between 0 and 100\";\n        }\n      } else if (gradeScale === \"CGPA out of 10\") {\n        if (bachelorsScore < 0 || bachelorsScore > 10) {\n          error = \"CGPA out of 10 must be between 0 and 10\";\n        }\n      } else if (gradeScale === \"CGPA out of 7\") {\n        if (bachelorsScore < 0 || bachelorsScore > 7) {\n          error = \"CGPA out of 7 must be between 0 and 7\";\n        }\n      } else if (gradeScale === \"CGPA out of 5\") {\n        if (bachelorsScore < 0 || bachelorsScore > 5) {\n          error = \"CGPA out of 5 must be between 0 and 5\";\n        }\n      } else if (gradeScale === \"CGPA out of 4\") {\n        if (bachelorsScore < 0 || bachelorsScore > 4) {\n          error = \"CGPA out of 4 must be between 0 and 4\";\n        }\n      }\n      return error;\n    };\n\n    const submit=async ()=>{\n      const validationError = validateScores();\n      if (validationError) {\n        dispatch(setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"error\",\n              data: validationError,\n              dimensions: { width: \"30%\", height: \"40%\", show: \"none\" },\n            },\n            type: \"custom\",\n          },\n        }));\n        return;\n      }\n      if(profile.data)\n      {\n        let profileTests=[...profile.data?.tests??[]];\n      let newTests=[\n        {\n          name:languageTests.find((item)=>item.shortForm===formData[\"englishTestType\"])?.fullForm,\n          type:\"language\",\n          scores:[\n            {\n              description:\"Total\",\n              count:formData[\"englishTestScore\"]\n            }\n          ]\n        },\n        {\n          name:academicTests.find((item)=>item.shortForm===formData[\"academicTestType\"])?.fullForm,\n          type:'academic',\n          scores:[\n            {\n              description:\"Total\",\n              count:formData[\"academicTestScore\"]\n            }\n          ]\n        }\n      ]\n      newTests.forEach((tst)=>{\n        let current=profileTests.findIndex((item)=>item.name===tst.name)\n        if(current!==-1)\n        {\n          \n          profileTests[current]={...profileTests[current],scores:[...profileTests[current].scores.filter((item)=>item.description!==\"Total\"),...tst.scores]};\n        }\n        else{\n          let clearedProfile=profileTests.filter((item)=>(tst.type===\"language\"?languageTests:academicTests).find((item2)=>item2.fullForm===item.name)!==undefined?false:true);\n          clearedProfile.push({\n            name:tst.name ?? \"\",\n            scores:tst.scores\n          } as any);\n          profileTests=clearedProfile;\n        }\n      })\n        const temp={\n          tests:profileTests,\n          education:{...profile.data.education,\n            underGraduation:{...profile.data.education.underGraduation,\n              totalScore:parseInt(formData[\"bachelorsScore\"]),\n              backlogs:parseInt(formData[\"backlogs\"]),\n              maxScore:gradeScaleOptions.find((item)=>item.label===formData[\"gradeScale\"])?.maxScore,\n              gradingSystem:gradeScaleOptions.find((item)=>item.label===formData[\"gradeScale\"])?.value\n            }},\n          preference:{...profile.data.preference,\n            subCategory:formData[\"subCategory\"].map((item:{label:string,value:string})=>item.value),\n            country:formData[\"country\"]\n          }\n        };\n        // setLoader(true)\n        const response = await editProfile(temp);\n        if (response) {\n          \n          // Regenerate recommendations with updated criteria\n          try {\n            // Send the updated profile data to get fresh recommendations\n            const recommendationsResponse = await getRecommendations(temp);\n            \n            if (recommendationsResponse && recommendationsResponse.data) {\n              dispatch(setRecommended(recommendationsResponse.data));\n              \n              // Close the modal first\n              onClose();\n              \n              // Show success message\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"success\",\n                      data: \"Criteria Updated Successfully! Recommendations have been regenerated with your new preferences.\",\n                      dimensions: {\n                        width: \"35%\",\n                        height: \"40%\",\n                        show: \"none\"\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              );\n            } else {\n              console.error(\"No recommendations data received\");\n              throw new Error(\"No recommendations data received\");\n            }\n          } catch (error) {\n            console.error(\"Failed to regenerate recommendations:\", error);\n            \n            // Close the modal first\n            onClose();\n            \n            // Show error message\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: \"Profile updated successfully, but failed to regenerate recommendations. Please try again later.\",\n                    dimensions: {\n                      width: \"35%\",\n                      height: \"40%\",\n                      show: \"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } else {\n          console.error(\"Failed to update profile\");\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"error\",\n                  data: \"Failed to update profile. Please try again.\",\n                  dimensions: {\n                    width: \"35%\",\n                    height: \"40%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        //setLoader(false)\n      }\n    }\n\n  \n    return (\n      <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"sm\">\n        <DialogTitle sx={{ \n          fontWeight: 600, \n          fontSize: \"1.2rem\", \n          pr: 4,\n          borderBottom: \"1px solid #eee\",\n          pb: 2\n        }}>\n          Your recommendations are based on:\n          <IconButton\n            onClick={onClose}\n            sx={{ position: \"absolute\", top: 12, right: 12 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n  \n        <DialogContent sx={{ mt: 2 }}>\n          <Box display=\"flex\" flexDirection=\"column\" gap={3}>\n            {/* Bachelors Score Section */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                {formData[\"studyLevel\"] || 'Bachelors'}\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <TextField\n                  size=\"small\"\n                  label=\"Enter Score\"\n                  value={formData[\"bachelorsScore\"] || \"\"}\n                  onChange={(e) => handleChange(\"bachelorsScore\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n                <FormControl size=\"small\" sx={{ flex: 1 }}>\n                  <InputLabel>Grade scale</InputLabel>\n                  <Select\n                    label=\"Grade scale\"\n                    value={formData[\"gradeScale\"] || \"\"}\n                    onChange={(e) => handleChange(\"gradeScale\", e.target.value)}\n                  >\n                    {outOff.map((item) => (\n                      <MenuItem key={item.value} value={item.label}>\n                        {item.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  size=\"small\"\n                  label=\"Backlogs\"\n                  value={formData[\"backlogs\"] || \"\"}\n                  onChange={(e) => handleChange(\"backlogs\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Box>\n\n            {/* English Test Section */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                English proficiency test\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <FormControl size=\"small\" sx={{ flex: 1 }}>\n                  <InputLabel>Select test</InputLabel>\n                  <Select\n                    label=\"Select test type\"\n                    value={formData[\"englishTestType\"] || \"\"}\n                    onChange={(e) => handleChange(\"englishTestType\", e.target.value)}\n                  >\n                    {testOptions.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  size=\"small\"\n                  label=\"Enter score\"\n                  value={formData[\"englishTestScore\"] || \"\"}\n                  onChange={(e) => handleChange(\"englishTestScore\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Box>\n\n            {/* GRE/GMAT Section */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                GRE, GMAT, SAT, ACT\n              </Typography>\n              <Box display=\"flex\" gap={2}>\n                <FormControl size=\"small\" sx={{ flex: 1 }}>\n                  <InputLabel>Select test type</InputLabel>\n                  <Select\n                    label=\"Select test type\"\n                    value={formData[\"academicTestType\"] || \"\"}\n                    onChange={(e) => handleChange(\"academicTestType\", e.target.value)}\n                  >\n                    {testOptions1.map((option) => (\n                      <MenuItem key={option.value} value={option.label}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  size=\"small\"\n                  label=\"Enter score\"\n                  value={formData[\"academicTestScore\"] || \"\"}\n                  onChange={(e) => handleChange(\"academicTestScore\", e.target.value)}\n                  sx={{ flex: 1 }}\n                />\n              </Box>\n            </Box>\n\n            {/* Country Selection */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                Select Country\n              </Typography>\n              <Autocomplete\n                multiple\n                size=\"small\"\n                options={countryList}\n                getOptionLabel={(option) => option}\n                value={formData[\"country\"] || []}\n                onChange={(event, value) => handleChange(\"country\", value)}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    placeholder=\"Search countries\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        padding: '4px 8px'\n                      }\n                    }}\n                  />\n                )}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      {...getTagProps({ index })}\n                      label={option}\n                      size=\"small\"\n                      sx={{\n                        bgcolor: 'primary.light',\n                        color: 'white',\n                        '& .MuiChip-deleteIcon': {\n                          color: 'white'\n                        }\n                      }}\n                    />\n                  ))\n                }\n                ListboxProps={{\n                  style: { maxHeight: 200 }\n                }}\n              />\n            </Box>\n\n            {/* Program Selection */}\n            <Box>\n              <Typography variant=\"subtitle1\" fontWeight={500} gutterBottom>\n                What program would you like to pursue?\n              </Typography>\n              <Autocomplete\n                multiple\n                size=\"small\"\n                options={courseList}\n                getOptionLabel={(option) => option.label}\n                value={formData[\"subCategory\"] || []}\n                onChange={(event, value) => handleChange(\"subCategory\", value)}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    placeholder=\"Search programs\"\n                    sx={{\n                      '& .MuiOutlinedInput-root': {\n                        padding: '4px 8px'\n                      }\n                    }}\n                  />\n                )}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      {...getTagProps({ index })}\n                      label={option.label}\n                      size=\"small\"\n                      sx={{\n                        bgcolor: 'primary.light',\n                        color: 'white',\n                        '& .MuiChip-deleteIcon': {\n                          color: 'white'\n                        }\n                      }}\n                    />\n                  ))\n                }\n                ListboxProps={{\n                  style: { maxHeight: 200 }\n                }}\n              />\n            </Box>\n\n            {/* Action Buttons */}\n            <Box sx={{ \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center',\n              gap: 1,\n              mt: 2 \n            }}>\n              <Button\n                variant=\"contained\"\n                sx={{\n                  width: '30%',\n                  backgroundColor: \"#2E2F71\",\n                  color: \"#fff\",\n                  borderRadius: \"999px\",\n                  py: 1.2,\n                  fontWeight: 600,\n                  textTransform: \"none\",\n                  \"&:hover\": {\n                    backgroundColor: \"#1c1d5a\",\n                  },\n                }}\n                onClick={() => {\n                  onClose();\n                  submit();\n                }}\n              >\n                Continue\n              </Button>\n\n                                            <Typography variant=\"body2\" sx={{ color: \"#555\", textAlign: \"center\" }}>\n                 Want to edit further?{\" \"}\n                 <Box\n                   component=\"span\"\n                   onClick={() => {\n                     // Clear the user-profile data from localStorage to start fresh\n                     localStorage.removeItem(\"user-profile\");\n                     \n                     // Navigate to the initial step (Start page)\n                     navigate(\"/startpage\");\n                   }}\n                   sx={{\n                     textTransform: \"none\",\n                     fontWeight: 600,\n                     color: 'primary.main',\n                     cursor: 'pointer',\n                     '&:hover': {\n                       color: 'primary.dark',\n                     },\n                   }}\n                 >\n                   Edit\n                 </Box>\n               </Typography>\n            </Box>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    );\n  };\n  \n  export default RecommendationEditModal;\n  ","import React from 'react';\nimport { Box, Card, CardContent } from '@mui/material';\n\ninterface ShimmerCardProps {\n  height?: string;\n  width?: string;\n  borderRadius?: string;\n}\n\nconst ShimmerCard: React.FC<ShimmerCardProps> = ({ \n  height = '300px', \n  width = '100%', \n  borderRadius = '12px' \n}) => {\n  return (\n    <Card\n      sx={{\n        height,\n        width,\n        borderRadius,\n        background: 'linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%)',\n        backgroundSize: '200% 100%',\n        animation: 'shimmer 1.5s infinite',\n        '@keyframes shimmer': {\n          '0%': {\n            backgroundPosition: '-200% 0',\n          },\n          '100%': {\n            backgroundPosition: '200% 0',\n          },\n        },\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n        overflow: 'hidden',\n      }}\n    >\n      <CardContent sx={{ p: 3, height: '100%', display: 'flex', flexDirection: 'column' }}>\n        {/* Header shimmer */}\n        <Box\n          sx={{\n            height: '20px',\n            width: '70%',\n            background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n            backgroundSize: '200% 100%',\n            animation: 'shimmer 1.5s infinite',\n            borderRadius: '4px',\n            mb: 2,\n          }}\n        />\n        \n        {/* Subtitle shimmer */}\n        <Box\n          sx={{\n            height: '16px',\n            width: '50%',\n            background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n            backgroundSize: '200% 100%',\n            animation: 'shimmer 1.5s infinite',\n            borderRadius: '4px',\n            mb: 3,\n          }}\n        />\n        \n        {/* Content lines shimmer */}\n        <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 2 }}>\n          <Box\n            sx={{\n              height: '14px',\n              width: '100%',\n              background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n              backgroundSize: '200% 100%',\n              animation: 'shimmer 1.5s infinite',\n              borderRadius: '4px',\n            }}\n          />\n          <Box\n            sx={{\n              height: '14px',\n              width: '85%',\n              background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n              backgroundSize: '200% 100%',\n              animation: 'shimmer 1.5s infinite',\n              borderRadius: '4px',\n            }}\n          />\n          <Box\n            sx={{\n              height: '14px',\n              width: '60%',\n              background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n              backgroundSize: '200% 100%',\n              animation: 'shimmer 1.5s infinite',\n              borderRadius: '4px',\n            }}\n          />\n        </Box>\n        \n        {/* Footer shimmer */}\n        <Box\n          sx={{\n            height: '40px',\n            width: '100%',\n            background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n            backgroundSize: '200% 100%',\n            animation: 'shimmer 1.5s infinite',\n            borderRadius: '8px',\n            mt: 3,\n          }}\n        />\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ShimmerCard;\n\n","import React from 'react';\nimport { Box, Grid } from '@mui/material';\nimport ShimmerCard from './ShimmerCard';\n\ninterface ShimmerGridProps {\n  count?: number;\n  columns?: number;\n}\n\nconst ShimmerGrid: React.FC<ShimmerGridProps> = ({ \n  count = 6, \n  columns = 2 \n}) => {\n  return (\n    <Box sx={{ p: 2 }}>\n      <Grid container spacing={3}>\n        {Array.from({ length: count }, (_, index) => (\n          <Grid item xs={12} sm={6} md={12 / columns} key={index}>\n            <ShimmerCard \n              height=\"320px\" \n              borderRadius=\"12px\"\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ShimmerGrid;\n\n","import {\n  Box,\n  Button,\n  FormControlLabel,\n  Grid,\n  MenuItem,\n  Stack,\n  Switch,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport CustomCard from \"../../../genericComponents/customCard\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\nimport { Event, Recommendation } from \"../../../types/types\";\nimport { monthNames } from \"../../../assets/menu\";\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteOutlinedIcon from '@mui/icons-material/FavoriteOutlined';\nimport NotInterestedOutlinedIcon from \"@mui/icons-material/NotInterestedOutlined\";\nimport {\n  addToShortList,\n  getRecommendations,\n  hideRecommendation,\n} from \"../../../services\";\nimport {\n  setShortlisted,\n} from \"../../../store/Slices/shortlistedCoursesSlice\";\nimport Images from \"../../../assets\";\nimport ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';\nimport { setRecommended } from \"../../../store/Slices/recommendations\";\nimport RecommendationEditModal from \"./RecommendEdit\";\nimport { DestinationTypeEnum } from \"src/assets/enums\";\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { CustomButton } from \"../../../genericComponents/customButton\";\nimport ShimmerGrid from \"../../../genericComponents/shimmer/ShimmerGrid\";\n\nconst labelToRoute: Record<string, string> = {\n  StudyLevel: 'education',\n  Country: 'preference',\n  Courses: \"preference\",\n  \"Graduate Record Examination\": 'test',\n  GPA: 'education'\n};\n\nconst filterNames = [\n  { id: 1, name: \"All\" },\n  { id: 2, name: \"Recommended by AI\" },\n  { id: 3, name: \"Recommended by Student Advisor\" },\n];\n\nconst fullToShort: Record<string, string> = Object.fromEntries(\n  Object.entries(DestinationTypeEnum).map(([key, value]) => [value, key])\n);\n\nconst Recommended = () => {\n  const { id }: any = useParams();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  // State management\n  const [activeTab, setActiveTab] = useState<string>('Safe');\n  const [selectedFilter, setSelectedFilter] = useState(filterNames[0].name);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [alignment, setAlignment] = useState(\"interested\");\n  const [removedIds, setRemovedIds] = useState<string[]>([]);\n  const [duration,setDuration]=useState(false)\n\n  // Redux state\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const criteria = recommendations?.data?.criteria;\n  const preferences = useAppSelector((state) => state.preferences);\n  const educationhistory = useAppSelector((state) => state.educationhistory);\n  const testscores = useAppSelector(state => state.testscores);\n  const userAuthStatus = useAppSelector((state) => state.userAuthStatus);\n  const shortlisted = useAppSelector((state) => state.shortlistedcourses);\n  const gre = testscores.data.find((item) => item.name === \"Graduate Record Examination\");\n\n  // Computed values\n  const isCriteriaMet = criteria?.find((item) => item.label === \"SubCategory\")?.data.value === JSON.stringify(preferences?.data?.courses) &&\n    criteria?.find((item) => item.label === \"SubCategory\")?.data.value === JSON.stringify(educationhistory?.data?.underGraduation) &&\n    criteria?.find((item) => item.label === \"SubCategory\")?.data.value === JSON.stringify(gre?.scores);\n\n  const ambitious = recommendations?.data && recommendations?.data?.data?.filter(\n    (item: Recommendation) => item?.possibilityOfAdmit === \"Ambitious\"\n  );\n  const safe = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Safe\"\n  );\n  const moderate = recommendations?.data && recommendations?.data?.data?.filter(\n    (item) => item?.possibilityOfAdmit === \"Moderate\"\n  );\n  const courseChecked = preferences.data?.subCategory && preferences.data?.subCategory?.length > 0;\n\n  // Event handlers\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setAlignment(event.target.checked ? \"interested\" : \"notInterested\");\n  }, []);\n\n  const handleFilterChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedFilter(event.target.value);\n  }, []);\n\n  const filterCourses = useCallback((courses: Recommendation[]) => {\n    if (!courses) return [];\n    const filteredByType = selectedFilter === 'Recommended by AI' \n      ? courses.filter(course => !('counsellorRecommended' in course) || course.counsellorRecommended !== true)\n      : selectedFilter === 'Recommended by Student Advisor'\n        ? courses.filter(course => 'counsellorRecommended' in course && course.counsellorRecommended === true)\n        : courses;\n\n    // Filter for Full-time courses only\n    const filteredByDuration = filteredByType.filter(course => {\n      if (!course.course?.duration) return false;\n      \n      if (Array.isArray(course.course.duration)) {\n        return course.course.duration.some((d: any) => d.durationType === \"Full-time\");\n      }\n      \n      return false;\n    });\n\n    return filteredByDuration.filter(course =>\n      alignment === \"interested\" ? !course.notInterested : course.notInterested\n    );\n  }, [selectedFilter, alignment]);\n\n  const regenerateForm = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await getRecommendations({});\n      if (response) {\n        dispatch(setRecommended(response.data));\n      }\n    } catch (error) {\n      setError(\"Failed to regenerate recommendations\");\n    } finally {\n      setLoading(false);\n    }\n  }, [dispatch]);\n\n  const submit = useCallback(async () => {\n    const education = educationhistory.data.underGraduation?.totalScore ? \n      educationhistory.data.underGraduation : \n      educationhistory.data.postGraduation?.totalScore ? \n        educationhistory.data.postGraduation : \n        undefined;\n\n    if (courseChecked && education && gre) {\n      await regenerateForm();\n    } else {\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"qasection\",\n              dimensions: {\n                width: \"70%\",\n                height: \"90%\"\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    }\n  }, [courseChecked, educationhistory, gre, dispatch, regenerateForm]);\n\n  const eventHandler = useCallback(async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        if (userAuthStatus?.data?.isAuthorized) {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"applynow\",\n                  data: event?.data?.course,\n                  dimensions: {\n                    width: \"450px\",\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        } else {\n          dispatch(\n            setPopup({\n              show: true,\n              data: {\n                container: {\n                  name: \"login\",\n                  dimensions: {\n                    width: \"800px\",\n                    height: \"70%\",\n                    show: \"none\"\n                  },\n                },\n                type: \"custom\",\n              },\n            })\n          );\n        }\n        break;\n      case \"shortlist\":\n        try {\n          if (userAuthStatus?.data?.isAuthorized) {\n            const values = {\n              action: \"push\",\n              courseId: event.data?.course?._id,\n            };\n            const response = await addToShortList(values);\n            if (response.data.success) {\n              dispatch(setShortlisted(response.data.data));\n            }\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"login\",\n                    dimensions: {\n                      width: \"800px\",\n                      height: \"70%\",\n                      show: \"none\"\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) {\n          console.error(\"An error occurred while shortlisting:\", error);\n        }\n        break;\n      case \"delete\":\n        try {\n          const values = {\n            action: \"pull\",\n            courseId: event.data?.course?._id,\n          };\n          const response = await addToShortList(values);\n          if (response.data.success) {\n            dispatch(setShortlisted(response.data.data));\n          }\n        } catch (error) {\n          console.error(\"An error occurred while unshortlisting:\", error);\n        }\n        break;\n      case \"hideRecommendation\":\n        try {\n          const response = await hideRecommendation({\n            recommendationId: event.data,\n          });\n          dispatch(setRecommended(response.data.data));\n        } catch (err) {\n          console.error(\"An error occurred while hiding recommendation:\", err);\n        }\n        break;\n      default:\n        break;\n    }\n  }, [dispatch, userAuthStatus]);\n\n  const handleDeleteCard = useCallback((id: string) => {\n    setRemovedIds(prev => [...prev, id]);\n  }, []);\n\n  // Effects\n  useEffect(() => {\n    if (id) {\n      const matchedTab = tabs.find((tab) => tab.value.toLowerCase() === id.toLowerCase());\n      if (matchedTab) {\n        setActiveTab(matchedTab.value);\n      }\n    }\n  }, [id]);\n\n  // Styles object for better maintainability\n  const styles = {\n    cardContainer: {\n      display: \"flex\",\n      gap: \"10px\",\n      width: \"100%\"\n    },\n    logo: {\n      width: \"1.5rem\",\n      height: \"1.5rem\",\n      marginRight: \"5px\",\n      borderRadius: \"10px\"\n    },\n    courseName: {\n      fontSize: { xs: \"13px\", lg: \"14px\" },\n      fontWeight: 500,\n      textOverflow: \"ellipsis\",\n      lineClamp: 1,\n      height: \"1.5rem\",\n      textTransform: \"capitalize\",\n      overflow: \"hidden\",\n      display: \"-webkit-box\",\n      WebkitLineClamp: \"1\",\n      WebkitBoxOrient: \"vertical\"\n    },\n    universityName: {\n      fontSize: \"0.8rem\",\n      color: \"#8D8B8B\"\n    },\n    startDate: {\n      display: \"flex\",\n      alignItems: \"center\",\n      whiteSpace: \"nowrap\"\n    },\n    buttonContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"end\",\n      gap: \"1rem\"\n    },\n    actionButton: {\n      border: \"1px solid #1C1F40\",\n      borderRadius: \"50%\",\n      width: \"2rem\",\n      height: \"2rem\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minWidth: 0\n    }\n  };\n\n  // Memoized Card component\n  const Card = React.memo((props: any) => {\n    const item = props?.data;\n    const isShortlisted = shortlisted.data.some(\n      (shortlistedCourse: any) => shortlistedCourse._id === item.course?._id\n    );\n    // Determine badge color and text\n    const badgeColor = item?.counsellorRecommended ? \"#6C7AE0\" : \"#3B3F76\";\n    const badgeText = item?.counsellorRecommended ? \"Student Advisor Recommended\" : \"AI Recommended\";\n    // Popup handlers\n    const handleUniversityClick = (e: React.MouseEvent) => {\n      e.stopPropagation();\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"universityPopup\",\n              data: item.course?.university?._id,\n              dimensions: {\n                width: \"80%\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    };\n    const handleCourseClick = (e: React.MouseEvent) => {\n      e.stopPropagation();\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"mainPopup\",\n              data: item.course,\n              dimensions: {\n                width: \"95%\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    };\n    return (\n      \n      <CustomCard\n        title={badgeText}\n        badgeColor=\"#fff\"\n        badgePosition=\"top-right\"\n        sx={{ \n          height: '80%',\n          minHeight: 320,\n          maxWidth: 600, \n          width: '100%', \n          p: 0,\n          display: 'flex',\n          flexDirection: 'column',\n          backgroundColor:\"#EFF4F7\"\n          \n        }}\n      >\n        <Box  sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 1, px: [1, 2], pl: 1 }}>\n          {/* University Logo */}\n          <Box\n            sx={{\n              width: 48,\n              height: 48,\n              borderRadius: '50%',\n              overflow: 'hidden',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              flexShrink: 0,\n              cursor: 'pointer',\n            }}\n            onClick={handleUniversityClick}\n          >\n            <img\n              src={item.course?.university?.logoSrc}\n              alt=\"logo\"\n              style={{ width: 48, height: 48, objectFit: 'cover', borderRadius: '50%' }}\n            />\n          </Box>\n          <Box sx={{ flex: 1, minWidth: 0 }}>\n            <Typography \n              sx={{ \n                fontWeight: 450, \n                fontSize: '1.05rem', \n                color: '#495052', \n                mb: 0.2, \n                lineHeight: 1.2,\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                display: '-webkit-box',\n                WebkitLineClamp: 2,\n                WebkitBoxOrient: 'vertical',\n                cursor: 'pointer',\n              }}\n              onClick={handleUniversityClick}\n            >\n              {item.course?.university?.name}\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              {/* Country flag (if available) */}\n              {/* {item.course?.university?.location?.country && (\n                <img\n                  src={`https://flagcdn.com/24x18/${(item.course.university.location.country || '').toLowerCase().replace(/ /g, '-')}.png`}\n                  alt={item.course.university.location.country}\n                  style={{ width: 24, height: 18, borderRadius: 3, objectFit: 'cover' }}\n                  onError={e => (e.currentTarget.style.display = 'none')}\n                />\n              )} */}\n              <Typography sx={{ fontSize: '0.95rem', color: '#8E9091' }}>\n                {item.course?.university?.location?.country}\n              </Typography>\n            </Box>\n          </Box>\n        </Box>\n        {/* Course Name */}\n        <Typography \n          sx={{ \n            fontWeight: 700, \n            fontSize: '1.13rem', \n            color: '#222', \n            mt: 2, \n            mb: 1, \n            lineHeight: 1.3,\n            px: [1, 2], pl: 1,\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            display: '-webkit-box',\n            WebkitLineClamp: 2,\n            WebkitBoxOrient: 'vertical',\n            cursor: 'pointer',\n          }}\n          onClick={handleCourseClick}\n        >\n          {item?.course?.name}\n        </Typography>\n        {/* Details Row */}\n        <Box sx={{ \n          mb: 1, \n          px: [1, 2], pl: 1,\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: 0.5,\n          alignItems: 'center'\n        }}>\n          {/* Intakes */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0 }}>\n            <img src={Images.Calender1} alt=\"calendar\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ fontSize: '0.95rem', color: '#495052' }}>\n              {item?.course?.startDate?.map((d: any) => monthNames[d.courseStartingMonth].substring(0, 3)).join(', ')}\n            </Typography>\n          </Box>\n          <Typography sx={{ fontSize: '0.95rem', color: '#495052', flexShrink: 0 }}>|</Typography>\n          {/* Degree */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0 }}>\n            <img src={Images.GraduateHat} alt=\"degree\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ fontSize: '0.95rem', color: '#495052' }}>\n              {item.course.studyLevel}\n            </Typography>\n          </Box>\n          <Typography sx={{ fontSize: '0.95rem', color: '#495052', flexShrink: 0 }}>|</Typography>\n          {/* Fee */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0 }}>\n            <img src={Images.Dollar1} alt=\"fee\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ fontSize: '0.95rem', color: '#495052' }}>\n              {item.course.tuitionFee?.tuitionFee?.toLocaleString() || 'N/A'}\n              <Box component=\"span\" sx={{ fontSize: '0.65em', lineHeight: 1, fontWeight: 600, color: '#495052', ml: 0.2, verticalAlign: 'super', position: 'relative', top: '-0.3em' }}>\n                {item.course.currency?.code}\n              </Box>\n              <span style={{ color: '#8D8B8B', fontWeight: 400, fontSize: '0.8em', marginLeft: '2px' }}>/ year</span>\n            </Typography>\n          </Box>\n          <Typography sx={{ fontSize: '0.95rem', color: '#495052', flexShrink: 0 }}>|</Typography>\n          {/* Duration */}\n          <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.3, flexShrink: 0, minWidth: 0 }}>\n            <img src={Images.Timmer} alt=\"duration\" style={{ width: '1rem', height: '1rem' }} />\n            <Typography sx={{ \n              fontSize: '0.95rem', \n              color: '#495052',\n              wordBreak: 'break-word',\n              overflowWrap: 'break-word',\n              hyphens: 'auto'\n            }}>\n              {Array.isArray(item.course.duration)\n                ? (() => {\n                    const fullTimeDurations = item.course.duration.filter((d: any) => d.durationType === \"Full-time\");\n                    return fullTimeDurations.length > 0 \n                      ? fullTimeDurations.map((d: any) => `${d.duration} ${d.durationType}`).join(', ')\n                      : 'N/A';\n                  })()\n                : item.course.duration || 'N/A'}\n            </Typography>\n          </Box>\n        </Box>\n        {/* Badges Row */}\n        <Box sx={{ display: 'flex', gap: 1, mb: 1, px: [1, 2], pl: 1 }}>\n          <Box sx={{ background: '#F87171', color: '#fff', borderRadius: '8px', px: 1.5, py: 0.2, fontSize: '0.85rem', fontWeight: 600 }}>\n            Apply Soon\n          </Box>\n          <Box sx={{ background: '#9ADBFF', color: '#3B3F76', borderRadius: '8px', px: 1.5, py: 0.2, fontSize: '0.85rem', fontWeight: 600 }}>\n            Sponsored\n          </Box>\n        </Box>\n        {/* Action Buttons */}\n        <Box sx={{ \n          mr: 3.5,\n          mt: 6,\n          display: 'flex', \n          gap: 1.5, \n          justifyContent: 'flex-end',\n          px: 5,\n          pb: 2\n        }}>\n          {/* Cart Button */}\n          <Button\n            sx={{\n              minWidth: 0,\n              width: 36,\n              height: 36,\n              borderRadius: '50%',\n              border: '1px solid #1C1F40',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              boxShadow: 'none',\n              p: 0,\n              // '&:hover': { background: '#f9f9fc' },\n            }}\n            onClick={() => eventHandler({ name: 'cart', data: item })}\n          >\n            <ShoppingCartOutlinedIcon sx={{ fontSize: '1.2rem', color: '#495052' }} />\n          </Button>\n          {/* Shortlist Button */}\n          <Button\n            sx={{\n              minWidth: 0,\n              width: 36,\n              height: 36,\n              borderRadius: '50%',\n              border: '1px solid #495052',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              boxShadow: 'none',\n              p: 0,\n              // '&:hover': { background: '#495052' },\n            }}\n            onClick={() =>\n              isShortlisted\n                ? eventHandler({ name: 'delete', data: item })\n                : eventHandler({ name: 'shortlist', data: item })\n            }\n          >\n            {isShortlisted ? (\n              <FavoriteOutlinedIcon sx={{ color: '#495052', fontSize: '1.2rem' }} />\n            ) : (\n              <FavoriteBorderIcon sx={{ color: '#495052', fontSize: '1.2rem' }} />\n            )}\n          </Button>\n          {/* Not Interested Button */}\n          {\n            alignment !== \"notInterested\" ?\n             <Button\n            sx={{\n              minWidth: 0,\n              width: 36,\n              height: 36,\n              borderRadius: '50%',\n              border: '1px solid #495052',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              background: '#fff',\n              boxShadow: 'none',\n              p: 0,\n              // '&:hover': { background: '#495052' },\n            }}\n            onClick={() => eventHandler({ name: 'hideRecommendation', data: item._id })}\n          >\n            <NotInterestedOutlinedIcon sx={{ color: '#495052', fontSize: '1.2rem' }} />\n          </Button>:null\n          }\n         \n          {/* Delete Button for Not Interested */}\n          {alignment === \"notInterested\" && (\n            <Tooltip title=\"Delete\" placement=\"bottom\">\n              <Box\n                component=\"img\"\n                src={Images.deleteIcon}\n                alt=\"delete\"\n                sx={{ width: '2rem', height: '2rem', cursor: 'pointer' }}\n                onClick={() => handleDeleteCard(item._id)}\n              />\n            </Tooltip>\n          )}\n        </Box>\n      </CustomCard>\n    );\n  });\n\n  // Tabs configuration\n  const tabs = [\n    {\n      label: `Safe (${safe && filterCourses(safe).filter(item => !removedIds.includes(item._id)).length})`,\n      Component: (\n        <Box\n          sx={{\n            width: '100%',\n            px: { xs: 1, sm: 2, md: 4 },\n            py: { xs: 2, md: 4 },\n            boxSizing: 'border-box',\n          }}\n        >\n          {alignment === 'notInterested' && safe && filterCourses(safe).filter(item => !removedIds.includes(item._id)).length === 0 ? (\n             <Grid\n               item\n               xs={8}\n               sx={{\n               display: \"flex\",\n               flexDirection: \"column\",\n               justifyContent: \"center\",\n               alignItems: \"center\",\n               height: \"60vh\",\n               minHeight: \"350px\",\n               }}\n                >\n              <img\n              src={Images.Dull}\n                   alt=\"noData\"\n                   style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n              />\n               <Typography\n                 sx={{\n                  mb: 1,\n                  fontSize: \"1.6rem\",\n                  fontWeight: 600,\n                  color: \"#495052\",\n                  textAlign: \"center\",\n                  }}\n                   >\n                  Your Not Interested List is empty\n                </Typography>\n                <Typography\n                sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n                }}\n                 >\n                       Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                        </Typography>\n                        <Button\n                          sx={{\n                            background: \"#F48438\",\n                            color: \"#fff\",\n                            borderRadius: \"20px\",\n                            px: 4,\n                            py: 1,\n                            fontWeight: 500,\n                            fontSize: \"1rem\",\n                            textTransform: \"none\",\n                            boxShadow: \"none\",\n                            \"&:hover\": {\n                              background: \"#F48438\",\n                            },\n                          }}\n                          onClick={() => navigate('/connect')}\n                        >\n                          Connect\n                        </Button>\n                      </Grid>\n          ) : safe && filterCourses(safe).length > 0 ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              {safe && filterCourses(safe).filter(item => !removedIds.includes(item._id)).map((item, i: number) => (\n                <Grid item xs={12} sm={6} md={6} key={i} sx={{ minWidth: 0 }}>\n                  <Card data={item} i={i} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Grid\n              item\n              xs={8}\n              sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n              }}\n              >\n              <img\n               src={Images.Dull}\n               alt=\"noData\"\n               style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n               />\n               <Typography\n                sx={{\n                 mb: 1,\n                 fontSize: \"1.6rem\",\n                 fontWeight: 600,\n                 color: \"#495052\",\n                 textAlign: \"center\",\n                 }}\n                 >\n                 No safe courses found at the moment\n                 </Typography>\n                 <Typography\n                  sx={{\n                   mb: 3,\n                   fontSize: \"1rem\",\n                   color: \"#8E9091\",\n                   textAlign: \"center\",\n                   }}\n                    >\n                   Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                   </Typography>\n                  <Button\n                    sx={{\n                    background: \"#F48438\",\n                    color: \"#fff\",\n                    borderRadius: \"20px\",\n                     px: 4,\n                     py: 1,\n                     fontWeight: 500,\n                     fontSize: \"1rem\",\n                     textTransform: \"none\",\n                     boxShadow: \"none\",\n                      \"&:hover\": {\n                     background: \"#F48438\",\n                      },\n                    }}\n                    onClick={() => navigate('/connect')}\n                     >\n                      Connect\n                     </Button>\n                     </Grid>\n          )}\n        </Box>\n      ),\n      value: 'Safe',\n    },\n    {\n      label: `Moderate (${moderate && filterCourses(moderate).filter(item => !removedIds.includes(item._id)).length})`,\n      Component: (\n        <Box\n          sx={{\n            width: '100%',\n            px: { xs: 1, sm: 2, md: 4 },\n            py: { xs: 2, md: 4 },\n            boxSizing: 'border-box',\n          }}\n        >\n          {alignment === 'notInterested' && moderate && filterCourses(moderate).filter(item => !removedIds.includes(item._id)).length === 0 ? (\n             <Grid\n                        item\n                        xs={8}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          height: \"60vh\",\n                          minHeight: \"350px\",\n                        }}\n                      >\n                        <img\n                          src={Images.Dull}\n                          alt=\"noData\"\n                          style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n                        />\n                        <Typography\n                          sx={{\n                            mb: 1,\n                            fontSize: \"1.6rem\",\n                            fontWeight: 600,\n                            color: \"#495052\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                         Your Not Interested List is empty\n                        </Typography>\n                        <Typography\n                          sx={{\n                            mb: 3,\n                            fontSize: \"1rem\",\n                            color: \"#8E9091\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                       Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                        </Typography>\n                        <Button\n                          sx={{\n                            background: \"# F48438\",\n                            color: \"#fff\",\n                            borderRadius: \"20px\",\n                            px: 4,\n                            py: 1,\n                            fontWeight: 500,\n                            fontSize: \"1rem\",\n                            textTransform: \"none\",\n                            boxShadow: \"none\",\n                            \"&:hover\": {\n                              background: \"# F48438\",\n                            },\n                          }}\n                          onClick={() => navigate('/connect')}\n                        >\n                          Connect\n                        </Button>\n                      </Grid>\n          ) : moderate && filterCourses(moderate).length > 0 ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              {moderate && filterCourses(moderate).filter(item => !removedIds.includes(item._id)).map((item, i) => (\n                <Grid item xs={8} sm={6} md={6} key={i} sx={{ minWidth: 0 }}>\n                  <Card data={item} key={item._id} i={i} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Grid\n             item\n             xs={8}\n             sx={{\n             display: \"flex\",\n             flexDirection: \"column\",\n             justifyContent: \"center\",\n             alignItems: \"center\",\n             height: \"60vh\",\n             minHeight: \"350px\",\n             }}\n             >\n                        <img\n                          src={Images.Dull}\n                          alt=\"noData\"\n                          style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n                        />\n                        <Typography\n                          sx={{\n                            mb: 1,\n                            fontSize: \"1.6rem\",\n                            fontWeight: 600,\n                            color: \"#495052\",\n                            textAlign: \"center\",\n                          }}\n                 >\n               Looks like there aren't any moderate matches right now\n               </Typography>\n               <Typography\n               sx={{\n               mb: 3,\n              fontSize: \"1rem\",\n              color: \"#8E9091\",\n              textAlign: \"center\",\n               }}\n              >\n              Don't worry - connect with our advisors to find the best-fit courses for you!\n             </Typography>\n             <Button\n              sx={{\n               background: \"#F48438\",\n               color: \"#fff\",\n               borderRadius: \"20px\",\n               px: 4,\n               py: 1,\n               fontWeight: 500,\n               fontSize: \"1rem\",\n               textTransform: \"none\",\n               boxShadow: \"none\",\n              \"&:hover\": {\n              background: \"#F48438\",\n             },\n           }}\n           onClick={() => navigate('/connect')}\n            >\n          Connect\n         </Button>\n         </Grid>\n          )}\n        </Box>\n      ),\n      value: 'Moderate',\n    },\n    {\n      label: `Ambitious (${ambitious && filterCourses(ambitious).filter(item => !removedIds.includes(item._id)).length})`,\n      Component: (\n        <Box\n          sx={{\n            width: '100%',\n            px: { xs: 1, sm: 2, md: 4 },\n            py: { xs: 2, md: 4 },\n            boxSizing: 'border-box',\n          }}\n        >\n          {alignment === 'notInterested' && ambitious && filterCourses(ambitious).filter(item => !removedIds.includes(item._id)).length === 0 ? (\n            <Grid\n                        item\n                        xs={8}\n                        sx={{\n                          display: \"flex\",\n                          flexDirection: \"column\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          height: \"60vh\",\n                          minHeight: \"350px\",\n                        }}\n                      >\n                        <img\n                          src={Images.Dull}\n                          alt=\"noData\"\n                          style={{  width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n                        />\n                        <Typography\n                          sx={{\n                            mb: 1,\n                            fontSize: \"1.6rem\",\n                            fontWeight: 600,\n                            color: \"#495052\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                         Your Not Interested List is empty\n                        </Typography>\n                        <Typography\n                          sx={{\n                            mb: 3,\n                            fontSize: \"1rem\",\n                            color: \"#8E9091\",\n                            textAlign: \"center\",\n                          }}\n                        >\n                       Don't worry, our expert counsellors are here to help you explore the right options just for you!\n                        </Typography>\n                        <Button\n                          sx={{\n                            background: \"#F48438\",\n                            color: \"#fff\",\n                            borderRadius: \"20px\",\n                            px: 4,\n                            py: 1,\n                            fontWeight: 500,\n                            fontSize: \"1rem\",\n                            textTransform: \"none\",\n                            boxShadow: \"none\",\n                            \"&:hover\": {\n                              background: \"#F48438\",\n                            },\n                          }}\n                          onClick={() => navigate('/connect')}\n                        >\n                          Connect\n                        </Button>\n                      </Grid>\n          ) : ambitious && filterCourses(ambitious).length > 0 ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              {ambitious && filterCourses(ambitious).filter(item => !removedIds.includes(item._id)).map((item, i) => (\n                <Grid item xs={8} sm={6} md={6} key={i} sx={{ minWidth: 0 }}>\n                  <Card data={item} key={item._id} i={i} />\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <Grid\n              item\n              xs={8}\n              sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n             }}\n             >\n              <img\n               src={Images.Dull}\n               alt=\"noData\"\n               style={{ width: \"260px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n               />\n              <Typography\n               sx={{\n               mb: 1,\n               fontSize: \"1.6rem\",\n               fontWeight: 600,\n               color: \"#495052\",\n               textAlign: \"center\",\n               }}\n              >\n               No ambitious courses in sight yet\n              </Typography>\n               <Typography\n                sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n                }}\n               >\n               Don't worry - our counsellors can guide you towards bold and exciting opportunities!\n               </Typography>\n              <Button\n                sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                 \"&:hover\": {\n                  background: \"#F48438\",\n                   },\n                  }}\n                   onClick={() => navigate('/connect')}\n                   >\n                  Connect\n                </Button>\n             </Grid>\n          )}\n        </Box>\n      ),\n      value: 'Ambitious',\n    },\n  ]\n\n  // Loading and error states\n  if (loading) {\n    return (\n      <Box sx={{ p: 2 }}>\n        {/* Header with tabs and filters */}\n        <Box sx={{ mb: 3 }}>\n          <Box sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", mb: 2 }}>\n            <Typography variant=\"h5\" fontWeight={600} color=\"#3b3f76\">\n              Recommendations\n            </Typography>\n            <Box sx={{ display: \"flex\", gap: 1 }}>\n              <Box\n                sx={{\n                  height: '36px',\n                  width: '120px',\n                  background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n                  backgroundSize: '200% 100%',\n                  animation: 'shimmer 1.5s infinite',\n                  borderRadius: '18px',\n                  '@keyframes shimmer': {\n                    '0%': { backgroundPosition: '-200% 0' },\n                    '100%': { backgroundPosition: '200% 0' },\n                  },\n                }}\n              />\n            </Box>\n          </Box>\n          \n          {/* Tabs shimmer */}\n          <Box sx={{ display: \"flex\", gap: 2, mb: 3 }}>\n            {['Safe', 'Moderate', 'Ambitious'].map((tab, index) => (\n              <Box\n                key={tab}\n                sx={{\n                  height: '40px',\n                  width: '100px',\n                  background: 'linear-gradient(90deg, #e0e0e0 25%, #d0d0d0 50%, #e0e0e0 75%)',\n                  backgroundSize: '200% 100%',\n                  animation: 'shimmer 1.5s infinite',\n                  borderRadius: '20px',\n                  '@keyframes shimmer': {\n                    '0%': { backgroundPosition: '-200% 0' },\n                    '100%': { backgroundPosition: '200% 0' },\n                  },\n                }}\n              />\n            ))}\n          </Box>\n        </Box>\n        \n        {/* Shimmer cards grid */}\n        <ShimmerGrid count={6} columns={2} />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"500px\" }}>\n        <Typography color=\"error\">{error}</Typography>\n      </Box>\n    );\n  }\n\n  console.log(\"Recc\",recommendations.data);\n\n  return (\n    <>\n      <Box>\n        {recommendations?.data && recommendations?.data?.data?.length > 0 ? (\n          <>\n            {recommendations?.data?.criteria && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 2,\n                  mb: 2,\n                }}\n              >\n                {/* Header with message and Edit button */}\n                <Box\n                  sx={{\n                    p: 2,\n                    borderRadius: 3,\n                    backgroundColor: '#EFF4F7',\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    boxShadow: '0px 1px 4px rgba(0, 0, 0, 0.05)',\n                    border: '1px solid #e0e0e0',\n                    mt: 2,\n                    mb: 2,\n                  }}\n                >\n                  <Typography\n                    sx={{\n                      fontSize: '1rem',\n                      color: '#495052',\n                      fontWeight: 500,\n                    }}\n                  >\n                    If you wish to revise the recommendations, please make the necessary edits now to ensure their accuracy.\n                  </Typography>\n                  <Button\n                    variant=\"outlined\"\n                    onClick={() => setShowEditModal(true)}\n                    sx={{\n                      px: 3,\n                      py: 0.75,\n                      border:\"2px solid #F48438 \",\n                      borderRadius: '20px',\n                      borderColor: '#F48438',\n                      color: '#495052',\n                      fontWeight: 500,\n                      textTransform: 'none',\n                      boxShadow: 'none',\n                    }}\n                  >\n                    Edit\n                  </Button>\n                </Box>\n\n                {/* Tabs, Switch, and Dropdown */}\n                <Box\n                  sx={{\n                    display: 'flex',\n                    flexDirection:{xs:\"column\",md:\"column\",lg:\"row\"},\n                    alignItems: 'center',\n                    justifyContent:{xs:'flex-start',md:'space-between',lg:'space-between'},\n                    gap: 2,\n                    px: { xs: 0, sm: 1 },\n                    width: '100%',\n                  }}\n                >\n                  {/* Tabs */}\n                  <Box sx={{ display: 'flex',flexDirection:{xs:\"column\",md:\"column\",lg:\"row\"},flex:1 }}>\n                     <Box sx={{ display: 'flex',flex:1, gap: 2 }}>\n                    {tabs.map((item: any) => (\n                      <Button\n                        key={item.label}\n                        onClick={() => setActiveTab(item.value)}\n                        sx={{\n                          borderBottom: item.value === activeTab ? '2px solid #3b3f76' : 'none',\n                          textTransform: 'none',\n                          borderRadius: 0,\n                          color: item.value === activeTab ? '#495052' : '#8E9091',\n                          fontWeight: item.value === activeTab ? 600 : 400,\n                          fontSize: { xs: '1rem', md: '1.1rem' },\n                          minWidth: 0,\n                          px: 2,\n                          pb: 1,\n                          '&:hover': {\n                            color: '#8E9091',\n                          },\n                        }}\n                      >\n                        {item.label}\n                      </Button>\n                    ))}\n                  </Box>\n                \n                  {/* Switch and Dropdown */}\n                  <Box sx={{ display: 'flex',flex:1,justifyContent:{xs:\"center\",md:\"center\",lg:\"flex-end\"}, alignItems: 'center', gap: 2 }} >\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={alignment === 'interested'}\n                          onChange={handleChange}\n                          size=\"small\"\n                          sx={{\n                            m: 0,\n                            p: 0,\n                            height: 18,\n                            '& .MuiSwitch-switchBase': {\n                              color: '#495052',\n                              p: 0,\n                              '&.Mui-checked': {\n                                color: '#495052',\n                              },\n                              '&.Mui-checked + .MuiSwitch-track': {\n                                backgroundColor: '#495052',\n                                width: 34,\n                              },\n                            },\n                            '& .MuiSwitch-track': {\n                              backgroundColor: '#e0e0e0',\n                              height: 18,\n                            },\n                          }}\n                        />\n                      }\n                      label={alignment === 'interested' ? 'Interested' : 'Not Interested'}\n                      sx={{\n                        m: 0,\n                        '.MuiFormControlLabel-label': {\n                          fontSize: { xs: '0.95rem', md: '1rem' },\n                          color: '#495052',\n                          fontWeight: 400,\n                          textTransform: 'capitalize',\n                          borderRadius: '8px',\n                          padding: '2px 6px',\n                          lineHeight: 1.5,\n                        },\n                      }}\n                    />\n                    <TextField\n                      select\n                      name=\"All\"\n                      variant=\"outlined\"\n                      size=\"small\"\n                      value={selectedFilter}\n                      onChange={handleFilterChange}\n                      sx={{\n                        width: { xs: 120, sm: 180, md: 220 },\n                        '& .MuiOutlinedInput-root': {\n                          borderRadius: '10px',\n                          height: 36,\n                          fontSize: { xs: '0.95rem', md: '1rem' },\n                          padding: '0 8px',\n                        },\n                        '& .MuiSelect-select': {\n                          color: '#495052',\n                          padding: '6px 10px',\n                          minHeight: 'unset',\n                          fontSize: { xs: '0.95rem', md: '1rem' },\n                        },\n                      }}\n                    >\n                      {filterNames.map((item) => (\n                        <MenuItem value={item.name} key={item.id} sx={{ fontSize: { xs: '0.95rem', md: '1rem' }, py: 0.5,color:\"#495052\" }}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </TextField>\n                  </Box>\n                  </Box>\n                 \n                </Box>\n                {tabs.find((item) => item.value === activeTab)?.Component}\n              </Box>\n            )}\n          </>\n        ) : (\n          <Grid\n            item\n            xs={8}\n            sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"60vh\",\n            minHeight: \"350px\",\n            }}\n             >\n           <img\n           src={Images.Dull}\n           alt=\"noData\"\n           style={{ width: \"220px\", height: \"200px\", marginBottom: \"1.5rem\" }}\n           />\n          <Typography\n           sx={{\n           mb: 1,\n           fontSize: \"1.6rem\",\n           fontWeight: 600,\n           color: \"#495052\",\n           textAlign: \"center\",\n           }}\n           >\n            AI Recommended Course Finder\n          </Typography>\n          <Typography\n            sx={{\n            mb: 3,\n            fontSize: \"1rem\",\n            color: \"#8E9091\",\n            textAlign: \"center\",\n            }}\n            >\n            Try our AI-powered Course Finder just enter your preferences and get smart, personalized recommendations in seconds\n           </Typography>\n           <Button\n             sx={{\n               background: \"#F48438\",\n               color: \"#fff\",\n               borderRadius: \"20px\",\n               px: 4,\n               py: 1,\n               fontWeight: 500,\n               fontSize: \"1rem\",\n               textTransform: \"none\",\n               boxShadow: \"none\",\n               \"&:hover\": {\n                background: \"#F48438\",\n               },\n              }}\n              onClick={() => navigate(\"/studylevel\")}\n               >\n               Generate\n             </Button>\n           </Grid>\n        )}\n      </Box>\n      <RecommendationEditModal\n        open={showEditModal}\n        onClose={() => setShowEditModal(false)}\n        data={recommendations?.data?.criteria || []}\n        onSubmit={(updatedData) => {\n          console.log(\"Updated form data\", updatedData);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Recommended;\n","import { Avatar, Box, Typography, Grid, Button } from \"@mui/material\";\nimport React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport { getAdvisorTitle, setWordCase } from \"../../../assets/library\";\nimport { requestAdvisor } from \"../../../services\";\nimport { addAdvisorInfo, updateAdvisorInfo } from \"../../../store/Slices/advisorsSlice\";\nimport { addChats } from \"../../../store/Slices/chatsSlice\";\nimport { Advisor } from \"../../../types/types\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\n// import Images from \"src/assets\";\n// import { globalButton } from \"src/components/styles/customStyles\";\n// import { useNavigate } from \"react-router-dom\";\nimport CustomCard from \"src/genericComponents/customCard\";\n\nconst Advisors = () => {\n  const Preferences = useAppSelector((state) => state.preferences);\n  const advisors = useAppSelector((state) => state.advisor);\n  const dispatch = useAppDispatch();\n  // const navigate = useNavigate();\n  const assignedCountries =\n    advisors?.data?.flatMap((advisor: Advisor) => advisor.assignedCountries) ||\n    [];\n  const unassignedCountries = Preferences?.data?.country?.filter(\n    (country: string) => !assignedCountries.includes(country)\n  );\n\n  const addAdvisors = async (item: string) => {\n    try {\n      const response = await requestAdvisor({\n        country: item,\n      });\n\n      const newAdvisor = response.data.data.advisor;\n      const existingAdvisor = advisors?.data?.find((advisor) => advisor._id === newAdvisor._id);\n\n      if (existingAdvisor) {\n        dispatch(updateAdvisorInfo(newAdvisor));\n      } else {\n        dispatch(addAdvisorInfo(newAdvisor));\n      }\n      if (response.data.data.chat !== null) {\n        dispatch(addChats(response.data.data.chat));\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      {/* <Typography color=\"#3B3F76\" gutterBottom fontSize=\"1.2rem\">\n        Advisors\n      </Typography> */}\n      <Box\n        sx={{\n          borderRadius: \"1rem\",\n        }}\n      >\n        <Grid container spacing={3}>\n          {advisors?.data?.map((item: Advisor, i: number) => (\n            <Grid item xs={12} sm={6} lg={4} key={i} sx={{ cursor: \"pointer\" }} onClick={() =>\n              dispatch(\n                setPopup({\n                  show: true,\n                  data: {\n                    container: {\n                      name: \"advisor\",\n                      data: item,\n                      dimensions: {\n                        width: \"1200px\",\n                        height:\"85%\"\n\n                      },\n                    },\n                    type: \"custom\",\n                  },\n                })\n              )\n            }>\n                <Box\n                  sx={{\n                    px: 2,\n                    pt: 1,\n                    pb: 2,\n                    borderRadius: \"1rem\",\n                    display: \"flex\",\n                    gap: \"1rem\",\n                    position: \"relative\",\n                    height: \"160px\",\n                    backgroundColor: '#EFF4F7',\n                    boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n                  }}\n                >\n                  <Avatar src={item?.info?.displayPicSrc} alt=\"\" />\n\n                  <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n                    <Box sx={{ flex: 1 }}>\n                      <Typography gutterBottom fontSize=\"1.2rem\" fontWeight=\"600\" color=\"#1C1F40\">\n                        {setWordCase(item?.info?.firstName)}\n                      </Typography>\n                      <Typography sx={{color:'#858585', fontSize: '0.9rem'}}>\n                        {setWordCase(item?.info?.email)}\n                      </Typography>\n                    \n                      <Box sx={{ mt: 1 }}>\n                        <Typography\n                          fontSize=\"0.8rem\"\n                          sx={{ \n                            display: 'inline-block',\n                            px: 1.5,\n                            py: 0.5,\n                            borderRadius: '12px',\n                            border: '1px solid #E0E0E0',\n                            backgroundColor: '#F5F5F5',\n                            color: '#666666',\n                            fontWeight: 500\n                          }}\n                        >\n                          {getAdvisorTitle(item?.info?.role)}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    \n                    {item?.assignedCountries?.length > 0 ?\n                      <Box sx={{ \n                        mt: 'auto', \n                        width: '100%', \n                        display: 'flex', \n                        flexDirection: 'column', \n                        alignItems: 'flex-end' \n                      }}>\n                        <Typography\n                          fontSize=\"0.8rem\"\n                          sx={{ \n                            textAlign: 'right', \n                            fontWeight: 600,\n                            color: '#1C1F40',\n                            lineHeight: 1.2\n                          }}\n                        >\n                          {item?.assignedCountries?.map((country, i) => (\n                            <span key={i}>{country}\n                              {i < item?.assignedCountries?.length - 1 && \", \"}</span>\n                          ))}\n                        </Typography>\n                        <Typography\n                          fontSize=\"0.8rem\"\n                          sx={{ \n                            color: '#858585', \n                            textAlign: 'right',\n                            mt: 0.3\n                          }}\n                        >\n                          Assigned for\n                        </Typography>\n                      </Box> : \"\"}\n                  </div>\n                </Box>\n            </Grid>\n          ))}\n          {unassignedCountries?.map((item, i) => (\n            <Grid item xs={12} sm={6} lg={4} key={i}>\n              <Box\n                sx={{\n                  backgroundColor: \"#EDEDFD\",\n                  px: 2,\n                  py: 4,\n                  borderRadius: \"1rem\",\n                  display: \"flex\",\n                  gap: \"1rem\",\n                  position: \"relative\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100px\"\n                }}\n              >\n                <Typography color=\"#3B3F76CC\" fontSize=\"14px\">\n                  Click below to get the advisor assigned for {item}\n                </Typography>\n                <Button\n                  onClick={() => addAdvisors(item)}\n                  sx={{\n                    border: \"1px solid #3B3F76CC\",\n                    borderRadius: \"15px\",\n                    p: 0.5,\n                    textTransform: \"none\",\n                    color: \"#3B3F76CC\",\n                  }}\n                >\n                  Request for advisor\n                </Button>\n              </Box>\n            </Grid>\n          ))}\n\n        </Grid>\n\n      </Box>\n    </div>\n  );\n};\n\nexport default Advisors;\n","import { Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport Images from \"../../../assets\";\nimport { useAppDispatch, useAppSelector } from \"../../../assets/hooks\";\nimport {\n  globalButton, secondaryButton,\n} from \"../../../components/styles/customStyles\";\nimport CustomCard from \"../../../genericComponents/customCard\";\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { Advisor, Event } from \"../../../types/types\";\nimport { setPopup } from \"../../../store/Slices/popupSlice\";\nimport { updateCart } from \"../../../services\";\nimport { setCart } from \"../../../store/Slices/cartSlice\";\nimport ConfirmDialog from \"../../../genericComponents/modalPopup/confirmDialog\";\nimport { useNavigate } from \"react-router-dom\";\n\n\ninterface CourseItem {\n  _id: string;\n  course: {\n    _id: string;\n    name: string;\n    featured: boolean;\n    university: {\n      name: string;\n      logoSrc: string;\n      location: {\n        country: string;\n      };\n    };\n  };\n  intake: string;\n}\n\n\nconst Shortlisted: React.FC = () => {\n  const advisors = useAppSelector((state: any) => state.advisor);\n  const cartCourses = useAppSelector((state: any) => state.cart);\n  const orders = useAppSelector((state: any) => state.orders);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  // const preference= useAppSelector(store =>store.preferences)\n  const [deleteItem, setDeleteItem] = useState<CourseItem | null>(null);\n  const [open, setOpen] = useState<boolean>(false);\n  const [selectedCourses, setSelectedCourses] = useState<string[]>([]);\n  const [isProceedDisabled, setIsProceedDisabled] = useState<boolean>(true);\n  // const countryPreference = preference?.data?.country?.map((item) => ({\n  //   name: item,\n  //   value: item\n  // }));\n\n  useEffect(() => {\n    const hasSelectedCourses = selectedCourses.length > 0;\n    const hasAlreadyApplied = selectedCourses.some((courseId) => {\n      const course = cartCourses.data.find((item: CourseItem) => item._id === courseId);\n      return course ? isAlreadyApplied(course) : false;\n    });\n    setIsProceedDisabled(!hasSelectedCourses || hasAlreadyApplied);\n    // eslint-disable-next-line\n  }, [selectedCourses, cartCourses]);\n  const isSameMonthAndYear = (date1: string, date2: string) => {\n    const d1 = new Date(date1);\n    const d2 = new Date(date2);\n    return (\n      d1.getUTCFullYear() === d2.getUTCFullYear() &&\n      d1.getUTCMonth() === d2.getUTCMonth()\n    );\n  };\n  const isAlreadyApplied = (course: CourseItem): boolean => {\n    return orders?.data?.some(\n      (order: any) =>\n        order.products?.some(\n          (product: any) =>\n            product?.course?._id === course?.course?._id &&\n          isSameMonthAndYear(product?.intake , course?.intake)\n        )\n    );\n  };\n\n  const premiumApplicationCount = orders.data.reduce((acc: number, order: any) => {\n    const premiumProducts = order.products?.filter((product: any) => product.category === \"premium application\") || [];\n    return acc + premiumProducts.length;\n  }, 0);\n  \n  const handleCardClick = (item: CourseItem) => {\n    if (selectedCourses.includes(item._id)) {\n      setSelectedCourses(selectedCourses.filter((id) => id !== item._id));\n    } else {\n      setSelectedCourses([...selectedCourses, item._id]);\n    }\n  };\n\n  const handleDeleteOpen = (item: CourseItem) => {\n    setOpen(true);\n    setDeleteItem(item);\n  };\n\n  const handleRequestQuote = () => {\n    const counsellors = advisors?.data?.filter(\n      (advisor:Advisor) => advisor.info.role === \"counsellor\"\n    );\n    if (counsellors && counsellors.length > 0) {\n      const selectedId = counsellors[0];\n      dispatch(\n        setPopup({\n          show: true,\n          data: {\n            container: {\n              name: \"advisor\",\n              data:selectedId , \n              dimensions: {\n                width: \"900px\",\n                height: \"85%\",\n              },\n            },\n            type: \"custom\",\n          },\n        })\n      );\n    } else {\n      navigate(\"/profile/advisors\");\n    }\n  };\n  \n  const handleCheckout = () => {\n    const selectedCourseData = cartCourses.data.filter((item: CourseItem) =>\n      selectedCourses.includes(item._id)\n    );\n    dispatch(\n      setPopup({\n        show: true,\n        data: {\n          container: {\n            name: \"checkout\",\n            data: selectedCourseData,\n            dimensions: {\n              width: \"90%\",\n              height: \"90%\",\n            },\n          },\n          type: \"custom\",\n        }\n      }))\n  }\n\n  const eventHandler = async (event: Event) => {\n    switch (event.name) {\n      case \"cart\":\n        try {\n          let values = {\n            action: \"remove\",\n            category: event?.data?.course?.featured ?  \"premium application\" : \"elite application\",\n            courseId: event?.data?.course._id,\n            intake: event?.data?.intake,\n            itemId: event?.data?._id,\n          };\n          const response = await updateCart(values);\n          if (response.data.success) {\n            dispatch(setCart(response.data.data))\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"success\",\n                    data: \"Product deleted successfully\",\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\",\n                      // height:\"20%\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              }))\n          } else {\n            dispatch(\n              setPopup({\n                show: true,\n                data: {\n                  container: {\n                    name: \"error\",\n                    data: response.data.message,\n                    dimensions: {\n                      width: \"30%\",\n                      height: \"40%\",\n                      show: \"none\",\n                      // height:\"20%\"\n\n                    },\n                  },\n                  type: \"custom\",\n                },\n              })\n            );\n          }\n        } catch (error) { }\n        setOpen(false);\n        break;\n      // case \"checkout\":\n      //   dispatch(\n      //     setPopup({\n      //       show: true,\n      //       data: {\n      //         container: {\n      //           name: \"checkout\",\n      //           data: courseCards,\n      //           dimensions: {\n      //             width: \"90%\",\n      //             height:\"90%\"\n      //           },\n      //         },\n      //         type: \"custom\",\n      //       },\n      //     })\n      //   );\n      // break;\n      default:\n        break;\n    }\n  };\n\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return `${month} ${year}`;\n  };\n\n\n  return (\n    <Box>\n      <Box sx={{ height: \"65vh\", overflowY: \"scroll\", p: 1 }}>\n        <Grid container spacing={3}>\n          {cartCourses.data && cartCourses.data.length > 0 ? Array.from(\n            new Set(cartCourses.data.map((item: CourseItem, i: number) => {\n              const alreadyApplied = isAlreadyApplied(item);\n              const isSelected = selectedCourses.includes(item._id);\n              return (\n                <Grid\n                  item\n                  xs={12}\n                  sm={6}\n                  lg={5}\n                  key={item._id}\n                  sx={{ paddingLeft: { xs: 0, md: \"1rem\" } }}\n                >\n                  <CustomCard\n                    title={item?.course?.university?.location?.country}\n                    disabled={alreadyApplied}\n                    i={i}\n                  >\n                    <Box sx={{ display: \"flex\", gap: \"10px\" }}\n                     onClick={() => {\n                      dispatch(\n                        setPopup({\n                          show: true,\n                          data: {\n                            container: {\n                              name: \"mainPopup\",\n                              data: item.course,\n                              dimensions: {\n                                width: \"95%\",\n                                // height:\"80%\"\n                              },\n                            },\n                            type: \"custom\",\n                          },\n                        })\n                      );\n                    }}\n                    >\n                      <img\n                        src={item.course.university.logoSrc}\n                        alt=\"logo\"\n                        style={{\n                          width: \"1.5rem\",\n                          height: \"1.5rem\",\n                          borderRadius: \"10px\",\n                        }}\n                      />\n                      <Box sx={{ flex: 1 }}>\n                        <Typography\n                          fontSize=\"0.9rem\"\n                          fontWeight=\"500\"\n                          gutterBottom\n                          sx={{\n                            textOverflow: \"ellipsis\",\n                            whiteSpace: \"nowrap\",\n                            overflow: \"hidden\",\n                            mb: 1.5,\n                            textTransform: \"capitalize\",\n                          }}\n                        >\n                          {item.course.university.name}\n                        </Typography>\n                        <Tooltip\n                          title={item.course.name}\n                          placement=\"bottom\"\n                          slotProps={{\n                            tooltip: {\n                              sx: {\n                                color: \"#fff\",\n                                backgroundColor: \"#3B3F76\",\n                                boxShadow: 1,\n                                \"&.MuiTooltip-tooltip\": {\n                                  marginTop: \"-5px !important\",\n                                },\n                              },\n                            },\n                          }}\n                        >\n                          <Typography\n                            fontSize=\"0.9rem\"\n                            sx={{\n                              fontSize: { xs: \"13px\", lg: \"14px\" },\n                              fontWeight: 500,\n                              textOverflow: \"ellipsis \",\n                              lineClamp: 1,\n                              height: \"1.5rem\",\n                              textTransform: \"capitalize\",\n                              overflow: \"hidden\",\n                              display: \"-webkit-box\",\n                              WebkitLineClamp: \"1\",\n                              WebkitBoxOrient: \"vertical\",\n                            }}\n                          >\n                            {item.course.name}\n                          </Typography>\n                        </Tooltip>\n                        <Typography\n                          component=\"span\"\n                          fontSize=\"0.8rem\"\n                          fontWeight=\"500\"\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            whiteSpace: \"nowrap\",\n                            mt: 1,\n                          }}\n                        >\n                          <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                          &nbsp; Start date:{\" \"}\n                          {item.intake ? formatDate(item.intake) : \"N/A\"}\n                        </Typography>\n                      </Box>\n                    </Box>\n                    <Grid\n                      container\n                      spacing={2}\n                      sx={{ mt: 1, alignItems: \"center\" }}\n                    >\n                      <Grid\n                        item\n                        xs={6}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        {!item.course.featured && !alreadyApplied && premiumApplicationCount < 5 && (\n                          <Button\n                            sx={{\n                              // width: \"100%\",\n                              color: \"#fff\",\n                              background:\n                                \"linear-gradient(90deg, #0252B2 0%, #561D6C 100%)\",\n                              fontWeight: \"500\",\n                              fontSize: \"10px\",\n                              textTransform: \"none\",\n                              borderRadius: \"15px\",\n                              padding: \"3px 0\",\n                              width: \"100px\"\n                            }}\n                          >\n                            Apply for free\n                          </Button>\n                        )}\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        sx={{\n                          display: \"flex\",\n                          justifyContent: \"flex-end\",\n                          alignItems: \"center\",\n                          gap: \"8px\",\n                        }}\n                      >\n                        {alreadyApplied ? (\n                          <>\n                            <img\n                              src={Images.deleteIcon}\n                              alt=\"delete\"\n                              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                              onClick={() => handleDeleteOpen(item)}\n                            />\n                            <CheckCircleIcon\n                              sx={{\n                                fontSize: \"1.25rem\",\n                                color: \"#02b524\",\n                              }}\n                            />\n                            <Typography\n                              sx={{\n                                fontSize: \"12px\",\n                                color: \"#02b524\",\n                                textTransform: \"capitalize\",\n                                whiteSpace: \"nowrap\",\n                              }}\n                            >\n                              Already placed\n                            </Typography>\n                          </>\n                        ) : (\n                          <>\n                            <img\n                              src={Images.deleteIcon}\n                              alt=\"delete\"\n                              style={{ width: \"1.5rem\", height: \"1.5rem\" }}\n                              onClick={() => handleDeleteOpen(item)}\n                            />\n                            {isSelected ? (\n                              <CheckCircleIcon\n                                sx={{\n                                  fontSize: \"1.35rem\",\n                                  color: \"#1C1F40\",\n                                }}\n                                onClick={() => handleCardClick(item)}\n                              />\n                            ) : (\n                              <Box\n                                sx={{\n                                  width: '1.1rem',\n                                  height: '1.1rem',\n                                  borderRadius: '50%',\n                                  border: '1px solid #000',\n                                  marginTop: '3px',\n                                  marginLeft: \"5px\"\n                                }}\n                                onClick={() =>\n                                  handleCardClick(item)\n                                }\n                              ></Box>\n                            )}\n                          </>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </CustomCard>\n                </Grid>\n              );\n            }))\n          ) : (\n            <Grid\n              item\n              xs={12}\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"60vh\",\n                minHeight: \"350px\",\n              }}\n            >\n              <img\n                src={Images.Confused}\n                alt=\"noData\"\n                style={{ width: \"220px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n              />\n              <Typography\n                sx={{\n                  mb: 1,\n                  fontSize: \"1.6rem\",\n                  fontWeight: 600,\n                  color: \"#495052\",\n                  textAlign: \"center\",\n                }}\n              >\n                Your Cart Is Empty\n              </Typography>\n              <Typography\n                sx={{\n                  mb: 3,\n                  fontSize: \"1rem\",\n                  color: \"#8E9091\",\n                  textAlign: \"center\",\n                }}\n              >\n                Looks like you haven't made your choice yet…\n              </Typography>\n              <Button\n                sx={{\n                  background: \"#F48438\",\n                  color: \"#fff\",\n                  borderRadius: \"20px\",\n                  px: 4,\n                  py: 1,\n                  fontWeight: 500,\n                  fontSize: \"1rem\",\n                  textTransform: \"none\",\n                  boxShadow: \"none\",\n                  \"&:hover\": {\n                    background: \"#F48438\",\n                  },\n                }}\n                onClick={() => {\n                  const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                    1\n                  )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                  const subDisciUrl = window.btoa(subDisUrl);\n                  navigate(`/explore?${subDisciUrl}`);\n                }}\n              >\n                Add products\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n\n      {cartCourses.data && cartCourses.data.length > 0 && (\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: { xs: \"column\", sm: \"row\" },\n            gap: { xs: 2, md: 2 },\n            mb: 2,\n            p: 1,\n          }}\n        >\n          <Button\n            sx={[secondaryButton, { width: \"200px\" }]}\n            onClick={handleRequestQuote}\n          >\n            Request a Quote\n          </Button>\n\n\n          {isProceedDisabled ? (\n            <Tooltip\n              slotProps={{\n                tooltip: {\n                  sx: {\n                    color: \"#fff\",\n                    backgroundColor: \"#3B3F76\",\n                    boxShadow: 1,\n                    \"&.MuiTooltip-tooltip\": {\n                      marginTop: \"-5px !important\",\n                    },\n                  },\n                },\n              }}\n              title=\"Select courses to proceed\"\n              placement=\"top\"\n            >\n              <span style={{cursor:\"pointer\"}}>\n                <Button\n                  sx={[globalButton, { width: \"200px\", background: \"#dfe1e6\" }]}\n                  disabled\n                >\n                  Proceed to Checkout\n                </Button>\n              </span>\n            </Tooltip>\n          ) : (\n            <Button\n              sx={[globalButton, { width: \"200px\", background: \"#3b3f76\" }]}\n              onClick={handleCheckout}\n            >\n              Proceed to Checkout\n            </Button>\n          )}\n\n        </Box>\n      )}\n      <ConfirmDialog\n        open={open}\n        handleClose={() => setOpen(false)}\n        additionalData={{\n          onSubmit: () => eventHandler({ name: \"cart\", data: deleteItem }),\n          title: \"Are you sure you want to delete this from your cart?\",\n          content:\n            \"You're just a few steps away from applying to universities.\",\n        }}\n      />\n\n    </Box>\n  );\n};\n\n\n\nconst Cart = () => {\n  return (\n    <div  >\n      <Box >\n        <Box >\n          <Shortlisted />\n\n        </Box>\n      </Box>\n\n    </div>\n  )\n}\n\nexport default Cart\n\n\n","import { Box, Button, Divider, Grid, Stack, Tooltip, Typography } from '@mui/material'\nimport React from 'react'\nimport Images from 'src/assets'\nimport { useAppSelector } from 'src/assets/hooks'\nimport TimerIcon from \"@mui/icons-material/Timer\";\nimport CustomCard from 'src/genericComponents/customCard'\nimport Razor from './checkout/razor';\nimport { setWordCase } from 'src/assets/library';\nimport { useNavigate } from 'react-router-dom';\n\nconst Orders = () => {\n  const navigate=useNavigate()\n  const orders = useAppSelector(store => store.orders)\n  function formatDate(date: Date): string {\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); \n    const year = date.getFullYear();\n\n    return `${day}-${month}-${year}`;\n  }\n  function date(date: Date) {\n    const month = date.toLocaleString(\"default\", { month: \"short\" });\n    const year = date.getFullYear();\n    return month + \" \" + year;\n  }\n  return (\n    <div style={{\n      height: \"80vh\", \n      overflowY: \"scroll\",\n      padding: \"2rem\"\n    }}>\n      <Box>\n      {/* <Typography sx={{ position: \"relative\", width: \"1.5rem\", height: \"1.5rem\", borderRadius: \"50%\", background: \"#75ECE5\", mb: 2 }}>\n        <Typography color=\"#3b3f76\" sx={{ position: \"absolute\", top: \"-4px\", left: \"14px\", width: \"200px\" }} fontWeight=\"500\" fontSize=\"1.1rem\">\n          Orders\n        </Typography>\n      </Typography> */}\n      <Grid container spacing={3} sx={{}}>\n        {orders?.data?.length > 0 ? (\n          orders?.data?.map((item, i) => (\n            <React.Fragment key={i}>\n              <Grid item xs={12}>\n                <Box sx={{}}>\n                  <Grid container spacing={2}>\n                    {item?.products?.map((product, j) => (\n                      <Grid item xs={12} md={6} lg={4} key={j}>\n                        <CustomCard title={product.course?.university?.location?.country} i={j}>\n                          <Box>\n                            {product?.cancellationRequest === true ? (\n                              <img\n                                src={Images.cancelledIcon}\n                                alt=\"cancelled\"\n                                style={{\n                                  position: \"absolute\",\n                                  top: \"-28px\",\n                                  right: \"-26px\",\n                                }}\n                              />\n                            ) : (\n                              \"\"\n                            )}\n                            <Box sx={{ display: \"flex\", gap: \"10px\", width: \"100%\" }}>\n                              <img\n                                src={product.course?.university?.logoSrc || Images.establishedYear}\n                                alt=\"logo\"\n                                style={{\n                                  width: \"1.5rem\",\n                                  height: \"1.5rem\",\n                                  marginRight: \"5px\",\n                                  borderRadius: \"10px\",\n                                }}\n                              />\n                              <div style={{ flex: 1 }}>\n                                <Tooltip\n                                  slotProps={{\n                                    tooltip: {\n                                      sx: {\n                                        color: \"#fff\",\n                                        backgroundColor: \"#3B3F76\",\n                                        boxShadow: 1,\n                                        \"&.MuiTooltip-tooltip\": {\n                                          marginTop: \"-5px !important\",\n                                        },\n                                      },\n                                    },\n                                  }}\n                                  title={product?.course?.name}\n                                  placement=\"bottom\"\n                                >\n                                  <Typography\n                                    fontSize=\"0.9rem\"\n                                    sx={{\n                                      fontSize: { xs: \"13px\", lg: \"14px\" },\n                                      fontWeight: 500,\n                                      textOverflow: \"ellipsis \",\n                                      lineClamp: 1,\n                                      height: \"1.5rem\",\n                                      textTransform: \"capitalize\",\n                                      overflow: \"hidden\",\n                                      display: \"-webkit-box\",\n                                      WebkitLineClamp: \"1\",\n                                      WebkitBoxOrient: \"vertical\",\n                                    }}\n                                  >\n                                    {product?.course?.name}\n                                  </Typography>\n                                </Tooltip>\n                                <Typography\n                                  fontSize=\"0.9rem\"\n                                  sx={{\n                                    fontSize: { xs: \"12px\", lg: \"12px\" },\n                                    height: \"1.5rem\",\n                                    textTransform: \"capitalize\",\n                                    display: \"-webkit-box\",\n                                    WebkitBoxOrient: \"vertical\",\n                                    my: 1,\n                                    color:\"#495052\"\n                                  }}\n                                >\n                                  {product.course?.university?.name}\n\n                                </Typography>\n                              </div>\n                            </Box>\n                            <Stack\n                              direction=\"row\"\n                              justifyContent=\"end\"\n                              spacing={1}\n                              sx={{ mt: 1,mr:6 }}\n                            >\n                              <Typography\n                                component=\"span\"\n                                fontSize=\"0.8rem\"\n                                fontWeight=\"500\"\n                                sx={{\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  whiteSpace: \"nowrap\",\n                                  color:\"#8E9091\"\n                                }}\n                              >\n                                <TimerIcon sx={{ fontSize: \"1.25rem\" }} />\n                                &nbsp; Start date :\n                                {product?.intake ? date(new Date(product?.intake)) : null}\n                              </Typography>\n                            </Stack>\n                            {/* <p\n                        style={{\n                          position: \"absolute\",\n                          left: \"10px\",\n                          bottom: \"10%\",\n                          background: \"#B7B7E7\",\n                          width: \"1.1rem\",\n                          height: \"1.1rem\",\n                          margin: 0,\n                          borderBottomLeftRadius: \"20px\",\n                          transform: \"rotate(45deg)\",\n                        }}\n                      ></p> */}\n                          </Box>\n                        </CustomCard>\n                      </Grid>\n                    ))}\n                  </Grid>\n                  <Box sx={{ mt: 2, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                    <Box>\n                      {item?.paymentDetails?.paymentStatus !== \"paid\" ? <Razor data={item?._id} total={Math.floor(item?.paymentDetails?.amount / 100).toLocaleString(\"en-US\")} type=\"reorder\" /> : \"\"}\n                    </Box>\n                    <Box sx={{ float: 'right' }}>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\">Order total:{item?.paymentDetails?.currency} {Math.floor(item?.paymentDetails?.amount / 100).toLocaleString(\"en-US\")}</Typography>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\" sx={{ color: item?.paymentDetails?.paymentStatus === \"paid\" ? \"green\" : \"red\" }}>Status:{setWordCase(item?.paymentDetails?.paymentStatus)}</Typography>\n                      <Typography fontSize=\"0.9rem\" color=\"#8D8B8B\">Order placed: {item?.paymentDetails?.created_at ? formatDate(new Date(item?.paymentDetails?.created_at)) : \"N/A\"}</Typography>\n                    </Box>\n                  </Box>\n                </Box>\n              </Grid>\n              {i < orders.data.length - 1 && (\n                <Grid item xs={12}>\n                  <Divider />\n                </Grid>\n              )}\n            </React.Fragment>\n          ))\n        )  : (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"60vh\",\n              minHeight: \"350px\",\n            }}\n          >\n            <img\n              src={Images.Confused}\n              alt=\"noData\"\n              style={{ width: \"220px\", height: \"220px\", marginBottom: \"1.5rem\" }}\n            />\n            <Typography\n              sx={{\n                mb: 1,\n                fontSize: \"1.6rem\",\n                fontWeight: 600,\n                color: \"#495052\",\n                textAlign: \"center\",\n              }}\n            >\n              oops!\n            </Typography>\n            <Typography\n              sx={{\n                mb: 3,\n                fontSize: \"1rem\",\n                color: \"#8E9091\",\n                textAlign: \"center\",\n              }}\n            >\n             You haven't placed any order yet-start exploring and find something you love!\n            </Typography>\n            <Button\n              sx={{\n                background: \"#F48438\",\n                color: \"#fff\",\n                borderRadius: \"20px\",\n                px: 4,\n                py: 1,\n                fontWeight: 500,\n                fontSize: \"1rem\",\n                textTransform: \"none\",\n                boxShadow: \"none\",\n                \"&:hover\": {\n                  background: \"#F48438\",\n                },\n              }}\n              onClick={() => {\n                const subDisUrl = `activeTab=${encodeURIComponent(JSON.stringify('courses'))}&FilterData=${encodeURIComponent(JSON.stringify([]))}&page=${JSON.stringify(\n                  1\n                )}&search=${encodeURIComponent(JSON.stringify(''))}`\n                const subDisciUrl = window.btoa(subDisUrl);\n                navigate(`/explore?${subDisciUrl}`);\n              }}\n            >\n              Add products\n            </Button>\n          </Grid>\n        )}\n      </Grid>\n    </Box>\n    </div>\n  )\n}\n\nexport default Orders","import { Box } from \"@mui/material\";\nimport ProfileSidebar from \"./profileSidebar\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Documents from \"./section/documents\";\nimport Universities from \"./section/universities/universities\";\nimport Dashboard from \"./section/dashboard\";\nimport ProfileSection from \"./section/profileSection\";\nimport AppliedUniversities from \"./section/universities/appliedUniversities\";\nimport Recommended from \"./section/recommend\";\nimport Advisors from \"./section/advisors\";\nimport Cart from \"./section/cart\";\nimport Orders from \"./section/orders\";\n\nconst ProfileRightSide = () => {\n  return (\n    <Routes>\n      <Route path=\"dashboard\" element={<Dashboard />} />\n      <Route path=\"applications\" element={<AppliedUniversities />} />\n      <Route path=\"shortlisted\" element={<Universities />} />\n      <Route path=\"personal\" element={<ProfileSection initialTab={0} />} />\n      <Route path=\"education\" element={<ProfileSection initialTab={1} />} />\n      <Route path=\"test\" element={<ProfileSection initialTab={2}/>} />\n      <Route path=\"workexperience\" element={<ProfileSection initialTab={3}/>} />\n      <Route path=\"preference\" element={<ProfileSection initialTab={4}/>} />\n      <Route path=\"recommendedCourses/:id\" element={<Recommended />} />\n      <Route path=\"experts\" element={<Advisors />} />\n      <Route path=\"documents\" element={<Documents />} />\n      <Route path=\"cart\" element={<Cart />} />\n      <Route path=\"orders\" element={<Orders />} />\n    </Routes>\n  );\n};\n\nconst ProfileLayout = () => {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"center\", \n        width: \"100%\",\n        minHeight: \"100vh\", // Only minHeight, not height\n      }}\n    >\n      <Box\n        sx={{\n          display: \"flex\",\n          width: \"100%\",\n          maxWidth: \"1440px\",\n          // height: \"100%\", // Remove fixed height\n        }}\n      >\n        {/* Sidebar */}\n        <Box\n          sx={{\n            width: { xs: \"60px\", md: \"220px\" }, \n            position: \"fixed\",\n            left: 16,\n            height: \"100vh\",\n            zIndex: 10,\n            paddingTop: \"3rem\",\n          }}\n        >\n          <ProfileSidebar />\n        </Box>\n\n        {/* Main Content */}\n        <Box\n          sx={{\n            marginLeft: { xs: \"70px\", md: \"230px\" },\n            flexGrow: 1,\n            // overflowY: \"auto\",\n            p: 2, \n            // height: \"100vh\", \n            backgroundColor: \"#fff\",\n            marginTop:\"5rem\"\n\n          }}\n        >\n          <ProfileRightSide />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProfileLayout;\n"],"names":["profileList","path","name","icon","_jsx","src","Images","dashboard","alt","style","width","height","personal","documents","products","recommendations","wishlist","experts","orders","cart","SidebarContent","_ref","_profile$data","_profile$data2","_profile$data3","_profile$data4","location","profile","isRecommendedCoursesActive","_jsxs","Box","sx","minHeight","py","bgcolor","borderRadius","border","px","display","flexDirection","alignItems","boxShadow","children","mb","borderTopLeftRadius","borderTopRightRadius","pt","pb","Avatar","data","displayPicSrc","Typography","color","fontWeight","fontSize","textAlign","letterSpacing","firstName","lastName","email","gap","map","item","idx","isActive","pathname","startsWith","React","component","Link","to","cursor","transition","boxSizing","textDecoration","textTransform","justifyContent","minWidth","filter","ml","length","mx","borderBottom","_ref2","mobileOnly","useLocation","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useAppSelector","state","sharedInfo","sidebarOpen","setSidebarOpen","_Fragment","IconButton","onClick","position","top","left","zIndex","MenuIcon","Drawer","anchor","open","onClose","PaperProps","p","ExpandCard","title","imageUrl","setOpen","useState","Card","expandCardStyles","cardCollapse","CardHeader","cardTitle","avatar","cardImg","ListItemIcon","action","transform","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","cardContent","CardContent","padding","Container","_testScoresGRE$docId","_testScoresGRE$docId$","_testScoresGMAT$docId","_testScoresSAT$docId$","_testScoresACT$docId$","dispatch","useAppDispatch","testscores","findTestScoresByName","find","testScoresGRE","testScoresGMAT","testScoresACT","testScoresSAT","Grid","container","background","xs","docId","pdfIcon","FileName","Stack","direction","spacing","marginRight","VisibilityOutlinedIcon","_testScoresGRE$docId2","_testScoresGRE$docId3","setPopup","show","preview_url","dimensions","type","_testScoresGMAT$docId2","_testScoresGMAT$docId3","_testScoresSAT$docId","_testScoresSAT$docId$2","_testScoresACT$docId","_testScoresACT$docId$2","_testScoresTOEFL$docI","_testScoresIELTS$docI","_testScoresDET$docId$","_testScoresPTE$docId$","testScoresTOEFL","testScoresIELTS","testScoresDET","testScoresPTE","_testScoresTOEFL$docI2","_testScoresTOEFL$docI3","_testScoresIELTS$docI2","_testScoresIELTS$docI3","_testScoresDET$docId","_testScoresDET$docId$2","_testScoresPTE$docId","_testScoresPTE$docId$2","DocumentItem","_doc$data","doc","handleDelete","originalname","_doc$data2","_id","OtherDocs","_documents$data","_documents$data$test","_documents$data2","_documents$data2$test","_documents$data3","image","Aptitude","test","general","EnglishTest","languageProf","WorkExperienceDocs","workExperiences","Accordion","isOpen","onToggle","overflow","marginBottom","e","stopPropagation","size","ExpandLessIcon","openIndex","setOpenIndex","deleteItem","setDeleteItem","identifier","setIdentifier","handleDeleteOpen","useRef","key","label","_data$doc$key","_data$doc$key$data","_data$doc$key2","_data$doc$key2$data","DeleteOutlineOutlinedIcon","concat","FileUploadSection","_ref3","docData","docPath","index","prevIndex","handleToggle","bachelors","masters","ConfirmDialog","handleClose","additionalData","onSubmit","async","fieldPath","deleteId","response","deleteUploadProfile","documentId","setDocuments","error","console","content","inputFileRef","handleSubmit","loading","setLoading","onChange","event","fieldIdentifier","handleFileSubmit","ref","accept","standardLoader","Button","_inputFileRef$current","current","click","FileUploadOutlinedIcon","inputFileRefs","resume","passportBD","passportADD","file","target","files","allowedFileTypes","includes","formData","FormData","append","uploadProfile","docs","err","Document","TranscriptDocs","PersonalDocs","AcademicDocs","academic","Documents","variant","logoSrc","universityName","courseName","countryName","actions","right","backgroundColor","mt","Shortlisted","_shortlistedCourses$d","_shortlistedCourses$d2","navigate","useNavigate","shortlistedCourses","shortlistedcourses","setDeleteId","userAuthStatus","overflowY","i","_item$startDate","sm","lg","paddingLeft","md","CustomCardHOC","university","country","_userAuthStatus$data","_userAuthStatus$data2","isAuthorized","isRegistered","eventHandler","ShoppingCartOutlinedIcon","deleteIcon","id","whiteSpace","TimerIcon","startDate","monthNames","courseStartingMonth","join","Confused","subDisUrl","encodeURIComponent","JSON","stringify","subDisciUrl","window","btoa","values","courseId","addToShortList","success","setShortlisted","Universities","UpcomingSessions","_meetings$data","_meetings$data2","meetings","joinNowClick","link","filteredEvents","_event$data","startTime","Date","start","dateTime","currentTime","status","rescheduledEvents","_event$data2","hasEvents","_data$data","_data$data2","_data$member","_data$data3","_data$data4","log","endTime","end","isEventInProgress","member","role","setWordCase","description","toLocaleString","month","year","day","hour","minute","hour12","hangoutLink","disabled","bottom","_data$data5","_data$data6","_data$member2","_data$member3","_data$member4","_data$data7","_data$data8","_data$data9","my","marginLeft","getAdvisorTitle","gutterBottom","Tooltip","slotProps","tooltip","placement","InfoIcon","float","Calender","marginTop","modifyBooking","meetingId","option","updatemeetings","message","BookedSlots","CardPage","_recommendations$data","_recommendations$data2","_recommendations$data3","_recommendations$data4","_recommendations$data5","_recommendations$data6","_shortlisted$data","_applied$data","_recommendations$data7","_recommendations$data8","_recommendations$data9","_recommendations$data10","shortlisted","applied","applications","ambitious","possibilityOfAdmit","safe","moderate","sections","items","count","BookDashboard","UniDashboard","SafeDashboard","ModerateDashboard","AmbitiousDashboard","pl","noRecommend","Checklist","_applications$data","inputFile","imageClick","_inputFile$current","filteredApplications","_item$docChecklist","docChecklist","some","docItem","isChecked","_item$docChecklist2","_item$docChecklist3","_item$course","_item$course$universi","_item$course2","_docItem$doc2","_docItem$doc2$data","margin","course","_docItem$doc","_docItem$doc$data","textOverflow","className","undefined","uploadApplicationDocs","updateApplication","InfoOutlinedIcon","desc","maxWidth","Events","advisor","events","Array","isArray","date","organizer","time","maxHeight","pr","flex","borderColor","Advisors","_advisor$data","_advisor$data2","_advisor$info","_advisor$info2","_advisor$info3","info","mr","lineHeight","normalizeType","carouselData","subtitle","button","MoneyBag","bg","SopDashboard","TestDashboard","ProfileDashboard","ScholarshipCarousel","setIndex","useEffect","timer","setTimeout","prev","clearTimeout","card","_","Dashboard","options","value","placeholder","searchEnabled","searchQuery","setSearchQuery","filteredOptions","useMemo","toLowerCase","FormControl","fullWidth","Select","labelId","displayEmpty","IconComponent","renderValue","selected","MenuProps","autoFocus","ListSubheader","TextField","InputProps","startAdornment","InputAdornment","SearchIcon","onKeyDown","MenuItem","countries","setCountries","states","setStates","cities","setCities","institutions","setInstitutions","institutionName","setInstitutionName","instituteName","universities","setUniversities","affiliatedUniversity","setAffiliatedUniversity","programMajor","setProgramMAjor","degreeName","setDegreeName","degreeProgram","ieh","setIeh","institutionId","setInstitutionId","gradingSystem","setGradingSystem","totalScore","setTotalScore","store","iehStatus","setIEHStatus","IEH","hasSearched","setHasSearched","loader","setLoader","gradingSystemData","percentage","cgpa1","cgpa2","cgpa3","gpa","grade","selectedCountry","setSelectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","city","searchTerm","setSearchTerm","countryInfo","c","stateInfo","s","allCountries","Country","getAllCountries","fetchCountries","profileSchema","Yup","shape","underGraduation","required","endDate","when","is","then","schema","nullable","this","parent","getFullYear","getMonth","getDate","_stateInfo$countryCod","_stateInfo$isoCode","statesOfCountry","State","isoCode","citiesOfState","City","getCitiesOfState","countryCode","fetchStateAndCities","handleInputChange","getSearchUniversityDetails","replaceSpecialChars","_response$data","catch","str","filteredString","replaceAll","trim","customField","setCustomField","ITEM_HEIGHT","initialValues","maxScore","backlogs","isCompleted","custom","specializations","setSpecializations","selectedSpecializations","bachelorCourses","filteredCities","cityHandle","newCity","handleOptionClick","_option$IEH","fieldName","setFieldName","InstitutionName","exists","submitHandler","editProfile","setUnderGraduation","education","formEdit","setFormEdit","Formik","validationSchema","enableReinitialize","_values$underGraduati","_values$underGraduati2","touched","errors","handleChange","setFieldValue","Form","InputLabel","defaultValue","handleDegreeChange","selectedDegree","Object","keys","degree","ErrorMessage","autoComplete","endAdornment","CircularProgress","Close","_option$IEH2","Star","District","verificationStatus","globalButton","handleGradingSystemChange","inputProps","step","min","max","list","onInput","parseFloat","Infinity","toString","RadioGroup","row","FormControlLabel","control","Radio","DatePickerComponent","selectedDate","toISOString","slice","maxDate","placeholderText","minDate","setFullYear","twelveYearsFromStartDate","CustomField","ReusableDropdown","CustomButton","split","_data","_data2","_data3","_data4","_data5","_data6","_data7","_data8","_data9","_data10","_data11","_data12","_data13","_data14","_data15","_data16","_data17","_data18","_data19","_data20","_data21","_data22","stream","setStream","board","setBoard","plus2","languageOfInstruction","submit","updatedData","setPlus2","_values$plus","_values$plus2","resetForm","boards","languages","school","setSchool","_values$school","_values$school2","profileData","postGradData","postGraduation","specialization","pgCourseList","setPostGraduation","_values$postGraduatio","_values$postGraduatio2","_touched$postGraduati","_errors$postGraduatio","_errors$postGraduatio2","Education","educationhistory","useProfileData","setProfileData","fetchProfileData","useCallback","axios","get","headers","Authorization","localStorage","getItem","setItem","PostGrad","Bachelors","Diploma","School","m","props","_testscoresData$data2","_testscoresData$data5","_englishTestInfo$find2","_englishForm$scores$","_englishForm$scores$2","_englishForm$scores$3","_englishForm$scores$4","_englishForm$document","_greForm$scores$","_greForm$scores$2","_greForm$scores$3","_greForm$document","setQaTab","qaTab","safeMissingFields","missingFields","setError","indexOf","testscoresData","scoreCounts","setScoreCounts","englishTest","_test$name2","editMode","setEditMode","greEditMode","setGreEditMode","isGRESelected","setIsGRESelected","selectedGRETest","setSelectedGRETest","isEnglishSelected","setIsEnglishSelected","selectedEnglishTest","setSelectedEnglishTest","englishEditMode","setEnglishEditMode","greTestData","setGreTestData","englishTestData","setEnglishTestData","englishForm","setEnglishForm","greForm","setGreForm","showEnglishTestForm","setShowEnglishTestForm","showGRETestForm","setShowGRETestForm","isAddingEnglishTest","setIsAddingEnglishTest","isAddingGRETest","setIsAddingGRETest","englishErrors","setEnglishErrors","greErrors","setGreErrors","_testscoresData$data3","_testscoresData$data4","languageTests","item2","fullForm","scores","testData","mappedScores","range","testDate","document","total","isNaN","Number","reduce","acc","push","String","greTest","_test$name3","englishTotalScoreBox","_englishTestInfo$find","englishTestInfo","fullform","text","_test$name4","greTotalScoreBox","score","Divider","Dialog","CloseIcon","radio","f","toUpperCase","InputLabelProps","shrink","ArrowUpwardIcon","hidden","_e$target$files","readOnly","_englishTestInfo$find3","validateEnglish","forEach","val","updatedTest","found","newTests","t","_t$docId","_t$_id","settestScores","tests","_e$target$files2","validateGRE","_t$docId2","_t$_id2","Preferences","_Preferences$data","_Preferences$data2","_Preferences$data3","_Preferences$data4","_Preferences$data5","_Preferences$data6","_Preferences$data7","_advisors$data","_Preferences$data8","_Preferences$data8$co","_budgets$find","_Preferences$data11","_Preferences$data12","_Preferences$data13","_budgets$find2","preferences","educationDetails","intake","setIntake","setYear","setMonth","intakeError","setIntakeError","courseData","setCourseData","subCategory","countryData","setCountryData","selectedCurrency","setSelectedCurrency","currency","advisors","assignedCountries","flatMap","unassignedCountries","preference","matches","budget","lower","upper","moreThan","oneOf","degreeType","of","currencies","currencySymbols","symbol","_event$data$newValue","newValue","budgets","_Preferences$data9","_Preferences$data9$bu","_Preferences$data10","setpreferences","_touched$preference","_errors$preference","_touched$preference2","_errors$preference2","_touched$preference3","_errors$preference3","_touched$preference4","_errors$preference4","_touched$preference5","_errors$preference5","Autocomplete","multiple","limitTags","subDisciplines","getOptionLabel","filterSelectedOptions","ListboxProps","renderInput","params","countryList","_advisors$data2","requestAdvisor","newAdvisor","existingAdvisor","updateAdvisorInfo","addAdvisorInfo","chat","addChats","addAdvisors","paddingRight","_Preferences$data14","_Preferences$data14$b","_Preferences$data15","_Preferences$data15$b","Skills","skills","skilldata","setSkillsData","disableClearable","skillsList","handleOptionChange","setskills","secondaryButton","activity","otherwise","validationSchemaArray","ExtraCurricular","_extracurricular$data","extracurricular","extracurriculum","extraCurriculumActivities","designation","_item$participatedPub","_item$participationLe","participatedPublication","participationLevel","activities","researchPapers","getProfile","setExtraCurriculum","fetchExtraCurricular","submitForm","activitiesWithPublication","_item$participatedPub2","_item$participationLe2","setSubmitting","handleBlur","isValid","dirty","FieldArray","remove","Field","as","onBlur","getTime","paper","journal","authors","familyDetails","GuardianFirstName","GuardianLastName","GuardianOccupation","RelationshipWithStudent","GuardianContactNumber","number","phoneNumber","parsePhoneNumberFromString","Family","_familyData$data","familyData","familyInfo","GuardianEmail","GuardianQualification","family","setfamilyInfo","familyMember","onkeydown","_familyMember$Guardia","preventDefault","maxLength","_familyMember$Guardia2","ReactPhoneInput","dialCode","getNewFamilyArrayAfterDelete","arr","newArr","splice","_member$GuardianConta","_member$GuardianConta2","WorkExperiences","_workExperienceData$d","_workExperienceData$d3","setdoc","load","setLoad","workExperienceData","workexperience","WorkExperienceDetails","setWorkExperienceDetails","companyName","sector","workStatus","setWorkStatus","work","setErrors","workExperience","setWorkExperience","fetchWorkExperience","newWorkExperienceDetails","newErrors","_response$data$data$w","prevDetails","newDetails","prevErrors","newWorkStatus","validateForm","detail","detailErrors","lastDoc","updatedWorkExperienceDetails","getTotalWorkExperienceInMonths","exp","months","WorkExperienceMember","_errors$index","_errors$index2","_errors$index3","_errors$index4","_errors$index5","_errors$index6","_errors$index7","_errors$index8","_WorkExperienceMember","_WorkExperienceMember2","_errors$index9","_errors$index10","_errors$index11","_workExperienceData$d2","helperText","industrySector","newWorkExperience","workTypes","_inputFile$current2","startIcon","Info","_WorkExperienceMember3","_WorkExperienceMember4","_exp$docId","_exp$docId$data","PersonalDetails","_verification$data","_verification$data2","_verification$data2$e","_personalInfo$data","_sharedInfo$data","_sharedInfo$data2","_sharedInfo$data3","_personalInfo$data2","_personalInfo$data3","_personalInfo$data4","_personalInfo$data5","_personalInfo$data6","_personalInfo$data7","_personalInfo$data8","_personalInfo$data9","_sharedInfo$data9","_sharedInfo$data10","_sharedInfo$data11","_sharedInfo$data12","_sharedInfo$data13","_sharedInfo$data14","_sharedInfo$data15","_personalInfo$data12","_personalInfo$data13","_personalInfo$data14","_personalInfo$data15","_personalInfo$data16","_sharedInfo$data16","_sharedInfo$data17","_sharedInfo$data17$ph","_sharedInfo$data18","_sharedInfo$data18$ph","_sharedInfo$data19","_personalInfo$data17","_personalInfo$data18","_personalInfo$data19","_personalInfo$data20","_personalInfo$data21","verification","phoneStatus","phoneLoginOtp","verified","emailStatus","emailLoginOtp","personalInfo","refused","setRefused","visaRejectedDetails","personalDetails","DOB","Gender","nationality","countyOfBirth","maritalStatus","validPassport","validPermit","_personalInfo$data10","_personalInfo$data11","temporaryAddress","permanentAddress","_response$data$data","_response$data2","_response$data2$data","_response$data3","_response$data3$data","_response$data4","_response$data4$data","_response$data5","_response$data5$data","_response$data6","_response$data6$data","_response$data7","_response$data7$data","_response$data8","_response$data8$data","_response$data9","_response$data9$data","_response$data10","_response$data10$data","_response$data11","_response$data11$data","_response$data12","_response$data12$data","_response$data13","_response$data13$data","_response$data14","_response$data14$data","_response$data15","_response$data15$data","_response$data16","_response$data16$data","_response$data17","_response$data17$data","_response$data18","_response$data18$data","_response$data19","_response$data19$data","sharedProfile","phone","LeadSource","isPlanningToTakeAcademicTest","isPlanningToTakeLanguageTest","setSharedInfo","setPersonalInfo","getMaxDate","today","_sharedInfo$data4","_sharedInfo$data5","_sharedInfo$data6","_sharedInfo$data7","_sharedInfo$data7$pho","_sharedInfo$data8","_sharedInfo$data8$pho","_touched$personalDeta","_errors$personalDetai","_touched$personalDeta2","_errors$personalDetai2","_values$firstName","Boolean","_values$lastName","VerifiedIcon","sendSms","verifyEmailPhone","nationalities","multiline","rows","editHandler","Address","_personalInfo$data$te","_personalInfo$data2$t","_personalInfo$data3$t","_personalInfo$data4$p","_personalInfo$data5$p","_personalInfo$data6$p","_personalInfo$data13$","_personalInfo$data14$","_personalInfo$data15$","_personalInfo$data16$","_personalInfo$data17$","_personalInfo$data18$","_personalInfo$data19$","_personalInfo$data20$","_personalInfo$data29","_personalInfo$data29$","_personalInfo$data30","_personalInfo$data30$","_personalInfo$data31","_personalInfo$data31$","_personalInfo$data32","_personalInfo$data32$","_personalInfo$data33","_personalInfo$data33$","_personalInfo$data34","_personalInfo$data34$","_personalInfo$data35","_personalInfo$data35$","_personalInfo$data36","_personalInfo$data36$","_personalInfo$data37","_personalInfo$data37$","_personalInfo$data38","_personalInfo$data38$","_personalInfo$data39","_personalInfo$data39$","permanent","setPermanent","permanentstates","setpermanentstates","permanentcities","setpermanentCities","permanentCountry","setPermanentCountry","permanentState","setpermanentState","permanentCity","setpermanentCity","countryPInfo","stateInPfo","_stateInPfo$countryCo","_stateInPfo$isoCode","_personalInfo$data7$t","_personalInfo$data8$t","_personalInfo$data9$t","_personalInfo$data10$","_personalInfo$data11$","_personalInfo$data12$","statePInfo","pinCode","addressLine1","addressLine2","addressLine3","tempAddress","permAddress","obj","constructor","permFormEdit","setPermFormEdit","handleCancelTemp","handleCancelPerm","permfilteredCities","_touched$personalDeta3","_touched$personalDeta4","_errors$personalDetai3","_errors$personalDetai4","_touched$personalDeta5","_touched$personalDeta6","_errors$personalDetai5","_errors$personalDetai6","_touched$personalDeta7","_touched$personalDeta8","_errors$personalDetai7","_errors$personalDetai8","_personalInfo$data22","_personalInfo$data22$","_personalInfo$data23","_personalInfo$data23$","_personalInfo$data24","_personalInfo$data24$","_personalInfo$data25","_personalInfo$data25$","_personalInfo$data26","_personalInfo$data26$","_personalInfo$data27","_personalInfo$data27$","_personalInfo$data28","_personalInfo$data28$","handleTempEdit","handlePermEdit","Profile","initialTab","PermIdentityOutlinedIcon","Component","SchoolOutlinedIcon","AssignmentIcon","TestScoreForm","WorkOutlineOutlinedIcon","WorkExperience","StarBorderOutlinedIcon","Diversity3Icon","AccessibilityIcon","CustomTabs","tabs","initialValue","titleIcon","badgeColor","badgePosition","badgeStyle","rest","badgeStyles","AppliedUniversities","_applicationsData$dat","_applicationsData$dat2","applicationsData","paddingTop","_item$course2$univers","_item$course3","_item$course3$univers","_item$course3$univers2","CustomCard","stage","cancellationRequest","cancelledIcon","lineClamp","WebkitLineClamp","WebkitBoxOrient","Dull","courseList","testOptions","testOptions1","outOff","criteria","recommendEdit","setFormData","_criteria$find","_criteria$find2","_gradeScaleOptions$fi","_criteria$find3","_languageTests$find","_criteria$find4","_academicTests$find","_criteria$find5","_criteria$find6","_criteria$find7","_criteria$find7$data$","gpaData","temp","studyLevel","bachelorsScore","gradeScale","gradeScaleOptions","englishTestType","shortForm","englishTestScore","academicTestType","academicTests","academicTestScore","setRecommendEditData","field","newData","validationError","validateScores","selectedTest","opt","academicScore","selectedEngTest","englishScore","isHalfStep","Math","abs","_profile$data$tests","_languageTests$find2","_academicTests$find2","_gradeScaleOptions$fi2","_gradeScaleOptions$fi3","profileTests","tst","findIndex","_tst$name","clearedProfile","parseInt","recommendationsResponse","getRecommendations","Error","setRecommended","DialogTitle","DialogContent","renderTags","getTagProps","Chip","removeItem","backgroundSize","animation","backgroundPosition","columns","from","ShimmerCard","filterNames","fromEntries","entries","DestinationTypeEnum","Recommended","_preferences$data","_educationhistory$dat","_preferences$data2","_preferences$data3","_preferences$data3$su","_tabs$find","_recommendations$data11","useParams","activeTab","setActiveTab","selectedFilter","setSelectedFilter","showEditModal","setShowEditModal","alignment","setAlignment","removedIds","setRemovedIds","duration","setDuration","gre","courses","courseChecked","checked","handleFilterChange","filterCourses","counsellorRecommended","_course$course","d","durationType","notInterested","regenerateForm","_educationhistory$dat2","_educationhistory$dat3","_event$data2$course","_event$data3","_event$data3$course","hideRecommendation","recommendationId","handleDeleteCard","matchedTab","tab","_item$course4","_item$course4$univers","_item$course5","_item$course5$univers","_item$course5$univers2","_item$course6","_item$course7","_item$course7$startDa","_item$course$tuitionF","_item$course$tuitionF2","_item$course$currency","isShortlisted","shortlistedCourse","badgeText","handleUniversityClick","flexShrink","objectFit","flexWrap","Calender1","substring","GraduateHat","Dollar1","tuitionFee","verticalAlign","code","Timmer","wordBreak","overflowWrap","hyphens","fullTimeDurations","FavoriteOutlinedIcon","FavoriteBorderIcon","NotInterestedOutlinedIcon","ShimmerGrid","Switch","select","RecommendationEditModal","_Preferences$data$cou","_advisors$data3","_item$info","_item$info2","_item$info3","_item$info4","_item$assignedCountri","_item$assignedCountri2","_item$assignedCountri3","cartCourses","selectedCourses","setSelectedCourses","isProceedDisabled","setIsProceedDisabled","hasSelectedCourses","hasAlreadyApplied","isAlreadyApplied","_orders$data","order","_order$products","product","_product$course","isSameMonthAndYear","date1","date2","d1","d2","getUTCFullYear","getUTCMonth","premiumApplicationCount","_order$products2","category","handleCardClick","formatDate","dateString","Set","_item$course$universi2","alreadyApplied","isSelected","featured","CheckCircleIcon","handleRequestQuote","counsellors","selectedId","handleCheckout","selectedCourseData","_event$data$course","_event$data4","itemId","updateCart","setCart","Cart","Orders","_orders$data2","padStart","_item$products","_item$paymentDetails","_item$paymentDetails2","_item$paymentDetails3","_item$paymentDetails4","_item$paymentDetails5","_item$paymentDetails6","_item$paymentDetails7","_item$paymentDetails8","j","_product$course$unive","_product$course$unive2","_product$course2","_product$course2$univ","_product$course3","_product$course4","_product$course5","_product$course5$univ","establishedYear","paymentDetails","paymentStatus","Razor","floor","amount","created_at","ProfileRightSide","Routes","Route","element","ProfileSection","ProfileLayout","ProfileSidebar","flexGrow"],"sourceRoot":""}